Text Content,Code,has_code,len,aa,begauth,first_turn,last_turn,clen,tlen,cloc,tloc,tpos1,tpos2,ppau,npau
I set the path as per those instructions on the tensorflow docs and also tried the instructions that CODE gave above.,Solution Discussion,True,117,NONE,False,False,False,1.0,0.1653543307,0.3284457478,0.5454545455,0.3566928644,0.6433071356,0.1351135301,0.002261357628
"Further it is a valid and concrete requirement that the size of the segment be a long, and the evaluator is not used for any other case other than compiling CODE.",Investigation and Exploration,True,162,CONTRIBUTOR,False,False,False,1.0,0.6595744681,0.8148148148,0.8153846154,0.6986733294,0.3013266706,0.2919761514,0.1217072968
Adding CODE solved my problem.,Solution Discussion,True,30,NONE,False,False,False,0.3571428571,0.07042253521,0.9619883041,1.0,0.8221631882,0.1778368118,0.1070466705,0.1393667667
So I change the related part in CODE to CODE,Solution Discussion,True,44,NONE,False,False,False,0.9090909091,0.01447178003,0.6930693069,1.0,0.2472749838,0.7527250162,0.08527687651,0.03955727952
"The catcher is necessarily the first inline, assuming the map I get back based on the catcher PC is correct.",Solution Discussion,False,108,CONTRIBUTOR,False,False,False,1.0,0.3125,1.0,0.9432624113,0.9832291814,0.01677081864,0.000151473622,0.0004760599547
The output of the tensor : CODE present in CODE isCODE,Usage,True,54,NONE,False,False,False,0.5,0.03846153846,0.7987152034,0.4,0.6241540904,0.3758459096,0.007173142915,0.07061844097
"I recently read the following, which I found interesting:https://lwn.net/Articles/730630/rss",Solution Discussion,False,92,MEMBER,False,False,False,1.0,0.1134020619,0.399408284,1.0,0.8147477051,0.1852522949,0.0004532620224,0.08978722153
"If indeed are both set, I don't know why we are still looping - needs to be debugged...",Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.6538461538,0.2266666667,1.0,0.6327683616,0.08461003919,0.9153899608,0.0006255851869,1.66e-05
Problem solved.,Solution Discussion,False,15,NONE,False,False,False,0.09523809524,0.002894356006,0.6831683168,0.8333333333,0.226528822,0.773471178,0.005343317335,0.08527687651
"I thought that -Xmo had no semantical meaning in Balanced, but we do seem to obey the command and do something about it.",Solution Discussion,False,120,CONTRIBUTOR,False,False,False,0.1575342466,0.1575342466,0.5,0.09497206704,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
"It should maintain its own counters(tensors) that keep track of iterations, samples, and epochs.",Expected Behaviour,False,96,NONE,False,False,False,0.2295081967,0.2089552239,0.08737864078,0.9285714286,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"Unfortunately I am now hitting another problem: if I run long enough, the flight service starts consuming all the  CPU on the machine (even after JMeter terminates).",Potential New Issues and Requests,False,165,CONTRIBUTOR,False,False,False,0.8235294118,0.35,0.6666666667,0.6764705882,0.8775318892,0.1224681108,0.034636993,0.003956649389
"Every few steps in an epoch, I'd like to run a validation op, but the output of this code shows that the iterator never advances ahead of item 0 in either dataset.",Usage,False,163,NONE,False,False,False,0.9166666667,0.4925373134,0.7031900139,0.6666666667,0.551539804,0.448460196,0.1827564093,0.002095453319
I just feel that extending boosted-like ensembles and average-like ensembles are quite different things.,Solution Discussion,False,104,MEMBER,False,False,False,1.0,0.2253521127,0.9130434783,1.0,0.07859750583,0.9214024942,1.473905348e-05,2.105579069e-06
Unless we can reliably reproduce and run the test within a reasonable amount of time I don't see us making progress on this one.,Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,0.6,0.1804511278,0.8461538462,0.6717557252,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"3) Walk through Classloader structures and release unnecessary native memory

All above is correct with an exception for Anonymous classes which:
 - always owned be special Anonymous Classloader (but class parent Classloader might be different)
 - Anonymous Classloader can not be unloaded
 - can be unloaded on individual basis
 - special hook ""anonymous classes unloaded"" is issued at phase 1 end with **attached list of anonymous classes about to be unloaded**",Investigation and Exploration,False,469,CONTRIBUTOR,False,False,False,0.7912087912,0.7912087912,0.4285714286,0.6993006993,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"As for my comment above [1122](https://github.com/tensorflow/tensorflow/issues/1122#issuecomment-235433645), I figured out that   tf.get_variable_scope().reuse_variables() takes care of the issue, so  in the training phase the argument reuse of batch_norm should be None.",Usage,False,271,NONE,False,False,False,1.0,0.1307692308,0.278372591,0.8,0.225873701,0.774126299,0.0001639552333,0.002735597126
"We narrowed this down to when our docker health check is failing, which in turn does a CODE so that we could diagnose _why_ our health checks were getting stuck.",Investigation and Exploration,True,161,NONE,True,True,False,1.0,0.4,0.4,0.02259887006,0.0,1.0,0.0,4.66e-05
@andrewcraik @gita-omr @0dvictor FYI GAC's comment above.,Contribution and Commitment,False,57,CONTRIBUTOR,True,False,False,0.8888888889,0.125,1.0,0.170212766,0.002042521787,0.9979574782,0.00734286415,0.06695374525
@hangshao0 do you know if there's any kind of sanity checking or other tracing in the SCC code that might be helpful here?,Testing,False,122,CONTRIBUTOR,False,False,False,0.4693877551,0.3709677419,0.8333333333,0.650273224,0.8310912867,0.1689087133,0.008832756273,0.001165656648
"Those fields certainly have 'const' type, but they are not compile-time constants so I would not expect offset type CODE.",Investigation and Exploration,True,121,CONTRIBUTOR,False,False,False,1.0,0.1779661017,0.5,0.4484848485,0.4194547902,0.5805452098,0.000275958121,8.5e-05
"2.         Make your own similarity server, that does the central look-up for you",Workarounds,False,81,MEMBER,False,False,False,0.6818181818,0.3947368421,0.6715328467,0.5555555556,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
Are you sure it's the exact same error?,Solution Discussion,False,39,CONTRIBUTOR,False,False,False,1.0,0.01157742402,0.1320132013,0.5,0.01936301317,0.9806369868,0.005198313254,0.00388105441
What do you mean by the divergence?,Investigation and Exploration,False,35,MEMBER,False,False,False,0.5833333333,0.1029411765,0.5528455285,0.3333333333,0.5697253798,0.4302746202,0.0007054752894,0.001821873532
I'm using it now and loving it.,Social Conversation,False,31,NONE,False,False,False,0.21875,0.1044776119,0.5589459085,0.4,0.4602787203,0.5397212797,0.008479027653,0.0006250222677
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR/498
cmdLineTester_CryptoTest_0",Testing,False,115,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.4862385321,0.5471291806,0.4528708194,0.4317150312,0.7240121827
E.g. we could break right after the code cache is allocated and try to jump there.,Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,1.0,0.09195402299,0.75,0.4816176471,0.766321062,0.233678938,5.75e-05,6.23e-05
Does it fail with the same setNativeOutOfMemoryError issue?,Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,1.0,0.170212766,1.0,0.4153846154,0.3650666208,0.6349333792,0.004874474413,0.002719172456
Any hint?,Solution Discussion,False,9,NONE,False,False,False,0.08695652174,0.0206185567,0.8964497041,1.0,0.9768282061,0.02317179392,0.0165742005,0.01231978335
"Hi all, 

I've been running my stuff on OpenJ9 recently after a lot of the issues (like the one blocking IntelliJ) were fixed.",Social Conversation,False,128,NONE,True,True,False,0.5208333333,0.3731343284,0.2857142857,0.01117318436,0.0,1.0,0.0,0.00144281986
"@vvekic Thanks for your reply, so I know it's not only me having performance issues.",Social Conversation,False,84,NONE,False,False,False,0.4054054054,0.223880597,0.786407767,0.75,0.6090011473,0.3909988527,0.000271284095,0.000261613555
"By increasing the number of samples to 100 (instead of 50), the trustworthiness gets much better (and therefore much more stable) but the test is significantly slower (couple of seconds on my machine).",Solution Discussion,False,201,MEMBER,False,False,False,1.0,0.4852941176,0.9390243902,1.0,0.6518867777,0.3481132223,0.02351100859,0.005246346584
"Relevant code in CODE: https://github.com/spacy-io/spaCy/blob/master/spacy/vocab.pyx#L149 (called by CODE, called by CODE)",Solution Discussion,True,122,MEMBER,False,False,False,0.4230769231,0.1774193548,0.4977973568,0.5882352941,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
@jdmpapin do you have any thoughts?,Contribution and Commitment,False,35,CONTRIBUTOR,False,False,False,0.2727272727,0.06451612903,0.7777777778,0.6409266409,0.5537917672,0.4462082328,0.003696630136,0.001219776039
I think it's OK to hide things from the user.,Solution Discussion,False,45,NONE,False,False,False,0.2325581395,0.06535947712,0.2604501608,0.9473684211,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
Thanks for the input.,Social Conversation,False,21,NONE,False,False,False,0.2352941176,0.005788712012,0.2640264026,1.0,0.06771955093,0.9322804491,0.0061573337,0.001820264
"Unfortunately, in one of the apps I wrote using [akka] URL , I'm hitting an issue where a benchmark I'm running will freeze and the program will stop functioning, and this issue is related to OpenJ9 as it disappears on Zulu9, but appears within 2-5 iterations on OpenJ9.",Observed Bug Behaviour,False,270,NONE,True,True,False,1.0,0.7164179104,0.4285714286,0.01675977654,0.0,1.0,0.0,0.00144281986
Definitely going in the right direction.,Social Conversation,False,40,NONE,False,False,False,0.1935483871,0.08955223881,0.5714285714,0.2,0.4630003862,0.5369996138,0.01269843694,0.02260310577
The proposal will be released in the next week.,Solution Discussion,False,47,NONE,False,False,False,1.0,0.1232876712,0.1228448276,0.5,0.02750100099,0.972498999,0.01847204594,0.010635635
"The CODE is from [2]
CODE",Investigation and Exploration,True,26,MEMBER,True,False,False,0.1555555556,0.07608695652,0.6666666667,0.4213836478,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
Should stored values be accompanied by GC policy or we can make them invariant?,Solution Discussion,False,79,CONTRIBUTOR,False,False,False,0.875,0.09589041096,1.0,0.1229050279,0.01027692807,0.9897230719,0.0008466218856,0.0001215876069
@vijaysun-omr   JCE performance data I summarized here:  https://github.com/eclipse/openj9/issues/8842#issuecomment-609841411,Testing,False,125,CONTRIBUTOR,False,False,False,0.7857142857,0.1774193548,1.0,0.970464135,0.9212826815,0.07871731848,0.003961297135,0.01459087501
If the values are set explicitly then they shouldn't be overridden.,Solution Discussion,False,67,CONTRIBUTOR,True,False,False,0.4230769231,0.07534246575,1.0,0.251396648,0.01440399469,0.9855960053,0.001770078156,0.04266521959
Just trying to think about things that may make file IO slow.,Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,0.5,0.08759124088,0.875,0.5390334572,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"@mpirvu - Liberty is moving to using semeru images as the base image soon, which are at 0.27.0 now.",Social Conversation,False,99,NONE,True,False,False,0.75,0.225,0.25,0.3529411765,0.2983841117,0.7016158883,0.3746116206,0.0007771213165
but then we have stack related problems at runtime.,Investigation and Exploration,False,51,CONTRIBUTOR,True,False,False,0.75,0.07627118644,1.0,0.07878787879,0.3881489186,0.6118510814,0.0001845122672,7.34e-05
"If you are on a Mac, you can enable multithreading per the instructions in #267 .",Solution Discussion,False,81,NONE,False,False,False,0.3947368421,0.09803921569,0.5723472669,0.4615384615,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
"I ended up doing some benchmarking for other reasons, and observed comparable performance between CODE and using queues: https://github.com/tensorflow/tensorflow/issues/9322#issuecomment-295775991",Solution Discussion,True,196,CONTRIBUTOR,False,False,False,1.0,0.2835820896,0.3023578363,1.0,0.2775184776,0.7224815224,0.003376036402,0.001660279021
I consistently get the failure about CODE (that was resolved since as far as I understand) but not the one about hashing.,Potential New Issues and Requests,True,121,MEMBER,False,False,False,0.6111111111,0.3235294118,0.2520325203,0.3,0.3543056001,0.6456943999,0.009464004531,0.003096425316
I don't think we should duplicate the information.,Social Conversation,False,50,CONTRIBUTOR,True,False,False,0.5714285714,0.125,1.0,0.3120567376,0.5284483563,0.4715516437,0.4039585107,0.04023187486
P.S. Thanks Matthew for spaCy!,Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.1923076923,0.03267973856,0.5498392283,0.8888888889,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
I confirm I cannot reproduce the issue on stretch with the following 32 bit image: CODE.,Bug Reproduction,True,88,MEMBER,False,False,False,1.0,0.25,0.07723577236,1.0,0.0777713839,0.9222286161,0.004140653057,0.1410011326
Any update?,Task Progress,False,11,CONTRIBUTOR,False,False,False,0.08,0.01923076923,0.6666666667,0.226519337,0.08273780276,0.9172621972,0.0528229212,0.002473459958
"(To abort the compilation if the object is moved)

CODE


- There is a CODE and a CODE, we only have the counter incremented in localGC",Solution Discussion,True,140,CONTRIBUTOR,False,False,False,0.3857142857,0.1428571429,1.0,0.9371428571,0.5008453723,0.4991546277,0.003764671603,0.001953523523
Hope it helps the community.,Social Conversation,False,28,NONE,False,False,False,0.1724137931,0.01923076923,0.9593147752,1.0,0.7995481369,0.2004518631,0.3206669123,0.722664447
"So I need to:
1) reinstall cygwin without mingw64 package
2) download the source from https://github.com/mirror/mingw-w64/ and manually configure everything in mingw64 for UCRT to see whether it works.",Solution Discussion,False,203,CONTRIBUTOR,False,False,False,1.0,0.2627118644,0.6666666667,0.2181818182,0.396812476,0.603187524,0.003533051078,0.002619750082
"[1] https://www.ibm.com/support/knowledgecenter/beta/en/ssw_aix_72/s_bostechref/shmget.html
[2] https://github.com/eclipse/omr/blob/master/port/aix/omrvmem.c#L562",Solution Discussion,False,163,CONTRIBUTOR,False,False,False,0.1020408163,0.02873563218,1.0,0.6801470588,0.7729114737,0.2270885263,7.44e-06,1.18e-05
@Lucidyan I don't understand what you mean by that.,Investigation and Exploration,False,51,MEMBER,False,False,False,0.375,0.1267605634,0.269005848,0.1428571429,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
"Once it is reviewed and merged, GC needs to change their code.",Solution Discussion,False,62,CONTRIBUTOR,False,False,False,0.6666666667,0.08219178082,0.75,0.4134078212,0.1063240967,0.8936759033,0.0001989032092,7.84e-05
all I can think that has changed (except for reinstalling conda) was rebooting :P,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,1.0,0.1971830986,0.5877192982,1.0,0.4547552612,0.5452447388,0.0003054131048,0.003896611783
The problem did not reproduce.,Bug Reproduction,False,30,CONTRIBUTOR,False,False,False,0.1515151515,0.03759398496,0.1176470588,0.5190839695,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
Good question.,Social Conversation,False,14,MEMBER,False,False,False,0.1666666667,0.02816901408,0.1775362319,0.25,0.03926780009,0.9607321999,0.000142372238,0.0001259136283
"JIT runtime is patching JIT code regularly (for resolving, invalidation, and recompilation purposes).",Solution Discussion,False,101,CONTRIBUTOR,False,False,False,1.0,0.07471264368,1.0,0.6948529412,0.7729417421,0.2270582579,7.3e-05,1.44e-05
Same issue.,Bug Reproduction,False,11,NONE,False,False,False,0.1428571429,0.02816901408,0.0730994152,0.3333333333,0.09826375851,0.9017362415,0.008713891162,0.07295885932
@mpirvu any other ideas ?,Contribution and Commitment,False,25,CONTRIBUTOR,False,False,False,0.1025641026,0.05,1.0,0.1715686275,0.1162948506,0.8837051494,0.001196128892,0.02677733879
This issue should not be labelled as a stop-ship/blocker issue for 0.29.1 due to the presence of a workaround.,Action on Issue,False,110,CONTRIBUTOR,False,False,False,0.7777777778,0.2258064516,1.0,0.1003861004,0.08000102442,0.9199989756,0.001745734514,0.002398519856
It is actually not available on most AIX installations.,Solution Discussion,False,55,CONTRIBUTOR,False,False,False,0.2647058824,0.05172413793,0.4444444444,0.5772058824,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
"However, even this can be further isolated, I am curious if there's a fix for such a hardware-specific problem.",Solution Discussion,False,111,CONTRIBUTOR,False,False,False,0.7142857143,0.2816901408,0.5175438596,0.6666666667,0.4541253359,0.5458746641,0.005172233894,9.742221376e-05
"I am not sure it this concept has been brought up yet, but I will at least put the problem in my own terms.",Social Conversation,False,107,CONTRIBUTOR,False,False,False,0.48,0.3582089552,0.226074896,0.1428571429,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"If you have old version of CUDA, the library link may point to the old library even you install the newer CUDA especially if you install it manually.",Investigation and Exploration,False,149,NONE,False,False,False,1.0,0.2204724409,0.7947214076,0.5,0.68653707,0.31346293,0.2453262441,0.1641710142
@jimfleming It seems to be more general than that.,Solution Discussion,False,50,NONE,False,False,False,0.3214285714,0.1343283582,0.4604715673,0.3333333333,0.4033300428,0.5966699572,0.0004494256208,0.0005059219333
"Here is an example of the entire command line options if I run a simple app: 
CODE

There are so many default options prepended/appended, which are not related to this feature at all.",Solution Discussion,True,186,CONTRIBUTOR,False,False,False,1.0,0.2465753425,0.25,0.2569832402,0.0285314246,0.9714685754,0.04266521959,0.0006509267927
I'll read the paper and dig through some more code to get into it.,Social Conversation,False,66,NONE,True,False,False,0.3888888889,0.3684210526,0.5474452555,0.75,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
Related and possibly of interest: I managed to get TF running in the browser via Webassembly.,Potential New Issues and Requests,False,93,CONTRIBUTOR,False,False,False,1.0,0.2191780822,0.9547413793,0.5,0.9680066181,0.0319933819,0.2254964429,0.0002863848778
+1.0/0.0,Social Conversation,False,8,NONE,False,False,False,1.0,0.01369863014,0.5474137931,1.0,0.632509739,0.367490261,0.001398505443,0.01279613668
Consider the following hypothetical situation (maybe not so realistic):,Solution Discussion,False,71,MEMBER,False,False,False,0.3913043478,0.1267605634,0.7065217391,0.375,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
"Can someone provide an example of how to call the ""def BatchNorm"" function during training and testing so that variable sharing happen correctly.",Usage,False,145,NONE,False,False,False,0.6571428571,0.08846153846,0.1199143469,0.347826087,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"Based on the investigation above, I believe the issue with java.dll was fixed by #3650 (the fix to set up the absolute path for libjava.so coincidentally addressed the problem here).",Solution Discussion,False,182,CONTRIBUTOR,False,False,False,0.5660377358,0.303030303,0.75,0.9894736842,0.9328124714,0.06718752859,0.07945790628,0.2381062384
"Just starting out on one, but new to writing a nodejs addon.",Contribution and Commitment,False,60,NONE,False,False,False,0.5217391304,0.1643835616,0.0474137931,0.6666666667,0.0006346839938,0.999365316,0.004187991532,0.0001418645338
A compile-time increase with the changes to the 292 inlining are expected per above discussion.,Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.3333333333,0.2388059701,0.5555555556,0.6473988439,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"CODEthe above code prints nothing, just exits after attempting to run past the last batch.",Usage,True,90,NONE,False,False,False,1.0,0.223880597,0.5104022191,0.8333333333,0.4431919084,0.5568080916,0.01145704499,0.1250288844
Thanks to @gita-omr and @andrewcraik for the quick analysis of the data once I managed to gather it.,Social Conversation,False,100,CONTRIBUTOR,False,False,True,0.7037037037,0.296875,0.6666666667,0.9929078014,1.0,0.0,0.0716422145,0.0
"As usual, JMeter started to show errors.",Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.2592592593,0.0875,0.75,0.7254901961,0.8886091519,0.1113908481,0.05954547102,0.2271166044
"There seems to be many empty trace files and vlogs generated, but looking at the non-empty ones (there are 4 of them) we can see the following:

CODE",Investigation and Exploration,True,151,CONTRIBUTOR,False,False,False,1.0,0.2255639098,0.5,0.834605598,0.8292482315,0.1707517685,0.03159699343,0.02587954735
System Version: OS X 10.11.5Python 3.5.1 :: Anaconda 4.0.0 (x86_64)numpy.version.version 1.11.0scipy.version 0.17.1sklearn.**version** 0.17.1,Bug Reproduction,False,141,NONE,False,False,False,0.9230769231,0.1690140845,0.09064327485,0.6666666667,0.1215728467,0.8784271533,0.0628243198,0.03406414755
The only way to be sure is to check.,Solution Discussion,False,36,MEMBER,False,False,False,0.5,0.09278350515,0.1213017751,0.6666666667,0.009489555966,0.990510444,2.066061112e-06,7.410007642e-06
Rethinking the CategoricalEncoder API ?,Solution Discussion,False,39,CONTRIBUTOR,True,True,False,0.08,0.0625,0.003676470588,0.04166666667,0.0,1.0,0.0,0.0007774126438
I considered making a ConfigProto option to share buffers even when they are not exclusively owned by the C-python bridge but didn't.,Solution Discussion,False,133,MEMBER,False,False,False,0.6216216216,0.3432835821,0.4008321775,0.6666666667,0.3378723543,0.6621276457,0.04548767515,1.170644312e-05
"The result turns out to be: the model performs pretty well on training mini-batches (you know at the beginning loss goes down quickly), but validation performance is erratic (because the estimated population mean/variance are not stable enough).",Usage,False,245,CONTRIBUTOR,False,False,False,1.0,0.15,0.5888650964,0.3636363636,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
Another (more time-intensive) way to debug this problem would be to track down where the NaNs appear in the code.,Investigation and Exploration,False,113,MEMBER,False,False,False,0.9545454545,0.2957746479,0.4619883041,1.0,0.4155660316,0.5844339684,0.0005572716688,0.0001185949392
Nagging Awaiting TensorFlower: It has been 14 days with no activityand the CODE label was assigned.,Action on Issue,True,99,MEMBER,False,False,False,1.0,0.02315484805,0.9768976898,0.5,0.7566878311,0.2433121689,0.1484095414,0.0001320700021
I really do see a connection to the path algorithms so I think sharing an interface would be nice.,Solution Discussion,False,98,MEMBER,False,False,False,0.8260869565,0.2676056338,0.7028985507,0.25,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
I should have stated that in the beginning that I was using Visual Studio Code for the first vlogs and it attaches a debugger.,Investigation and Exploration,False,126,NONE,True,False,False,1.0,0.1751824818,0.6666666667,0.219330855,0.002019598648,0.9979804014,0.0001337584893,6.92e-05
It's probably a lot harder than this due to the static requirements of tensorflow.,Solution Discussion,False,82,NONE,False,False,False,0.875,0.2089552239,0.9084604716,0.9,0.9153731312,0.08462686876,0.125435556,0.2620248075
"When master and slave are started in  this order, and slave is the last one that saved the hint and then both are restarted in the same order, then master will try to read the hints that slave saved and ignore them.",Solution Discussion,False,215,CONTRIBUTOR,False,False,False,1.0,0.2945205479,0.6666666667,0.6201117318,0.2535003741,0.7464996259,6.29e-05,8.28e-05
Can you pull together a case on why (or not) this should block the release?,Social Conversation,False,75,MEMBER,False,False,False,1.0,0.223880597,1.0,0.8497109827,0.0191742634,0.9808257366,2.78e-05,1.04e-05
I will release debian packages as is (without i386 build for some) and later give you exact instruction on how to reproduce.,Task Progress,False,124,MEMBER,True,False,False,1.0,0.3235294118,0.09349593496,1.0,0.2611568478,0.7388431522,0.4013025222,0.0002403381309
"Otherwise, remove the CODE label.",Action on Issue,True,33,MEMBER,False,False,False,0.4545454545,0.01923076923,0.9914346895,0.6666666667,0.9977234775,0.002276522477,0.2238197937,0.01441639293
Thank you for the reply SCREEN_NAME 43.,Social Conversation,False,39,NONE,False,False,False,0.3684210526,0.05511811024,0.348973607,0.1666666667,0.3589581559,0.6410418441,0.02559963321,0.2554187912
"@NYcleanerOn Ubuntu, there is a CODE file containing :CODE",Solution Discussion,True,58,NONE,False,False,False,0.6428571429,0.07086614173,0.8357771261,0.5,0.748095447,0.251904553,0.1560011388,0.2854442666
The CODE in master already has a CODE (see [here](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/manifold/t_sne.py#L659)) (#9340 is older than the tSNE memory usage fix that was merged in July).,Solution Discussion,True,212,CONTRIBUTOR,False,False,False,1.0,0.4852941176,0.906504065,1.0,0.6430448609,0.3569551391,0.0004678996657,0.0002096052377
This isn't (or shouldn't be) the way it works.,Solution Discussion,False,46,CONTRIBUTOR,True,False,False,0.6,0.06164383562,0.3333333333,0.6312849162,0.253527781,0.746472219,8.28e-05,0.0003822470545
"But, I haven't done much to test against various subtle problems that might occur.",Testing,False,82,MEMBER,False,False,False,0.7777777778,0.09150326797,0.2926045016,0.5555555556,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.openjdk_s390x_linux_Nightly/13
java/nio/channels/SocketChannel/ShortWrite.java.ShortWrite",Testing,False,148,CONTRIBUTOR,False,False,False,1.0,0.08791208791,1.0,0.2307692308,0.3858116637,0.6141883363,0.02657957272,0.1629868704
Did you go from no CODE to a CODE?,Investigation and Exploration,True,34,CONTRIBUTOR,False,False,False,1.0,0.06569343066,0.5,0.3828996283,0.02029985943,0.9797001406,5.3e-05,1.9e-05
Thanks for reminding me.,Social Conversation,False,24,NONE,True,False,False,0.6666666667,0.03149606299,0.03519061584,1.0,0.0224189665,0.9775810335,0.08816336793,0.1295333454
Now that we understand the circumstances in which this problem occurs I don't believe this a blocker for 0.29.1 and can wait for the 0.30 release.,Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,1.0,0.2795698925,0.1111111111,0.8494208494,0.8399273015,0.1600726985,0.8852104953,0.004353145679
"Just note it is observed in recent JDK16 build at CODE
CODECODEmain' threw exception: java.lang.BootstrapMethodError: bootstrap method initialization exception
19:56:31  --------------------------------------------------
20:07:25  Test results: passed: 868; failed: 1
20:07:43  Report written to /home/jenkins/workspace/Test_openjdk16_j9_sanity.openjdk_x86-64_linux_Personal/jvmtest/openjdk/report/html/report.html
20:07:43  Results written to /home/jenkins/workspace/Test_openjdk16_j9_sanity.openjdk_x86-64_linux_Personal/aqa-tests/TKG/output_16293246664264/jdk_util_0/work
20:07:43  Error: Some tests failed or other problems occurred.
20:07:43  
20:07:43  jdk_util_0_FAILED
CODE`
[Re-run the Grinder] URL ",Testing,True,718,MEMBER,True,False,False,1.0,1.0,1.0,0.05660377358,0.177950186,0.822049814,0.5034978273,0.2801321228
"That's likely why this bug hasn't been seen until now, the helper needs to end up being reachable via a direct call and has to make use of the TOC and the C compiler has to not optimize the usage away.",Solution Discussion,False,201,MEMBER,False,False,False,0.7735849057,0.3203125,1.0,0.6222222222,0.04021507893,0.9597849211,0.0001975507147,0.0003594564091
This would mean that users who follow the pattern of keeping the data immutable have to write out ~1gb of data to pickle the models.,Solution Discussion,False,132,MEMBER,False,False,False,0.5652173913,0.1699346405,0.3987138264,0.4736842105,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
Using CODE for thispurpose could lead to fairly catastrophic results.,Solution Discussion,True,69,MEMBER,False,False,False,0.625,0.1408450704,0.4891304348,1.0,0.04250515813,0.9574948419,1.056298833e-05,4.807738873e-06
With CODE on Linux this application starts up 2X as fast as HotSpot.,Investigation and Exploration,True,68,CONTRIBUTOR,False,False,False,0.6842105263,0.09489051095,1.0,0.8661710037,0.06757472377,0.9324252762,0.003514162664,4.8e-05
"@vijaysun-omr In short, just add -XXgc:heapSizeStatupHintWeightNewValue=80.",Solution Discussion,False,75,CONTRIBUTOR,False,False,False,0.1052631579,0.05479452055,0.1111111111,0.469273743,0.238226106,0.761773894,0.0005830751334,0.0001494982185
Do you have a specific configuration that could explain the difference?,Bug Reproduction,False,71,CONTRIBUTOR,False,False,False,0.6111111111,0.1617647059,0.05284552846,1.0,0.01632298172,0.9836770183,0.00144962568,0.1491477665
"Dan @DanHeidinga, I'm not aware of a CODE option or other JVM option that can be specified to have the XSLT processor dump the generated classes.",Investigation and Exploration,True,145,MEMBER,False,False,False,0.7222222222,0.1954887218,0.1428571429,0.08396946565,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
We need to extend this such that the document also owns the strings.,Solution Discussion,False,68,MEMBER,False,False,False,0.5,0.2096774194,0.4933920705,0.5294117647,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"That is actually for online learning, though, so it gets different data.",Solution Discussion,False,72,MEMBER,False,False,False,0.7058823529,0.1690140845,0.05434782609,0.8888888889,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
"Hopefully, this is logical.",Workarounds,False,27,MEMBER,False,False,False,0.1212121212,0.06451612903,0.6916299559,0.875,0.288728579,0.711271421,0.1151253204,0.02221386295
"Ok, so looks like you did get AOT compilations when running CODE:
CODE
so now the question becomes, why are there no AOT compilations when you run your benchmark..",Investigation and Exploration,True,165,CONTRIBUTOR,False,False,False,1.0,0.2335766423,1.0,0.1040892193,0.0009770118426,0.9990229882,7.54e-05,2.07e-05
"This works for me (tensorflow-gpu==1.8.0 and cuda version is 9.0, install in anaconda)",Solution Discussion,False,86,NONE,False,False,True,14.0,0.1102362205,0.9941348974,1.0,1.0,0.0,0.2966697109,0.0
The class loader goes to the disk to load the class as usually.,Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.4814814815,0.09489051095,0.375,0.780669145,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
Any help is greatly appreciated.,Social Conversation,False,32,NONE,False,False,False,0.1923076923,0.01923076923,0.2269807281,1.0,0.2234305404,0.7765694596,0.0068527403,0.007193130032
Rather do a 6gb image pull once that works than DLing 5 versions of CuDNN before stuff works..,Solution Discussion,False,94,NONE,False,False,False,1.0,0.157480315,0.6744868035,0.3333333333,0.5077260474,0.4922739526,0.01267336397,0.02165076149
"After some thoughts, I think we should see the bigger picture here.",Social Conversation,False,67,MEMBER,False,False,False,0.4,0.1690140845,0.8007246377,0.04545454545,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"In order to launch the app do:
CODE

After the build is complete the app can be run by invoking

CODE

With this example my startup times are

HotSpot (CODE)
CODE

OpenJ9 (CODE)
CODE

So the startup time is roughly the same (2x) with OpenJ9 than compared to HotSpot.",Bug Reproduction,True,281,NONE,True,False,False,1.0,0.4233576642,0.75,0.3048327138,0.01108575056,0.9889142494,0.006010021534,0.009079840981
Can we first fail remembering a class but later succeed?,Investigation and Exploration,False,56,CONTRIBUTOR,False,False,False,0.9090909091,0.1612903226,1.0,0.4316939891,0.65955413,0.34044587,0.001387996583,0.0005831074118
Generally multiprocessing in Windows encounters a lot of problems.,Investigation and Exploration,False,66,MEMBER,False,False,False,0.4285714286,0.09278350515,0.08284023669,0.2,0.0003221026152,0.9996778974,8.580113407e-05,9.25754306e-06
I do see your argument.,Social Conversation,False,23,MEMBER,False,False,False,1.0,0.03267973856,0.4919614148,1.0,0.1132199653,0.8867800347,2.363807545e-05,0.0654089151
"is there a small script with a very simple NN that shows what is the proper way of using this ""official"" BN layer?",Usage,False,114,NONE,False,False,False,1.0,0.08846153846,0.06638115632,0.5,0.2025148049,0.7974851951,0.1811646483,5.356953168e-05
"I really don't know much about the internals of TensorFlow, but I believe the C++ parts of TensorFlow could be compiled to wasm (check the MVP features supported, but Unreal Engine 4 was compiled to wasm's predecessor and ran successfully in FireFox).",Solution Discussion,False,251,NONE,False,False,False,1.0,0.5753424658,0.7909482759,0.3333333333,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"Ah, that was my fault, my first attempt at posting the exclude, I forgot to quote the text and the formatting hid the wildcards.",Solution Discussion,False,128,CONTRIBUTOR,False,False,False,1.0,0.3582089552,0.5,0.1620111732,0.002211155176,0.9977888448,0.0001215278376,0.0004214688837
The logic based on node count introduces some non-determinism.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3571428571,0.125,0.8,0.5098039216,0.5901481642,0.4098518358,0.0006727318859,0.002367610279
"there is something not quite right with my machine here..

However, we have come down from the initial 160s startup time to ~12s so at least I've learned a lot.",Investigation and Exploration,False,162,NONE,True,False,False,1.0,0.2408759124,0.5,0.6059479554,0.0254979151,0.9745020849,4.93e-05,0.0002157528574
"Just want to add something here, I implemented a **multiprocess-based** data feeding pipeline for multi-task learning.",Solution Discussion,False,118,NONE,False,False,False,1.0,0.2686567164,0.8210818308,0.2,0.7158615465,0.2841384535,0.6886518758,0.01649590529
"I am getting the same problem on OS X 10.11.6, python 3.5.1,  sklearn 0.17.1 and numpy 1.11.1 .On this dataset: https://dl.dropboxusercontent.com/u/103591/vals.out (with np.savetxt)",Bug Reproduction,False,181,NONE,False,False,False,1.0,0.338028169,0.2660818713,1.0,0.2833242219,0.7166757781,0.0859712289,0.0008809514386
It is influenced by tensorflow and backed by Google ...,Solution Discussion,False,55,NONE,False,False,False,0.6,0.1232876712,0.8318965517,0.875,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
"I notice you mentioned at https://github.com/spring-projects/sts4/issues/138#issuecomment-440138532
that it only crashed on JDK11 JRE.",Observed Bug Behaviour,False,135,CONTRIBUTOR,False,False,False,0.35,0.1414141414,0.75,0.5403508772,0.1984085961,0.8015914039,0.003898730278,0.003371874835
It's really a small change that we should implement!,Solution Discussion,False,52,NONE,True,False,True,0.5625,0.08653846154,1.0,1.0,1.0,0.0,0.0003947203969,0.0
"But then we could also build this into the interface for stacking, right?",Solution Discussion,False,73,MEMBER,False,False,False,1.0,0.1830985915,0.9710144928,1.0,0.07880236017,0.9211976398,7.923995895e-05,1.0
Perhaps these cores will be readable or gdb is working on rhel7.,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.8571428571,0.2553191489,1.0,0.2807692308,0.1405282549,0.8594717451,0.006159641184,0.02092045419
I'd really like to have this closed out this week.,Social Conversation,False,50,CONTRIBUTOR,False,False,False,1.0,0.171875,0.5,0.2340425532,0.1540808109,0.8459191891,0.1929437336,0.6410820506
"PicBuilder
Other Helpers, like those called by PicBuilder are already called in proper ABI due to the wrappers they use.",Solution Discussion,False,121,CONTRIBUTOR,True,False,False,0.1640625,0.1640625,0.9473684211,0.9722222222,0.3076445993,0.6923554007,0.1283873506,1.0
do you have the confidence intervals of them?,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.32,0.1290322581,0.4285714286,0.4894514768,0.4402101884,0.5597898116,0.00359667111,0.001910640371
@JamesKingdon or @dsouzai or @mpirvu can we disable AOT for the shared classes cache via a command line option?,Investigation and Exploration,False,111,CONTRIBUTOR,False,False,False,0.7916666667,0.1386861314,0.375,0.5241635688,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"You'll probably want to make a change in this method, which is where most of the work for calls is done:

https://github.com/eclipse/openj9/blob/450399bbd37af823f4360f033ac0e48dbdcd1d6c/runtime/compiler/p/codegen/PPCPrivateLinkage.cpp#L1540

In that method we kill CODE; you'll need to change that to put the entry point in CODE instead.",Solution Discussion,True,341,MEMBER,False,False,False,1.0,0.3359375,0.2,0.5666666667,0.040055736,0.959944264,0.001397241848,3.37e-05
This is why we thought it was specific to jdk17 initially.,Observed Bug Behaviour,False,58,CONTRIBUTOR,False,False,False,0.2444444444,0.1182795699,1.0,0.9536679537,0.9188394381,0.08116056195,0.2809961131,0.003058765602
Thanks!,Social Conversation,False,7,MEMBER,False,False,False,0.07142857143,0.001447178003,0.3729372937,1.0,0.07180384202,0.928196158,3.547972203e-05,0.003490777468
"See if I can't reproduce it.~ All passed, not sure if there is a specific way to reproduce this",Investigation and Exploration,False,95,NONE,True,False,False,0.5757575758,0.2087912088,1.0,0.1888111888,0.3526952876,0.6473047124,0.3731531372,0.01011234657
@fjeremic does removing disableMethodHandleInlineWithoutPeeking make it go away?,Solution Discussion,False,80,CONTRIBUTOR,False,False,False,1.0,0.06015037594,1.0,0.8167938931,0.8222920177,0.1777079823,0.00333677789,0.00412079602
"However, i think that adding a note or comment in the installation and/or T-SNE docs would be a good idea.",Solution Discussion,False,106,CONTRIBUTOR,False,False,False,0.7777777778,0.2957746479,0.7222222222,1.0,0.459007429,0.540992571,0.001079117078,0.0009613524417
"Also, it must be compatible with GridSearchCV.",Solution Discussion,False,46,MEMBER,False,False,False,0.3333333333,0.0985915493,0.2355072464,1.0,0.03945490707,0.9605450929,1.565147108e-05,1.186142875e-05
"Since serialization is the only way to reuse parsing results in a data pipeline and most real-world docs would have OOV words, this problem is pretty critical.",Workarounds,False,159,CONTRIBUTOR,False,False,False,1.0,0.4516129032,0.7092511013,0.5,0.2945274675,0.7054725325,0.02221386295,0.000146521357
But I hope we can all agree that this is just digging ourselves a deeper hole.,Social Conversation,False,78,MEMBER,False,False,False,0.32,0.2580645161,0.5726872247,0.8571428571,0.2188215168,0.7811784832,0.0010422294,0.002309046196
"I got the following error in the training phase:Variable bnormalization/beta does not exist, disallowed. Did you mean to set reuse=None in VarScope?",Usage,False,148,NONE,False,False,False,0.9615384615,0.09615384615,0.2141327623,0.625,0.2234305404,0.7765694596,0.0068527403,0.007193130032
In docker we started to generate more generic AOT code (but also less optimized) so that the image can be used on more CPUs and more heap configurations.,Investigation and Exploration,False,153,CONTRIBUTOR,False,False,False,1.0,0.35,0.4,0.09803921569,0.09390786121,0.9060921388,0.3318641488,0.01961071442
Values will almost always be different.,Solution Discussion,False,39,CONTRIBUTOR,False,False,False,0.2727272727,0.04109589041,0.3333333333,0.8491620112,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
I've wasted lots of time failing to set up an appropriate debianvirtual machine.,Bug Reproduction,False,80,MEMBER,False,False,False,0.8235294118,0.2058823529,0.6219512195,0.4444444444,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
"I assume when merging maps, the merged map will certainly cover all of the instructions covered by both maps.",Solution Discussion,False,109,CONTRIBUTOR,False,False,False,0.6333333333,0.296875,1.0,0.4680851064,0.7599422624,0.2400577376,0.0002837124983,0.01003572854
"[1] https://github.com/ibmruntimes/openj9-openjdk-jdk17/blob/2475fcb8f4e08364e97ad3051aa301632c9fcc20/src/java.base/share/classes/java/lang/invoke/MethodHandle.java#L478
[2] https://github.com/ibmruntimes/openj9-openjdk-jdk17/blob/2475fcb8f4e08364e97ad3051aa301632c9fcc20/src/java.base/share/classes/java/lang/invoke/MethodHandles.java#L5102-L5105",Investigation and Exploration,False,348,MEMBER,True,False,False,0.1111111111,0.05434782609,1.0,0.4339622642,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
"re https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-980168128:

Yesterday, @EricYangIBM tried eclipse/omr#6255 and stated in https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-979425930 that the crash still happens.",Bug Reproduction,False,251,CONTRIBUTOR,False,False,False,1.0,0.1827956989,0.25,0.1467181467,0.08713752309,0.9128624769,0.002189628546,0.0003096067621
Would CODE then be defensive or not? ;),Solution Discussion,True,39,MEMBER,False,False,False,1.0,0.1126760563,0.75,1.0,0.074258292,0.925741708,1.193161472e-05,0.0001053842324
I think supporting the pickle protocol is not necessarily the best way to do that.,Solution Discussion,False,82,MEMBER,False,False,False,0.3333333333,0.09803921569,0.5048231511,0.8,0.1362602962,0.8637397038,0.0654089151,0.02443361297
Would be great if you can take a look and post a version of it that freezes.,Investigation and Exploration,False,76,NONE,False,False,False,1.0,0.175257732,0.7781065089,0.7142857143,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
"-         Goal: Have users use the same English object on the driver or in Spark jobs, and not worry about communicating the big object.",Expected Behaviour,False,136,NONE,False,False,False,0.5581395349,0.1568627451,0.2282958199,0.4210526316,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
.,Social Conversation,False,1,NONE,False,False,False,0.0,0.0,0.713362069,0.6666666667,0.7053540966,0.2946459034,0.002671966484,3.430421643e-05
Here is the data from the booking service.,Social Conversation,False,42,NONE,True,False,False,0.6153846154,0.1,0.5,0.2549019608,0.1380083141,0.8619916859,0.01574975534,0.1612106274
"Which makes the parameter rather pointless, but I am updating the call to check it and return failure.",Solution Discussion,False,102,CONTRIBUTOR,False,False,False,1.0,0.1730769231,0.5,0.9613259669,0.3305498824,0.6694501176,0.0001858086996,5.71e-05
For example change time window for possible race to make it much harder to reproduce.,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.1648351648,0.1648351648,0.75,0.7307692308,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"python 3.6.4,scikit-learn 0.19.1,windows 10.,CPU cores: 24",Observed Bug Behaviour,False,58,NONE,False,False,False,0.5833333333,0.07216494845,0.9171597633,1.0,0.9962410347,0.003758965267,0.03509089576,0.001411219069
Most of the discussion above was about question 3 (the complex details of how to integrate CategoricalEncoder(encoding='onehot') into OneHotEncoder).,Solution Discussion,False,149,CONTRIBUTOR,True,False,False,0.38,0.296875,0.7095588235,0.9,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
Very promising!,Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.07692307692,0.02985074627,0.439667129,0.2,0.4019651913,0.5980348087,0.005091284808,0.001827732055
"solution:inputs = tf.placeholder(dtype=tf.int32, shape=[None, None], name=""inputs"")keep_prob = tf.placeholder(dtype=tf.float32, name=""keep_prob"")cell = rnn.MultiRNNCell([rnn.DropoutWrapper(rnn.GRUCell(10), input_keep_prob=keep_prob) for _ in range(5)] , state_is_tuple=True)",Solution Discussion,False,274,NONE,False,False,False,0.1386861314,0.02749638205,0.9570957096,1.0,0.4233801806,0.5766198194,0.06521718752,0.3845326686
@pshipton I have not had any reports of such.,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.2045454545,0.1343283582,0.25,0.5606936416,0.01124208961,0.9887579104,5.92e-05,5.28e-05
+2,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4784482759,1.0,0.5701334054,0.4298665946,0.01001196221,0.06122240309
Thanks in advance!!,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.05084745763,0.01587301587,1.0,0.5085714286,0.4461627725,0.5538372275,0.06246846736,0.001023944321
"So the setting is that you have trained some bagging estimators and want to combine them together, right?",Motivation,False,105,MEMBER,False,False,False,1.0,0.2535211268,0.9347826087,0.3333333333,0.07861806562,0.9213819344,1.133503399e-05,1.645860972e-05
[CompareAndSwapObjectWTrace.zip] URL,Task Progress,False,37,NONE,True,False,False,0.07142857143,0.02985074627,0.6666666667,0.4972067039,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
"We'd be extremely happy to see a very flexible mechanism, where such cases are supported, and data generation doesn't have to be shoehorned into forced-upon concepts like epochs, finitely repeating queues, etc.",Motivation,False,210,CONTRIBUTOR,False,False,False,0.7083333333,0.5074626866,0.04993065187,0.5,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
@mpirvu - yeah that method wont be invoked with acmeair mono as there is no authentication done.,Investigation and Exploration,False,96,NONE,True,False,False,1.0,0.2125,0.5,0.2745098039,0.1729912694,0.8270087306,0.05981079416,0.003212874696
I basically just used the 'Boot Dashboard' to launch my app repeatedly by clicking the restart button repeatedly.,Investigation and Exploration,False,113,NONE,True,False,False,0.3673469388,0.1818181818,0.5555555556,0.3649122807,0.1194799462,0.8805200538,0.004838964607,0.001815624911
I can try to create a debug VM which prints the return code to stderr and we can grind the test with that to see the value when TKG detects failure.,Task Progress,False,148,CONTRIBUTOR,True,False,False,0.7045454545,0.5344827586,0.8571428571,0.8348623853,0.9968553268,0.003144673225,0.003909680331,0.004205153524
"The design enables flexible composition of various components of the input pipeline such as  [ImageRecordIter] URL , [ImageNormalizeIter] URL , [BatchLoader] URL , [PrefetcherIter] URL  and [ImageAugmenter] URL .",Solution Discussion,False,212,NONE,False,False,False,1.0,0.4029850746,0.278779473,0.4,0.1079818594,0.8920181406,0.2293928428,1.0
@tano297 SCREEN_NAME   you right.,Social Conversation,False,33,NONE,False,False,False,0.08474576271,0.01923076923,0.8736616702,0.3333333333,0.7250706706,0.2749293294,0.02303946421,0.09747656054
If you use CODE it works fine.,Observed Bug Behaviour,True,30,NONE,True,True,False,0.35,0.07368421053,0.07368421053,0.7,0.0,1.0,0.0,0.008598273629
"If there is a problem with the core, it's probably a machine issue as you suggested.",Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.7619047619,0.1758241758,1.0,0.1118881119,0.1031456929,0.8968543071,0.01551514965,0.04744206468
"@kdvolder When OpenJ9 crashes, it typically creates a CODE file and a system core as well.",Observed Bug Behaviour,True,90,MEMBER,False,False,False,1.0,0.1616161616,0.3333333333,0.02105263158,0.00184916656,0.9981508334,0.006553271164,0.002233056532
"Changes to inlining method handle chains have increased the compilation overhead substantially and the test on Windows times-out because compilation threads, having higher priority , don't give application thread many chances to run (5 JVMs * 3 compTheads = 15 comp threads working on 4 cores).",Investigation and Exploration,False,294,CONTRIBUTOR,False,False,False,1.0,0.6567164179,0.3333333333,0.901734104,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
"One could even wrap that interface into a MapReduce cluster, without digging into our implementation at all!",Solution Discussion,False,108,MEMBER,False,False,False,0.5666666667,0.2394366197,0.865942029,0.8636363636,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"This is best command I can reproduce with:

CODE

It appears that using CODE is not equivalent to using CODE which is a bit mysterious.",Bug Reproduction,True,139,CONTRIBUTOR,False,False,False,0.84375,0.2030075188,0.1428571429,0.893129771,0.859885377,0.140114623,0.0001189516558,0.06424166071
-         Most importantly we need to address the dequeueing overhead.,Expected Behaviour,False,70,CONTRIBUTOR,False,False,False,0.4,0.1492537313,0.09015256588,0.1666666667,0.003166427653,0.9968335723,0.02236439613,0.004893293226
"### Fitting 3 folds for each of 18 candidates, totalling 54 fits[Parallel(n_jobs=12)]: Done  26 tasks      | elapsed:   18.4s[Parallel(n_jobs=12)]: Done  54 out of  54 | elapsed:   23.7s finishedBest: 0.675781 using {'batch_size': 5, 'epochs': 5, 'init': 'glorot_uniform', 'optimizer': 'adam'}0.621094 (0.036225) with: {'batch_size': 5, 'epochs': 5, 'init': 'glorot_uniform', 'optimizer': 'rmsprop'}0.675781 (0.006379) with: {'batch_size': 5, 'epochs': 5, 'init': 'glorot_uniform', 'optimizer': 'adam'}...0.651042 (0.025780) with: {'batch_size': 20, 'epochs': 5, 'init': 'uniform', 'optimizer': 'adam'}",Observed Bug Behaviour,False,602,NONE,False,False,False,1.0,0.7319587629,0.9023668639,0.6666666667,0.9814537694,0.0185462306,0.01231978335,0.004293692176
"test-osuosl-ppc64-aix-71-1
CODE",Testing,True,32,CONTRIBUTOR,False,False,False,1.0,0.04022988506,1.0,0.8639705882,0.78339525,0.21660475,0.02803794401,0.02121193973
This makes everything much easier.,Social Conversation,False,34,MEMBER,False,False,False,0.1724137931,0.08064516129,0.8810572687,0.75,0.6576765505,0.3423234495,0.0002468438052,0.0002666834826
I don't understand this last remark.,Social Conversation,False,36,MEMBER,False,False,False,0.2857142857,0.08450704225,0.5398550725,0.3333333333,0.04262877546,0.9573712245,8.618836988e-05,4.569106579e-05
"If those recommendations are all good ones, the datasets API might benefit from the addition of those very same recommendations.",Solution Discussion,False,128,NONE,False,False,False,0.5555555556,0.2985074627,0.5159500693,0.75,0.4587375589,0.5412624411,0.1250288844,0.003916059713
But what to do in the following cases:,Motivation,False,38,CONTRIBUTOR,True,True,False,0.16,0.125,0.02205882353,0.25,0.0,1.0,0.0,0.0007774126438
Pls check other platforms as well.,Investigation and Exploration,False,34,CONTRIBUTOR,True,False,False,0.2857142857,0.08955223881,0.75,0.1329479769,0.003372681321,0.9966273187,2.44e-05,4.75e-06
The third parameter is the size of the data to write and it accepts a Long value.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,1.0,0.3617021277,0.6666666667,0.6346153846,0.6341947438,0.3658052562,0.2686456518,0.0113804523
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.275862069,1.0,0.2276445352,0.7723554648,0.0226086918,0.2970470709
So Int and Long types need to be treated differently.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.5,0.2127659574,0.75,0.7269230769,0.6453871071,0.3546128929,0.007376113072,0.2919761514
"Python 3.6.1numpy 1.13.1scikit-learn master branch, last commit hash d6a42354145c92cf88093cbcc70b13f639319c38numpy was installed from pip, so this is with Accelerate.OSX version 10.12.4",Bug Reproduction,False,185,NONE,False,False,False,1.0,0.3235294118,0.3739837398,1.0,0.4607405818,0.5392594182,0.2982430454,0.003789469322
"Please use this""pip install --upgrade tensorflow-gpu==1.4""",Solution Discussion,False,58,NONE,False,False,False,0.4666666667,0.05511811024,0.1085043988,1.0,0.1949838428,0.8050161572,0.7235035514,0.209218471
@raghavgoyal14 are you using it with fused=True?,Usage,False,48,NONE,False,False,False,0.5714285714,0.03076923077,0.8072805139,0.5,0.6353055948,0.3646944052,0.07061844097,0.0001878991907
CODE,Usage,True,4,MEMBER,False,False,False,0.07692307692,0.003846153846,0.408993576,1.0,0.371541484,0.628458516,0.001356181686,0.002464198457
"I will try the one from sklearn.model_selection, but something tells me I will have the same exact issue).",Investigation and Exploration,False,106,NONE,False,False,False,1.0,0.1855670103,0.4733727811,0.75,0.8484897144,0.1515102856,2.737530974e-05,1.942892084e-05
Directly doing: CODE is ok in both cases.,Investigation and Exploration,True,41,CONTRIBUTOR,False,False,False,0.5714285714,0.08421052632,0.2842105263,1.0,0.1100086119,0.8899913881,0.04915356896,0.07593267665
"On Linux, the JVMJ9VM135W message means that the system has a core redirection configured into the CODE program, which may be deleting, renaming, and/or truncating the core from my experience.",Investigation and Exploration,True,192,CONTRIBUTOR,False,False,False,1.0,0.2255639098,0.5,0.2239185751,0.09284186161,0.9071581384,0.04671162031,0.4323046536
"And then next time you run, you get an error in that other place in your code where the classes get pickled.",Solution Discussion,False,108,MEMBER,False,False,False,0.4782608696,0.1437908497,0.421221865,0.8421052632,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
I will try to get the first part in soon.,Contribution and Commitment,False,41,MEMBER,False,False,False,0.243902439,0.03846153846,0.09635974304,1.0,0.2040149325,0.7959850675,0.007484820191,0.009973469892
"[2] you'd better remove the whole CODE folder and clone a new one for your build every time; otherwise, the problem won't show up as there are a bunch of garage data previously generated in CODE.",Investigation and Exploration,True,195,CONTRIBUTOR,False,False,False,1.0,0.2781954887,0.5,0.5038167939,0.5597074071,0.4402925929,0.000211333354,0.0002117421226
Same issue here with the german model and CODE on Amazon Linux (also on Ubuntu Server 14.04 LTS) using python 3.5.,Bug Reproduction,True,114,NONE,False,False,False,0.9130434783,0.2210526316,0.1157894737,0.3333333333,0.004005078259,0.9959949217,0.008598273629,0.1559472602
Not that I'm aware of.,Social Conversation,False,22,NONE,True,False,False,0.1515151515,0.03649635036,0.75,0.6096654275,0.0254979151,0.9745020849,4.93e-05,0.0002157528574
"Well if AGCT just returns, then the only suspicious part there is CODE which is (from a signal handler context):

CODE",Investigation and Exploration,True,120,NONE,True,False,False,1.0,0.2211538462,1.0,0.7071823204,0.2975206655,0.7024793345,0.0003838884996,9.84e-05
I was experiencing the same issue on Windows 10 working in Jupyter notebook trying to use a custom scorer within a nested cross-validation and n_jobs=-1.,Observed Bug Behaviour,False,153,NONE,False,False,False,1.0,0.2680412371,0.275147929,0.3333333333,0.663808267,0.336191733,0.07308442859,0.3850825819
"What about FIFO queue or similar, or something like SCREEN_NAME 77 suggested like: > functionality for a timeout on vocabulary entries that aren't loaded at initialization",Solution Discussion,False,171,NONE,False,False,False,0.6097560976,0.4032258065,0.2026431718,0.5,0.1925825232,0.8074174768,0.6482365618,5.170680801e-06
"Nevertheless, I wonder if it would be possible to make the English() object pickleable?",Expected Behaviour,False,87,NONE,True,True,False,0.3888888889,0.09150326797,0.02250803859,0.875,0.0,1.0,0.0,0.0054583822
Will keep digging through the coredumps to narrow down to a smaller subset of problematic inlined methods.,Task Progress,False,106,CONTRIBUTOR,False,False,False,0.7391304348,0.1278195489,1.0,0.9389312977,0.909962974,0.09003702602,0.04177124329,0.03295492264
"@gacholio @zl-wang, apparently with -O0 (@AlenBadel is verifying) gcc++ creates this at the beginning of external methods:

> 0x7ffff64376e4 <fast_jitInstanceOf(J9VMThread*, J9Class*, j9object_t)>          addis   r2,r12,60                                                      │*     
   │0x7ffff64376e8 <fast_jitInstanceOf(J9VMThread*, J9Class*,",Investigation and Exploration,False,349,CONTRIBUTOR,False,False,False,1.0,0.265625,0.3333333333,0.1111111111,0.02817987909,0.9718201209,0.001090608783,1.78e-05
We're still refactoring and working on better processes for adding more languages.,Task Progress,False,82,MEMBER,False,False,False,0.5217391304,0.2,0.4310344828,0.5,0.3864300618,0.6135699382,0.4682936827,0.03367017273
I'm not sure if this helps at all,Social Conversation,False,33,NONE,True,False,False,0.380952381,0.05839416058,0.5,0.6617100372,0.02630162169,0.9736983783,0.0005470432334,9.69e-05
"Though there are many issues on batch normalization, it's hard to find a complete code snippet on how to use it, esp. for how to pass different parameters in different phase.",Usage,False,174,CONTRIBUTOR,False,False,False,1.0,0.1192307692,0.5695931478,0.5,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
"When running with multiple GPUs, TensorFlow is not able to even saturate the PCI-e bandwidth to the GPUs because of the memcpy from the feed_dict to the CPU tensor.",Motivation,False,164,NONE,False,False,False,0.9090909091,0.447761194,0.3772538141,0.5,0.3166940255,0.6833059745,0.1413171275,0.04972082678
"OK it seems like the JVM is taking more time to load than on my setup - please increase the ""sleep 5"" to ""sleep 15"" in reproduce.sh. The spring-boot messages should complete before enabling AGCT and running traffic.",Investigation and Exploration,False,215,NONE,True,False,False,1.0,0.3653846154,1.0,0.6187845304,0.1325653185,0.8674346815,3.39e-05,3.67e-05
So I wasn't sure that would be a good idea.,Social Conversation,False,43,CONTRIBUTOR,True,False,False,0.3125,0.1408450704,0.09057971014,0.6363636364,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
got it: https://spacy.io/docs/usage/adding-languages,Solution Discussion,False,52,NONE,False,False,False,1.0,0.05,0.974137931,0.5,0.8014064324,0.1985935676,5.017614044e-05,0.9680205697
"I'll be licensing the data, so you probably won't have direct access to it --- I'll have to do the actual training.",Solution Discussion,False,115,MEMBER,False,False,False,0.3666666667,0.3666666667,0.1637931034,0.52,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
I read the above comments and can reproduce this.,Bug Reproduction,False,49,NONE,False,False,False,0.28125,0.1267605634,0.9239766082,0.25,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"When scale=False, gamma is a constant 1.",Solution Discussion,False,40,CONTRIBUTOR,False,False,False,1.0,0.03076923077,0.8265524625,1.0,0.7054121789,0.2945878211,2.252355309e-05,0.001322497813
but I'll look for a better machine.,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,1.0,0.04022988506,1.0,0.7683823529,0.7732108271,0.2267891729,6.97e-06,4.37e-06
I don't think that statistic was mentioned above.,Social Conversation,False,49,CONTRIBUTOR,False,False,False,0.3076923077,0.08602150538,0.8571428571,0.2741312741,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
"I can give you some code to get you started on the POS tagged vectors, though.",Solution Discussion,False,78,MEMBER,False,False,False,0.5333333333,0.4210526316,0.2481751825,0.7222222222,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
150 runs in so far no failure.,Testing,False,30,CONTRIBUTOR,False,False,False,0.3181818182,0.03703703704,1.0,0.03428571429,8.25e-05,0.9999175247,0.0001585168452,0.2625556309
-         It would be great if there is still a way to have an **input feed that comes from multi-threaded or multi-processing python**.,Expected Behaviour,False,136,CONTRIBUTOR,False,False,False,1.0,0.3731343284,0.09431345354,0.6666666667,0.003166427653,0.9968335723,0.02236439613,0.004893293226
For reasons of readability I work with a very small CODE and list of file names.,Solution Discussion,True,80,NONE,False,False,False,0.4,0.2388059701,0.6477115118,0.625,0.5054793089,0.4945206911,0.03050902669,0.04958391229
"However, it's better illustrated with the example of CODE.",Solution Discussion,True,58,CONTRIBUTOR,False,False,False,0.3,0.1914893617,0.8,0.9538461538,0.7315269328,0.2684730672,0.001396795956,0.005094870496
"CODE

It runs the command CODE, then the test harness determines that it all the success conditions match and none of the failure conditions match.",Observed Bug Behaviour,True,149,CONTRIBUTOR,False,False,False,1.0,0.4482758621,0.25,0.2752293578,0.02085230113,0.9791476989,4.43e-05,0.0001834423374
"In your comments on https://github.com/spacy-io/spaCy/issues/172 you proposed a batch-processing generator that uses, and then throws away a tokenizer object for each batch in order to help find OOV tokens.",Solution Discussion,False,206,NONE,True,False,False,0.7317073171,0.4838709677,0.1365638767,0.6,0.01937624511,0.9806237549,0.02003548886,0.01526654747
I was on branch master and the latest commit is CODE.,Solution Discussion,True,53,NONE,False,False,False,0.9166666667,0.01591895803,0.2112211221,0.6666666667,0.05414259275,0.9458574073,0.004152670075,0.04899488558
Anyway I've started some grinders and we'll see what we can figure out from that before proceeding.,Testing,False,99,CONTRIBUTOR,True,False,False,1.0,0.3103448276,0.75,0.3302752294,0.02088409074,0.9791159093,0.0001834423374,0.001257628253
"The are bigger jumps in Q_SZ around AOT failures, so I would say that AOT relocation failures play a role.
CODE compilations in the second run can be eliminated by making the cache readonly.",Investigation and Exploration,True,191,CONTRIBUTOR,False,False,False,1.0,0.2554744526,0.8,0.2899628253,0.007087055447,0.9929129446,0.006822511181,0.006010021534
"Somehow, I solved this by installing:cuda 9.1 (from package manager),cudnn 7.1 for 9.1and from anaconda:by using this default command 'conda install -c anaconda tensorflow-gpu'cudatoolkit 9.0,tensorflow 1.7,tensorflow-gpu 1.7",Solution Discussion,False,225,NONE,False,False,False,1.0,0.2440944882,0.7771260997,0.25,0.6608360282,0.3391639718,1.0,0.07077280307
It seems fine on my linux machine Linux:,Bug Reproduction,False,40,NONE,False,False,False,0.32,0.1126760563,0.9912280702,0.8,0.9998782054,0.0001217945808,0.8838761808,0.0007094938778
"Eclipse OpenJ9 VM (build openj9-0.29.0, JRE 1.8.0 Linux amd64-64-Bit Compressed References 20211022_234 (JIT enabled, AOT enabled)
OpenJ9   - e1e72c497
OMR      - 299b6a2d2
JCL      - 8860d39588 based on jdk8u312-b07)

Summary of problem",Observed Bug Behaviour,False,242,NONE,True,True,False,0.7647058824,0.375,0.25,0.01657458564,0.0,1.0,0.0,0.01118041169
That should at least get you started.,Social Conversation,False,37,NONE,False,False,False,0.1891891892,0.1166666667,0.6465517241,0.75,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"ASGCT does modify the CODE temporarily in the case where a JIT frame is on stack, but it's restored before exit.",Investigation and Exploration,True,112,CONTRIBUTOR,False,False,False,0.8076923077,0.2019230769,0.5,0.1436464088,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
The expected constant pool address within the j9method was actually just CODE in this case.,Investigation and Exploration,True,91,CONTRIBUTOR,False,False,False,0.1785714286,0.1648351648,1.0,0.2552447552,0.5985521651,0.4014478349,1.0,0.01222678832
So there is no issue with LocIsConstant  with the fix above (already confirmed after recompiling the whole build),Solution Discussion,False,113,CONTRIBUTOR,False,False,False,0.4318181818,0.1610169492,1.0,0.5575757576,0.4198577324,0.5801422676,9.31e-05,0.02758701478
"If I were you I would double-check that you don't have the same problem for other core scientific packages, e.g. scipy, etc ...",Solution Discussion,False,127,MEMBER,False,False,False,0.8518518519,0.2371134021,0.5414201183,1.0,0.8485070338,0.1514929662,1.996530209e-05,7.298758198e-05
I think there are other values that would be interesting to store from run to run.,Solution Discussion,False,82,MEMBER,False,False,False,1.0,0.1095890411,1.0,0.1508379888,0.01146200838,0.9885379916,0.003457386912,0.006230161811
"Based on some discussions we are having here and issues that are opened, we are having some doubts that CODE  URL  was the good choice of name (and since it is not released yet we have some room for change).",Solution Discussion,True,207,CONTRIBUTOR,True,True,False,0.84,0.65625,0.007352941176,0.08333333333,0.0,1.0,0.0,0.0007774126438
#10848 provides a temporary fix for the 0.23 release.,Workarounds,False,53,CONTRIBUTOR,False,False,False,0.4736842105,0.1451612903,0.5,0.306010929,0.4967398914,0.5032601086,0.01288492485,0.6535899155
"queues are wonderful until you don't have a way to manipulate your data natively -- for example, if you want to load a .wav file, chop it into parts, and convert it to a spectrogram.",Solution Discussion,False,182,NONE,False,False,False,1.0,0.5223880597,0.2038834951,0.25,0.04335363766,0.9566463623,0.005164577321,0.043809073
"I observed the following three scenarios:
- After the SCC is cleared, the first run with CODE will always pass.",Bug Reproduction,True,112,CONTRIBUTOR,False,False,False,0.4651162791,0.2150537634,0.1538461538,0.1930501931,0.3402178482,0.6597821518,0.06293969756,0.0116494207
I guess the problem has cropped up again with CODE and CODE.,Bug Reproduction,True,60,NONE,False,False,False,0.5217391304,0.09448818898,0.8885630499,0.1428571429,0.9258004594,0.07419954058,0.1457126271,0.001998099513
CODE,Solution Discussion,True,4,NONE,False,False,False,0.03703703704,0.01492537313,0.2801664355,0.6,0.1079818594,0.8920181406,0.2293928428,1.0
"What I was hoping to do is feed (possibly through feed_dict, or file) a Queue with a new sample and once the size of the buffer is exceeded, the oldest sample is removed from the buffer.",Motivation,False,186,CONTRIBUTOR,False,False,False,0.72,0.5373134328,0.2302357836,0.5714285714,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"-Xjit:verbose={methodHandleDetails}

It doesn't look like the handleRef that caused the crash was ever deleted.",Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,0.5333333333,0.08465608466,0.3333333333,0.2457142857,0.3251821571,0.6748178429,0.002117006954,0.0005752961223
I've tried CODE but that has prevented the failure from occurring.,Solution Discussion,True,66,CONTRIBUTOR,False,False,False,0.5217391304,0.1318681319,1.0,0.9230769231,0.8779153049,0.1220846951,0.01532565869,0.003869158807
Maybe one of the nightlies does it?,Solution Discussion,False,35,NONE,False,False,False,0.1707317073,0.05511811024,0.4545454545,1.0,0.380459606,0.619540394,0.0006322631694,0.001605430808
**+1**,Social Conversation,False,6,NONE,False,False,False,1.0,0.01369863014,0.5775862069,1.0,0.6489185975,0.3510814025,0.05654463587,0.01776869884
One is efficient distributed reading through CODE.,Solution Discussion,True,50,NONE,False,False,False,0.3333333333,0.1044776119,0.919556172,0.7777777778,0.9479523715,0.05204762849,0.2620248075,0.005625200409
"if all are unlimited, we might need to bring it forward to AIX kernel team.",Social Conversation,False,75,CONTRIBUTOR,False,False,False,1.0,0.2419354839,0.3333333333,0.194092827,0.04609541414,0.9539045859,4.38e-05,0.002409448773
We need to add some additional debugging to see why the overall result is failure even though the cmdLineTest passed.,Task Progress,False,117,CONTRIBUTOR,True,False,False,1.0,0.3448275862,1.0,0.5504587156,0.7522431881,0.2477568119,1.24e-05,0.001356949176
Could be OS-related.,Investigation and Exploration,False,20,CONTRIBUTOR,False,False,False,0.05970149254,0.05633802817,0.4502923977,0.8571428571,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
@7ammer propelml.org looks rather promising.,Social Conversation,False,44,NONE,False,False,False,0.7142857143,0.06849315068,0.8922413793,0.5,0.901273743,0.09872625696,0.0976605631,0.3331738372
"There are two notes @andrewcraik:
- Just friendly reminder that ""classes unloading"" and ""anonymous classes unloading"" hooks passed list of classes to be unloaded attached to the hook as parameter (""classes"" list included ""anonymous classes"" as well).",Investigation and Exploration,False,251,CONTRIBUTOR,False,False,False,0.4065934066,0.4065934066,0.7857142857,0.7342657343,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"Thanks, Mesbah @Mesbah-Alam, for collecting that data!",Social Conversation,False,54,MEMBER,False,False,False,0.1777777778,0.1194029851,0.1428571429,0.4971098266,0.009579724698,0.9904202753,0.003668136449,0.001720565783
-         in this case CODE work as expected,Solution Discussion,True,44,CONTRIBUTOR,True,False,False,0.1860465116,0.125,0.3713235294,0.9166666667,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
"@zl-wang  multiheap default, 24, 28, 30, 32 performance for 24 and 32 threads [multiheap_performance.xlsx] URL ",Testing,False,111,NONE,False,False,False,1.0,0.2741935484,1.0,0.4767932489,0.4396879364,0.5603120636,0.3809000137,0.00359667111
"I wonder why this test shows so much more impact - maybe Spring boot brings in a larger number of jars?

-- looks like the whole app is in only one jar on the filesystem which is spring.boot.openj9-0.0.1-SNAPSHOT.jar. That jar contains 157 jars inside it, but it wouldn't make sense to be checking timestamps of those would it?",Solution Discussion,False,329,CONTRIBUTOR,False,False,False,1.0,0.4233576642,0.3333333333,0.8475836431,0.06523661816,0.9347633818,0.001221633262,0.003514162664
"I think there's a design problem here that should be fixed, so we may as well fix it sooner rather than later.",Solution Discussion,False,110,MEMBER,False,False,False,1.0,0.5789473684,0.6423357664,0.1111111111,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
Do we have a rough plan for the change of APIs?,Potential New Issues and Requests,False,47,NONE,False,False,False,0.5789473684,0.2894736842,0.7810218978,1.0,0.004424658886,0.9955753411,1.589171419e-05,0.0004120470569
"The ""path"" is a sequence of optima.",Solution Discussion,False,35,MEMBER,False,False,False,0.2413793103,0.0985915493,0.5760869565,0.6666666667,0.04267891418,0.9573210858,8.738153135e-06,0.0006227250095
In short how does it figure out that it should apply and learn the same parameters per feature (rather than per activation)?,Solution Discussion,False,124,NONE,False,False,False,1.0,0.08461538462,0.3533190578,0.6666666667,0.2984391787,0.7015608213,0.02076519409,0.004008482248
Most of these things are demanded by consistency with the rest of the library.,Solution Discussion,False,78,MEMBER,False,False,False,0.4242424242,0.3684210526,0.3138686131,0.1538461538,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"anyway, it works!",Social Conversation,False,17,NONE,False,False,False,0.25,0.04225352113,0.3274853801,0.6,0.324045968,0.675954032,0.0002259807885,0.0001194252422
"That said, looking at SwitchableDataSet, it seems like implementing new kinds of data feeding use cases will be mostly done by implementing use-case specific classes.",Usage,False,166,CONTRIBUTOR,False,False,False,1.0,0.3880597015,0.4424410541,0.6,0.4019651913,0.5980348087,0.005091284808,0.001827732055
"These are the methods compiled when the JVM starting to consume all the CPU:
CODE",Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,1.0,0.2,1.0,0.6960784314,0.8791843797,0.1208156203,0.006483743521,0.05954547102
"However, based on the memory used by the container (193 MiB), I wouldn't say it's something we shouldn't be able to manage.",Solution Discussion,False,123,CONTRIBUTOR,False,False,False,1.0,0.275,1.0,0.9950980392,0.9721353064,0.02786469359,0.008707818333,0.1760484251
"FYI, static fields don't appear in superset.dat at all.",Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.4090909091,0.07627118644,1.0,0.503030303,0.4196348615,0.5803651385,0.0004100015372,0.0001321913482
I have a working prototype fix,Solution Discussion,False,30,CONTRIBUTOR,False,False,False,0.1875,0.08955223881,0.1666666667,0.8826815642,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"CODE

I've also tried to generate a trace file, without any luck.",Task Progress,True,67,CONTRIBUTOR,False,False,False,0.6086956522,0.2978723404,0.8333333333,0.1846153846,0.1072645887,0.8927354113,0.01345561023,0.009663080221
The OOV strings are encoded using the hash of the byte string.,Workarounds,False,62,MEMBER,False,False,False,0.3636363636,0.1935483871,0.6784140969,0.6875,0.288728579,0.711271421,0.1151253204,0.02221386295
@Leonardo2718 There's not much I can find from the core dump.,Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,0.2558139535,0.1774193548,0.8,0.3825136612,0.6389467947,0.3610532053,0.00359446461,0.01517828221
We're working on a new seq2seq tutorial.,Task Progress,False,40,CONTRIBUTOR,False,False,False,0.5384615385,0.01013024602,0.5445544554,0.3333333333,0.1355129749,0.8644870251,0.00125745356,0.03511934773
"Given the problem is intermittent, I'm guessing the problem is JIT/AOT related.",Investigation and Exploration,False,79,CONTRIBUTOR,True,False,False,0.5652173913,0.224137931,1.0,0.128440367,0.02079385367,0.9792061463,0.0009727685091,3.3e-05
None of those workarounds worked for me with Tensorflow 1.1,Workarounds,False,59,NONE,False,False,False,1.0,0.01447178003,0.6567656766,0.3333333333,0.2137099354,0.7862900646,0.04042101496,0.04734857901
But I couldn't find any instructions to do that on Windows.,Solution Discussion,False,59,CONTRIBUTOR,False,False,False,0.55,0.07189542484,0.8553054662,1.0,0.1977965443,0.8022034557,0.00195977348,8.955394223e-06
Just pushed v0.95.,Task Progress,False,18,MEMBER,False,False,False,0.15,0.01960784314,0.308681672,0.25,0.01445541281,0.9855445872,0.01796302825,0.01064935216
We'll need an update to tensorflow-gpu to use cuda 9.2.,Solution Discussion,False,55,NONE,False,False,False,0.4782608696,0.08661417323,0.9002932551,0.7142857143,0.9258004594,0.07419954058,0.1457126271,0.001998099513
It also forces the JIT to do synchronous compilation.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.36,0.1914893617,0.6666666667,0.3307692308,0.3248987511,0.6751012489,0.01822418003,0.04520695765
"jitlogs attached

[jitlogs.zip] URL ",Social Conversation,False,38,NONE,True,False,False,1.0,0.0625,1.0,0.1764705882,0.1205331296,0.8794668704,0.02677733879,0.02297002429
"But even if a node has a correct BCI, it can be moved around or eliminated.",Solution Discussion,False,75,CONTRIBUTOR,False,False,False,1.0,0.25,1.0,0.6241134752,0.9074006143,0.09259938572,0.002108608991,0.02309852518
"@zhongyuk try to build scikit-learn inside a conda env that uses mkl, I believe this should be enough for mkl to be picked up (probably a good idea in this case to do CODE and then CODE to rebuild from scratch).",Investigation and Exploration,True,211,MEMBER,False,False,False,1.0,0.5915492958,0.5994152047,1.0,0.4554389927,0.5445610073,8.635150765e-05,0.009630545628
"Ping SCREEN_NAME , SCREEN_NAME ",Contribution and Commitment,False,31,MEMBER,False,False,False,0.08333333333,0.04411764706,0.6869918699,1.0,0.579970186,0.420029814,0.0002506975331,0.0009257852427
"If you have your data already split out into large files, e.g. by month, then it might be enough to have each process work on one month of data.",Solution Discussion,False,144,MEMBER,False,False,False,0.725,0.1895424837,0.7974276527,0.6842105263,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"3. I have not tried this, I will run the test again and see.",Investigation and Exploration,False,60,NONE,True,False,False,1.0,0.1866666667,1.0,0.1299435028,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
Just wondering if something like the recently fixed #13167 is coming into play here.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,1.0,0.152173913,1.0,0.4465408805,0.4976639776,0.5023360224,0.0006447716188,0.0002080991169
3.         Meta- and descriptive statistic integration into dataset object and supportive methods like CODE,Expected Behaviour,True,107,NONE,False,False,False,1.0,0.223880597,0.8474341193,0.8571428571,0.7617931948,0.2382068052,0.1736946043,0.06663052939
"On Linux X64 PPCLE
load r12 with helper's address
bl helper

On AIX32/64 and Linux64 BE, the solution is to load r2 with the jitTOC then branching to the helper's address.",Solution Discussion,False,175,CONTRIBUTOR,True,False,False,0.265625,0.265625,0.3684210526,0.9111111111,0.3076445993,0.6923554007,0.1283873506,1.0
See internal Problem Report 142384 for those of you who can access it.,Social Conversation,False,70,CONTRIBUTOR,False,False,False,0.3023255814,0.1940298507,0.8,0.4393063584,0.00530660923,0.9946933908,5.04e-06,3.62e-05
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/68/,Task Progress,False,75,CONTRIBUTOR,False,False,False,0.09090909091,0.005747126437,1.0,0.3676470588,0.7636365775,0.2363634225,0.00180747065,0.0005973713534
Sorry I don't understand question.,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.1351351351,0.02873563218,0.3333333333,0.2205882353,0.7475845162,0.2524154838,0.0006037502447,2.74e-05
Just wanted to put it out there that there is an assumption that compilation threads would not be running during STW.,Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,0.875,0.2307692308,0.2,0.6363636364,0.8573774451,0.1426225549,0.001731608401,0.0007841536263
It seems like it started out with a valid method handle then overtime it got changed to some bogus value though.,Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.3559322034,0.1111111111,0.7777777778,0.4971428571,0.4461627725,0.5538372275,0.06246846736,0.001023944321
A quick summary:,Solution Discussion,False,16,MEMBER,False,False,False,0.01960784314,0.01960784314,0.09324758842,0.2857142857,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
I've found my problem= = **It's due to the cold start of moving_mean/moving_variance.**,Usage,False,87,CONTRIBUTOR,False,False,False,0.358974359,0.05384615385,0.5845824411,0.1818181818,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
People have commented that they want CODE to be a placer holder but thats what I had for my version of it: CODE,Usage,True,111,NONE,False,False,False,1.0,0.09230769231,0.1670235546,0.6666666667,0.2177649084,0.7822350916,0.0001955084991,2.921974455e-05
That last failure is not confusing after a little investigation.,Potential New Issues and Requests,False,64,MEMBER,False,False,False,0.625,0.1470588235,0.1341463415,0.5,0.2748118407,0.7251881593,0.001495897677,0.0001153346778
This is the only way I can explain every thread having the HALT_EXCLUSIVE bit set.,Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,0.9375,0.2,1.0,0.7514124294,0.08540925558,0.9145907444,0.0002577612278,2.19e-06
"Livelock is not observed with hotspot, but performance is not stable in the sense that, after 5-10 minutes the performance drops from ~3400 to about 800 and stays there for a long time, after which it may go up to 1700 and then go down again.",Investigation and Exploration,False,242,CONTRIBUTOR,False,False,False,0.7966101695,0.5875,0.625,0.7843137255,0.9391761414,0.06082385865,0.06820979376,0.04955018304
I took your merge_text.py from the sense2vec implementation and trimmed it down.,Solution Discussion,False,80,CONTRIBUTOR,False,False,False,0.6315789474,0.07843137255,0.6366559486,0.2857142857,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
Perhaps we would want to hash the features and labels when fit() is called so we can check that the same features and labels are provided to this function.,Solution Discussion,False,155,CONTRIBUTOR,True,True,False,0.90625,0.4084507042,0.02173913043,0.8571428571,0.0,1.0,0.0,0.02323685476
"Another timeout, on win2012r2-x86-6
https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/147",Solution Discussion,False,131,CONTRIBUTOR,True,False,False,1.0,0.1194029851,1.0,0.1676300578,0.004066530224,0.9959334698,0.0007383085446,0.0006332221901
I suspect trying to build plinux with xlc will be considerable work since OpenJDK doesn't support it.,Solution Discussion,False,101,CONTRIBUTOR,False,False,False,1.0,0.09770114943,1.0,0.3161764706,0.7589445999,0.2410554001,4.13e-05,3.37e-05
Redoing this for consistency in naming is not worth it imho.,Motivation,False,60,MEMBER,False,False,False,1.0,0.171875,0.5551470588,0.3333333333,0.122443456,0.877556544,8.136186748e-06,1.464513615e-05
@hzongaro Are you aware of a CODE or other option to have the XSLT transformer dump the generated classes to disk?,Solution Discussion,True,114,MEMBER,False,False,False,1.0,0.1578947368,1.0,0.06106870229,0.0003519356568,0.9996480643,0.0008114056243,0.0007002205715
"(only ""static const"" for C/C++ and ""static final"" for Java are detected)",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.52,0.1101694915,1.0,0.5333333333,0.4197906997,0.5802093003,0.0003516613975,0.0001150597199
"I don't know if the fact that exception directed optimization (EDO) in used in the method in question could be a sign that something is not quite working right, since it would suggest a fair number of exceptions are happening in code that was either present in or inlined into that compiled method.",Investigation and Exploration,False,298,CONTRIBUTOR,False,False,False,1.0,0.6625,0.25,0.431372549,0.4977950347,0.5022049653,0.5109021712,0.08681141034
"Typically, the save is done in the glink code (AIX or BE Linux64) or plt_link code (LE).",Expected Behaviour,False,88,CONTRIBUTOR,False,False,False,1.0,0.1328125,1.0,0.4333333333,0.03721019966,0.9627898003,0.0001129474738,4.44e-05
We're decided to start from a clean slate and redesign the input pipeline API.,Task Progress,False,78,CONTRIBUTOR,True,True,False,0.2978723404,0.2089552239,0.02080443828,0.5,0.0,1.0,0.0,0.000766008561
I think the main difference is the _semantics_: the main idea behindCODE is to converge more quickly - but no matter what valueCODE has you get the same solution!,Solution Discussion,True,162,MEMBER,False,False,False,1.0,0.3943661972,0.3007246377,0.2,0.03951545499,0.960484545,4.948110811e-06,1.193161472e-05
The next step will be to determine which compiled methods are called after entry to  CODE and exclude them individually to determine which one may be trigerring the issue.,Investigation and Exploration,True,171,CONTRIBUTOR,False,False,False,1.0,0.3260869565,0.75,0.6289308176,0.5582838217,0.4417161783,0.0001275446201,0.0004086462498
"I think the main question I want to see answered before I put a lot of time in it, is if you are OK with splitting up CategoricalEncoder into multiple classes, and in that case, if you are OK with re-using OneHotEncoder (which means deprecating some of its current (strange) features).",Solution Discussion,False,285,CONTRIBUTOR,True,False,False,1.0,0.8125,0.9595588235,0.7142857143,0.8867760579,0.1132239421,0.6154659147,0.1194514257
http://spacy.io/tutorials/add-a-language/,Solution Discussion,False,41,NONE,False,False,False,0.125,0.01666666667,0.8275862069,0.3333333333,0.5277436984,0.4722563016,0.1838195117,0.03798484879
Sorry!,Social Conversation,False,6,NONE,False,False,False,0.04761904762,0.01666666667,0.6982758621,1.0,0.3958022492,0.6041977508,0.01190727487,0.2563539137
I hope this isn't the wrong place to ask but what does the current implementation do with tables that are mixed categorical and non-categorical within one column?,Expected Behaviour,False,162,NONE,False,False,False,1.0,0.4375,0.7683823529,0.125,0.2567040608,0.7432959392,0.02304981706,0.003308173532
The core in question https://github.com/eclipse-openj9/openj9/issues/13162#issuecomment-947040043 was ~7 days ago.,Investigation and Exploration,False,114,MEMBER,True,False,False,1.0,0.09782608696,0.6,0.465408805,0.4977312427,0.5022687573,0.0002080991169,0.000454293798
"@fjeremic is 3/6 sufficiently reproducible for you to make progress on this?

Depends on how reproducibility starts changing once we start limiting/adding tracing options.",Investigation and Exploration,False,173,CONTRIBUTOR,False,False,False,0.962962963,0.1954887218,0.25,0.7328244275,0.780149551,0.219850449,0.0003413217614,0.02856760951
ulimit -m unlimited (for RSS unlimited),Solution Discussion,False,39,CONTRIBUTOR,True,False,False,1.0,0.09677419355,0.5,0.2405063291,0.04791884889,0.9520811511,0.00225193033,0.001569350411
@ebrevdo So what would be the suggested changes to the Shakepeare RNN to allow it to work with the intermediate stable release?,Solution Discussion,False,127,NONE,False,False,False,1.0,0.03183791606,0.09900990099,0.25,0.005573211817,0.9944267882,0.01544625718,0.04704112764
"This one occurred on osx, #9291 on aix ~10 days ago.",Investigation and Exploration,False,52,MEMBER,False,False,False,1.0,0.1774193548,1.0,0.03278688525,0.0008061774606,0.9991938225,0.0009414561275,0.0002387130853
But --- progress :),Social Conversation,False,19,MEMBER,False,False,False,0.1739130435,0.06666666667,0.4655172414,1.0,0.3864300618,0.6135699382,0.4682936827,0.03367017273
"You could query the hook status (See #3389), or we could add a field in the JITConfig and set it where we disable throwToGoto.",Solution Discussion,False,126,CONTRIBUTOR,False,False,False,0.8275862069,0.375,0.5,0.219858156,0.1192437677,0.8807562323,0.004712512683,0.1929437336
"So in the case of invokeSpecial, you should use CODE

CODE will be triggered by things like CODE",Investigation and Exploration,True,98,CONTRIBUTOR,False,False,False,1.0,0.2065217391,1.0,0.320754717,0.3660920551,0.6339079449,0.0001236847171,0.0002473694342
And rember uninstall tensorflow-gpu-1.5.,Solution Discussion,False,40,NONE,False,False,False,0.3333333333,0.03937007874,0.1055718475,0.75,0.1949838428,0.8050161572,0.7235035514,0.209218471
"@shanchao95  thanks a lot for the data.  summary:
1) multiheap,considersize is 50% to 70% of performance of multiheap which is 10x to 100x performance of no-setting, for multi-threaded cases;
2) multiheap,considersize memory consumption/RSS is in the same ballpark as no-setting.",Social Conversation,False,281,CONTRIBUTOR,False,False,False,1.0,0.8064516129,0.1666666667,0.9071729958,0.9167594621,0.08324053794,0.01000533813,0.01893430022
I was receiving the error when executing the seq2seq tutorial,Bug Reproduction,False,61,NONE,False,False,False,0.8333333333,0.01447178003,0.5313531353,1.0,0.1269177248,0.8730822752,0.002197250879,0.03407322991
Summary:-         New CODE keyword argument to CODE,Workarounds,True,51,MEMBER,False,False,False,0.2424242424,0.1290322581,0.6519823789,0.3125,0.288728579,0.711271421,0.1151253204,0.02221386295
"edit: here's the logs in tar.xz.gz (use gunzip, followed by tar xvf to unpack it): 
[FullTrace.tar.xz.gz] URL ",Investigation and Exploration,False,111,NONE,True,False,False,1.0,0.2835820896,0.8333333333,0.4245810056,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
"I can try to repeatedly call rat directly, but unsure I'll be able to repro.",Bug Reproduction,False,76,NONE,True,False,False,0.4838709677,0.1127819549,0.7142857143,0.1908396947,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
"I've set MAVEN_OPTS with the above, so if/when I get a failure hopefully I'll find a core (also added a ulimit -c unlimited in my build invocation).",Investigation and Exploration,False,148,NONE,True,False,False,1.0,0.2180451128,1.0,0.1119592875,0.004578145442,0.9954218546,0.01873100248,0.002785757849
@priidukull your verbose=20 output would be welcome.,Investigation and Exploration,False,52,MEMBER,False,False,False,1.0,0.1029411765,0.6991869919,0.5,0.5872153731,0.4127846269,0.01255525015,0.008422193983
"Ah, user error, it does work on Ubuntu 18 as well.",Solution Discussion,False,50,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.3370165746,0.1321450931,0.8678549069,3.79e-05,0.000275039294
"We could have many theories why this is happening, or perhaps do we have a proper expectation to keep these objects alive after the class unloading hook is serviced.",Investigation and Exploration,False,165,CONTRIBUTOR,False,False,False,0.6444444444,0.3186813187,0.5,0.5944055944,0.8553689744,0.1446310256,0.002579695967,0.005301125006
CODE,Bug Reproduction,True,4,MEMBER,False,False,False,0.02127659574,0.01408450704,0.7660818713,0.2857142857,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
"i.e. master will use the hints for the master command line, and similarly the slave.",Solution Discussion,False,84,CONTRIBUTOR,True,False,False,1.0,0.102739726,1.0,0.6424581006,0.253527781,0.746472219,8.28e-05,0.0003822470545
"I have found the ""convert to a string"" and then DictVectorizer method to be very useful for discovering which these are.",Potential New Issues and Requests,False,120,NONE,False,False,False,1.0,0.328125,0.9007352941,1.0,0.2639047948,0.7360952052,0.0004458630338,0.03415611878
"According to the failure in the description, the exception was thrown out in the code at rtverfiy.c as follows:
CODE
against the failing method in the core dump at triage/openj9-7684:
CODE
with the same bytecode as follows:
[GregorSamsa.template_bytecode.txt] URL 
CODE
Apparently the bytecode for invokespecial was calling an CODE method, in which case
the verifier was supposed to check whether this is an instance initialization method or not in the code below:
CODE
So it doesn't make any sense to set up CODEunless the constant pool of the ROM class or CODE got messed up or incorrectly laid down during the creation through the XSLT processing, in which case the value of J9UTF8_DATA(J9ROMNAMEANDSIGNATURE_NAME(
J9ROMMETHODREF_NAMEANDSIGNATURE((J9ROMMethodRef *) info)))[0] is not equal to CODE.",Investigation and Exploration,True,812,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.3358778626,0.4393500983,0.5606499017,0.1962918967,0.000219099957
"And as always happens... when I tried to reproduce it again today, using the same Windows 10 VM, with the same Eclipse installation, running the same project, with the same installed copy of OpenJ9-JRE... it seems to always launch just fine every single time.",Bug Reproduction,False,259,NONE,True,False,False,1.0,0.4545454545,0.6666666667,0.04210526316,0.09758727792,0.9024127221,0.01583808516,0.005467138405
"Please be more clear here, because people might try it without going into the required directory, and end up emptying their home folder.",Solution Discussion,False,136,NONE,False,False,False,1.0,0.1811023622,0.6304985337,1.0,0.4654191009,0.5345808991,0.003653815579,5.398270335e-05
If I now only work with CODE it can easily happen (depending of the buffer_size) that all elements that get shuffled are anyhow of the same class.,Solution Discussion,True,146,NONE,False,False,False,0.675,0.4029850746,0.6435506241,0.5,0.5054793089,0.4945206911,0.03050902669,0.04958391229
It's our most upvoted issue.,Motivation,False,28,MEMBER,False,False,False,0.1428571429,0.06849315068,0.5862068966,0.3333333333,0.6506314731,0.3493685269,0.01305197974,0.05278600034
I think at the moment this is quite confusing.,Social Conversation,False,46,MEMBER,False,False,False,0.225,0.05882352941,0.7620578778,0.1052631579,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
So it looks like we tried to do a warm compile but failed with CODE likely because the method is massive.,Task Progress,True,105,CONTRIBUTOR,False,False,False,0.7,0.1578947368,0.75,0.8371501272,0.8292482315,0.1707517685,0.03159699343,0.02587954735
"For example, CODE will start a background thread to populate a ordered buffer that *acts like* a CODE, so that downstream pipeline stages need not block.",Solution Discussion,True,153,CONTRIBUTOR,True,False,True,26.0,0.3880597015,0.9791955617,10.0,1.0,0.0,0.02385162338,0.0
Seems like you're running out of ram.,Investigation and Exploration,False,37,MEMBER,False,False,False,0.4666666667,0.07216494845,0.9881656805,0.5,0.9999981055,1.894545764e-06,1.350886112e-06,5.045956947e-06
I can only find some basic infos in the C++ API docs.,Motivation,False,53,NONE,False,False,False,0.4285714286,0.1791044776,0.2954230236,0.4285714286,0.2770987131,0.7229012869,0.2860540634,0.003376036402
"I ran CODE on the first core file, and attached that zip here as well.",Task Progress,True,70,NONE,True,False,False,1.0,0.2,0.75,0.5480225989,0.07094192738,0.9290580726,0.002460766356,0.02133685301
"In some versions of the code training accuracies are much higher than testing accuracies, which probably mean I am not sharing batch normalization parameters.",Usage,False,158,NONE,False,False,False,0.6857142857,0.09230769231,0.113490364,0.2173913043,0.2164964176,0.7835035824,0.06906725807,0.007698692487
@hzongaro @andrewcraik  Do we have any new information on this issue?,Task Progress,False,69,NONE,False,False,False,1.0,0.1791044776,1.0,0.6184971098,0.01709913339,0.9829008666,0.005263769541,9.59e-06
"There may be other optimizations such as this, e.g. string peepholes, that also may not be possible to do in the presence of involuntary OSR.",Solution Discussion,False,141,CONTRIBUTOR,False,False,False,0.5952380952,0.2688172043,0.5,0.7181467181,0.5607631223,0.4392368777,0.009049469938,0.004800769914
"- i think for the current implementation, during the walk JITServer does a bunch remote calls, Client does always acquire the vmaccess, but also always release the vmaccess after each reply.
CODE

We don't want to hold vmaccess while doing a blocking read() on the client.",Investigation and Exploration,True,275,CONTRIBUTOR,False,False,False,1.0,0.2486772487,0.6666666667,0.7657142857,0.4488904385,0.5511095615,0.0001804525966,0.0003004784063
The drawback of course is target address prediction.,Solution Discussion,False,52,CONTRIBUTOR,False,False,False,0.7272727273,0.0625,0.5,0.6555555556,0.0408289265,0.9591710735,0.0001623351525,0.0570348239
"10/10 passed on s390-linux for entire jdk_util_1 suite (Test_grinder/job/Grinder/18363),
 
 I think larger grinder is required.",Investigation and Exploration,False,129,CONTRIBUTOR,False,False,False,1.0,0.2065217391,0.3333333333,0.2389937107,0.3436212488,0.6563787512,1.59e-05,0.05801551647
I found a few hits like https://stackoverflow.com/questions/49758534/java-lang-verifyerror-class-gregorsamsa-method-illegal-target-of-jump - or more helpfully perhaps http://www.jguru.com/faq/view.jsp?EID=1340163 ie this is in the XLST processor which I assume is bundled with the jvm?,Investigation and Exploration,False,285,NONE,True,False,False,1.0,0.2030075188,1.0,0.03816793893,0.0001289318444,0.9998710682,1.64e-05,5.31e-06
"Some methodHandleDetails verbose log prior to the crash

CODE

- pointer that caused the crash
CODE

- the receiver handle should be 0xFE501B50  but it's 0xfc39a860 instead.",Investigation and Exploration,True,180,CONTRIBUTOR,False,False,False,1.0,0.1587301587,1.0,0.2571428571,0.3251821571,0.6748178429,0.002117006954,0.0005752961223
"As mentioned, removing -Xgc:concurrentScavenge will likely resolve the problem.",Solution Discussion,False,79,CONTRIBUTOR,False,False,False,1.0,0.1333333333,1.0,0.6384180791,0.08462038856,0.9153796114,1.66e-05,3e-05
As was hinted somewhere the error has something todo with DLL's resolutions.,Investigation and Exploration,False,76,NONE,True,False,False,0.3333333333,0.1212121212,0.2857142857,0.4947368421,0.1973084735,0.8026915265,0.001977734278,0.003898730278
#### 3. Don't maintain the C API [bindings] URL  [by] URL  [hand] URL ,Solution Discussion,False,70,NONE,False,False,True,14.0,0.1917808219,0.9935344828,10.0,1.0,0.0,0.5674118797,0.0
Ex: CODE,Usage,True,8,NONE,False,False,False,0.1,0.007692307692,0.9229122056,1.0,0.7489109604,0.2510890396,0.04599776246,0.3206669123
"@kdvolder , I just reviewed the steps you mentioned at https://github.com/spring-projects/sts4/issues/138#issuecomment-440088030 and there is one step I feel confused:

> Running STS with JDK 8 that was installed on my windows VM...

I have no idea what this means as there is no further explanation as to how to run that.",Investigation and Exploration,False,326,CONTRIBUTOR,False,False,False,1.0,0.5151515152,0.3333333333,0.4210526316,0.1408865936,0.8591134064,0.07075263326,0.1924076078
@mstoodle @pshipton @DanHeidinga,Contribution and Commitment,False,32,CONTRIBUTOR,False,False,False,0.1153846154,0.03225806452,1.0,0.8803088803,0.8399273015,0.1600726985,0.8852104953,0.004353145679
"RE: tensorflow + deeplearnjs, see esp:",Solution Discussion,False,38,NONE,False,False,False,0.8333333333,0.06849315068,0.838362069,0.3333333333,0.81202295,0.18797705,0.0001068963647,0.0006469111266
"We could try to make this test more robust, by just taking a large number of tokens N, hashing them with a hash table size = 1 (or any small number), and checking that with CODE the sum of hashed values is equal to CODE, and that it's strictly lower than CODE if  CODE (since some +1 / -1 are bound to cancel out if N is large enough).",Potential New Issues and Requests,True,335,MEMBER,False,False,False,1.0,1.0,0.325203252,0.6666666667,0.358845198,0.641154802,0.01032797867,0.001373656731
"@AlenBadel Kicked off https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/3055/

I'm not sure why selecting nightly on a grinder hasn't really been pulling the latest nightly.",Task Progress,False,183,CONTRIBUTOR,False,False,False,1.0,0.2307692308,0.5,0.986013986,0.9678651735,0.03213482652,0.04251684043,0.02407305416
"While doing PR testing for another commit I had CODE test fail with the following message:
CODE

This is the first time I am seeing this failure and I don't know if it's intermittent or not, or whether it is specific to JITServer or not.",Testing,True,240,CONTRIBUTOR,True,True,False,1.0,0.2486772487,0.6666666667,0.01142857143,0.0,1.0,0.0,7.04e-06
The pattern is also used in [CODE](https://github.com/tensorflow/tensorflow/blob/1efd7f171ba30421b5d8369a93526395a721c0d9/tensorflow/contrib/data/python/ops/dataset_ops.py#L595),Usage,True,177,NONE,False,False,False,1.0,0.223880597,0.8155339806,0.4,0.6302370014,0.3697629986,0.123123279,0.6886518758
"Btw, is there any reason that CODE is an init parameterand CODE is a function?",Solution Discussion,True,78,MEMBER,False,False,False,1.0,0.2112676056,0.4710144928,0.8,0.04249542779,0.9575045722,0.0028917672,1.056298833e-05
"@hzongaro identified the root cause of this issue, which was pre-escape analysis not adding 2 pending push symRefs to the eaEscapeHelper call because it incorrectly determined that they were dead at the bytecodes where they were live

In the code below:

https://github.com/eclipse-openj9/openj9/blob/376e221fec38171c65f7eb5b0190ac74b212c0a1/runtime/compiler/optimizer/EscapeAnalysisTools.cpp#L113-L114",Investigation and Exploration,False,406,MEMBER,False,False,False,0.9,0.4891304348,0.25,0.9685534591,0.6767585371,0.3232414629,0.05983688721,1.0
Some of Reddit's ideas about food are kind of...interesting.,Social Conversation,False,60,MEMBER,False,False,False,0.4347826087,0.2631578947,0.4744525547,0.7857142857,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
Hi SCREEN_NAME .,Social Conversation,False,16,NONE,False,False,False,0.1818181818,0.03333333333,0.9051724138,0.5,0.8007808704,0.1992191296,1.0,0.0001095095445
This is MH enabled internal build like https://github.com/eclipse-openj9/openj9/issues/13164 and a few others.,Investigation and Exploration,False,110,MEMBER,True,False,False,1.0,0.1304347826,1.0,0.04402515723,0.01512909923,0.9848709008,0.0001283837294,0.0002248813038
The NPE is intermittent.,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,0.1481481481,0.04347826087,0.6,0.5597484277,0.5070196757,0.4929803243,0.01749005949,7.94e-05
The output is pretty much the same as what I posted before...,Investigation and Exploration,False,61,NONE,True,False,False,0.3636363636,0.1212121212,0.8571428571,0.6070175439,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
Both return catcher’s method and location.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.5384615385,0.109375,0.3333333333,0.8014184397,0.9556814013,0.04431859867,0.01198084219,0.01558254832
"If CODE can cause us to violate that assumption (or make it ""look like"" we did), then similar issues as this could impact other parts of the JIT that make a similar assumption, perhaps in even more subtle ways if there are no asserts.",Solution Discussion,True,234,CONTRIBUTOR,False,False,False,1.0,0.7096774194,0.7,0.9289617486,0.9845135933,0.01548640667,0.001320457339,0.001947660621
"For instance I see no way to ""get an iterator"" in the middle of a dataset.",Usage,False,74,NONE,False,False,False,0.4444444444,0.2388059701,0.7004160888,0.4444444444,0.551539804,0.448460196,0.1827564093,0.002095453319
Let me know if that doesn't work for you.,Solution Discussion,False,41,MEMBER,False,False,False,0.9,0.1267605634,0.7865497076,1.0,0.4715875003,0.5284124997,0.003313600722,0.007772604375
Following are the results from grinder runs on Windows.,Investigation and Exploration,False,55,MEMBER,False,False,False,0.140625,0.1343283582,0.6666666667,0.7976878613,0.018058256,0.981941744,0.0008600782261,0.001167361543
"-         fit: extend CODE with CODE new instances of CODE fitted of bootstrap samples, then refit a model over the predictions of the estimators.",Solution Discussion,True,146,MEMBER,False,False,False,0.8,0.338028169,0.8442028986,0.5909090909,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"[EDIT: non-issue]
Another issue to think about is how to deal with heterogeneous multi JVM environment.",Potential New Issues and Requests,False,104,CONTRIBUTOR,False,False,False,0.2769230769,0.1232876712,0.1666666667,0.5698324022,0.253235282,0.746764718,0.002218893623,0.000737706338
"Which is used by CODE as it accepts a length value of long type, and at the same time is used with CODE which accepts a length of int type.",Solution Discussion,True,139,CONTRIBUTOR,False,False,False,1.0,0.6382978723,1.0,0.9576923077,0.7315269328,0.2684730672,0.001396795956,0.005094870496
I still cannot readily reproduce the issue.,Bug Reproduction,False,43,CONTRIBUTOR,False,False,False,0.2,0.06015037594,0.1538461538,0.6488549618,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"If n_iter is big enough, SGD with a good learning schedule will converge to the optimum (if you don't stop before convergence).",Solution Discussion,False,127,MEMBER,False,False,False,0.9166666667,0.3098591549,0.5869565217,0.6666666667,0.04325255159,0.9567474484,0.0006227250095,0.0001494961139
"Additionally, I had this idea where you could maybe implement a random test/train split functionality right into Dataset.",Expected Behaviour,False,121,NONE,False,False,False,0.6129032258,0.2835820896,0.5783633842,0.7,0.4630003862,0.5369996138,0.01269843694,0.02260310577
"The model trains fine, but the test performance is terrible.",Usage,False,60,NONE,False,False,False,0.3225806452,0.03846153846,0.391862955,0.8,0.3712524908,0.6287475092,0.06886363297,0.000473907732
"I modified the JIT not to force FSD for ExceptionCatch, and ran into the two issues that need to be addressed in the JIT:

1) Platform-dependent code tests FSD mode before generating stack maps at catch points (J9TreeEvalutator -> VMgenerateCatchBlockBBStartPrologue on X, unsure of other platforms)

2) Common code tests FSD mode and merges stack maps with different bytecode PCs (MetaData.cpp -> mapsAreIdentical)",Solution Discussion,False,419,CONTRIBUTOR,False,False,False,1.0,1.0,0.7272727273,0.1276595745,0.000716727624,0.9992832724,0.003714710253,0.00734286415
"Both builds are using layers on top of the SCC provided by java, but the last layer (the application layer) is bigger in the 0.24.0 which is interesting.

CODE",Investigation and Exploration,True,161,NONE,True,False,False,1.0,0.375,1.0,0.05392156863,0.01889658797,0.981103412,0.08811482837,0.1088941245
Here is the code I used to create the metrics.,Investigation and Exploration,False,46,NONE,False,False,False,0.4,0.1612903226,0.2422907489,0.6666666667,0.2016154368,0.7983845632,0.03459730626,0.03432994834
I suspect this is the same old multiprocessing in windows issue.,Investigation and Exploration,False,64,MEMBER,False,False,False,1.0,0.1134020619,0.8698224852,0.5,0.9551027785,0.04489722149,0.001193905199,0.04128957575
I welcome any thoughts or suggestions on the approach outlined above.,Social Conversation,False,69,NONE,False,False,False,0.2820512821,0.1506849315,0.7521551724,0.9090909091,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
"ie:
> 
> 1. Destroy SCC
> 2. Populate SCC; options CODE
> 3. Load from SCC; options CODE
> 
> Thanks!",Investigation and Exploration,True,107,NONE,True,False,False,1.0,0.1605839416,0.3333333333,0.2565055762,0.002299532103,0.9977004679,0.0001263044559,0.000373115786
"I'm sure we can do better than that, though, In standard use, the only things likely to change are within CODE.",Solution Discussion,True,111,MEMBER,False,False,False,0.137254902,0.137254902,0.1061093248,0.8571428571,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
"Nice - while 14.2 didn't have a regression, turning off the timestamps does give me a startup boost:

1.93, 1.947, 1.985

vs around 2.6s before.",Solution Discussion,False,148,CONTRIBUTOR,False,False,False,1.0,0.1897810219,0.5,0.7472118959,0.04439590305,0.9556040969,9.23e-05,1.04e-05
That means anyone can copy and paste it in a IPython session and easily try to reproduce.,Bug Reproduction,False,89,MEMBER,False,False,False,0.53125,0.175257732,0.4911242604,0.5,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
In the whole stack it doesn't look like we ever call CODE,Investigation and Exploration,True,57,CONTRIBUTOR,False,False,False,1.0,0.1318681319,0.3333333333,0.3356643357,0.621583916,0.378416084,0.02856229515,0.002161429347
@mrry  Thanks for the a preview of the new API; I think this is a good starting point!,Social Conversation,False,86,CONTRIBUTOR,False,False,False,0.4130434783,0.2835820896,0.6615811373,0.1111111111,0.5116443977,0.4883556023,0.04958391229,0.003143434467
"An occurrence at JDK17 CODE release CODE (CODE)
CODECODEmain' threw exception: java.lang.BootstrapMethodError: bootstrap method initialization exception

22:21:42  Test results: passed: 885; failed: 1
22:21:42  Report written to /home/jenkins/workspace/Test_openjdk17_j9_sanity.openjdk_x86-64_linux_Personal/jvmtest/openjdk/report/html/report.html
22:21:42  Results written to /home/jenkins/workspace/Test_openjdk17_j9_sanity.openjdk_x86-64_linux_Personal/aqa-tests/TKG/output_16346072337595/jdk_util_0/work
22:21:42  Error: Some tests failed or other problems occurred.
22:21:42  
22:21:42  jdk_util_0_FAILED
CODE`",Testing,True,624,MEMBER,True,False,False,1.0,0.8586956522,1.0,0.3773584906,0.463806883,0.536193117,0.01375082044,0.004763623737
And I've exported it from my VirtualBox into a '.ova' file.,Investigation and Exploration,False,59,NONE,True,False,False,0.5714285714,0.1212121212,0.4,0.7824561404,0.5885610122,0.4114389878,1.0,0.002646435418
Still i am getting the same error.,Solution Discussion,False,34,NONE,False,False,False,0.6363636364,0.01013024602,0.8151815182,0.75,0.2900238703,0.7099761297,4.604057575e-05,0.0009023003557
"@amueller no problem, for me the same :-)",Social Conversation,False,41,CONTRIBUTOR,True,False,False,0.1538461538,0.125,0.9448529412,0.1428571429,0.8867760579,0.1132239421,0.6154659147,0.1194514257
To the fact that I think a CODE is not needed?,Solution Discussion,True,46,CONTRIBUTOR,True,False,False,1.0,0.171875,0.3014705882,1.0,0.008714541549,0.9912854585,5.98009726e-05,0.01273882759
"Yes, that's where I was heading.",Solution Discussion,False,32,CONTRIBUTOR,False,False,False,0.1578947368,0.04379562044,0.5,0.9405204461,0.07060357069,0.9293964293,0.0004054165976,0.0007946827895
"https://ci.eclipse.org/openj9/job/Build_JDK11_ppc64_aix_OMR/805

Diagnostics https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK11_ppc64_aix_OMR/805/Build_JDK11_ppc64_aix_OMR-805-20201211-075646-diagnostics.tar.gz
CODE",Testing,True,254,CONTRIBUTOR,False,False,False,1.0,0.09677419355,1.0,0.5573770492,0.690276298,0.309723702,0.01636607982,0.04797128298
"Here is what I found so far:

- The failure rate varies.",Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.2666666667,0.2068965517,0.5,0.5688073394,0.7640233261,0.2359766739,0.06662049161,0.7024860106
"Using xlc 13 is fragile, as OpenJDK changes could break this at any time.",Solution Discussion,False,73,CONTRIBUTOR,False,False,False,0.5833333333,0.08045977011,0.5555555556,0.9117647059,0.7942021981,0.2057978019,0.006755954606,0.002545177611
"Vijay pointed out that we skipped creating HCR guards in CODE  inlined methods, and to check if that could somehow be responsible for setting up the OSR transitions improperly, I ran some tests with the logic skipping HCR guard creation for CODE methods disabled, and the failure was no longer reproducible.",Solution Discussion,True,307,MEMBER,False,False,False,0.9285714286,0.5652173913,0.5,0.8490566038,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
I think TF does not really require another attempt to unify the data pre-processing to put it directly *into* the graph.,Solution Discussion,False,120,NONE,False,False,False,0.7096774194,0.328358209,0.3536754508,0.09090909091,0.2978770854,0.7021229146,0.001143668596,0.01002173327
For larger values you suspect this isnât the case.,Potential New Issues and Requests,False,50,NONE,False,False,False,0.3103448276,0.140625,0.8529411765,0.875,0.262961705,0.737038295,0.002558830732,0.003516053103
"Simple solutions are:
- to create separate caches for master and slave (which may make sense for some other reasons, too)
- to disable the hints updating on JVMs that would not benefit very much from them (this would be the same public option mentioned a few comments before), so that only one of them (more likely slave in this scenario) is updating/consuming them.",Solution Discussion,False,368,CONTRIBUTOR,False,False,False,1.0,0.4452054795,1.0,0.5977653631,0.253235282,0.746764718,0.002218893623,0.000737706338
"especially, it doesn't make sense for 64bit.",Social Conversation,False,44,CONTRIBUTOR,False,False,False,0.875,0.1129032258,0.6666666667,0.04219409283,0.001432063395,0.9985679366,0.004372595291,0.003310804307
Perhaps offer a way for self-contained serialization that doesn't depend on any vocab altogether?,Solution Discussion,False,97,CONTRIBUTOR,False,False,False,0.6,0.2419354839,0.731277533,0.75,0.2945657166,0.7054342834,0.000146521357,8.318051723e-06
"I don't see any messages like this, but of course I am running a maven build composed of 200+ modules, and within that the rat plugin is being invoked >200 times.",Investigation and Exploration,False,162,NONE,True,False,False,1.0,0.2330827068,0.1428571429,0.1806615776,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
It should also be included in the errors list.,Solution Discussion,False,46,NONE,False,False,False,0.2432432432,0.07086614173,0.4809384164,0.5,0.4048451,0.5951549,0.1167490581,0.001195753854
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2392241379,1.0,0.143521176,0.856478824,0.06698506881,0.07537765069
"Interestingly, I wasn't able to reproduce it on x86 jdk8/11.",Bug Reproduction,False,60,CONTRIBUTOR,False,False,False,0.2222222222,0.1075268817,0.75,0.9498069498,0.9188394381,0.08116056195,0.2809961131,0.003058765602
Until we have more data on what the actual problem might be I think that is the safest way to work around this problem.,Workarounds,False,119,CONTRIBUTOR,False,False,False,0.5714285714,0.3870967742,0.6666666667,0.5409836066,0.6839930416,0.3160069584,0.1091893746,0.01660963043
I guessed this issue existed on AIX and BE Linux64 as well (TOC requirement).,Observed Bug Behaviour,False,77,CONTRIBUTOR,False,False,False,0.7,0.109375,0.3333333333,0.4777777778,0.03780096692,0.9621990331,2.53e-05,3.78e-05
"Later with jar file open info from class loader, this issue should be fully solved.",Solution Discussion,False,83,CONTRIBUTOR,False,False,False,0.4545454545,0.1094890511,1.0,0.9888475836,0.1882122667,0.8117877333,0.002992794434,1.0
Thanks for the hard work.,Social Conversation,False,25,NONE,False,False,False,0.1315789474,0.07462686567,0.625520111,0.8571428571,0.5016859242,0.4983140758,0.003761840049,0.03050902669
Notice that n_jobs=-1 and runs fine.,Investigation and Exploration,False,36,NONE,False,False,False,0.3529411765,0.0618556701,0.775147929,0.5714285714,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
@pwagland could we get verbose GC logs (matching the core files provided)?,Investigation and Exploration,False,74,CONTRIBUTOR,False,False,False,0.6666666667,0.16,1.0,0.7401129944,0.08524884036,0.9147511596,3.85e-05,0.0002577612278
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1810344828,1.0,0.06402810356,0.9359718964,0.02896227532,0.01406981904
Try running CODE and see what that shows.,Investigation and Exploration,True,41,CONTRIBUTOR,False,False,False,0.32,0.06015037594,0.5,0.203562341,0.01893899458,0.9810610054,0.01296082525,0.01135477352
As I recall 2010 and 2013 can't compile BytecodeInterpreter with optimization enabled.,Investigation and Exploration,False,86,CONTRIBUTOR,True,False,False,1.0,0.1016949153,0.6,0.06666666667,0.3881489186,0.6118510814,0.0001845122672,7.34e-05
That's unfortunate - I guess I'll have to wait for the test case.,Social Conversation,False,65,CONTRIBUTOR,False,False,False,1.0,0.1153846154,1.0,0.2762430939,0.09878133206,0.9012186679,0.001759615203,0.0008767019524
"Anyone who came across with this error and managed  to solve this, please help me correct this issue.",Potential New Issues and Requests,False,101,NONE,False,False,False,1.0,0.02749638205,0.9471947195,1.0,0.4075141407,0.5924858593,0.001838775159,0.06521718752
+1,Social Conversation,False,2,CONTRIBUTOR,False,False,False,0.0625,0.01369863014,0.1745689655,0.5,0.06167456626,0.9383254337,0.003035591178,0.0133861692
Discussion of Bill Cosby makes some obvious (and some less obvious) comparisons: CODE,Potential New Issues and Requests,True,85,MEMBER,False,False,False,0.5652173913,0.3421052632,0.4379562044,0.4285714286,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"Also note that, if you need CODE in the short term, I think you can write CODE.",Workarounds,True,79,CONTRIBUTOR,True,False,False,0.3617021277,0.2537313433,0.5242718447,0.1785714286,0.4592244679,0.5407755321,0.003916059713,0.008479027653
I am still waiting for an official tutorial release.,Social Conversation,False,52,NONE,False,False,False,0.5294117647,0.01302460203,0.7722772277,0.5,0.2742562411,0.7257437589,0.006610382458,0.005351860947
"In windows, custom scorer still freezes.",Observed Bug Behaviour,False,40,NONE,False,False,False,0.4285714286,0.0618556701,0.1627218935,0.2857142857,0.2546091762,0.7453908238,0.1079292843,0.008572782863
CODE,Solution Discussion,True,4,NONE,False,False,False,0.025,0.01492537313,0.6504854369,0.7083333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
That is one of my biggest issues with the current API.,Motivation,False,54,CONTRIBUTOR,False,False,False,0.4230769231,0.1641791045,0.4410540915,0.4,0.4019651913,0.5980348087,0.005091284808,0.001827732055
"@rasbt hmm, that's good to know that TF works fine on Sierra.",Investigation and Exploration,False,61,NONE,False,False,False,0.5714285714,0.1690140845,0.6520467836,0.3333333333,0.4587221489,0.5412778511,4.884949071e-05,0.0004141827923
"I guess, we have to try harder to reproduce it...",Social Conversation,False,49,CONTRIBUTOR,False,False,False,0.2631578947,0.1333333333,1.0,0.8983050847,0.3326217688,0.6673782312,0.0006376198792,1.25e-05
it would be great if we could do this without re-generate the training data.,Motivation,False,76,CONTRIBUTOR,False,False,False,0.6818181818,0.223880597,0.4826629681,0.4285714286,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"Ideally, the newly designed API should be able to load existing datasets of Caffe & MXNet with easy to implement [plugins] URL .",Expected Behaviour,False,128,NONE,False,False,False,0.7777777778,0.3134328358,0.2829403606,1.0,0.1079818594,0.8920181406,0.2293928428,1.0
You don't necessarily have to subclass dict.,Solution Discussion,False,44,MEMBER,False,False,False,0.2121212121,0.1842105263,0.3357664234,0.3846153846,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"@ChengJin01 given your previous binary search (https://github.com/eclipse/openj9/issues/7684#issuecomment-577824697), the exception was seen every time on the 1st try when 6251 method was in the limit range.",Investigation and Exploration,False,207,CONTRIBUTOR,False,False,False,0.7575757576,0.1879699248,0.2941176471,0.5267175573,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
"I suggest using gcore, and then wait one minute and then use gcore again to create a second core, so we can compare the thread states between them.",Investigation and Exploration,False,147,CONTRIBUTOR,False,False,False,1.0,0.3733333333,1.0,0.4689265537,0.03478858623,0.9652114138,1.99e-05,0.001645470656
What were you comparing it against?,Investigation and Exploration,False,35,MEMBER,False,False,False,0.5,0.08823529412,0.5569105691,0.6666666667,0.5697253798,0.4302746202,0.0007054752894,0.001821873532
"It is invoked in openj9 like this:

https://github.com/eclipse/openj9/blob/9369e4e005a130411ae2606a25d08588a0920c7a/runtime/compiler/p/codegen/J9TreeEvaluator.cpp#L12049-L12052

Note that the length information is conveyed via creating an CODE node that normally takes Int length.",Solution Discussion,True,284,CONTRIBUTOR,False,False,False,0.9642857143,0.5744680851,0.6666666667,0.85,0.7208851506,0.2791148494,0.1217072968,0.03144222045
"hi,please see my wrapper above.you should use ""with tf.variable_scope(scope, reuse=reuse):"" I think.",Usage,False,100,NONE,False,False,False,1.0,0.05384615385,0.6488222698,1.0,0.5692689797,0.4307310203,0.002504984351,0.007710664466
I suspect it is the changes to the method handle inlining - JDK11 has that and JDK8 doesn't have that.,Investigation and Exploration,False,102,CONTRIBUTOR,False,False,False,0.7307692308,0.2835820896,0.1666666667,0.2716763006,0.005049779156,0.9949502208,1.72e-05,1.44e-05
Without CODE I let it get up to 1124 dumps before I decided it was probably going to continue working.,Solution Discussion,True,102,NONE,True,False,False,1.0,0.2666666667,1.0,0.802259887,0.08544452514,0.9145554749,2.47e-05,1.77e-05
Thanks for the deep dive (again!) SCREEN_NAME ,Social Conversation,False,46,MEMBER,False,False,False,1.0,0.0985915493,0.7894736842,1.0,0.4729217769,0.5270782231,0.007772604375,0.006263805516
[3] make sure the CODE directory (created by maven) is deleted before running every time.,Investigation and Exploration,True,89,CONTRIBUTOR,False,False,False,0.4054054054,0.1127819549,0.75,0.5063613232,0.5597074071,0.4402925929,0.000211333354,0.0002117421226
It seems page is not available (404 Error).,Solution Discussion,False,43,NONE,False,False,False,1.0,0.1333333333,0.8448275862,1.0,0.5277436984,0.4722563016,0.1838195117,0.03798484879
I don't think we should be excluding.,Solution Discussion,False,37,CONTRIBUTOR,False,False,False,0.4666666667,0.0752688172,0.4,0.9613899614,0.9195635971,0.08043640294,0.003058765602,0.2682425527
"Let me know if would be more useful to do this with the debug image, and I will try to reproduce with that, and see what happens.",Social Conversation,False,129,NONE,True,False,False,1.0,0.36,1.0,0.2994350282,0.00489293646,0.9951070635,0.002021828306,0.009446358204
"2.         An easy and established way to change the input pipeline of a graph, after it has been created, because it is the most typical usage pattern.",Motivation,False,152,NONE,False,False,False,0.6511627907,0.4179104478,0.3453536755,0.375,0.2977348857,0.7022651143,0.1209962692,0.001143668596
One for the encoderand another for the decoder.,Solution Discussion,False,47,NONE,False,False,False,0.7272727273,0.01157742402,0.8250825083,1.0,0.290243382,0.709756618,0.0009023003557,0.008897341264
Will investigate later after addressing the issue at #8140.,Contribution and Commitment,False,59,CONTRIBUTOR,False,False,False,1.0,0.06766917293,1.0,0.3231552163,0.4052479805,0.5947520195,0.001000256707,5.07e-05
"You can always insert queues or StagingArea in the input pipeline, regardless of whether the actual data loading is done by dataset API, the old input operators, or Python.",Workarounds,False,172,CONTRIBUTOR,False,False,False,1.0,0.4328358209,0.7919556172,0.5,0.6090336754,0.3909663246,0.000261613555,0.0001603273732
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_OMR/822
CODE",Testing,True,70,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6830601093,0.8557137686,0.1442862314,0.02798952788,0.001880679553
"The only thing I wanted to add is, that if you can't store all your trainings data in memory, also loading memory from disk into memory adds up time to one training cycle.",Solution Discussion,False,171,NONE,False,False,False,0.9166666667,0.4925373134,0.3217753121,0.6,0.2825713456,0.7174286544,0.000434665323,0.0005756516163
TO ADD A FEEDBACK: its still freezing.,Observed Bug Behaviour,False,38,NONE,False,False,False,0.3684210526,0.07216494845,0.2633136095,0.7142857143,0.6343054009,0.3656945991,1.0,0.005493875023
We'll need inliner and method handle expertise to continue to drive progress on this defect.,Task Progress,False,92,CONTRIBUTOR,False,False,False,0.46875,0.1127819549,0.5714285714,0.9007633588,0.859885377,0.140114623,0.0001189516558,0.06424166071
"Trying all jdk11 extended.system with multiheap:16
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/181/ - passed",Testing,False,137,CONTRIBUTOR,True,False,False,1.0,0.1451612903,1.0,0.4683544304,0.3037698296,0.6962301704,0.007592972344,0.5551474985
As suggested here when I move English() inside the function it works but when it's outside it doesn't.,Solution Discussion,False,102,CONTRIBUTOR,False,False,False,1.0,0.1176470588,0.7202572347,0.5714285714,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
"CODE
Though note that reference to core only happened when I 'broke' the jvm in another way (I experimented with class cache & had run out of disk space).",Investigation and Exploration,True,155,NONE,True,False,False,1.0,0.2180451128,0.5,0.2162849873,0.03611802688,0.9638819731,0.05548420273,0.2798752602
"@harryyu1994 If you have some time, please continue the investigation above or look into this one which I see fairly often:
CODE",Contribution and Commitment,True,129,CONTRIBUTOR,True,False,False,1.0,0.1216931217,1.0,0.1142857143,0.1411027449,0.8588972551,0.01391637181,0.2308646783
Python 2.7.6 on OS X El Capitan on 0.17.,Bug Reproduction,False,40,NONE,False,False,False,0.6428571429,0.1267605634,0.07602339181,0.6666666667,0.09826375851,0.9017362415,0.008713891162,0.07295885932
Trying to run in parallel processing.,Observed Bug Behaviour,False,37,NONE,False,False,False,0.3157894737,0.0618556701,0.2573964497,0.4285714286,0.6343054009,0.3656945991,1.0,0.005493875023
The CODE class described in the original post already exists in Python: it is a list of tuples.,Motivation,True,95,NONE,False,False,False,0.6,0.2686567164,0.1484049931,0.3428571429,0.04064994448,0.9593500555,0.2125437083,0.01543061897
Yes let's retry CODE 100 more times just to be certain.,Investigation and Exploration,True,55,CONTRIBUTOR,False,False,False,0.55,0.08270676692,0.5714285714,0.5801526718,0.5844415189,0.4155584811,9.4e-05,0.001518166493
"Looking at AIX header file more closely, F_NOEXEC (is deprecated) is reused for SED system/request/exempt flags.",Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,1.0,0.1034482759,0.5,0.8125,0.773339025,0.226660975,3.15e-05,1.41e-05
How to set the param of BatchNormLayer and ScaleLayer in Caffe?,Usage,False,63,NONE,False,False,False,0.5789473684,0.04230769231,0.8329764454,0.75,0.7056210173,0.2943789827,0.001322497813,0.09017334918
But this won't be the final solution until we figure out everything underlying that.,Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.56,0.1414141414,1.0,0.9087719298,0.9027706622,0.09722933782,0.002496484253,0.002703173696
"Diagnostic files
----------------

https://drive.google.com/file/d/1emXVh3avEdckSXXMOMOoI6Gwhff4YGQC/view?usp=sharing

The tarball contains two core files because two were generated (maybe by different threads).",Investigation and Exploration,False,216,NONE,True,True,False,0.4117647059,0.2019230769,0.8333333333,0.05524861878,0.0,1.0,0.0,0.01118041169
"Our 'master' code is changing - a few updates constantly through the day, but it may also point to odd corruption perhaps?",Investigation and Exploration,False,122,NONE,True,False,False,1.0,0.1578947368,1.0,0.07633587786,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
"https://ci.eclipse.org/openj9/job/Build_JDK15_x86-64_mac_Nightly/142
CODE",Testing,True,74,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.5956284153,0.7072922793,0.2927077207,0.03246777048,0.1866343743
"The original problem was only seen in JDK17, Ill take a look at these ones to determine the cause",Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,1.0,0.2043010753,1.0,0.8996138996,0.8477879592,0.1522120408,0.007266433405,0.00290209712
"So pre-cook a ""database"" with vector lookups and each spaCy instance just calls class functions like find() and nearest() which can either be implemented as a ""hashmap"" (like it's currently) or a shared memory source.",Expected Behaviour,False,217,NONE,True,False,False,0.972972973,0.9473684211,0.07299270073,0.6,0.002926751675,0.9970732483,0.0005265343115,0.0006606771075
so no - an ASGCT cannot be interrupted by agent code that calls ASGCT.,Investigation and Exploration,False,70,NONE,True,False,False,0.6666666667,0.1346153846,1.0,0.1767955801,0.01616030641,0.9838396936,0.0002824625523,0.01268066734
The C code follows the C calling convention of the platform - there are no exceptions.,Solution Discussion,False,86,CONTRIBUTOR,False,False,False,0.75,0.1171875,0.3333333333,0.08888888889,0.02652741742,0.9734725826,0.0003156516855,0.00130769984
This is an AdoptOpenJDK build,Investigation and Exploration,False,29,NONE,True,False,False,1.0,0.03759398496,1.0,0.04071246819,0.0001298548146,0.9998701452,5.31e-06,0.0001565583648
"We see that the first error is a small numerical imprecision at line 5, but that this quite quickly blows out.",Investigation and Exploration,False,110,MEMBER,False,False,False,0.5833333333,0.3088235294,0.825203252,0.3076923077,0.6243074007,0.3756925993,0.05176800464,0.02547446062
"Continuing my investigation by attempting to increase the reproducibility, so that I can reliably get this test to fail locally.",Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,0.6666666667,0.4255319149,1.0,0.1346153846,0.06121166501,0.938788335,0.05286071254,0.04938589637
"It was always succeeding:

CODE

I also tried using the exact same build as @ChengJin01:
CODE

I could not reproduce with this build either.",Bug Reproduction,True,147,CONTRIBUTOR,False,False,False,0.8484848485,0.2105263158,0.375,0.4860050891,0.5596707013,0.4403292987,0.1072383922,0.000211333354
"I'll go ahead and close it since the fix has been merged, we can open a new issue if another problem is found.",Action on Issue,False,110,CONTRIBUTOR,False,False,True,1.0,0.4893617021,1.0,1.0,1.0,0.0,0.01528747377,0.0
EDIT: Same is true for iris.,Investigation and Exploration,False,28,CONTRIBUTOR,False,False,False,0.3,0.08450704225,0.4035087719,0.6666666667,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
We would like to try it on some tests to see the behaviour.,Testing,False,59,CONTRIBUTOR,False,False,False,1.0,0.08904109589,1.0,0.4581005587,0.237977851,0.762022149,0.0004722347161,0.0001666616406
"It's awkward to ask for batch_size as a parameter during fitting and during dataset/queue creation, and ideally the compute graph doesn't have batch_size baked in.",Motivation,False,163,NONE,False,False,False,0.4262295082,0.3880597015,0.08460471567,0.7857142857,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
An easy way to determine this is to check TR_DisableThrowToGoto instead of TR_FullSpeedDebug.,Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.52,0.203125,1.0,0.2056737589,0.118326912,0.881673088,0.5770832432,0.0003654601672
"The CompareAndSwapObject.zip files you sent in showed several methods from sun/misc/Unsafe getting compiled that all should have matched the trace filter, and yet no output was present in the trace file.",Investigation and Exploration,False,203,CONTRIBUTOR,False,False,False,1.0,0.4925373134,0.5,0.5195530726,0.005276343682,0.9947236563,0.000261155566,1.47e-05
I don't think simply removing the assert is valid.,Solution Discussion,False,50,CONTRIBUTOR,False,False,False,0.2045454545,0.1451612903,0.2,0.9016393443,0.9845135933,0.01548640667,0.001320457339,0.001947660621
Just need to make sure that the statistics have converged with default decay=0.999 that implies at least 50k updates.,Usage,False,117,MEMBER,False,False,False,0.5588235294,0.07307692308,0.47751606,1.0,0.3864512138,0.6135487862,0.0006233545505,0.001443840919
I'll need to think more on the fact that multiple ASGCT are running.,Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.5,0.125,0.75,0.1546961326,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
"It is by far the most flexible, makes debugging way easier and makes for much simpler code.",Motivation,False,91,NONE,False,False,False,0.53125,0.2537313433,0.1276005548,0.4,0.01422300953,0.9857769905,0.003307324671,0.2125437083
Bug in OpenJ9's JITC?,Observed Bug Behaviour,False,21,NONE,True,True,False,0.08333333333,0.05970149254,0.1428571429,0.005586592179,0.0,1.0,0.0,0.00144281986
Please open a new issue for related bugs.,Action on Issue,False,41,NONE,False,False,True,8.0,0.2105263158,1.0,2.0,1.0,0.0,1.0,0.0
I can't say the connection between Carrot Top and Kate Mara is obvious to me.,Social Conversation,False,77,MEMBER,False,False,False,0.652173913,0.3947368421,0.4525547445,0.5714285714,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"Are the segfaults running rc021 in
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_1/44
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_ppc64le_linux_Nightly_testList_0/156
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_1/48/
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_0/49/
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_1/49/
this problem or a different problem?

Dec 7:
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_1/46
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_0/50",Investigation and Exploration,False,874,CONTRIBUTOR,False,False,False,1.0,0.3225806452,1.0,0.8957528958,0.84606764,0.15393236,0.0215829485,0.007266433405
"### Native stack during crash

CODE",Observed Bug Behaviour,True,37,CONTRIBUTOR,False,False,False,0.2608695652,0.06451612903,1.0,0.0888030888,0.07958772392,0.9204122761,0.2864869704,0.001745734514
@Mesbah-Alam can we re,Social Conversation,False,22,CONTRIBUTOR,True,False,False,0.2380952381,0.08064516129,0.2,0.6160337553,0.4809708382,0.5190291618,0.001055956968,0.005901107588
but that's not the same as handling arbitrary numeric values asdifferent from strings.,Solution Discussion,False,86,MEMBER,False,False,False,0.9285714286,0.203125,0.8272058824,1.0,0.262380076,0.737619924,0.01199680736,0.002558830732
"Windows-10-10.0.15063-SP0Python 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)]NumPy 1.14.1SciPy 1.0.0Scikit-Learn 0.19.1",Bug Reproduction,False,167,NONE,False,False,False,1.0,0.206185567,0.8609467456,1.0,0.9544498763,0.04555012373,0.05592088416,0.0005450428142
Last night Alen stepped through all the way from JITted code to fast_jitInstanceIOff in cnathelp.cpp and he did not see r2 set anywhere.,Investigation and Exploration,False,136,CONTRIBUTOR,False,False,False,1.0,0.1796875,0.3333333333,0.2888888889,0.03657460334,0.9634253967,0.0001058614156,4.42e-05
@paulaceccon your problem is related to > https://stackoverflow.com/questions/36533134/cant-get-attribute-abc-on-module-main-from-abc-h-py> If you declare the pool prior to declaring the function you are trying to use in parallel it will throw this error. Reverse the order and it will no longer throw this error.,Social Conversation,False,313,NONE,False,False,False,1.0,0.412371134,0.8313609467,0.25,0.8589078439,0.1410921561,2.097846668e-05,0.1984119539
"Hmm interesting since I was using the same VM as the OP and I was not seeing any regression, but I am glad someone can reproduce it :)",Social Conversation,False,134,CONTRIBUTOR,False,False,False,1.0,0.204379562,1.0,0.7100371747,0.04150564523,0.9584943548,3.52e-05,6.34e-05
"nvidia-smi also returns a gpu, this is a g3.4xlarge instance",Bug Reproduction,False,60,NONE,False,False,False,0.5238095238,0.08661417323,0.3401759531,0.9090909091,0.3566928644,0.6433071356,0.1351135301,0.002261357628
*         [iter_shuffle_batch_tensors] URL ,Expected Behaviour,False,43,NONE,False,False,False,0.1,0.0447761194,0.1775312067,0.9428571429,0.04064994448,0.9593500555,0.2125437083,0.01543061897
But I'm not gaining speed using pipe.,Solution Discussion,False,37,CONTRIBUTOR,False,False,False,0.35,0.04575163399,0.8488745981,0.5,0.1977965443,0.8022034557,0.00195977348,8.955394223e-06
Keeps the whole trouble of finding a the right combination of 17 moving parts away from most ppl.,Solution Discussion,False,97,NONE,False,False,False,0.9,0.1417322835,0.6862170088,1.0,0.5077260474,0.4922739526,0.01267336397,0.02165076149
(this is debug code that I added).,Investigation and Exploration,False,34,CONTRIBUTOR,False,False,False,0.1186440678,0.03703703704,0.5,0.3028571429,0.3768356435,0.6231643565,0.0999392835,0.03439401659
Try to run it multiple times just in case because the random seed is not set properly and there may be some randomness left in the snippet.,Investigation and Exploration,False,139,MEMBER,False,False,False,0.3802816901,0.3802816901,0.3128654971,0.6,0.3240071752,0.6759928248,0.0003023686606,0.0002259807885
-         Create an CODE instance,Solution Discussion,True,33,MEMBER,False,False,False,0.1612903226,0.03267973856,0.03536977492,0.25,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
EDIT: I used this docker image: CODE,Bug Reproduction,True,36,CONTRIBUTOR,False,False,False,0.4375,0.1029411765,0.06910569106,1.0,0.07637118021,0.9236288198,0.02842550899,0.004140653057
@amueller I share the same opinion as SCREEN_NAME  here https://github.com/scikit-learn/scikit-learn/issues/1626#issuecomment-12785168.,Social Conversation,False,135,CONTRIBUTOR,True,False,False,0.9166666667,0.1549295775,0.1268115942,0.5,0.03633137137,0.9636686286,0.007845949097,0.0001465833962
"As a result, these versions of ptxas miscompile most XLA programs which usemore than 4GB of temp memory.",Motivation,False,104,NONE,False,False,False,0.4634146341,0.1496062992,0.4398826979,0.4444444444,0.380459606,0.619540394,0.0006322631694,0.001605430808
ping SCREEN_NAME ?,Contribution and Commitment,False,18,MEMBER,False,False,False,1.0,0.02941176471,0.02032520325,1.0,0.009005396465,0.9909946035,0.02663056991,0.01958514047
"Hmm, looks like it may not be available on this version of the OS.",Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,1.0,0.1346153846,1.0,0.3977900552,0.1324857608,0.8675142392,0.0001049103339,2.73e-05
I will check the code there to see whether it can be modified to end up with an accurate error message in such case.,Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,0.5333333333,0.1804511278,1.0,0.4631043257,0.5404640453,0.4595359547,0.0001761792565,0.002429720419
cell = tf.contrib.rnn.MultiRNNCell([single_cell() for _ in range(num_layers)]),Bug Reproduction,False,78,NONE,False,False,False,0.1315789474,0.007235890014,0.1683168317,0.3,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"I am trying to follow the unmodified Seq2Seq translation tutorial, but I'm getting the same error.",Bug Reproduction,False,98,NONE,False,False,False,0.380952381,0.02315484805,0.2211221122,0.2857142857,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
I'd like to re-raise an earlier performance-related question by SCREEN_NAME  that seems to have fallen out of focus.,Social Conversation,False,116,NONE,False,False,False,0.9166666667,0.328358209,0.947295423,0.2,0.9876981106,0.01230188943,0.005682714673,0.0468741252
CODE,Bug Reproduction,True,4,NONE,False,False,False,0.07142857143,0.01408450704,0.9590643275,0.75,0.8221631882,0.1778368118,0.1070466705,0.1393667667
The CODE script rewrites all header files adding a bunch of lines that begin with CODE.,Investigation and Exploration,True,87,CONTRIBUTOR,False,False,False,0.2857142857,0.1355932203,0.25,0.5757575758,0.4307180112,0.5692819888,0.006132428413,0.004460705601
The other option would be to downgrade both cuda to 8.0 and tensorflow to 1.4.,Solution Discussion,False,78,NONE,False,False,False,0.6,0.1181102362,0.1818181818,0.75,0.2644014152,0.7355985848,0.2449173066,0.2378544464
We can also try this with the jdk14 code to date.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.4583333333,0.0632183908,0.7777777778,0.9191176471,0.7942021981,0.2057978019,0.006755954606,0.002545177611
This thread has been automatically locked since there has not been any recent activity after it was closed.,Action on Issue,False,107,NONE,False,False,True,18.0,0.1894736842,0.9894736842,1.0,1.0,0.0,1.0,0.0
Might be worth getting a tech writer on the case.,Contribution and Commitment,False,49,MEMBER,False,False,False,1.0,0.03846153846,0.7087794433,1.0,0.5747023981,0.4252976019,1.998711693e-05,0.1430218228
Also saw crash in compiled method CODE,Observed Bug Behaviour,True,38,CONTRIBUTOR,False,False,False,0.4666666667,0.1489361702,0.5,0.1576923077,0.1048089134,0.8951910866,0.05832768032,0.01345561023
what is crf?,Investigation and Exploration,False,12,MEMBER,False,False,False,0.3,0.03092783505,0.4378698225,0.5,0.8484692846,0.1515307154,2.72561139e-05,1.519746876e-05
"so in my haste, I decided this issue was resolved.",Social Conversation,False,50,CONTRIBUTOR,True,False,True,10.0,0.1408450704,0.9963768116,3.0,1.0,0.0,2.449490317e-05,0.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1853448276,1.0,0.06645700197,0.933542998,0.02963463796,0.05849599249
@gacholio I would love to!,Social Conversation,False,26,CONTRIBUTOR,False,False,False,0.05494505495,0.05494505495,0.9285714286,0.7482517483,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"I tried variations of both of JIT, and VM class signature tracing mechanisms without any luck reproducing the issue when enabled.",Investigation and Exploration,False,129,CONTRIBUTOR,False,False,False,0.84,0.2307692308,0.7777777778,0.3951048951,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
TF1.2 will solve this problem?,Task Progress,False,30,NONE,False,False,False,0.4545454545,0.007235890014,0.5841584158,0.3333333333,0.1703708442,0.8296291558,0.06612589558,0.0413883417
I'm trying migrating input pipeline from tf.train.string_input_producer & tf.train.shuffle_batch to Dataset APIs.,Usage,False,113,NONE,False,False,False,0.5,0.1641791045,0.721220527,0.25,0.5764930385,0.4235069615,0.1924676673,0.003144961394
If you want instant solution you can try what i tried :,Solution Discussion,False,55,NONE,False,False,True,11.0,0.01591895803,0.9933993399,1.0,1.0,0.0,1.0,0.0
I ran into this issue on both mac and ubuntu and compiling from source worked both times.,Solution Discussion,False,89,NONE,False,False,False,0.5483870968,0.02460202605,0.6204620462,0.6666666667,0.1928580592,0.8071419408,0.04210161464,0.004226002744
I don't see any regression with Acmeair Monolithic.,Investigation and Exploration,False,51,NONE,True,False,False,1.0,0.1,1.0,0.1470588235,0.101144076,0.898855924,0.02610750661,0.07376273152
I'm getting CODE,Solution Discussion,True,16,NONE,False,False,False,0.2307692308,0.004341534009,0.5148514851,1.0,0.09847950355,0.9015204965,0.03567836101,0.01542216894
The other one is to _wrap_ some mature and widely accepted implementation.,Solution Discussion,False,74,NONE,False,False,False,0.5714285714,0.1791044776,0.9223300971,1.0,0.9479523715,0.05204762849,0.2620248075,0.005625200409
More precisely in this comment: https://github.com/spring-projects/sts4/issues/138#issuecomment-440088030,Social Conversation,False,105,NONE,True,False,False,0.3333333333,0.06060606061,1.0,0.1122807018,0.1103553327,0.8896446673,0.02087158101,0.006411425468
"- it was put in the queue, so JITClient requests a remote compilation to JITServer
- methodHandle was still there when we first entered CODE
- we can tell that from CODE this output message
- then CODE we see that the content has been changed.",Investigation and Exploration,True,246,CONTRIBUTOR,False,False,False,0.9375,0.2380952381,0.8823529412,0.6114285714,0.447477842,0.552522158,0.001615795728,8.48e-05
I don't see how this is a valid criteria for saying something is a JIT problem.,Social Conversation,False,79,CONTRIBUTOR,False,False,False,0.5333333333,0.275862069,0.25,0.1926605505,0.0208416062,0.9791583938,6.43e-05,5.63e-06
"Given the crash is in java.foreign package which I believe is still in preview, I don't think will be but we should still look at the crash to be sure it's a broader issue

java.foreign was bundled with OpenJDK and Oracle builds starting with Java 14.",Investigation and Exploration,False,253,CONTRIBUTOR,False,False,False,1.0,1.0,0.5,0.09615384615,0.04838270716,0.9516172928,0.234046329,0.001299478205
"I started working on some low level tests to try and reproduce the problem, but haven't got very far as yet.",Social Conversation,False,108,CONTRIBUTOR,False,False,False,1.0,0.3134328358,0.8571428571,0.6312849162,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
Once we have the two logs we can being investigating to see what could have potentially gone wrong.,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.6206896552,0.1353383459,0.875,0.6081424936,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
"@vincentvanhouckeI created a PR with a more detailed description, mainly based on your statement in this thread:https://github.com/tensorflow/tensorflow/pull/15653",Action on Issue,False,163,CONTRIBUTOR,False,False,False,1.0,0.08076923077,0.9807280514,1.0,0.9411435957,0.05885640429,0.1382405392,0.1344801204
"To note, arrays do not have a bound on how large they can be, rather they have a bound on the number of objects (ArrayList based implementations i.e ArraySet) or primitives they index (Integer.MAX_VALUE).",Solution Discussion,False,204,CONTRIBUTOR,False,False,False,0.9210526316,0.7446808511,0.6111111111,0.9076923077,0.7299060094,0.2700939906,0.01554507959,0.00748487997
I would propose to focus on *,Social Conversation,False,29,CONTRIBUTOR,False,False,False,0.5,0.1276595745,0.5,0.4769230769,0.3707829483,0.6292170517,0.001912007579,0.2098027598
Here NVMe PM951 SAMSUNG 512GB and supposedly on NTFS filesystem..,Investigation and Exploration,False,65,NONE,True,False,False,0.4615384615,0.08759124088,1.0,0.4907063197,0.02091235162,0.9790876484,1.41e-05,0.0002397714096
The livelock happened even after excluding all CODE methods.,Investigation and Exploration,True,60,CONTRIBUTOR,False,False,False,0.375,0.1125,0.5,0.8970588235,0.959419322,0.04058067795,0.01999637537,0.04562398057
"Under certain conditions which are listed and contained within each evaluator itself, an evaluator may choose to compile it differently which is refereed to out-of-line code.",Solution Discussion,False,174,CONTRIBUTOR,True,False,False,0.21875,0.21875,0.7894736842,0.9555555556,0.3076445993,0.6923554007,0.1283873506,1.0
"namely, -         installing cuda-9.0 (NOT 9.1)-         cuDNN v7.1.2 (Mar 21, 2018) for CUDA 9.0-         everything else according to the official tf installation instructions",Solution Discussion,False,177,NONE,False,False,False,1.0,0.1968503937,0.7595307918,0.6666666667,0.5693151486,0.4306848514,0.09867224734,0.1256221876
~I'm running another at https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/2333/console that is trying to recreate the exact conditions the test was conducted under.,Testing,False,172,NONE,True,False,False,1.0,0.1978021978,0.75,0.03496503497,0.002719058434,0.9972809416,0.003086545757,0.005933531811
It's unfortunate that the translation tutorial does not work with TF 1.0.,Task Progress,False,73,CONTRIBUTOR,False,False,False,0.4285714286,0.01736613603,0.3366336634,0.25,0.07171178222,0.9282882178,0.001538799449,8.78093455e-06
This is one of the blocking issues for us now.,Motivation,False,46,NONE,False,False,False,0.9090909091,0.1612903226,0.7973568282,0.6,0.5871184167,0.4128815833,1.0,0.09855593002
The JDK should have *none* of those tests DLLs: tests should bring their own DLLs rather than expect the JDK to have them.,Solution Discussion,False,122,CONTRIBUTOR,False,False,False,1.0,0.1949152542,1.0,0.9333333333,0.6454813274,0.3545186726,0.0003116104286,0.0003611532457
"This is a conda bug, right?",Investigation and Exploration,False,27,MEMBER,False,False,False,0.6666666667,0.08450704225,0.7573099415,0.5,0.4708772814,0.5291227186,0.06102214722,0.0008236605345
That's why the same methodHandle gets requested multiple times.,Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.3913043478,0.04761904762,0.75,0.4171428571,0.4127998443,0.5872001557,0.002068168866,0.001724646721
This lead me to think that the issue is with allocating lots of memory on the native stack - the signal handler allocates the AGCT buffer on the stack - and indeed if I use a smaller buffer size (max 2 frames instead of 640) the crash disappears.,Solution Discussion,False,246,NONE,True,False,False,1.0,0.4423076923,0.7777777778,0.8232044199,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
"I tried that, and now it stopped complaining about the value...",Usage,False,63,NONE,False,False,False,0.34375,0.04230769231,0.6573875803,0.3333333333,0.5706347361,0.4293652639,0.0008277913049,5.184475509e-05
It's as follows(based on code on the web and modified by myself) CODE,Usage,True,69,NONE,False,False,False,0.4482758621,0.05,0.9528907923,0.8235294118,0.7995481369,0.2004518631,0.3206669123,0.722664447
is 404'ing,Solution Discussion,False,10,NONE,False,False,False,1.0,0.03333333333,0.8189655172,1.0,0.490032338,0.509967662,0.05549127115,0.1838195117
"It would be interesting to understand why the problem is intermittent.

https://github.com/eclipse/openj9/blob/15fc57c3ef1673fe144b9786b5fb6517c92493a3/runtime/jcl/common/stdinit.c#L274

https://github.com/eclipse/openj9/blob/15fc57c3ef1673fe144b9786b5fb6517c92493a3/runtime/jcl/common/vm_scar.c#L325",Investigation and Exploration,False,304,CONTRIBUTOR,False,False,False,0.6,0.1515151515,1.0,0.9578947368,0.9078950378,0.09210496222,0.001248242127,0.002277636608
is that not the official way to use BN?,Usage,False,39,NONE,False,False,False,0.2571428571,0.03461538462,0.07280513919,0.5,0.2025232642,0.7974767358,5.356953168e-05,0.001533935132
Currently the tutorial says that we can useCODEto get shuffled data.,Usage,True,68,NONE,False,False,False,0.7333333333,0.1641791045,0.814147018,0.2,0.6302370014,0.3697629986,0.123123279,0.6886518758
I continue to get these exceptions - today was on windows.,Bug Reproduction,False,58,NONE,True,False,False,1.0,0.07518796992,1.0,0.3129770992,0.404206657,0.595793343,1.0,0.004984524022
@amicic I can probably do one better.,Social Conversation,False,37,NONE,True,False,False,0.1707317073,0.09333333333,0.2,0.7570621469,0.08541061734,0.9145893827,2.19e-06,2.98e-05
"I trained a POS-tagger on the NLCOW14 corpus, which was automatically tagged.",Solution Discussion,False,77,NONE,False,False,False,0.9285714286,0.2166666667,0.5344827586,0.75,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
@Leonardo2718 any update on this?,Task Progress,False,33,MEMBER,False,False,False,0.4545454545,0.08064516129,0.5,0.06010928962,0.1023743982,0.8976256018,0.4214515802,0.0006590192892
"I still see some of the messages after the output, but I just got a crash, so this should be good enough to work with.",Bug Reproduction,False,118,CONTRIBUTOR,False,False,False,1.0,0.2403846154,1.0,0.6298342541,0.1325885209,0.8674114791,3.67e-05,1.76e-05
Changing the random seed can have a large impact on the outcome.,Solution Discussion,False,64,MEMBER,False,False,False,0.3636363636,0.1764705882,0.9308943089,0.6,0.6518867777,0.3481132223,0.02351100859,0.005246346584
"So, it must be some other limit.",Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.4375,0.1129032258,0.6666666667,0.4261603376,0.2977992985,0.7022007015,0.0007234180335,0.0004492192628
"Specifically, let's take a look at the exact failure in this issue.",Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.1428571429,0.1318681319,0.6666666667,0.2482517483,0.5985521651,0.4014478349,1.0,0.01222678832
"(To not waste too much of your time, you should probably start at the run_tune_process() method which is being called at the bottom of the code and calls the method containing GridSearchCV() in a for loop)",Investigation and Exploration,False,205,NONE,True,False,False,1.0,0.3711340206,0.07396449704,0.8181818182,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
Is your problem similar ?,Usage,False,25,NONE,False,False,False,0.1818181818,0.05970149254,0.9361997226,1.0,0.9701640056,0.02983599443,0.02053157431,0.0001913748963
Have you tried with Cuda 9.0 drivers?,Solution Discussion,False,37,NONE,False,False,False,0.875,0.05511811024,0.1994134897,1.0,0.2838316592,0.7161683408,0.001119586478,3.697445435e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.01293103448,1.0,0.0002110529379,0.9997889471,0.001373053927,0.0002084811089
The workaround of using set_frozen does not work.,Workarounds,False,49,NONE,False,False,False,0.2580645161,0.1290322581,0.9603524229,0.8333333333,0.6824651873,0.3175348127,0.09426527661,0.02091540384
There are many trace files being generated because there are many exceptions being caught.,Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.7368421053,0.175,0.5,0.5539215686,0.5913809345,0.4086190655,0.00531516184,0.0004306064011
"Even though it rarely shows up in the jit logs, excluding it from jit makes the problem go away.",Solution Discussion,False,96,NONE,True,False,False,1.0,0.2835820896,0.5,0.4134078212,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
IIRC SCREEN_NAME 's hunch was that it was CPU architecture related.,Investigation and Exploration,False,67,MEMBER,False,False,False,0.4545454545,0.1408450704,0.4590643275,0.6666666667,0.4155660316,0.5844339684,0.0005572716688,0.0001185949392
Passing runs normally did not undergo OSR from that method.,Investigation and Exploration,False,59,MEMBER,False,False,False,0.1785714286,0.1086956522,0.375,0.8427672956,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
"We have to find out what is inconsistent, and proceed from there.",Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,0.2790697674,0.1935483871,0.7,0.3770491803,0.6389467947,0.3610532053,0.00359446461,0.01517828221
"Could you put verbose=10 in cross_val_predict, too, so that we can perhapssee where it breaks for you?",Investigation and Exploration,False,102,MEMBER,False,False,False,0.3148148148,0.175257732,0.349112426,1.0,0.8123880036,0.1876119964,2.642174307e-05,2.677933057e-05
"GregorSamsa
> 
> Does Hotspot generate a similar error message for this class?",Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.4193548387,0.0977443609,0.2,0.3791348601,0.4730620837,0.5269379163,0.005002918608,4.74e-05
Maybe a run with those flags could help.,Investigation and Exploration,False,40,NONE,False,False,False,0.347826087,0.06015037594,1.0,0.7888040712,0.7978584392,0.2021415608,0.00412079602,0.0003049413581
"In my notebook i used :cuda 9.1 (from nvidia ppa), cudnn 7.1 for 9.1 (from nvidia web), and the rest was the same",Solution Discussion,False,113,NONE,False,False,False,0.7419354839,0.1811023622,0.7859237537,1.0,0.6608360282,0.3391639718,1.0,0.07077280307
"Yeah for large vector models it would be a necessity, question is though where supporting that is on your timeline & plans for spaCy.",Task Progress,False,133,NONE,True,False,False,0.6764705882,0.6052631579,0.6058394161,0.2,0.004047128885,0.9959528711,2.745084526e-05,4.078315706e-05
@hangshao0 Any update on this?,Task Progress,False,30,MEMBER,False,False,False,0.4166666667,0.03424657534,0.5,0.3910614525,0.1062582353,0.8937417647,0.2238931518,0.0001989032092
"I did not see this routine being called before the value changed.
CODE
Are there any other places that change the globalreference besides this one?",Investigation and Exploration,True,149,CONTRIBUTOR,False,False,False,1.0,0.1428571429,1.0,0.7085714286,0.448572496,0.551427504,0.0001183702813,0.0002582624319
CODE,Investigation and Exploration,True,4,NONE,False,False,False,0.03333333333,0.01052631579,0.4631578947,0.8888888889,0.1598964447,0.8401035553,0.03116866066,0.03531242178
Once we have confirmation that CODE is when the issue starts happening we can proceed to find the CODE.,Investigation and Exploration,True,103,CONTRIBUTOR,False,False,False,0.95,0.1428571429,0.8571428571,0.5852417303,0.5844415189,0.4155584811,9.4e-05,0.001518166493
Have you solved it ?,Task Progress,False,20,NONE,False,False,False,0.2666666667,0.03149606299,0.09970674487,0.25,0.1949838428,0.8050161572,0.7235035514,0.209218471
and thanks for the help guys!,Social Conversation,False,29,CONTRIBUTOR,False,False,False,0.1463414634,0.03174603175,1.0,0.9257142857,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"Meanwhile, the collected core dumps indicate the top of java stack straces always remains in JIT as follows:
CODE

Based on the analysis above, we need the JIT team to get involved in to check what happened to JIT in such case.",Investigation and Exploration,True,230,CONTRIBUTOR,False,False,False,1.0,0.3308270677,0.8333333333,0.358778626,0.4557884115,0.5442115885,0.03394128121,0.003566914598
Already collected the trace logs as required above and sent them all to @fjeremic.,Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,1.0,0.1052631579,1.0,0.6132315522,0.6033553803,0.3966446197,0.1071746243,0.03283597098
Thanks @ChengJin01.,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.06896551724,0.01503759398,0.125,0.5928753181,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
"I'll have a look in HotSpot source code to see if it's required there, but of course we can identify the VM type and tweak things accordingly.",Investigation and Exploration,False,142,NONE,True,False,False,0.8709677419,0.2596153846,0.75,0.7348066298,0.2976333762,0.7023666238,8.01e-05,0.0002211070502
Thanks for the feedback!,Social Conversation,False,24,CONTRIBUTOR,False,False,False,0.3333333333,0.005788712012,0.4719471947,0.3333333333,0.08570368789,0.9142963121,0.006280741429,0.01683649271
We can see the features names of the columns with: CODE,Expected Behaviour,True,55,NONE,False,False,False,0.3928571429,0.171875,0.7904411765,0.875,0.2567040608,0.7432959392,0.02304981706,0.003308173532
Closing because of lack of feeback and it is probably a known issue that is fixed in newer joblib.,Action on Issue,False,98,MEMBER,False,False,False,1.0,0.1958762887,0.1568047337,1.0,0.2140862446,0.7859137554,0.5381059742,0.1079292843
@Timonzimm I know and I think the whole issue is this f** naming libcublas.so.xxx that nvidia puts.,Investigation and Exploration,False,99,NONE,True,False,False,0.5483870968,0.1338582677,0.02346041056,0.5,0.0003350798813,0.9996649201,0.002134165505,0.1834480158
"A similar timeout exists on a few handle intensive tests on z.

FYI @liqunl.",Solution Discussion,False,78,CONTRIBUTOR,False,False,False,0.5769230769,0.223880597,0.6666666667,0.289017341,0.005049779156,0.9949502208,1.72e-05,1.44e-05
"In order to preserve these entities, we restrict the actions of the entity recogniser, so that it can't over-write the previous ones.",Investigation and Exploration,False,133,MEMBER,False,False,False,0.5476190476,0.2421052632,0.3368421053,0.5555555556,0.1453780739,0.8546219261,0.07593267665,0.03116866066
We can assemble a team here and start diving into materials asap as this project is way overdue :),Contribution and Commitment,False,98,NONE,False,False,False,1.0,0.2602739726,0.3275862069,1.0,0.3515690911,0.6484309089,0.003344771761,0.1714133005
"The current implementation also saves to disk, using tempfiles.",Testing,False,63,MEMBER,False,False,False,0.5,0.05882352941,0.2990353698,0.7777777778,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"1.         Remove the CODE file from your data directory, to avoid loading the vectors",Workarounds,True,86,MEMBER,False,False,False,0.6818181818,0.3947368421,0.6642335766,0.4444444444,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
"[pid]
and, looking at the SZ column/field.",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,1.0,0.1451612903,0.6666666667,0.7172995781,0.5175852387,0.4824147613,0.004416350414,0.2648672615
I'd think that would fix it.,Solution Discussion,False,28,MEMBER,False,False,False,0.3888888889,0.07216494845,0.2455621302,0.8333333333,0.2588472304,0.7411527696,0.001083708651,1.0
@ZahlGraf I'll happily consider a PR that clarifies the documentation.,Action on Issue,False,70,MEMBER,False,False,False,0.2857142857,0.03846153846,0.9764453961,0.5,0.9193137457,0.08068625426,0.01105297712,0.1382405392
"To double check, I also added a check to only add the entry if it has a valid classloader.",Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.4418604651,0.2087912088,0.5,0.2727272727,0.6007887623,0.3992112377,0.01222678832,0.05114946292
"Now, I think I have good news in some way: I just wanted to rerun the above example that previously caused this issue to confirm CODE and I am no longer getting this problem.",Investigation and Exploration,True,174,CONTRIBUTOR,False,False,False,1.0,0.4788732394,0.5555555556,0.2857142857,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
One case that we have seen change the path (directory where java is installed) continuously is Hadoop when the master installs workers on several machines repeatedly and uses slightly different directory names every time.,Solution Discussion,False,221,CONTRIBUTOR,False,False,False,1.0,0.2328767123,1.0,0.7206703911,0.2631923042,0.7368076958,7.11e-05,0.001870010978
*         post a fully stand-alone snippet (for your next issue).,Bug Reproduction,False,65,MEMBER,False,False,False,0.34375,0.1134020619,0.4881656805,0.4,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
There are 3 python processes spawned too (because I set n_jobs=3).,Observed Bug Behaviour,False,66,NONE,False,False,False,0.7857142857,0.1134020619,0.1715976331,0.7142857143,0.2546091762,0.7453908238,0.1079292843,0.008572782863
I hate bugs that move...,Social Conversation,False,24,CONTRIBUTOR,False,False,False,1.0,0.07462686567,1.0,0.2458100559,0.002843396794,0.9971566032,0.0001327325319,0.0004990398439
"Just found the exception at 10th time with CODE (100 runs)
CODE",Bug Reproduction,True,64,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.5903307888,0.5847052044,0.4152947956,0.001518166493,0.0002035667511
And your version looks good to me.,Social Conversation,False,34,NONE,False,False,False,0.3043478261,0.02692307692,0.182012848,1.0,0.2178244117,0.7821755883,3.5002819e-05,0.0001282422122
You could remove the core file itself from the zip if Babneet already has it.,Social Conversation,False,77,CONTRIBUTOR,False,False,False,0.5172413793,0.2,0.6666666667,0.3107344633,0.01077178648,0.9892282135,0.009446358204,0.007066552505
"
REFERENCE",Social Conversation,False,10,NONE,False,False,False,0.125,0.02739726027,0.6896551724,1.0,0.7051734119,0.2948265881,6.462471741e-05,2.810732572e-05
"i.e. > ValueError: Attempt to reuse RNNCell <tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl.GRUCell object at 0x7f0fb51ebb00> with a different variable scope than its first use.  First use of cell was with scope 'embedding_attention_seq2seq/embedding_attention_decoder/attention_decoder/multi_rnn_cell/cell_0/gru_cell', this attempt is with scope 'embedding_attention_seq2seq/rnn/multi_rnn_cell/cell_0/gru_cell'.....",Bug Reproduction,False,422,NONE,False,False,False,1.0,0.06078147612,0.2244224422,0.4285714286,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
"This is mostly a list of prefix tokenization, a list of suffix tokenization, and a list of special-cases, which are exact-matched.",Solution Discussion,False,130,MEMBER,False,False,False,0.3833333333,0.3833333333,0.2068965517,0.72,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Looks like this is similar to https://github.com/eclipse-openj9/openj9/issues/13504,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,1.0,0.0752688172,1.0,0.05019305019,0.0107149039,0.9892850961,0.0009250900844,0.004424019516
"https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/shared_common/CacheMap.cpp#L4050-L4052

   As the first time classChain is found, it is already started up.",Investigation and Exploration,False,197,CONTRIBUTOR,False,False,False,0.7368421053,0.2258064516,0.3333333333,0.8360655738,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
@nbhuiyan @jdmpapin do you have any insight to how this could happen?,Contribution and Commitment,False,69,CONTRIBUTOR,False,False,False,0.1463414634,0.1304347826,1.0,0.6729559748,0.5726999115,0.4273000885,0.04419068659,0.007881921876
-         Allocate the memory using CODE,Solution Discussion,True,40,MEMBER,False,False,False,0.1818181818,0.1578947368,0.3941605839,1.0,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"I'd support SCREEN_NAME  for ""no Dataset"" pledge, mainly because all-in-one bundle is not flexible, not future proof and also - not consistent with the TF's paradigm of providing small, stable, well-defined and assemble-able blocks for building custom models.",Motivation,False,259,NONE,False,False,False,1.0,0.6417910448,0.3509015257,0.875,0.2977348857,0.7022651143,0.1209962692,0.001143668596
That certainly may be involved here.,Investigation and Exploration,False,36,CONTRIBUTOR,False,False,False,0.6,0.08,1.0,0.7288135593,0.0852248734,0.9147751266,2.91e-05,3.85e-05
This test took 3:40 hrs to finish.,Task Progress,False,34,CONTRIBUTOR,False,False,False,0.3684210526,0.05263157895,1.0,0.7455470738,0.7851113681,0.2148886319,0.02856760951,0.00173440507
@JamesKingdon It's idle/near idle.,Investigation and Exploration,False,34,NONE,True,False,False,0.5,0.07462686567,0.5,0.09497206704,0.001675947433,0.9983240526,0.0001922036014,5.6e-05
The size of the segment inside the java stack is correct.,Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.6875,0.2340425532,0.3333333333,0.6,0.5067550661,0.4932449339,0.01512432343,0.04264807325
Keep up the good work.,Social Conversation,False,22,NONE,False,False,False,0.1666666667,0.07462686567,0.4576976422,1.0,0.402192445,0.597807555,0.001827732055,0.008699923145
"But if you want to use CODE on ensembles, it will have a very different semantic all of a sudden.",Solution Discussion,True,97,MEMBER,False,False,False,1.0,0.2816901408,0.4202898551,1.0,0.03980338897,0.960196611,3.439112479e-06,2.382813646e-05
"I would like to ask again (since there was no reply to my [comment](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-305435143) above: Am I right, that the new input pipeline isn't implemented using Queues?",Solution Discussion,False,223,NONE,False,False,False,0.7142857143,0.447761194,0.7656033287,0.2,0.5844291371,0.4155708629,0.00636830506,0.1964778875
"Do we need to remove the link flag, or is there some way to set executable with the flag enabled.",Solution Discussion,False,97,CONTRIBUTOR,False,False,False,1.0,0.1149425287,0.6666666667,0.6139705882,0.7727637151,0.2272362849,0.01062274398,8.36e-05
"trying same code/version on linux, but not seen yet.",Bug Reproduction,False,52,NONE,True,False,False,1.0,0.07518796992,1.0,0.08142493639,0.0005096925721,0.9994903074,0.0002080632054,0.0005207711664
These are the features I really missed from a private system I've been using.,Motivation,False,77,CONTRIBUTOR,False,False,False,0.5,0.223880597,0.1165048544,0.8461538462,0.008365735399,0.9916342646,0.03692313957,0.0188753671
The thread/CPU counts you mentioned do not seem all that extreme.,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,0.3333333333,0.15,0.5,0.9607843137,0.9705973268,0.02940267322,0.001040994599,0.001009097829
I didn't have time to work on this.,Task Progress,False,35,CONTRIBUTOR,False,False,False,0.8888888889,0.1,0.5,0.612745098,0.8283667974,0.1716332026,0.0014034579,0.2743165754
directory?,Motivation,False,10,NONE,False,False,False,0.03333333333,0.01492537313,0.1539528433,0.4571428571,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"- With JIT enabled but without CODE, the test passes 100 times.",Testing,True,63,CONTRIBUTOR,False,False,False,0.4782608696,0.1182795699,0.4444444444,0.0694980695,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"So, do we integrate the new 'onehot' encoding (which supports strings and has different parameters) in the existing OneHotEncoder class?",Solution Discussion,False,136,CONTRIBUTOR,True,False,False,0.4,0.3125,0.6948529412,0.5,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
"In addition, CODE can catch both scenarios just in case.",Investigation and Exploration,True,56,MEMBER,True,False,False,0.8333333333,0.1086956522,0.6666666667,0.3333333333,0.3661720137,0.6338279863,0.0002473694342,0.0008075588312
"mylog[...].txt from https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-985111499 shows:
CODE
The CODE and the two newly created calls all have CODE copied from the original call to CODE.",Testing,True,204,CONTRIBUTOR,False,False,False,0.5531914894,0.2795698925,0.3333333333,0.7953667954,0.6114489539,0.3885510461,0.002338836625,0.001335412299
This seems complete.,Social Conversation,False,20,CONTRIBUTOR,True,False,True,1.0,0.0447761194,1.0,1.0,1.0,0.0,1.0,0.0
"Once it gets to CODE, the object pointer turned bad.

CODE

JITClient
CODE

Next step is to figure out what happened in between runFEMacro_derefUintptrjPtr &  VM_createMethodHandleArchetypeSpecimen.",Investigation and Exploration,True,205,CONTRIBUTOR,False,False,False,1.0,0.1587301587,1.0,0.2857142857,0.3270477495,0.6729522505,0.001859572286,0.0999392835
-         Support for SparseTensors.,Expected Behaviour,False,36,NONE,False,False,False,0.1290322581,0.05970149254,0.5755894591,0.5,0.4630003862,0.5369996138,0.01269843694,0.02260310577
"Will have to stick to hotspot for now (I try and run j9 much of the time as I want to flush out the issues, but can't recommend).",Investigation and Exploration,False,129,NONE,True,False,False,1.0,0.2105263158,0.75,0.3307888041,0.4052567842,0.5947432158,5.07e-05,0.1962918967
It would be great to be able to plug it in spaCy.,Potential New Issues and Requests,False,49,NONE,False,False,False,0.6666666667,0.3157894737,0.8613138686,0.4,0.008264937696,0.9917350623,0.003893704171,0.01990868788
That would also explain why it works for me now after re-installing Miniconda ...,Solution Discussion,False,81,CONTRIBUTOR,False,False,False,0.5185185185,0.1971830986,0.7076023392,0.375,0.459007429,0.540992571,0.001079117078,0.0009613524417
UPDATE: I was able to get around this by converting multiple spaces to a single space.,Workarounds,False,86,NONE,False,False,False,0.64,0.1684210526,0.8421052632,0.3333333333,0.2824932792,0.7175067208,0.20086138,0.06317627064
@lesteve Output of conda MKL environment info:CODE,Investigation and Exploration,True,50,NONE,False,False,False,0.2285714286,0.1126760563,0.6228070175,0.3333333333,0.4580201019,0.5419798981,0.004204377413,0.003934390567
One of them is equipped with CODE and the other is equipped with CODE.,Investigation and Exploration,True,70,NONE,False,False,False,0.4242424242,0.1971830986,0.7280701754,0.2222222222,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
"On the other hand, subsequent calls to partial fit on batches lead to the same model as training on the whole data.",Solution Discussion,False,115,MEMBER,False,False,False,0.8461538462,0.3098591549,0.3514492754,0.7777777778,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
So it is hard to determine whether they came from the same root cause or they are totally different issues.,Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,0.4545454545,0.1694915254,1.0,0.8363636364,0.6093579692,0.3906420308,0.02154742127,0.01905847349
;-P,Social Conversation,False,3,NONE,False,False,False,0.02702702703,0.01369863014,0.7090517241,1.0,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
"During training and testing we are either updating or reusing four variables (beta, gamma, moving_mean and moving_variance).",Usage,False,124,NONE,False,False,False,0.4857142857,0.06538461538,0.130620985,0.5652173913,0.2164964176,0.7835035824,0.06906725807,0.007698692487
I have found this a very useful technique.,Social Conversation,False,42,NONE,False,False,False,0.4,0.125,0.8161764706,0.8333333333,0.2596531697,0.7403468303,0.009666196666,0.01199680736
With crashing I actually mean freezing.,Observed Bug Behaviour,False,39,NONE,True,False,False,0.1666666667,0.0618556701,0.05325443787,0.1818181818,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
I guess it is not fully deterministic...,Investigation and Exploration,False,40,MEMBER,True,False,False,0.7777777778,0.1029411765,0.1219512195,0.6666666667,0.2728067621,0.7271932379,0.004772231277,0.004433478825
"System Version: OS X 10.11.5Python 3.5.1 :: Continuum Analytics, Inc.numpy.**version** 1.11.1scipy.**version** 0.16.0sklearn.**version** 0.17.1",Bug Reproduction,False,143,NONE,False,False,False,0.5,0.1690140845,0.09941520468,0.25,0.154639826,0.845360174,0.1585619872,5.56302982e-05
"If one serializes a Doc with an OOV word, the above is bound to happen.",Workarounds,False,71,CONTRIBUTOR,False,False,False,0.5357142857,0.2419354839,0.704845815,0.25,0.2945274675,0.7054725325,0.02221386295,0.000146521357
Example: I trained using TFRecords and input queues; I got my weights/model.,Motivation,False,76,NONE,False,False,False,0.325,0.1940298507,0.4077669903,0.5,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
Hooray for node!,Social Conversation,False,16,NONE,False,False,False,1.0,0.04109589041,0.1120689655,0.5,0.02315770643,0.9768422936,0.05306596701,0.0276474279
"The xlc 13 build is https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK13_ppc64_aix_Personal/31/OpenJ9-JDK13-ppc64_aix-20191016-215625.tar.gz

and the xlc 16 build is https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK13_ppc64_aix_Personal/33/OpenJ9-JDK13-ppc64_aix-20191017-153805.tar.gz

these are created from equivalent source, and can be used to compare performance.",Solution Discussion,False,441,CONTRIBUTOR,False,False,False,0.9655172414,0.1609195402,0.5,0.9301470588,0.7951105023,0.2048894977,0.002545177611,0.001665008746
"Also for future reference, can you paste the output of:CODE",Investigation and Exploration,True,59,MEMBER,False,False,False,0.2894736842,0.1134020619,0.449704142,1.0,0.8484749906,0.1515250094,1.519746876e-05,1.184011945e-05
"This is definitely supposed to be included in the tensorflow documentation, as said by SCREEN_NAME .",Solution Discussion,False,100,NONE,False,False,False,0.4054054054,0.1181102362,0.4780058651,0.25,0.4048451,0.5951549,0.1167490581,0.001195753854
But the log transform might alone be sufficient in your setting.,Potential New Issues and Requests,False,64,MEMBER,False,False,False,0.3928571429,0.171875,0.8676470588,1.0,0.2637609133,0.7362390867,0.003516053103,7.119163405e-05
@jnothman I am guessing that your conda environment uses MKL and not Accelerate.,Investigation and Exploration,False,80,MEMBER,False,False,False,0.4814814815,0.1340206186,0.3520710059,0.2,0.8123980581,0.1876019419,2.677933057e-05,1.887267362e-06
"In that case, I think [this patch] URL  should fix the problem.",Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.9285714286,0.1397849462,0.75,0.7451737452,0.6082511737,0.3917488263,0.1957833797,0.007960250968
I think it would be confusing.,Social Conversation,False,30,MEMBER,False,False,False,0.375,0.08450704225,0.481884058,0.5,0.04250515813,0.9574948419,1.056298833e-05,4.807738873e-06
"for example, you call read() in your code.",Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.6666666667,0.0625,0.5,0.4388888889,0.03724082546,0.9627591745,4.44e-05,0.0002304042575
"@Suananda  Thanks, it works for me in a tensorflow conda environment.",Solution Discussion,False,69,NONE,False,False,False,0.4137931034,0.09448818898,0.8563049853,0.5,0.8547530627,0.1452469373,0.09933113212,0.008876087511
I have _not_ looked at that.,Social Conversation,False,28,CONTRIBUTOR,False,False,False,1.0,0.03448275862,1.0,0.08823529412,0.7182583391,0.2817416609,7.05e-05,5.94e-05
Still the same problem.,Observed Bug Behaviour,False,23,NONE,False,False,False,0.4444444444,0.0412371134,0.6893491124,0.5,0.8499469706,0.1500530294,0.0001597224167,0.001154610306
"But for streaming text, especially for social media where new terms are invented by the minute (hashtags and URLs in particular) this assumption no longer holds and the spacy vocabulary storage represents a dynamic element in what should be a completely static production deployment.",Motivation,False,283,NONE,True,True,False,0.7719298246,0.7096774194,0.01762114537,0.2352941176,0.0,1.0,0.0,0.0008157310994
"@MisayaZ I was having the same behavior using Batchnorm with a placeholder for ""is_training"".",Usage,False,93,CONTRIBUTOR,False,False,False,0.2745098039,0.05384615385,0.8372591006,0.25,0.7198604777,0.2801395223,0.09017334918,0.007196275213
Interesting.,Social Conversation,False,12,NONE,True,False,False,0.03225806452,0.009615384615,0.25,0.7237569061,0.2976333762,0.7023666238,8.01e-05,0.0002211070502
Better to work around it in OpenJ9/OMR if possible.,Solution Discussion,False,51,CONTRIBUTOR,False,False,False,0.4,0.05747126437,0.6666666667,0.6360294118,0.772822397,0.227177603,8.08e-05,0.0002421616125
That all makes a bit more sense.,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.2058823529,0.1044776119,0.5,0.7341040462,0.01722613536,0.9827738646,1.1e-05,1.59e-05
"Just read in an old spaCy tutorial the following ""Future versions of spaCy will allow you to provide a file-like object, instead of a location of a [vector bin] file.""",Task Progress,False,167,NONE,True,True,False,0.8857142857,0.8157894737,0.01459854015,0.4,0.0,1.0,0.0,0.003237761122
Do you know if this has shown up in any other performance testing?,Testing,False,66,CONTRIBUTOR,True,False,False,0.5416666667,0.1940298507,1.0,0.549132948,0.0111863431,0.9888136569,0.001720565783,5.33e-07
"That's the default value in Torch's implementation, too; see the momentum parameter in https://github.com/torch/nn/blob/master/BatchNormalization.lua",Solution Discussion,False,149,NONE,False,False,False,1.0,0.05384615385,0.4475374732,1.0,0.3802491548,0.6197508452,0.003984639748,0.00101193657
"Then because the CODE node occurs within the CODE tree, CODE stops searching there, and it stops the search without setting CODE, preventing the transformation",Solution Discussion,True,159,CONTRIBUTOR,False,False,False,0.2941176471,0.2688172043,0.8333333333,0.8301158301,0.6236466175,0.3763533825,0.04747801046,0.02028856842
Seems before trying to get VS2017 working we should ensure a build with VS2013 works.,Solution Discussion,False,85,CONTRIBUTOR,True,False,False,1.0,0.1271186441,1.0,0.7636363636,0.5624254083,0.4375745917,0.001487673562,0.0004072234353
Which repo did you use to produce this failure?,Bug Reproduction,False,47,MEMBER,False,False,False,0.75,0.1323529412,0.06097560976,1.0,0.06675880694,0.9332411931,0.1491477665,0.02842550899
*         [iter_tensors_slice] URL ,Expected Behaviour,False,35,NONE,False,False,False,0.1,0.0447761194,0.1761442441,0.9142857143,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"I then added the filter, and will now run a build.",Task Progress,False,50,NONE,True,False,False,0.5,0.08270676692,0.8571428571,0.2697201018,0.2215502762,0.7784497238,0.005021721962,0.0366849359
In SGD you can call CODE either with the same data or new data and it keeps on learning.,Solution Discussion,True,88,MEMBER,False,False,False,1.0,0.2676056338,0.1449275362,0.4,0.03661251674,0.9633874833,0.0001586202898,0.0007677994074
"Yes, I think you're right.",Social Conversation,False,26,MEMBER,False,False,False,1.0,0.07352941176,0.3536585366,0.5,0.3598866805,0.6401133195,0.001263501754,0.2982430454
"@lesteve I did with that exact snippet, yes.",Bug Reproduction,False,44,NONE,False,False,False,0.4444444444,0.1126760563,0.2485380117,0.5,0.2242654904,0.7757345096,0.007534999345,0.08372802707
"I mention this not to affect the plan for delivery for the fix for the issue on the OpenJ9 side, but more as a question for @jdmcclur to consider assuming the exception is due to something that happened in the Liberty auth logic based on the above signature.",Investigation and Exploration,False,258,CONTRIBUTOR,False,False,False,0.9056603774,0.6,0.5,0.4362745098,0.4977950347,0.5022049653,0.5109021712,0.08681141034
I think this should fix the segfault too â I think they were related.,Potential New Issues and Requests,False,69,MEMBER,False,False,False,1.0,0.1473684211,0.8105263158,0.3333333333,0.1889319923,0.8110680077,7.189240303e-05,0.20086138
"We can filter all the default options out of the parameter list and maybe some other specific parameters as well, but in general I think if options are modified then the behavior of the app can change and invalidate the hint.",Solution Discussion,False,225,CONTRIBUTOR,True,False,False,1.0,0.2808219178,1.0,0.2960893855,0.02874696135,0.9712530387,0.0006509267927,0.009905059007
My tf verstion is 1.1.0.,Bug Reproduction,False,24,CONTRIBUTOR,False,False,False,0.7142857143,0.007235890014,0.9306930693,0.6666666667,0.4006589622,0.5993410378,0.05332661552,0.02633936247
Google discovered in mid-December 2017 that the PTX-to-SASS compiler in CUDA 9and CUDA 9.1 sometimes does not properly compute the carry bit whendecomposing 64-bit address calculations with large offsets (e.g. load [x + large_constant]) into 32-bit arithmetic in SASS.,Motivation,False,268,NONE,False,False,False,1.0,0.3228346457,0.4369501466,0.3333333333,0.380459606,0.619540394,0.0006322631694,0.001605430808
"There are some relatively big periods of time when compilation queue is close to 0 (for instance between t=18.7s and t=27.7s), so code quality may matter as well.",Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,0.8,0.204379562,1.0,0.2936802974,0.007087055447,0.9929129446,0.006822511181,0.006010021534
"I am sure using a circular buffer will work to fix to a number of samples, but ""age"" might be of interest as well, maybe passed as part of the tuple, but in the RL case, simply the sequence of the sample being added might cover the age (FIFO).",Solution Discussion,False,243,CONTRIBUTOR,False,False,False,0.98,0.7313432836,0.2330097087,0.8571428571,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"changed the workspace JRE to JDK11/OpenJ9

I did not do that.",Investigation and Exploration,False,63,NONE,True,False,False,0.2954545455,0.1313131313,0.25,0.4701754386,0.1967504071,0.8032495929,0.001033447215,0.001977734278
"Thanks @jsimomaa , that should be really useful.",Social Conversation,False,48,CONTRIBUTOR,False,False,False,1.0,0.05109489051,1.0,0.312267658,0.0171269129,0.9828730871,0.009079840981,0.003972585721
I think we agree on the point of same /changing data.,Solution Discussion,False,53,MEMBER,False,False,False,0.3666666667,0.1549295775,0.2826086957,0.4,0.03947792369,0.9605220763,6.386923175e-06,3.579484417e-05
"From what I see, in version 2.0 the problem still exists.",Task Progress,False,57,NONE,False,False,False,0.2972972973,0.1774193548,0.859030837,0.7777777778,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
"In addition, I would like to have a rich set of iterators, splitters, loaders, dumpers, slicers, repeaters, servers, generators to actually work with data coming from various source.",Expected Behaviour,False,182,NONE,False,False,False,0.9333333333,0.4179104478,0.1636615811,0.6571428571,0.04064994448,0.9593500555,0.2125437083,0.01543061897
Here's the full extended error message - http://pastebin.com/23y5uHT2,Observed Bug Behaviour,False,69,NONE,False,False,False,0.3181818182,0.07216494845,0.2307692308,1.0,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
"Exception (e.g. throw) is incorrect, ExceptionCatch is correct.",Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.2962962963,0.125,0.6666666667,0.8439716312,0.9584949154,0.0415050846,0.01558254832,0.006489322312
I don't think we should try to enforce that the data does not change across calls though.,Solution Discussion,False,89,MEMBER,False,False,False,0.4857142857,0.2394366197,0.4275362319,0.6666666667,0.0398253388,0.9601746612,2.382813646e-05,3.790042324e-06
@gita-omr,Social Conversation,False,9,CONTRIBUTOR,False,False,False,0.02197802198,0.02197802198,0.2142857143,0.6783216783,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"@davek44 I'm using the same code framework that you are using and I observed the same thing: when turns on CODE during training phase and turns off CODE for validation and/or testing phase, the model trains well like the paper described (model converges faster and I was able to use a larger learning rate), however the testing performance is terrible.",Usage,True,352,CONTRIBUTOR,False,False,False,1.0,0.2307692308,0.3982869379,0.25,0.3713273265,0.6286726735,0.000473907732,0.001356181686
But it does seem like a plausible suspect.,Potential New Issues and Requests,False,42,MEMBER,False,False,False,0.1176470588,0.1176470588,0.3211382114,0.5,0.358845198,0.641154802,0.01032797867,0.001373656731
"Following the same code, however: CODE",Bug Reproduction,True,38,NONE,False,False,False,1.0,0.08450704225,0.1432748538,0.75,0.1563439049,0.8436560951,0.001746127121,0.05890874943
it runs if I add the multiprocessing import and  the if statement as show below - I don't work with keras so I don't have more insight CODE,Observed Bug Behaviour,True,139,NONE,False,False,False,0.3943661972,0.2886597938,0.899408284,0.3333333333,0.9814537694,0.0185462306,0.01231978335,0.004293692176
-         It would also be wow to have **GPU resident queues**.,Expected Behaviour,False,63,CONTRIBUTOR,False,False,False,0.44,0.1641791045,0.09708737864,1.0,0.003166427653,0.9968335723,0.02236439613,0.004893293226
"As it is, JIT-ed code doesn't set up either r12 or r2 (for helper calls...  we do set up r12 or r2 for JNI calls).",Solution Discussion,False,114,CONTRIBUTOR,False,False,False,1.0,0.2109375,0.75,0.2166666667,0.0287329189,0.9712670811,6.94e-05,0.003185934733
"The C++ graph building API is being redone right now, so it's not particularly useful to spend much time on it.",Solution Discussion,False,111,MEMBER,False,False,False,1.0,0.2876712329,0.2629310345,0.8,0.1857720333,0.8142279667,0.003082953128,0.02229862595
I encourage the developers to consider making decay=0.9 the default.,Solution Discussion,False,68,NONE,False,False,False,0.7142857143,0.03846153846,0.443254818,0.6,0.3802491548,0.6197508452,0.003984639748,0.00101193657
"2. I have not tried this, I will run the test again and see.",Investigation and Exploration,False,60,NONE,True,False,False,1.0,0.1866666667,0.8571428571,0.1242937853,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
I replaced it with _tf.tuple()_,Usage,False,31,NONE,False,False,False,0.08771929825,0.01923076923,0.3233404711,0.3076923077,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
Balanced GC will not be covered in the first release.,Task Progress,False,53,CONTRIBUTOR,False,False,False,0.1282051282,0.06849315068,1.0,0.8044692737,0.8996448583,0.1003551417,0.0001470921313,0.0005171483439
Please note I'm not going to do this.,Contribution and Commitment,False,37,MEMBER,False,False,False,0.2424242424,0.1095890411,0.9030172414,0.1111111111,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"Just to be clear, to extend a forest, one would do something like: CODE",Solution Discussion,True,71,MEMBER,False,False,False,1.0,0.1971830986,0.8804347826,1.0,0.07845801609,0.9215419839,2.460018212e-05,0.0001366871745
"Notice that you can switch between grid_search module and model_selection module, both ran fine for me.",Investigation and Exploration,False,103,NONE,False,False,False,0.9411764706,0.1649484536,0.7810650888,0.8571428571,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
"When JITClient was still handling CODE, the pointer was still fine.",Investigation and Exploration,True,67,CONTRIBUTOR,False,False,False,0.3666666667,0.0582010582,0.6666666667,0.28,0.3270477495,0.6729522505,0.001859572286,0.0999392835
"No, I must have sorted these things incorrectly.",Social Conversation,False,48,MEMBER,False,False,False,0.7272727273,0.1176470588,0.4918699187,0.75,0.5467479566,0.4532520434,0.01188879527,0.03044075803
"At least it's training now, thx!",Social Conversation,False,32,NONE,False,False,False,1.0,0.008683068017,0.9075907591,1.0,0.3618377584,0.6381622416,0.002231306666,0.05363264296
@M-Davies is running a grinder to confirm.,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.347826087,0.08791208791,1.0,0.02447552448,0.002154449057,0.9978455509,0.004487700419,0.003086545757
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.8857758621,1.0,0.8918655962,0.1081344038,1.0,0.07162521205
"E.g., CODE reproduces the problem on my machine.",Investigation and Exploration,True,48,CONTRIBUTOR,False,False,False,0.4,0.1126760563,0.3947368421,0.3333333333,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"Given the crash is in java.foreign package which I believe is still in preview, I don't think will be but we should still look at the crash to be sure it's a broader issue",Investigation and Exploration,False,171,MEMBER,False,False,False,1.0,0.7234042553,1.0,0.03076923077,0.001674205379,0.9983257946,0.0003091269739,0.001010387239
"""fair game"" is not a type of game: CODE",Potential New Issues and Requests,True,39,MEMBER,False,False,False,0.3913043478,0.2368421053,0.4087591241,0.1428571429,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
Thanks in advance.,Social Conversation,False,18,NONE,False,False,False,0.08108108108,0.04838709677,0.8678414097,1.0,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
CODEis defined in OMR without much description of the expected input parameters [1],Solution Discussion,True,83,CONTRIBUTOR,False,False,False,0.3421052632,0.2765957447,0.05555555556,0.8692307692,0.7299060094,0.2700939906,0.01554507959,0.00748487997
OS: Windows 10 x64 10.0.16299.309Python package: WinPython-64bit-3.6.1numpy (1.14.2)scikit-learn (0.19.1)scipy (1.0.0),Bug Reproduction,False,118,NONE,False,False,False,1.0,0.1134020619,0.8786982249,0.6666666667,0.9706052871,0.02939471292,0.04128957575,0.0165742005
"It's great to hear that it ""just works""!",Social Conversation,False,40,CONTRIBUTOR,True,False,False,0.170212766,0.1194029851,0.5464632455,0.75,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"Adding some advice to the error message (only on OS X), sounds like a good idea, but I am not sure what it should say, maybe ""consider using conda and install scikit-learn with MKL"" or something like this.",Solution Discussion,False,205,MEMBER,False,False,False,1.0,0.5492957746,0.5380116959,1.0,0.4545652645,0.5454347355,0.002465307867,7.597272067e-05
This thread owns VM Exclusive access (0x20 in public flags).,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.4166666667,0.1098901099,0.8,0.3566433566,0.6219792976,0.3780207024,0.002161429347,0.8023255008
Now available inhttps://github.com/tensorflow/tensorflow/commit/9da5fc8e6425cabd61fc36f0dcc1823a093d5c1d#diff-94bbcef0ec8a5cdef55f705e99c2b2ed,Task Progress,False,142,MEMBER,False,False,False,0.4,0.02307692308,0.1755888651,1.0,0.2177695226,0.7822304774,2.921974455e-05,0.0003125903922
What is the failure rate in 100 runs?,Investigation and Exploration,False,37,CONTRIBUTOR,False,False,False,0.3076923077,0.08602150538,0.5714285714,0.2664092664,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
"Repro rate with following command was 1/2:

CODE

Console:

CODE",Task Progress,True,70,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.8625954198,0.8349924434,0.1650075566,0.003611879142,0.03161211786
"I used your core analyzer to look at the coredumps i gave you, and it looks like a jit thread is hanging or something.",Investigation and Exploration,False,118,NONE,True,False,False,1.0,0.3582089552,0.5,0.08379888268,0.001600551775,0.9983994482,0.0001732418111,0.0001922036014
"With that, reproducing this failure was a lot easier, going from each test iteration taking over 25 minutes to taking less than a minute.",Bug Reproduction,False,137,MEMBER,False,False,False,0.75,0.2608695652,0.3333333333,0.7295597484,0.5963082563,0.4036917437,0.01338731827,0.03227550175
Example (untested): CODE,Workarounds,True,24,MEMBER,False,False,False,0.09090909091,0.04838709677,0.6651982379,0.5,0.288728579,0.711271421,0.1151253204,0.02221386295
"However, both CODE and CODE seem to be float 64 arrays ...",Investigation and Exploration,True,58,CONTRIBUTOR,False,False,False,0.55,0.1549295775,0.4122807018,1.0,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"If that passes, I'm going to make a judgement that this was a very intermittent failure.~ It passed",Testing,False,99,NONE,True,False,False,1.0,0.1978021978,1.0,0.03846153846,0.002719058434,0.9972809416,0.003086545757,0.005933531811
"https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/77

I'll have to retry this with the 13.0.1 level when it promotes.",Task Progress,False,141,CONTRIBUTOR,False,False,False,0.5833333333,0.08045977011,0.4444444444,0.9080882353,0.7942021981,0.2057978019,0.006755954606,0.002545177611
"Again, if it reoccurs, don't hesitate to reopen :)",Action on Issue,False,50,MEMBER,False,False,False,0.6428571429,0.09473684211,0.8315789474,1.0,0.1889319923,0.8110680077,7.189240303e-05,0.20086138
I can think of the last reason:  the allocated memory is not properly marked.,Investigation and Exploration,False,77,CONTRIBUTOR,False,False,False,0.3125,0.08620689655,0.9,0.5183823529,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
The .deb file didn't work for me because it did not copy files to the right place.,Solution Discussion,False,82,NONE,False,False,False,0.7727272727,0.1338582677,0.2082111437,0.75,0.2838346655,0.7161653345,3.697445435e-05,0.5779195954
"The 16 byte alignment issue comes from Eigen, unfortunately, which requires the beginning of the memory addresses to be aligned with 16 bytes.",Potential New Issues and Requests,False,142,CONTRIBUTOR,False,False,False,0.5348837209,0.3432835821,0.3841886269,0.6666666667,0.3228761377,0.6771238623,0.04972082678,0.01426913622
"It won't grow much after this, I'm just curious how much entities it can hold and how it will affect the memory and performance.",Potential New Issues and Requests,False,128,CONTRIBUTOR,False,False,False,1.0,0.2526315789,0.7052631579,0.6666666667,0.1887596939,0.8112403061,4.264436363e-05,1.863208436e-05
cryptic error message,Social Conversation,False,21,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.07594936709,0.002331285693,0.9976687143,0.0002246096314,0.01118964345
"assuming the same number of threads created in each run, that leaves only one possibility that virtual or data memory ulimit is exceeded unpredictably with massive concurrent malloc/free going on.  it could be momentarily exceeded though.",Investigation and Exploration,False,238,CONTRIBUTOR,False,False,False,1.0,0.6129032258,0.25,0.1476793249,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
If that doesn't work then we may need your help to try and dummy something up that can be used to help debug the problem.,Contribution and Commitment,False,121,CONTRIBUTOR,False,False,False,0.625,0.3731343284,0.75,0.7262569832,0.1131600924,0.8868399076,0.0001456610252,0.002266795837
"Similar failure observed at an internal JDK8 build CODE(CODE)
CODE",Testing,True,67,MEMBER,False,False,False,1.0,0.1182795699,1.0,0.9034749035,0.8484750271,0.1515249729,0.00290209712,0.005725859998
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5344827586,1.0,0.6203327138,0.3796672862,0.1177654897,0.04744051815
"Right, I am pretty sure I built JVM.",Solution Discussion,False,36,CONTRIBUTOR,False,False,False,0.8,0.04597701149,0.5,0.3345588235,0.759064198,0.240935802,0.0002835062781,0.01035388553
FYI @gita-omr,Contribution and Commitment,False,13,CONTRIBUTOR,False,False,False,0.1153846154,0.06382978723,1.0,0.08461538462,0.005271788046,0.994728212,0.005529938089,0.002175337965
However these may not be the places that cause the wrong java.dll to get loaded.,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.6,0.1515151515,0.6,0.950877193,0.9078950378,0.09210496222,0.001248242127,0.002277636608
The client has to hold the vmaccess when the server walk the reference chain to prevent the object from being moved on the client side.,Expected Behaviour,False,135,CONTRIBUTOR,False,False,False,1.0,0.1322751323,1.0,0.7542857143,0.4488005404,0.5511994596,0.0001510669674,0.0001804525966
-bnorwexec is a contradictory to JIT period.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.2592592593,0.04022988506,0.5,0.8419117647,0.7733602297,0.2266397703,2e-05,4.44e-05
"For Box, you need to change the permissions and create a shared link.",Social Conversation,False,69,CONTRIBUTOR,False,False,False,1.0,0.0977443609,0.3333333333,0.3027989822,0.2305198431,0.7694801569,0.006261517055,1.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2974137931,1.0,0.3073639001,0.6926360999,0.122190955,0.2341900166
"If it doesn't work, contact Gertjan to see whether he can help you.",Contribution and Commitment,False,67,NONE,False,False,False,0.3513513514,0.2166666667,0.6293103448,0.5833333333,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"The new code only uses the CODE with no loop.  

Intentional?",Solution Discussion,True,63,MEMBER,False,False,False,0.9230769231,0.1875,1.0,0.8936170213,0.9828046147,0.01719538533,0.01226695903,0.000432781777
Why is it not mean target encoding?,Potential New Issues and Requests,False,35,MEMBER,False,False,False,0.7777777778,0.109375,0.6727941176,0.5,0.1226644565,0.8773355435,2.888346296e-05,8.868443556e-05
"An example document where CODE causes the error, removing that one token everything is fine.",Investigation and Exploration,True,92,NONE,False,False,False,0.5,0.1578947368,0.4526315789,0.7777777778,0.1598964447,0.8401035553,0.03116866066,0.03531242178
"@zhongyuk If it helps, I have a very similar setup (can't reproduce the issue anymore since reinstalling miniconda), except that I have macOS Sierra instead of OS X El Capitan and that I have numpy 1.11.2 instead of 1.11.1.",Investigation and Exploration,False,223,CONTRIBUTOR,False,False,False,1.0,0.5492957746,0.6315789474,1.0,0.4586954952,0.5413045048,0.003934390567,7.541918537e-05
"FWIW, my machine has no problem fitting iris with this snippet on the development version of sklearn.",Bug Reproduction,False,101,MEMBER,False,False,False,0.9444444444,0.175257732,0.04733727811,1.0,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
Note that removing the PCA step from the pipeline solves the issue.,Solution Discussion,False,67,NONE,False,False,False,0.5454545455,0.1237113402,0.2958579882,0.6666666667,0.8122508057,0.1877491943,0.003762853532,0.0002075199459
"On AIX, the OpenJDK code will fail to compile with xlc 13.",Observed Bug Behaviour,False,58,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.3014705882,0.7589298452,0.2410701548,0.0001148200426,4.13e-05
Really waiting for a machine library in JavaScript.,Expected Behaviour,False,51,NONE,False,False,False,0.7272727273,0.1095890411,0.3512931034,1.0,0.3894640095,0.6105359905,0.1116482733,0.1289154667
"hi,you need to set different scope for every time you use batch norm and give it the reuse input according to the training/test phase(TRUE when test FALSE when train) that works for me.",Usage,False,185,NONE,False,False,False,1.0,0.1346153846,0.5802997859,1.0,0.5064700402,0.4935299598,0.0001139367123,0.0009690200702
"The first time it's called:
CODE
where the last value CODE is the class chain returned by the CODE API, and second-last value CODE is the romClass.",Solution Discussion,True,149,CONTRIBUTOR,False,False,False,1.0,0.4838709677,0.2222222222,0.7868852459,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"Here is the trace: Traceback (most recent call last):File ""tests/test_spacy_nlp.py"", line 231, in test_should_return_none_when_spacy_parsing_failsdoc = self.spacy_nlp.parse(query)File ""spacy_nlp.py"", line 49, in parsereturn SpacyDoc(self.__instance.parser(query))File ""lib/python3.5/site-packages/spacy/language.py"", line 328, in __call__proc(doc)File ""spacy/syntax/parser.pyx"", line 146, in spacy.syntax.parser.Parser.__call__ (spacy/syntax/parser.cpp:6114)spacy.syntax.parser.ParserStateError: Error analysing doc -- no valid actions available. This should never happen, so please report the error on the issue tracker. Here's the thread to do so --- reopen it if it's closed:https://github.com/spacy-io/spaCy/issues/429Please include the text that the parser failed on, which is:'splash On'",Potential New Issues and Requests,False,793,NONE,False,False,False,1.0,0.9578947368,0.8842105263,0.6666666667,0.3119208037,0.6880791963,0.06317627064,0.03932243631
"The latest crash is worse: the handler crashed:
 
 CODE

Right.",Testing,True,67,CONTRIBUTOR,False,False,False,0.6,0.2553191489,0.5,0.4961538462,0.4133072425,0.5866927575,0.01939485533,0.001585706885
Which would be nice to actually give this advice explicitly.,Solution Discussion,False,60,CONTRIBUTOR,True,False,False,0.2272727273,0.15625,0.4705882353,0.9523809524,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"[2] add ""-vm C:/Program Files/Java/jdk1.8.0_191/bin/javaw.exe"" to explicitly specify the location of Java 8 for STS4.",Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,0.3454545455,0.1919191919,0.3333333333,0.8245614035,0.803200419,0.196799581,0.3518178539,0.2306492075
"This results in r3 reaching read-only memory, which causes the seg fault we're seeing.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.5172413793,0.3191489362,0.6666666667,0.5807692308,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"BTW: just tried ""from __future__ import division"" in Python 2.x and did not solve the problem.",Solution Discussion,False,94,NONE,False,False,False,1.0,0.2253521127,0.8596491228,1.0,0.6456750725,0.3543249275,3.473434042e-05,0.0001660605916
A GlobalReference is a pointer to an object that the GC knows about.,Investigation and Exploration,False,68,MEMBER,False,False,False,0.5,0.06878306878,0.1666666667,0.72,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
"I also inspected the bytecode at which the NPE is thrown:
CODE

CODE",Investigation and Exploration,True,71,CONTRIBUTOR,False,False,False,0.3409090909,0.1630434783,0.6666666667,0.1320754717,0.3428264365,0.6571735635,0.0002941917355,0.001046537172
"Writing to the shared cache on every startup affects starting up multiple JVMs concurrently, as each JVM will serialize on the write to the cache.",Solution Discussion,False,146,CONTRIBUTOR,True,False,False,1.0,0.1712328767,1.0,0.8826815642,0.9683408493,0.03165915068,0.01210021257,4.2e-05
"[1] https://github.com/eclipse/openj9/issues/10588#issuecomment-699047069
[2] https://github.com/eclipse/openj9/issues/10588#issuecomment-699089621
[3] https://github.com/eclipse/openj9/issues/10588#issuecomment-700216843
[4] https://github.com/eclipse/openj9/blob/9b680196cdee54cd185340e287e13ad924b9052a/runtime/compiler/env/j9method.cpp#L3362
[5] https://github.com/eclipse/omr/blob/0b9653c23ba22247f66c11ad6df8a3b46c2c4738/compiler/p/codegen/OMRTreeEvaluator.cpp#L4159-L4160
[6] https://github.com/eclipse/openj9/blob/9369e4e005a130411ae2606a25d08588a0920c7a/runtime/compiler/p/codegen/J9TreeEvaluator.cpp#L12052
[7] https://github.com/eclipse/openj9/issues/10588#issuecomment-699196511",Solution Discussion,False,696,CONTRIBUTOR,False,False,False,0.6451612903,0.4255319149,1.0,0.8346153846,0.6986733294,0.3013266706,0.2919761514,0.1217072968
The idea here would be for the CODE object to register interest in all OOV strings it owns.,Solution Discussion,True,91,MEMBER,False,False,False,0.45,0.2903225806,0.4008810573,0.8333333333,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"100/100 passed for s390_linux CODE
100/100 passed for mac_osx CODE
50/50 passed for x86-64_window CODE
Will try reproducing using stock nightly build.",Testing,True,153,CONTRIBUTOR,False,False,False,1.0,0.2826086957,1.0,0.1132075472,0.3379377875,0.6620622125,0.01472771154,0.01482991505
"Looking at the java core looks like the mutex is unowned. 

CODE

To Note where the mutex is reserved:

CODE
https://github.com/eclipse/openj9/blob/64ec0ba89116cf222135206decd82e66b05c6a4a/runtime/gc_glue_java/GlobalCollectorDelegate.cpp#L172-L176

This occurs right before the CODE, which calls the unloading hooks.",Solution Discussion,True,325,CONTRIBUTOR,False,False,False,1.0,0.4065934066,0.5,0.9265734266,0.8786230746,0.1213769254,0.003869158807,0.001947289162
I guess if you still want to try some more try just hammering the restart button on the boot dash for a while.,Investigation and Exploration,False,110,NONE,True,False,False,0.5111111111,0.2323232323,0.1428571429,0.3964912281,0.1209219988,0.8790780012,0.003294872886,0.07075263326
-         What version of scikit-learn is this?,Investigation and Exploration,False,47,MEMBER,False,False,False,0.4444444444,0.0824742268,0.0325443787,0.4444444444,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
I tried launching it on CLI just now.,Investigation and Exploration,False,37,NONE,True,False,False,0.25,0.08080808081,0.1111111111,0.7157894737,0.2160643057,0.7839356943,0.001276611266,0.001471142506
@peterbraden sorry for the prolonged silence.,Social Conversation,False,45,MEMBER,False,False,False,0.2857142857,0.08219178082,0.2564655172,0.2,0.1857720333,0.8142279667,0.003082953128,0.02229862595
"Move the code on cell definition into seq2seq_f: CODEThen ""python translate.py --data_dir data/ --train_dir checkpoint/ --size=256 --num_layers=2 --steps_per_checkpoint=50"" can work.",Solution Discussion,True,182,NONE,False,False,False,1.0,0.02894356006,0.900990099,1.0,0.361294926,0.638705074,0.06892677638,0.002231306666
Is there a way to cut down the runtime to failure (assuming I can reproduce eventually),Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,1.0,0.1203007519,0.5,0.5114503817,0.5597441839,0.4402558161,0.0002117421226,0.03847288965
"The most conservative setup that still reproduces this livelock scenario is:
- CODE for booking and customer services
- CODE for flight service

If I use noOpt level for the flight service, then I cannot reproduce the livelock, but JMeter still throws errors after a while (the system is mostly idle and the throughput drops to 0.1).",Bug Reproduction,True,337,CONTRIBUTOR,False,False,False,1.0,0.7375,0.125,0.7647058824,0.9391761414,0.06082385865,0.06820979376,0.04955018304
"@AyalaSaenzJorge this is a place for informative comments, not an opinionated-firestarters.",Social Conversation,False,91,NONE,False,False,False,0.6666666667,0.1643835616,0.849137931,0.5,0.8120589024,0.1879410976,0.0006469111266,0.001164130183
Same error.,Observed Bug Behaviour,False,11,NONE,True,False,False,0.0625,0.01503759398,0.3333333333,0.1475826972,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
its class is unloaded ?,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,0.04395604396,0.04395604396,0.5,0.7062937063,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
CODE,Solution Discussion,True,4,NONE,False,False,False,0.03846153846,0.006535947712,0.5176848875,0.6,0.1448670515,0.8551329485,0.02443361297,0.06319984844
"Precisely, the crash is occurring in the following portion of the compiled method. 

CODE",Investigation and Exploration,True,91,CONTRIBUTOR,False,False,False,0.5172413793,0.3191489362,0.08333333333,0.5538461538,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"I'm using slim.batch_norm, but get good training performance and poor validation/test performance.",Usage,False,98,CONTRIBUTOR,False,False,False,0.4193548387,0.05,0.5653104925,0.25,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
So I looked the disassembly ([object.clone.diss.txt] URL .,Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.0752688172,0.0752688172,0.5833333333,0.3938223938,0.3937305493,0.6062694507,0.03688423691,0.3568236584
This test assumes that the hash value of the tested tokens always produces the same results (in which case two of those produce a collision).,Potential New Issues and Requests,False,141,MEMBER,False,False,False,0.6944444444,0.3676470588,0.2642276423,0.6,0.3543056001,0.6456943999,0.009464004531,0.003096425316
OpenJ9 allocates small java stacks initially and grows them as need be (the slush area is the same regardless of the java stack size).,Solution Discussion,False,134,CONTRIBUTOR,False,False,False,0.5217391304,0.2307692308,0.9,0.8839779006,0.3185054309,0.6814945691,0.006311966217,1.18e-05
what did you guys change...?,Social Conversation,False,28,NONE,False,False,False,0.2272727273,0.07042253521,0.3040935673,1.0,0.3239552694,0.6760447306,0.1677394642,0.0003023686606
But really love the work you're doing.,Social Conversation,False,38,NONE,True,False,False,0.1944444444,0.1842105263,0.5547445255,0.875,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
fixes should be merged,Action on Issue,False,22,CONTRIBUTOR,False,False,False,1.0,0.03007518797,1.0,0.9847328244,0.9941558944,0.005844105639,0.2148438586,0.0005988459646
Nothing is being printed... ![screen shot 2017-08-08 at 16 43 35] URL ,Investigation and Exploration,False,70,NONE,False,False,False,1.0,0.1443298969,0.3668639053,1.0,0.8123987667,0.1876012333,1.887267362e-06,3.019627779e-06
"Is there any code out there that uses this, even if that code is undocumented?",Usage,False,78,NONE,False,False,False,0.5,0.223880597,0.4479889043,0.2222222222,0.402192445,0.597807555,0.001827732055,0.008699923145
"I recommend starting with something smaller, such as using only the Wikipedia page titles, to test out your pipeline.",Solution Discussion,False,117,NONE,False,False,False,0.5,0.1241830065,0.5659163987,0.3076923077,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
"ValueError: Attempt to reuse RNNCell <tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl.GRUCell object at 0x11d32cbd0> with a different variable scope than its first use. First use of cell was with scope 'rnn/multi_rnn_cell/cell_0/gru_cell', this attempt is with scope 'rnn/multi_rnn_cell/cell_1/gru_cell'. Please create a new instance of the cell if you would like it to use a different set of weights. If before you were using: MultiRNNCell([GRUCell(...)] * num_layers), change to: MultiRNNCell([GRUCell(...) for _ in range(num_layers)]). If before you were using the same cell instance as both the forward and reverse cell of a bidirectional RNN, simply create two instances (one for forward, one for reverse). In May 2017, we will start transitioning this cell's behavior to use existing stored weights, if any, when it is called with scope=None (which can lead to silent model degradation, so this error will remain until then.)",Bug Reproduction,False,936,NONE,False,False,False,1.0,0.1982633864,0.9504950495,0.3333333333,0.4233801806,0.5766198194,0.06521718752,0.3845326686
"if you want to continue using that option, either:
1) disable SED globally on the machine;  or
2) exempt java explicitly (i.e. reset -bnorwexec)",Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,1.0,0.1551724138,1.0,0.8455882353,0.7733602297,0.2266397703,2e-05,4.44e-05
What I've done is to reduce the size of X... with something like:,Investigation and Exploration,False,65,NONE,False,False,False,0.5384615385,0.2058823529,0.5365853659,0.25,0.5694868162,0.4305131838,0.005325768668,0.0007054752894
Not so!,Social Conversation,False,7,MEMBER,False,False,False,0.06666666667,0.05263157895,0.1678832117,0.1111111111,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"But as soon as it has, warm_starting will make it possible to compute the regularization path faster, exactly as for ElasticNet.",Solution Discussion,False,128,MEMBER,False,False,False,1.0,0.2957746479,0.5471014493,1.0,0.04262877546,0.9573712245,8.618836988e-05,4.569106579e-05
I second SCREEN_NAME 's sentiment above.,Social Conversation,False,40,CONTRIBUTOR,False,False,False,0.125,0.07462686567,0.2468793343,0.125,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"I7-6700HQ
 
 That's very close to the i7-6820HQ that I ran on, which makes the difference in absolute times we are seeing pretty weird.",Investigation and Exploration,False,137,NONE,True,False,False,1.0,0.1897810219,0.5,0.4869888476,0.02091235162,0.9790876484,1.41e-05,0.0002397714096
@jhseu You mentioned that you consider removing the CODEfeed_dictCODE copy as orthogonal to this issue.,Potential New Issues and Requests,True,103,NONE,False,False,False,0.4545454545,0.223880597,0.3800277393,0.8333333333,0.3166940255,0.6833059745,0.1413171275,0.04972082678
3.         Avoid the CODE methods on the spaCy objects.,Workarounds,True,55,MEMBER,False,False,False,0.4545454545,0.2631578947,0.6788321168,0.6666666667,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
(or could we change that value?),Solution Discussion,False,32,MEMBER,False,False,False,0.4285714286,0.08450704225,0.1739130435,1.0,0.03913665065,0.9608633494,0.001972331007,0.000142372238
Please note TensorFlow can not depend on [rules_nodejs] URL . CODE,Solution Discussion,True,66,MEMBER,False,False,False,0.303030303,0.1369863014,0.9073275862,0.2222222222,0.9204563137,0.0795436863,0.01198832771,0.1095689952
And if so how can we overcome this?,Solution Discussion,False,35,NONE,True,True,False,0.5333333333,0.06299212598,0.01759530792,1.0,0.0,1.0,0.0,0.001987007177
Can you try that?,Social Conversation,False,17,NONE,True,False,False,0.4,0.05,1.0,0.2892156863,0.1734997986,0.8265002014,0.003212874696,0.3694370945
I'm compressing the logs you asked for right now.,Task Progress,False,49,NONE,True,False,False,0.4736842105,0.1343283582,0.6666666667,0.4189944134,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
From the earlier GAC's comment it sounded like it's JIT responsibility to set R2 if calling directly from JITtecd code.,Solution Discussion,False,119,CONTRIBUTOR,False,False,False,1.0,0.15625,0.6666666667,0.1833333333,0.02864858699,0.971351413,0.0003038415884,5.3e-05
"For example, tokenisation really works already for most languages.",Solution Discussion,False,66,CONTRIBUTOR,False,False,False,0.6428571429,0.15,0.3448275862,1.0,0.1948898442,0.8051101558,0.01700768191,0.005299459514
how would CODE work in our setting - is this correct:: CODE,Solution Discussion,True,59,MEMBER,False,False,False,0.4583333333,0.1549295775,0.6485507246,0.3333333333,0.06514439128,0.9348556087,3.516317045e-05,0.0003479469411
I could only find sentence tokenizations and word similarities.,Potential New Issues and Requests,False,63,NONE,False,False,False,0.6428571429,0.2368421053,0.9854014599,1.0,0.2224968185,0.7775031815,0.2540453279,1.0
But if its hard to make OpenJ9 run correctly with 'wacky' stuff in its environment then perhaps it might be an option.,Workarounds,False,118,NONE,True,False,False,1.0,0.2222222222,1.0,0.898245614,0.9020662178,0.09793378223,0.00534555638,0.002496484253
"@snnn Well I'll look into it, but since my knowledge in C++ isn't so profound we'll see how successfully I'll be.",Social Conversation,False,113,NONE,False,False,False,0.84,0.3134328358,0.79889043,0.5,0.610290121,0.389709879,0.009944877922,0.006779557496
I kicked off a large batch of 7 runs over the weekend to try and reproduce it with the limitfile using @ChengJin01's setup and it failed 0/7 times.,Bug Reproduction,False,147,CONTRIBUTOR,False,False,False,0.7,0.2105263158,0.3076923077,0.6539440204,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"I am using a 3 year old macbook pro, 16GB ram and core i7 and my scikit-learn version is 0.19.",Observed Bug Behaviour,False,94,NONE,False,False,False,0.511627907,0.2268041237,0.4053254438,0.1666666667,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
By pinpointing where this and other machines diverge in their calculation...,Investigation and Exploration,False,76,MEMBER,False,False,False,0.7333333333,0.1617647059,0.2195121951,0.5,0.3297876142,0.6702123858,0.03928665156,0.06296237465
"ah, default Xms is only 8M, that would hurt",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,1.0,0.07299270073,1.0,0.3977695167,0.02032603431,0.9796739657,2.03e-05,0.0002559218155
We should fix that.,Task Progress,False,19,CONTRIBUTOR,False,False,False,0.1428571429,0.005788712012,0.3399339934,0.5,0.07171178222,0.9282882178,0.001538799449,8.78093455e-06
"I could also accept, forsimplicity, a variant of 3.",Solution Discussion,False,51,MEMBER,False,False,False,0.4285714286,0.140625,0.5036764706,0.75,0.07583037256,0.9241696274,0.006398297259,0.0001680122564
Any comments on the above strategies?,Contribution and Commitment,False,37,CONTRIBUTOR,False,False,False,0.5454545455,0.09375,1.0,0.2411347518,0.1540808109,0.8459191891,0.1929437336,0.6410820506
Looks very difficult.,Social Conversation,False,21,NONE,False,False,False,1.0,0.04109589041,0.3879310345,1.0,0.4606533131,0.5393466869,0.2040658243,0.1785457004
This might have something to do with state between the documents (don't know what if any is kept).,Investigation and Exploration,False,98,NONE,False,False,False,0.6,0.1894736842,0.3894736842,0.1111111111,0.1598964447,0.8401035553,0.03116866066,0.03531242178
Thank you.,Social Conversation,False,10,NONE,False,False,False,0.1052631579,0.002894356006,0.8580858086,0.6666666667,0.2925508814,0.7074491186,0.0001064391661,5.387222008e-05
"Please remove the assignee, as this issue is inviting external contributions.",Action on Issue,False,77,MEMBER,False,False,False,1.0,0.04230769231,0.982869379,0.3333333333,0.9623796302,0.03762036985,0.1344801204,0.2238197937
"No, but I don't see why they should be excluded.",Solution Discussion,False,48,CONTRIBUTOR,False,False,False,0.5882352941,0.05747126437,0.25,0.3786764706,0.7654520476,0.2345479524,5.66e-05,1.58e-05
But with images this can be hardly done for the entire dataset in memory.,Workarounds,False,73,NONE,False,False,False,0.3783783784,0.2089552239,0.7836338419,0.5,0.6090011473,0.3909988527,0.000271284095,0.000261613555
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6831896552,1.0,0.7051698204,0.2948301796,0.0008082516026,6.462471741e-05
It can be changed to take the \#else path.,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.4090909091,0.05172413793,1.0,0.1213235294,0.7188702831,0.2811297169,0.0002320026376,0.00724878302
Extract from the [spark 1.6.0 manual] URL  CODE,Solution Discussion,True,47,NONE,False,False,False,0.1578947368,0.05882352941,0.4758842444,0.5714285714,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
@dmyersturnbull do you get the error when running the snippet from https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-218365487?,Bug Reproduction,False,147,MEMBER,False,False,False,1.0,0.1690140845,0.2456140351,1.0,0.222972002,0.777027998,0.003913356226,0.007534999345
So _in theory_,Social Conversation,False,14,CONTRIBUTOR,True,False,False,0.1034482759,0.046875,0.5,0.4184397163,0.759681792,0.240318208,0.005380920094,0.001158893425
Build is broken so testing hasn't been run yet.,Investigation and Exploration,False,47,MEMBER,False,False,False,0.5294117647,0.05172413793,0.6666666667,0.04044117647,0.663539314,0.336460686,1.0,0.02235494254
Given that we could get the flags of the field and determine its accessibility etc we should be able to get a resolved defining class.,Solution Discussion,False,134,CONTRIBUTOR,False,False,False,1.0,0.4032258065,0.25,0.2677595628,0.4942847726,0.5057152274,0.01863655198,0.01288492485
It seems good to me.,Social Conversation,False,20,MEMBER,False,False,False,0.2272727273,0.1315789474,0.700729927,1.0,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
"will try to reproduce now ""locally""",Bug Reproduction,False,35,MEMBER,True,False,False,0.6666666667,0.08823529412,0.1260162602,1.0,0.2728067621,0.7271932379,0.004772231277,0.004433478825
"It's reproducible on internal jenkins machine, failure rate seems to be 4/12 on nightly build.",Observed Bug Behaviour,False,94,CONTRIBUTOR,False,False,False,1.0,0.3191489362,0.25,0.1538461538,0.1048089134,0.8951910866,0.05832768032,0.01345561023
This is because the same cell definition is used both for encoder and decoder.,Investigation and Exploration,False,78,NONE,False,False,False,0.4242424242,0.02026049204,0.7392739274,0.25,0.272648067,0.727351933,0.02402499291,0.006610382458
"A user getting OOM can either use a beefier machine, or find help to re-tune the MALLOCOPTIONS with the caveat that it may affect perf.",Expected Behaviour,False,135,CONTRIBUTOR,True,False,False,0.8387096774,0.4193548387,1.0,0.5738396624,0.4797361547,0.5202638453,0.003593754102,0.003640426233
Then you can see if there's other places in the spaCy code that would need to change in accordance and we can orchestrate something from there :),Task Progress,False,145,NONE,True,False,False,0.7941176471,0.7105263158,0.6350364964,1.0,0.004047128885,0.9959528711,2.745084526e-05,4.078315706e-05
"I ran AcmeAir mono to see if that method even shows in the vlog, but it doesn't (The intent was to artificially recompile it at hot and then fail on purpose).",Investigation and Exploration,False,158,CONTRIBUTOR,False,False,False,1.0,0.3875,1.0,0.2696078431,0.1635245022,0.8364754978,0.1612106274,0.05981079416
"https://github.com/markehammons/OpenJ9Issue

You'll need sbt to build and run it, which you can get [here] URL ",Social Conversation,False,113,NONE,True,False,False,0.6153846154,0.2388059701,1.0,0.7430167598,0.1140492878,0.8859507122,0.002266795837,0.0009299896227
"By default a signal runs on the stack of the thread that receives it, and probably the stack in X86 is identified by RSP.",Solution Discussion,False,121,NONE,True,False,False,1.0,0.2307692308,0.3333333333,0.9116022099,0.3217031432,0.6782968568,0.005051300017,0.0136228909
"1) Verified that ppcCodeSync calls all the right synchronization instructions
2) was able to step through the debugger and put a breakpoint on the bctr instruction that jumps to the compiled code (from jitTransition())
3) ctr register points to the method entry and the method entry contains the right instruction
4) next stepi gives ""program not active"".",Task Progress,False,358,CONTRIBUTOR,False,False,False,1.0,0.3448275862,0.5,0.1948529412,0.7340627309,0.2659372691,0.004173448668,0.03667212771
"For 0.24, why don't we fail the compilation as we did in the 0.23 release (@Leonardo2718 to reintroduce the fix in 0.24) to ""gracefully"" avoid this problem.",Solution Discussion,False,156,CONTRIBUTOR,False,False,False,0.6428571429,0.435483871,0.3333333333,0.5355191257,0.6839930416,0.3160069584,0.1091893746,0.01660963043
"Same with ('Scikit-Learn', '0.18.dev0')",Bug Reproduction,False,39,NONE,True,False,False,1.0,0.07042253521,0.01754385965,1.0,4.679838583e-05,0.9999532016,0.0002726161379,0.02136065067
t-SNE fails with array must not contain infs or NaNs (OSX specific),Observed Bug Behaviour,False,67,NONE,True,True,False,1.0,0.1830985915,0.002923976608,0.2,0.0,1.0,0.0,0.0002726161379
I was able to get a stack trace for this crash.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,1.0,0.2340425532,0.5,0.2846153846,0.144346279,0.855653721,0.02092045419,0.9710937657
What would be really great is to continue where SCREEN_NAME  stopped and further isolate the problem:https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-258311980,Investigation and Exploration,False,180,MEMBER,False,False,False,0.71875,0.323943662,0.6169590643,0.8,0.4572983615,0.5427016385,0.001200894845,0.004204377413
So I have one script for training (similar to cifar10_multigpu.py) and one for testing (similar to cifar10_eval.py).,Usage,False,116,NONE,False,False,False,0.6538461538,0.06538461538,0.2012847966,0.25,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"for pinning down the symptom, maybe it is good to launch 24,buckets ...  28,buckets, and 29/30/31,buckets.",Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,1.0,0.2580645161,0.5,0.1265822785,0.03801766169,0.9619823383,0.001350574796,0.04168404717
The input text is currently not saved/represented on the document at the moment.,Solution Discussion,False,80,MEMBER,False,False,False,0.4242424242,0.2258064516,0.4405286344,0.5,0.2163098383,0.7836901617,0.001341566856,2.040170794e-05
Is this what is expected to do ?,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.137254902,0.07070707071,1.0,0.4280701754,0.1408865936,0.8591134064,0.07075263326,0.1924076078
The models are performing as expected.,Solution Discussion,False,38,NONE,False,False,False,0.2857142857,0.008683068017,0.7227722772,0.4,0.2668032658,0.7331967342,0.00251122862,0.02402499291
"So, somehow the CODE function doesn't work properly (maybe due to some BLAS thing).",Investigation and Exploration,True,83,CONTRIBUTOR,False,False,False,0.5833333333,0.1971830986,0.4824561404,1.0,0.4156673014,0.5843326986,0.0004713353126,0.003024101758
"Again, changing the method to exact (CODE) gets rid of the error.",Solution Discussion,True,65,NONE,False,False,False,0.375,0.1690140845,0.9356725146,0.75,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"In practice, I think we can achieve that without adding any new function to our API.",Solution Discussion,False,84,MEMBER,False,False,False,0.5333333333,0.2253521127,0.8115942029,0.1818181818,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"However, we may also be able to improve stability by choosing a better random data production approach; this random seed produces data where the following are the smallest differences between any pairwise distances in X: CODE",Solution Discussion,True,225,MEMBER,False,False,False,1.0,0.5294117647,0.8455284553,0.6923076923,0.6243074007,0.3756925993,0.05176800464,0.02547446062
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.04310344828,1.0,0.0004019341398,0.9995980659,0.0002144566821,0.004187991532
These instructions are outdated believe me.,Investigation and Exploration,False,43,MEMBER,False,False,False,0.1714285714,0.0618556701,0.7366863905,0.1,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
"Try delete your old installation, and then sudo ldconfig to update the dynamic links.",Solution Discussion,False,85,NONE,False,False,False,0.5,0.1102362205,0.7976539589,1.0,0.68653707,0.31346293,0.2453262441,0.1641710142
I'm going to try requesting access to the machine at Adopt to see if I have better luck reproducing the failure.,Task Progress,False,112,CONTRIBUTOR,False,False,False,0.875,0.3387096774,0.6666666667,0.1202185792,0.1047688942,0.8952311058,0.0001562891595,1.0
[1] https://github.ibm.com/runtimes/openj9/commit/54ff80e51f1bc6d11c574548e3f6e4fbf03e3790,Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.04651162791,0.02985074627,1.0,0.4450867052,0.00530660923,0.9946933908,5.04e-06,3.62e-05
I will have to spin up my Windows machine but running quickly on my Linux machine I see the following results.,Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,0.4375,0.1532846715,0.3333333333,0.3159851301,0.01977002475,0.9802299753,0.003972585721,0.0002223786649
"If that is still the way you are thinking of going with this and you're thinking of using multiple string stores for OOV words, I'd also just like to put out there that it might be a good idea to use some kind of data structure for storing them other than an array, especially if there are a lot of them.",Solution Discussion,False,304,NONE,True,False,False,1.0,1.0,0.7753303965,0.6666666667,0.3260702381,0.6739297619,0.1206599722,1.0
"@rth, do you mind looking into the CODE failure above?",Potential New Issues and Requests,True,54,MEMBER,False,False,False,1.0,0.1470588235,0.1422764228,1.0,0.2748508423,0.7251491577,0.0001153346778,0.01003549822
"@lesshaste For the issue about NaNs as separate category, see https://github.com/scikit-learn/scikit-learn/issues/10465",Potential New Issues and Requests,False,119,CONTRIBUTOR,True,False,False,0.4583333333,0.171875,0.9044117647,0.1666666667,0.2716685717,0.7283314283,0.03415611878,0.7749660924
"This looks like a dup of this as well https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.openjdk_ppc64le_linux_Personal/4/
java/util/jar/JarFile/ScanSignedJar.java
CODE",Investigation and Exploration,True,177,CONTRIBUTOR,False,False,False,1.0,0.1978021978,1.0,0.2062937063,0.3546733227,0.6453266773,0.0001694634556,0.0007155979557
"We could have a more explicit version of copy-on-write, where all the classes track whether they've been changed, and then the models should refuse to be pickled if the state is unclean.",Solution Discussion,False,186,MEMBER,False,False,False,0.7608695652,0.2287581699,0.4083601286,0.6315789474,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
That's where I would like to see feedback.,Social Conversation,False,42,CONTRIBUTOR,True,False,False,0.275862069,0.125,0.2132352941,0.5,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
"The error talks about attribute CODE missing from CODE, whether or not I have a CODE in the IPython Notebook or not.",Observed Bug Behaviour,True,116,NONE,False,False,False,1.0,0.2268041237,0.2218934911,0.5,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
"I managed to recompile that method at hot, but it didn't reach the scratch memory limit, so I reduced the limit with an option for that method only.",Task Progress,False,148,CONTRIBUTOR,False,False,False,1.0,0.35,0.25,0.3088235294,0.2326748385,0.7673251615,0.004429301533,0.02640472652
@AlenBadel there is a grinder in https://github.com/eclipse/openj9/issues/10580#issuecomment-694222270 which crashed 3/20 on a rhel7 machine.,Investigation and Exploration,False,141,CONTRIBUTOR,False,False,False,1.0,0.2978723404,0.3333333333,0.2730769231,0.1405282549,0.8594717451,0.006159641184,0.02092045419
"Now I was under the impression that in that case, we transition to the interpreter which would then run the CODE code.",Solution Discussion,True,118,CONTRIBUTOR,False,False,False,1.0,0.2365591398,0.4444444444,0.6293436293,0.5537917672,0.4462082328,0.003696630136,0.001219776039
"I'd also rather spaCy didn't depend directly on Gensim, because that drags in scipy, so in total it's a fairly heavy-weight dependency.",Potential New Issues and Requests,False,135,MEMBER,False,False,False,1.0,0.6315789474,0.802919708,0.4285714286,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
"file a bug report with Microsoft

I think @charliegracie was in communication at one point, not sure if we got as far as filing a bug.",Social Conversation,False,136,CONTRIBUTOR,True,False,False,1.0,0.2288135593,1.0,0.1757575758,0.3924343933,0.6075656067,0.008262538037,0.00221507324
"However, nodes can also be deleted, so the true number of nodes is reflected by CODE.",Investigation and Exploration,True,85,CONTRIBUTOR,False,False,False,0.5714285714,0.2,0.4,0.5,0.5901481642,0.4098518358,0.0006727318859,0.002367610279
4.         Write a lemmatizer and morphological analyser.,Solution Discussion,False,57,MEMBER,False,False,False,0.1333333333,0.1333333333,0.224137931,0.8,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Failed to load the native TensorFlow runtime.,Bug Reproduction,False,45,NONE,False,False,False,0.1891891892,0.05511811024,0.3958944282,0.6363636364,0.3802587264,0.6197412736,0.006558528713,0.00183836987
"With the default settings, this test will fail every-time except for the first run if the SCC has been destroyed prior.",Bug Reproduction,False,119,CONTRIBUTOR,False,False,False,0.6875,0.2365591398,0.75,0.2934362934,0.3809305973,0.6190694027,0.003566073067,0.004767198096
We need to  figure out what they actually should be and what is the correct target.,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,1.0,0.1328125,1.0,0.2333333333,0.03092806384,0.9690719362,0.003185934733,0.001540680846
"I see you used the same name for both, I'm not sure how that would work out...",Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,1.0,0.2537313433,1.0,0.3240223464,0.003702163483,0.9962978365,0.0001999606974,9.22e-05
The CODE don't have function names for the native stack.,Investigation and Exploration,True,56,CONTRIBUTOR,False,False,False,0.5882352941,0.1333333333,0.2,0.197740113,0.002600687443,0.9973993126,0.0006595011379,0.00112141451
"For now, you can manually pipeline the output of an CODE op with the CODE op in a similar manner to the benchmark code.",Workarounds,True,119,CONTRIBUTOR,True,False,False,0.5106382979,0.3582089552,0.5561719834,1.0,0.4592244679,0.5407755321,0.003916059713,0.008479027653
So set the appropriate decay for your training step numbers.,Usage,False,60,NONE,False,False,False,0.3448275862,0.03846153846,0.9357601713,0.3529411765,0.7995481369,0.2004518631,0.3206669123,0.722664447
"Given past results, I should also ask if the behavior that you observed in this regard was consistent or not.",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.25,0.25,0.6666666667,0.9215686275,0.9666406206,0.03335937939,0.04562398057,0.02395737432
"I would, but I can't find them.",Social Conversation,False,31,NONE,True,False,False,0.1555555556,0.07070707071,0.3333333333,0.03859649123,0.09758727792,0.9024127221,0.01583808516,0.005467138405
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2413793103,1.0,0.147710329,0.852289671,0.07537765069,0.02199475699
What is the harfbuzz fix?,Solution Discussion,False,25,CONTRIBUTOR,False,False,False,0.5555555556,0.02873563218,0.5,0.4411764706,0.7660620102,0.2339379898,0.0005874486337,0.000396081896
So CODE in SGDClassifier can not be used for model selection.,Solution Discussion,True,61,MEMBER,False,False,False,0.7333333333,0.1549295775,0.4601449275,0.2,0.04249542779,0.9575045722,0.0028917672,1.056298833e-05
I think we're in agreement here.,Social Conversation,False,32,MEMBER,False,False,False,0.2307692308,0.09677419355,0.4581497797,0.05882352941,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
Starting the 'OpenJ9' app serveral times in a row.,Investigation and Exploration,False,50,NONE,True,False,False,0.2,0.09090909091,0.2857142857,0.4,0.1209219988,0.8790780012,0.003294872886,0.07075263326
"My suggestion is to attempt to reproduce the problem while logging the method via 

CODE",Bug Reproduction,True,90,CONTRIBUTOR,True,False,False,0.4102564103,0.25,1.0,0.7021276596,0.948495458,0.05150454195,0.001656592469,8.9e-05
CODE (and similarly CODE) prevents storing new aot but doesn't stop loading of existing aot already in the cache.,Investigation and Exploration,True,113,CONTRIBUTOR,False,False,False,1.0,0.2043010753,0.5,0.2393822394,0.3429758343,0.6570241657,0.0116494207,0.01282443431
Are you planning to specifically try excluding CODE as well since that was the method seen before the livelock happened ?,Investigation and Exploration,True,121,CONTRIBUTOR,False,False,False,0.25,0.25,0.3333333333,0.9117647059,0.9666406206,0.03335937939,0.04562398057,0.02395737432
Please let us know if we can help.,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.7272727273,0.04597701149,1.0,0.08455882353,0.7182331717,0.2817668283,0.0106775552,7.05e-05
"Ok, guys.",Social Conversation,False,9,NONE,False,False,False,0.2222222222,0.0157480315,0.4897360704,0.5,0.404942323,0.595057677,0.001195753854,0.01097919447
"This requires a non negligible amount of time and effort, I completely agree, but without it, I am afraid that there is not much we can do to investigate the problem you are facing.",Social Conversation,False,181,MEMBER,False,False,False,0.8292682927,0.3505154639,0.7100591716,1.0,0.850408121,0.149591879,7.362329309e-05,1.730326181e-05
I have removed pip installs of numpy and updated conda.,Solution Discussion,False,55,NONE,False,False,False,0.4,0.1408450704,0.985380117,0.4,0.9998782054,0.0001217945808,0.8838761808,0.0007094938778
"@groeges wrote:
Have just seen that the minimum compiler version for JDK 13 on AIX is now XLC 16.1 (so that the newer xlclang/xlclang++ can be used).",Observed Bug Behaviour,False,150,CONTRIBUTOR,False,False,False,1.0,0.1666666667,1.0,0.02205882353,0.09584147938,0.9041585206,0.2685593546,0.3169477336
This is fantastic!,Social Conversation,False,18,NONE,False,False,False,0.09375,0.0447761194,0.5575589459,0.2,0.4602787203,0.5397212797,0.008479027653,0.0006250222677
"module is the memory hogger here, in addition to invisible thread system stacks maybe.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,1.0,0.2258064516,1.0,0.6666666667,0.4823643574,0.5176356426,0.0007438370909,0.0288492111
"Good advice, thank you.",Social Conversation,False,23,NONE,False,False,False,0.1818181818,0.0412371134,0.5118343195,0.1666666667,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
"I can make here snippet ""complete"" and post for you.",Social Conversation,False,52,NONE,False,False,False,0.4545454545,0.1030927835,0.7278106509,0.6,0.8504261564,0.1495738436,8.045718754e-06,1.849522015e-05
That would be less dependent on the actual hashing implementation...,Potential New Issues and Requests,False,68,MEMBER,False,False,False,0.1470588235,0.1470588235,0.3292682927,0.8333333333,0.358845198,0.641154802,0.01032797867,0.001373656731
"From a very practical point of view, I like CODE.",Solution Discussion,True,49,MEMBER,False,False,False,0.3846153846,0.1408450704,0.6811594203,0.6363636364,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
[image] URL,Investigation and Exploration,False,12,CONTRIBUTOR,False,False,False,0.03076923077,0.0202020202,0.9333333333,0.3122807018,0.1148232942,0.8851767058,0.002853124861,0.002074999899
"In a near future, I would like to implement generic meta-ensembles that could combine any kind of estimators together.",Task Progress,False,118,MEMBER,False,False,False,0.6666666667,0.2816901408,0.8043478261,0.09090909091,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"In case we don't provide the CODE keyword, the only way to obtain the new behaviour is by manually passing CODE, which can be a slight inconvenience.",Solution Discussion,True,149,CONTRIBUTOR,True,False,False,0.421875,0.421875,0.4816176471,0.4,0.07437602253,0.9256239775,0.0003197521392,0.006398297259
3.         Has an index file.,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.2727272727,0.08955223881,0.4937586685,1.0,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"The issue is that it was sometimes assumed that the Unsafe method was a JNI call, which is no longer true for the wrapper methods that remain in sun.misc.Unsafe..",Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,0.96875,0.4626865672,0.6666666667,0.9162011173,0.3165978639,0.6834021361,0.4477852629,0.1312948834
*There's a fair bit of missing debug data in this debug build.,Investigation and Exploration,False,62,CONTRIBUTOR,True,False,False,0.2222222222,0.09375,1.0,0.07222222222,0.006753802741,0.9932461973,0.009802165843,0.02838288421
"The ""How It Works"" page says a little bit more about this, but not enough.",Solution Discussion,False,74,MEMBER,False,False,False,0.25,0.25,0.2155172414,0.76,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Under nextgenHCR we need to run OSRguardInsertion / HCRGuard removal for the program to be valid - there is no implementation for that helper and never will be.,Investigation and Exploration,False,160,CONTRIBUTOR,False,False,False,1.0,0.1954887218,1.0,0.6335877863,0.6092687087,0.3907312913,0.001209954986,2.37e-05
"We wondered if we needed to add a limit, but not sure if it is necessary.",Solution Discussion,False,73,CONTRIBUTOR,True,False,False,0.7619047619,0.1095890411,0.6666666667,0.6927374302,0.2631528405,0.7368471595,0.0001740403081,4.81e-05
CODE,Usage,True,4,MEMBER,False,False,False,0.04347826087,0.01666666667,0.4224137931,0.375,0.3864300618,0.6135699382,0.4682936827,0.03367017273
"Anyway, that's just my thoughts.",Social Conversation,False,32,NONE,False,False,False,0.3125,0.07462686567,0.907073509,0.8,0.9153731312,0.08462686876,0.125435556,0.2620248075
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_Nightly/558

Diagnostics https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK11_x86-64_mac_Nightly/558/Build_JDK11_x86-64_mac_Nightly-558-20201118-221726-diagnostics.tar.gz
CODE",Testing,True,269,CONTRIBUTOR,False,False,False,1.0,0.09677419355,1.0,0.3169398907,0.6212761931,0.3787238069,0.6535899155,0.02471061853
i.e. the GC code will only attempt to write a hint if it has calculated a different value than has already been stored to the cache?,Solution Discussion,False,132,CONTRIBUTOR,True,False,False,0.8666666667,0.1780821918,0.6666666667,0.8324022346,0.964292179,0.03570782098,0.0003211324394,0.0001268809988
"You'll notice that unlike many other jit logs, compareAndSwapObject is actually compiled by the jitc.",Investigation and Exploration,False,101,NONE,True,False,False,0.3333333333,0.223880597,0.3333333333,0.4469273743,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
etc,Social Conversation,False,3,NONE,False,False,False,0.1666666667,0.01369863014,0.8469827586,1.0,0.81202295,0.18797705,0.0001068963647,0.0006469111266
so all of this is caused by the  dynamic library of CUDA in the installed CUDA path such as : /path/cuda-9.0/lib64  or /path/cuda-9.0/lib. (for eample my CUDA is installed in /usr/local/cuda-9.0),Investigation and Exploration,False,195,NONE,False,False,False,1.0,0.2834645669,0.8152492669,0.3333333333,0.7354114739,0.2645885261,0.4152157275,0.1560011388
"Unless an experiment causes the failure, or triggers some sort of assert the experiment cannot be reliable.",Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,1.0,0.1978021978,0.5714285714,0.3041958042,0.6101453274,0.3898546726,0.05114946292,0.001708499748
"I found and error in my code, batch normalization is working fine now :-)",Usage,False,73,NONE,False,False,False,1.0,0.05384615385,0.5117773019,0.5,0.3886203772,0.6113796228,0.01129830123,0.06578784903
Maybe this is related to this region [syntax/parser.pyx](https://github.com/spacy-io/spaCy/blob/1822bb4ff1e6ceee76fe5e43de4345fab168e65b/spacy/syntax/parser.pyx#L179-L183) CODE,Investigation and Exploration,True,176,NONE,True,True,False,0.85,0.1789473684,0.1052631579,1.0,0.0,1.0,0.0,0.008598273629
"-         TSNE does not work with the other setup (where Tensorflow is activated, Python 2.x).",Bug Reproduction,False,94,NONE,False,False,False,0.8333333333,0.2112676056,0.8099415205,0.2666666667,0.6456610805,0.3543389195,1.0,4.677373331e-05
I'll also try a xlc 16 build.,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.2916666667,0.04022988506,0.8888888889,0.9227941176,0.7942021981,0.2057978019,0.006755954606,0.002545177611
"There is an OSR transition to the interpreter for executing CODE, which should invoke CODE -> CODE before the CODE.",Investigation and Exploration,True,115,CONTRIBUTOR,False,False,False,1.0,0.2043010753,0.3333333333,0.5752895753,0.55101082,0.44898918,0.003338530748,0.005248394148
"Need to investigate more.
- introduce a clean option to enable/disable the feature (right now I control it with an internal tuning/weight parameter which is set to 0, which effectively disables the feature).
- test race conditions between early first GC and heap expansion based on hints
- ideally, test high JVM count simultaneous startup scenario (SC lock contention or anything else) - I'm unlikely to do anything about it, since I don't have such scenario available.",Investigation and Exploration,False,473,CONTRIBUTOR,False,False,False,1.0,0.5342465753,0.75,0.7988826816,0.8996448583,0.1003551417,0.0001470921313,0.0005171483439
Another solution?,Solution Discussion,False,17,NONE,False,False,False,0.06896551724,0.0157480315,0.4574780059,0.25,0.3805901386,0.6194098614,0.001605430808,0.001735580887
"When it freezes, it shows no error message.",Observed Bug Behaviour,False,43,NONE,False,False,False,0.5714285714,0.0824742268,0.1686390533,0.5714285714,0.2546091762,0.7453908238,0.1079292843,0.008572782863
That fits.,Social Conversation,False,10,CONTRIBUTOR,False,False,False,0.09090909091,0.01459854015,0.5,0.7583643123,0.04441215903,0.955587841,1.41e-05,3.48e-05
Interesting.,Social Conversation,False,12,CONTRIBUTOR,False,False,False,0.03225806452,0.01408450704,0.8450292398,0.5,0.6456691099,0.3543308901,4.677373331e-05,3.473434042e-05
@pshipton How to get native stack for all threads?,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.375,0.12,0.625,0.384180791,0.03339237467,0.9666076253,0.01898374244,2.23e-05
"It's the cheap implementation approach, but it might beunnecessarily verbose for the users, which is why I would prefer 1 if itcan be done simply.",Solution Discussion,False,146,MEMBER,False,False,False,1.0,0.390625,0.5294117647,1.0,0.07603380402,0.923966196,0.000726968286,0.2040466138
"We didn't deliver that 10min restriction on the test run, so I assume you are using this for testing purposes.",Investigation and Exploration,False,110,CONTRIBUTOR,True,False,False,1.0,0.2985074627,0.5,0.774566474,0.01725199905,0.9827480009,1.18e-05,3.36e-06
"No, my earlier build wasn't statically linked.",Solution Discussion,False,46,CONTRIBUTOR,False,False,False,0.6363636364,0.04022988506,0.3333333333,0.9779411765,0.798212252,0.201787748,6.67e-05,0.0007994877042
"It needs to be private to the workers, because we really don't want the workers to transfer it back to the driver.",Solution Discussion,False,114,MEMBER,False,False,False,0.5365853659,0.1437908497,0.1768488746,0.4285714286,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
"With the default test settings, this test will fail every-time except for the first run if the SCC has been destroyed prior.",Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,1.0,0.247311828,1.0,0.2818532819,0.3800863339,0.6199136661,0.0009064390746,0.003566073067
"I guess the parallel processing from CODE is a TODO, I'm sure they'd love a PR :)",Task Progress,True,81,NONE,False,False,False,0.8181818182,0.2686567164,0.6865464632,1.0,0.5121402298,0.4878597702,0.0005771785436,0.0001414952691
"I see the reinitializable iterators give us the ability to use the same iterator with multiple datasets but each time you run an init op, it essentially starts over on that dataset.",Usage,False,181,NONE,False,False,False,1.0,0.4776119403,0.5617198336,0.8,0.4602787203,0.5397212797,0.008479027653,0.0006250222677
"In order to enter the path where the assert exists, we must've returned true for CODE. CODE calls CODE which would've invoked CODE.",Solution Discussion,True,131,CONTRIBUTOR,False,False,False,0.4032258065,0.4032258065,0.3333333333,0.4535519126,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"Other than the obvious desire to enable as many features as possible without going into FSD, the motivation behind this work is the upcoming cooperation with OverOps - their agent needs to get exception events, but can not tolerate the overhead of FSD being imposed on production systems.",Motivation,False,288,CONTRIBUTOR,True,True,False,1.0,0.734375,1.0,0.02836879433,0.0,1.0,0.0,0.0002548603798
See: https://github.com/eclipse/openj9/pull/9515,Social Conversation,False,48,CONTRIBUTOR,False,False,False,0.1538461538,0.02197802198,1.0,0.965034965,0.9227873075,0.07721269245,0.2377056189,0.1633866501
The catch location returned by cbException?,Solution Discussion,False,43,CONTRIBUTOR,False,False,False,0.4615384615,0.09375,0.8333333333,0.8226950355,0.9556814013,0.04431859867,0.01198084219,0.01558254832
"I believe it can be debugged via Windbg as long as it crashes with javaw.exe

I don't know if it crashes, but I'll try that tomorrow.",Investigation and Exploration,False,135,NONE,True,False,False,1.0,0.2727272727,1.0,0.7614035088,0.224814969,0.775185031,0.02954037942,0.2876671246
Will try with a tactical fix first.,Task Progress,False,35,CONTRIBUTOR,False,False,False,0.1555555556,0.05263157895,0.8333333333,0.9541984733,0.9208021236,0.07919787637,0.02945136717,0.001354250294
"The new version of x86_64-w64-mingw32-g++ works good on in terms of compiling BytecodeInterpreter.cpp, DebugBytecodeInterpreter.cpp and MHInterpreter.cpp  on Win 7 after installing the latest version of mingw64 downloaded from https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/installer/mingw-w64-install.exe

So the root cause is that the latest cgywin didn't pick up the new version of mingw64 (which already supports UCRT).",Solution Discussion,False,490,CONTRIBUTOR,False,False,False,1.0,0.4661016949,0.3333333333,0.2303030303,0.3976562389,0.6023437611,0.002619750082,0.026079663
"We don't really ""monitor"" the FS, we do timestamp check (when necessary) before returning class from the shared cache.",Solution Discussion,False,118,CONTRIBUTOR,False,False,False,0.5588235294,0.1386861314,0.3333333333,0.9182156134,0.06914383896,0.930856161,0.0005002484678,0.001788553918
"Unfortunately, with spaCy (and probably with lots of other situations), the constants really matter.",Solution Discussion,False,100,MEMBER,False,False,False,0.35,0.09150326797,0.7845659164,0.4736842105,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"seem fishy, but it couldn't be my learning set up, rate etc. (but I'd assume it shouldn't because BN should be sort of rubust to this)",Usage,False,134,NONE,False,False,False,0.7105263158,0.1038461538,0.2997858672,1.0,0.2434240867,0.7565759133,0.01989458774,0.1426765631
GridSearchCV parallel execution with own scorer freezes,Observed Bug Behaviour,False,55,NONE,True,True,False,0.3043478261,0.07216494845,0.002958579882,0.1428571429,0.0,1.0,0.0,5.796890697e-05
"But once the dataset is created, it's only possible to shuffle in the range of the buffer_size.",Workarounds,False,95,NONE,False,False,False,0.425,0.2537313433,0.6601941748,1.0,0.5054793089,0.4945206911,0.03050902669,0.04958391229
When running CODE these are the files produced.,Investigation and Exploration,True,47,NONE,True,False,False,0.1777777778,0.1194029851,0.1666666667,0.4413407821,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
"Let's **assume** that in most cases, you don't need to use the model itself to produce data (though sometimes it's not true).",Expected Behaviour,False,125,CONTRIBUTOR,False,False,False,0.7333333333,0.328358209,0.105409154,0.2307692308,0.008365735399,0.9916342646,0.03692313957,0.0188753671
"The issue is with tenorflow 1.1 version , it worked for me.",Solution Discussion,False,59,NONE,False,False,True,11.0,0.01591895803,1.0,3.0,1.0,0.0,1.0,0.0
So by design we would break the contract ?!,Solution Discussion,False,43,MEMBER,False,False,False,0.347826087,0.1126760563,0.7355072464,1.0,0.06552070647,0.9344792935,6.632574066e-06,0.00947335116
"@honnibal  I'm also facing the same issue, (spacy 1.5.0).",Observed Bug Behaviour,False,57,NONE,False,False,False,0.3225806452,0.1612903226,0.9427312775,0.1666666667,0.6824651873,0.3175348127,0.09426527661,0.02091540384
157 jar files would be larger than any app I normally run by a very big margin.,Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.53125,0.1240875912,1.0,0.873605948,0.06760668468,0.9323933153,4.8e-05,0.0001677157529
"Okay, I wonder if it makes sense to dig into the difference that you had mentioned at the application layer for the SCC.",Investigation and Exploration,False,120,CONTRIBUTOR,False,False,False,0.5897435897,0.2875,0.3333333333,0.1617647059,0.1162948506,0.8837051494,0.001196128892,0.02677733879
However both approaches are too expensive in my opinion.,Solution Discussion,False,56,MEMBER,False,False,False,0.36,0.1323529412,0.9593495935,0.625,0.6536608828,0.3463391172,0.005246346584,1.0
I will check it out to see how to get this work.,Contribution and Commitment,False,48,CONTRIBUTOR,False,False,False,1.0,0.1016949153,1.0,0.02424242424,0.3516737689,0.6483262311,0.0918912762,0.07735508958
@yangfengKAUST with the current version of cuda and cudnn installed TF is just complaining that it cannot find the versions it is expecting.,Investigation and Exploration,False,140,MEMBER,False,False,False,1.0,0.188976378,0.05865102639,1.0,0.05880703024,0.9411929698,0.02745205338,0.3335768717
@AwasthiMaddy - Yes TensorFlow 1.5 release binaries are built for CUDA 9.,Solution Discussion,False,73,MEMBER,False,False,False,1.0,0.08661417323,0.09677419355,1.0,0.1361579932,0.8638420068,0.0003224172419,0.7235035514
But seems that this call is passing only 1 argument to the function:,Usage,False,68,NONE,False,False,False,1.0,0.1940298507,0.9278779473,0.6666666667,0.957051255,0.04294874501,0.06755432044,0.001667404682
This is (I believe) explained in the comments above.,Solution Discussion,False,52,CONTRIBUTOR,False,False,False,0.3333333333,0.140625,0.3333333333,0.8368794326,0.9584949154,0.0415050846,0.01558254832,0.006489322312
However there are some limitations related with Class Unloading apply (controlled using Mutex).,Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.7222222222,0.1428571429,0.5,0.2132867133,0.3548042241,0.6451957759,0.0007155979557,0.1429285596
And this is why availability of a binary that supports 9.1 would be nice: (from the TF1.6 release notes),Motivation,False,104,NONE,False,False,False,0.4634146341,0.1496062992,0.431085044,0.1111111111,0.380459606,0.619540394,0.0006322631694,0.001605430808
"Actually, it looks like the list is OK, but one of the threads has been trashed (the bad thread is reachable by walkling the linked list forwards or backwards from the main thread).",Investigation and Exploration,False,181,CONTRIBUTOR,False,False,False,1.0,0.3173076923,1.0,0.6574585635,0.1404677945,0.8595322055,2.46e-05,0.0002200465847
"Additionally, it seems like it might make sense to have a parameter to add the control flow dependencies to the op that runs in the training case.",Solution Discussion,False,146,NONE,False,False,False,0.7714285714,0.1038461538,0.6895074946,1.0,0.5724926046,0.4275073954,0.005970364889,0.0005567984656
"If so, the issue should be fixed to enable the test execution.",Solution Discussion,False,62,CONTRIBUTOR,False,False,False,0.1043478261,0.1016949153,1.0,0.9272727273,0.6453809646,0.3546190354,0.01790509819,0.0003116104286
"@0xdaryl 

> If the assert is removed (implying it is invalid), will the subsequent code work as expected assuming that containingClass is NULL?",Solution Discussion,False,146,CONTRIBUTOR,False,False,False,0.5227272727,0.3709677419,0.1,0.8961748634,0.9845135933,0.01548640667,0.001320457339,0.001947660621
"Probably on the VM side, we can change the default behavior to do timestamp check only once for each jar and introduce a new option ""forceTimestampChecks"" which does timestamp check on every load.",Solution Discussion,False,196,CONTRIBUTOR,False,False,False,1.0,0.2408759124,0.5,0.8884758364,0.06795742807,0.9320425719,0.000359450058,0.0002381149578
"In short, -Xmns and Xmos could be used for both GC policies to uniquely determine initial total heap  and division between Nursery/Eden vs the rest of the heap.",Solution Discussion,False,160,CONTRIBUTOR,False,False,False,0.2054794521,0.2054794521,1.0,0.1117318436,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
[change model state](https://github.com/torch/nn/blob/master/doc/module.md#training).,Potential New Issues and Requests,False,85,NONE,False,False,False,0.6,0.03461538462,0.06209850107,0.6666666667,0.1739067199,0.8260932801,0.0001378806696,0.1811646483
Sorry,Social Conversation,False,5,MEMBER,False,False,False,1.0,0.01470588235,0.7113821138,0.5,0.5900715971,0.4099284029,2.417193845e-05,0.0003256305423
Would it be possible for numpy to share buffers with tensorflow variableswhen they are returned from a session run?,Potential New Issues and Requests,False,115,CONTRIBUTOR,False,False,False,0.6785714286,0.2835820896,0.386962552,0.5,0.3246503118,0.6753496882,0.01426913622,0.02224733169
-         The Python validation of the CODE code would therefore upcast 32-bit float data into 64 bit floats before casting down back to 32 bit float to call into the Cython code.,Solution Discussion,True,179,MEMBER,False,False,False,1.0,0.4705882353,0.8902439024,0.6666666667,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
Please check.,Social Conversation,False,13,CONTRIBUTOR,False,False,False,0.09090909091,0.02985074627,1.0,0.4913294798,0.006154516798,0.9938454832,6.19e-06,0.003668136449
"If I interrupt JMeter for a while and start it again, the system starts at good level of throughput, but drops again after a while.",Investigation and Exploration,False,131,CONTRIBUTOR,False,False,False,0.4237288136,0.3125,0.75,0.7892156863,0.9391761414,0.06082385865,0.06820979376,0.04955018304
Let's just document the expected usage scenario for that option in the docstring instead.,Solution Discussion,False,89,MEMBER,False,False,False,0.4,0.1971830986,0.4311594203,1.0,0.0398253388,0.9601746612,2.382813646e-05,3.790042324e-06
"So as a recap, there are **two different ways we currently process the categorical data**:",Solution Discussion,False,90,CONTRIBUTOR,True,False,False,0.4545454545,0.234375,0.1433823529,0.2222222222,0.002016098271,0.9979839017,0.0039907996,0.01559625638
He may ask help getting set up to triage this.,Contribution and Commitment,False,46,CONTRIBUTOR,False,False,False,0.3703703704,0.1075268817,1.0,0.3667953668,0.3849982514,0.6150017486,0.0009250900844,0.03688423691
In the meantime I'm dead in the water..,Social Conversation,False,39,NONE,False,False,False,0.2571428571,0.07086614173,0.4281524927,1.0,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
On OSX you can do that with conda which uses MKL by default.,Workarounds,False,60,MEMBER,False,False,False,0.4642857143,0.1340206186,0.624260355,0.6666666667,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
Seems accurate.,Social Conversation,False,15,CONTRIBUTOR,False,False,False,1.0,0.01149425287,1.0,0.4705882353,0.7663005317,0.2336994683,4.94e-05,5.75e-05
Will share the log here once it finishes.,Task Progress,False,41,CONTRIBUTOR,False,False,False,0.4705882353,0.1194029851,1.0,0.3583815029,0.005129489834,0.9948705102,3.41e-05,3.39e-05
Validation loss goes down very quickly when I set CODE to 0.9.,Usage,True,62,CONTRIBUTOR,False,False,False,0.375,0.04615384615,0.6231263383,0.6666666667,0.5082642878,0.4917357122,0.001406808951,0.377195146
"In another crash in CODE the stack trace is:

CODE
If we go to frame 19 we find that the objectPointer, which is the first parameter, is NULL",Observed Bug Behaviour,True,144,CONTRIBUTOR,True,False,False,1.0,0.1587301587,1.0,0.05142857143,0.1317224111,0.8682775889,0.001685327921,0.002813570532
"The various ""not java"" return codes also make me think this should be the implemenation.",Solution Discussion,False,88,CONTRIBUTOR,False,False,False,0.4054054054,0.1442307692,0.75,0.773480663,0.3138477417,0.6861522583,0.01340473801,0.0004107031265
"This is still failing although the build contains https://github.com/eclipse-openj9/openj9/pull/14071

https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_0/47/",Testing,False,216,CONTRIBUTOR,False,False,False,1.0,0.1182795699,1.0,0.9768339768,0.9830696924,0.01693030764,0.2682425527,0.007389530069
"Still all we can compare by is error, and not, say, gradients:",Investigation and Exploration,False,62,MEMBER,False,False,False,0.3333333333,0.1764705882,0.8170731707,0.1538461538,0.6243074007,0.3756925993,0.05176800464,0.02547446062
"There's currently no Python API for inspecting the size of the tokenizer's cache, so it's easiest to do this by elimination.",Investigation and Exploration,False,124,MEMBER,False,False,False,0.9130434783,0.3387096774,0.1938325991,1.0,0.02336154952,0.9766384505,0.01526654747,0.6482365618
"If I could create some sort of input method (Queue, Dataset, whatever) where I can cleanly swap between training and validation inputs, that would be much nicer (again, CODE is great for this, but if it will always be slower, it'd be nice to have a more performant alternative).",Motivation,True,278,NONE,False,False,False,1.0,0.7462686567,0.4313453537,1.0,0.4000653979,0.5999346021,0.1106294504,0.0001180823828
The differences are quite pronounced.,Investigation and Exploration,False,37,MEMBER,False,False,False,0.1111111111,0.07462686567,0.2857142857,0.5028901734,0.009579724698,0.9904202753,0.003668136449,0.001720565783
"This is the ""extra"" javacore that I am referring to.",Investigation and Exploration,False,52,NONE,True,False,False,0.2564102564,0.1333333333,1.0,0.8587570621,0.08562237087,0.9143776291,0.0002356611565,6.35e-05
Does it fail on jdk14 as well?,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,1.0,0.07692307692,1.0,0.01748251748,0.001333532104,0.9986664679,0.003686600448,0.004487700419
The best case is that mingw guys upgrade their code to keep up with the stdio-related changes in VS2015/2017.,Solution Discussion,False,109,CONTRIBUTOR,False,False,False,1.0,0.1694915254,0.5,0.1636363636,0.3897732145,0.6102267855,0.0009771973397,0.008262538037
"We're in the process of abstracting away particular vector stores (in-memory matrix, sharded on-disk store, approximate kNN index...) from gensim, behind a common API.",Potential New Issues and Requests,False,167,CONTRIBUTOR,False,False,False,0.9285714286,0.6842105263,0.7153284672,0.3333333333,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
What are the options forward:,Solution Discussion,False,29,CONTRIBUTOR,True,True,False,0.1,0.078125,0.05882352941,0.6666666667,0.0,1.0,0.0,0.0007774126438
Most of the work here is on the VM side but there are JIT portions as well to ensure we have a stack map at the start of every exception catch block and to ensure we don't enable throw to goto transformations when this mode is enabled.,Motivation,False,235,CONTRIBUTOR,True,True,False,1.0,0.734375,0.75,0.02127659574,0.0,1.0,0.0,0.0002548603798
"An in-graph solution sounds better, with pointers to guide the graph execution, like CODE to indicate the input should come from the training pipeline, the model should set batchnorm and dropout (et al) to train mode etc.",Solution Discussion,True,221,CONTRIBUTOR,False,False,False,0.8260869565,0.5671641791,0.1969486824,0.7272727273,0.04271149234,0.9572885077,0.001149776305,0.005164577321
"I've read about that somewhere recently, probably on stack overflow.",Social Conversation,False,68,NONE,False,False,False,0.2820512821,0.01591895803,0.2508250825,0.8,0.06622159454,0.9337784055,0.0006557222206,0.0061573337
"The content of the pointer (CODE) changed from CODE to CODE

CODE is the valid object pointer and CODE is bogus.",Investigation and Exploration,True,114,CONTRIBUTOR,False,False,False,0.7333333333,0.1164021164,0.3333333333,0.2742857143,0.3270477495,0.6729522505,0.001859572286,0.0999392835
Somewhat related I recommend you update to scikit-learn 0.19 which has some fixes in t-SNE,Solution Discussion,False,90,MEMBER,False,False,True,17.0,0.2394366197,1.0,2.0,1.0,0.0,0.0007094938778,0.0
"So, it is not related to that linker option in this case.",Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.8088235294,0.7733277692,0.2266722308,6.85e-06,3.15e-05
Do you know if the regression is seen with AcmeAir mono as well?,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.4642857143,0.1625,1.0,0.112745098,0.09390786121,0.9060921388,0.3318641488,0.01961071442
I'll try to produce a more reliable report of the behaviour.,Social Conversation,False,60,NONE,False,False,False,0.3666666667,0.1157894737,0.4210526316,0.4444444444,0.1598964447,0.8401035553,0.03116866066,0.03531242178
Example:https://github.com/honnibal/spaCy/blob/master/examples/pos_tag.py,Solution Discussion,False,73,MEMBER,False,False,False,0.2666666667,0.2105263158,0.2700729927,0.8888888889,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
Maybe try to create a new python 3.5 env and try the above-mentioned snippet to see if it works without error:,Solution Discussion,False,110,CONTRIBUTOR,False,False,False,0.9565217391,0.3098591549,0.8684210526,0.75,0.6457035792,0.3542964208,0.0001660605916,0.002055691741
"Failure link
------------
https://ci.adoptopenjdk.net/job/Test_openjdk15_j9_sanity.openjdk_ppc64le_linux/43/consoleFull
java/foreign/TestMismatch.java
Fails on platforms: Platforms: pLinux, xLinuxXL

Optional info
-------------
- intermittent failure (yes|no): possibly
- regression or new test:  Regression
-",Testing,False,319,CONTRIBUTOR,True,True,False,1.0,0.7659574468,0.5,0.007692307692,0.0,1.0,0.0,0.002175337965
"If the integer ids of the multiple StringStores are guaranteed to never overlap a BST might be a good candidate, if they can overlap though you might need to go with something a bit different, like a UnionFind.",Solution Discussion,False,210,NONE,True,False,False,0.6129032258,0.6129032258,0.7797356828,0.8333333333,0.3260702381,0.6739297619,0.1206599722,1.0
I missed to trace the interpreter version of CODE in CODE due to the different naming.,Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,0.9411764706,0.1720430108,0.6666666667,0.4517374517,0.5332300671,0.4667699329,0.2051611074,0.002331376221
@mkaze Thank you very much,Social Conversation,False,26,NONE,False,False,False,1.0,0.03937007874,0.3108504399,1.0,0.3457071986,0.6542928014,0.03386342376,0.1351135301
It's wonderful when it works though!,Social Conversation,False,36,NONE,False,False,False,0.4615384615,0.03921568627,0.8681672026,0.6666666667,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
That way we can try to reconcile what the JIT is seeing with what the VM is seeing.,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.3157894737,0.1978021978,1.0,0.8601398601,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
At least that way we might know if the problem went away after reinstalling miniconda is fundamentally linked to math library?,Investigation and Exploration,False,126,NONE,False,False,False,1.0,0.2957746479,0.6578947368,1.0,0.4587221489,0.5412778511,4.884949071e-05,0.0004141827923
The function is updated in the file CODE.,Solution Discussion,True,41,NONE,False,False,False,0.2424242424,0.01157742402,0.7491749175,0.625,0.272648067,0.727351933,0.02402499291,0.006610382458
ok.,Social Conversation,False,3,MEMBER,False,False,False,0.05,0.01408450704,0.4347826087,0.25,0.03982883009,0.9601711699,3.790042324e-06,1.859928177e-06
r2 is set in pnathelp.m4 for the normal helpers.,Investigation and Exploration,False,48,CONTRIBUTOR,False,False,False,0.4736842105,0.0703125,1.0,0.3111111111,0.03660508119,0.9633949188,4.42e-05,0.0004075557136
"I have the JVM which I can make accessible, can somebody pls take a look.",Contribution and Commitment,False,73,CONTRIBUTOR,False,False,False,1.0,0.08620689655,0.6666666667,0.06617647059,0.7086383076,0.2913616924,0.003001622719,0.005841410604
The practicaldifference with an online method is that you want the batch to be big.,Solution Discussion,False,83,MEMBER,False,False,False,1.0,0.2112676056,0.4565217391,1.0,0.03983161019,0.9601683898,1.158068488e-06,0.0028917672
Why ignore JavaScript ?,Motivation,False,23,NONE,False,False,False,0.2727272727,0.04109589041,0.349137931,0.8,0.3894640095,0.6105359905,0.1116482733,0.1289154667
Not sure if this was an issue with my string or with spaCy's processing.,Investigation and Exploration,False,72,NONE,False,False,False,0.56,0.1473684211,0.8526315789,0.6666666667,0.2824932792,0.7175067208,0.20086138,0.06317627064
"The parameter ""allow_smaller_final_batch"" in tf.train.shuffle_batch(...) is useful when I'd like to assure all batches are evenly divisible by number of gpus.",Usage,False,158,NONE,False,False,False,1.0,0.328358209,0.7226074896,0.5,0.5764930385,0.4235069615,0.1924676673,0.003144961394
"I had googled around with no luck, can anyone show me a way out?",Contribution and Commitment,False,64,NONE,True,True,False,0.1772151899,0.02026049204,0.03630363036,1.0,0.0,1.0,0.0,0.0005278053632
"Btw, don't forget to change $PATH in your CODE (9.1 -> 9.0).",Solution Discussion,True,60,NONE,False,False,False,0.4230769231,0.08661417323,0.6041055718,1.0,0.4583755089,0.5416244911,0.04654492211,0.008440528439
"The JVM can use up to 8 cores and the JVM utilization is always under 150%, so the hot compilation should not interfere with application or other compilation threads.",Investigation and Exploration,False,166,CONTRIBUTOR,False,False,False,0.8285714286,0.2116788321,0.4,0.282527881,0.007087055447,0.9929129446,0.006822511181,0.006010021534
PR in #9733,Potential New Issues and Requests,False,11,MEMBER,False,False,False,0.1578947368,0.04411764706,0.406504065,0.5555555556,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
A fix may be to make the multiple remote messages into one so that client can have the vmaccess for the entire operation.,Solution Discussion,False,121,CONTRIBUTOR,False,False,False,1.0,0.1216931217,1.0,0.8514285714,0.450701391,0.549298609,0.0001688638978,0.09504926646
Which CODE and CODE combination is the first to fail?,Investigation and Exploration,True,53,MEMBER,False,False,False,1.0,0.1470588235,0.5325203252,1.0,0.5676858537,0.4323141463,0.000437512086,0.005325768668
"@babsingh, maybe you already have a notification, but I have uploaded the files to this container.",Social Conversation,False,98,NONE,True,False,False,0.9411764706,0.2133333333,0.5,0.2259887006,0.003298588959,0.996701411,0.00112141451,0.0004813876919
"Likewise, if you disable inlining of compareAndSwapObject the issue should disappear.",Solution Discussion,False,85,CONTRIBUTOR,False,False,False,0.2972972973,0.1641791045,0.2,0.8156424581,0.1150439695,0.8849560305,0.0009687751028,0.0002215081863
Thanks for the initiative guys!,Social Conversation,False,31,NONE,False,False,False,1.0,0.06849315068,0.09913793103,1.0,0.001622840762,0.9983771592,7.325610089e-05,0.001375709738
"Is there any profiling or thread information I can extract from openj9 that would help me figure out where the issue is so I can produce a minimized test case for this bug?

Thanks.",Investigation and Exploration,False,183,NONE,True,True,False,0.7291666667,0.5223880597,0.7142857143,0.02793296089,0.0,1.0,0.0,0.00144281986
I definitely think this is something we should investigate further!,Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.5263157895,0.07299270073,0.6666666667,0.8624535316,0.06757472377,0.9324252762,0.003514162664,4.8e-05
@andrewcraik We haven't seen this issue in our JSR292 regression runs but I'll report here if we do.,Investigation and Exploration,False,100,NONE,False,False,False,1.0,0.2686567164,1.0,0.5838150289,0.01129138468,0.9887086153,5.28e-05,0.0006655096996
"I found [this thread on stack overflow] URL  and then ran CODE, then ran CODE on the  CODE file, then CODE loaded up, and ran the code snippet, error went away!",Solution Discussion,True,160,NONE,False,False,False,0.4925373134,0.4647887324,0.6871345029,0.4285714286,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
"There is classloader address in the registers of crashed method CODE and I am sure it causes a trouble:
CODE",Investigation and Exploration,True,109,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.07342657343,0.005105156559,0.9948948434,0.001428885046,0.003392350266
@liqunl i've just kicked off a Grinder on xLinux for just the TestMissmatch test here: https://ci.adoptopenjdk.net/job/Grinder/3859/console,Testing,False,139,CONTRIBUTOR,True,False,False,1.0,0.3617021277,1.0,0.06538461538,0.003936080354,0.9960639196,0.001943492734,0.0003892710042
I installed following these instructionshttps://www.tensorflow.org/install/install_linux#nvidia_requirements_to_run_tensorflow_with_gpu_support,Bug Reproduction,False,143,NONE,False,False,False,0.3333333333,0.05511811024,0.3196480938,0.2727272727,0.3566928644,0.6433071356,0.1351135301,0.002261357628
Repro rate with following command was 0/10 which is expected given the earlier limiting found 6251 to be the problematic index.,Bug Reproduction,False,127,CONTRIBUTOR,False,False,False,1.0,0.1578947368,0.5,0.7506361323,0.7911165675,0.2088834325,0.03284046744,0.001804304497
"So, for direct C helpers calls from the compiled code, either r12 must be loaded with the function address, or r2 must be loaded with the TOC and the call must be to helper+8.",Solution Discussion,False,175,CONTRIBUTOR,False,False,False,0.3063063063,0.265625,0.5384615385,0.7,0.08012656297,0.919873437,0.0570348239,0.002818533349
"As I had a suspicion before, it ran slower than I expected.",Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,0.3529411765,0.06896551724,0.6666666667,0.5845588235,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
"Investigation shows there are two ways to launch OpenJ9.zip from STS4:
[1] no changes in SpringToolSuite4.ini (JRE for STS4 is set up to Java 8 by default)

<1> directly launch SpringToolSuite4.exe (no Java 8 gets started) 
 <2> then start OpenJ9.zip (set to Java 11) at boot dash which gets Java 11 started.",Investigation and Exploration,False,312,CONTRIBUTOR,False,False,False,1.0,0.5555555556,0.08333333333,0.8140350877,0.803200419,0.196799581,0.3518178539,0.2306492075
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2112068966,1.0,0.07908222094,0.9209177791,0.001621150873,0.08136760952
"I tried it on my other mac, and it works fine there.",Bug Reproduction,False,52,CONTRIBUTOR,False,False,False,0.1791044776,0.1690140845,0.4415204678,0.4285714286,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
Assume CODE is a list of large images (e.g. 8192x8192 each) [with corresponding labels].,Motivation,True,88,CONTRIBUTOR,False,False,False,0.3043478261,0.2089552239,0.6671289875,0.5555555556,0.5116443977,0.4883556023,0.04958391229,0.003143434467
"Send me an email, matt@spacy.io .",Solution Discussion,False,33,MEMBER,False,False,False,0.2272727273,0.1315789474,0.6496350365,0.2222222222,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
"version info if neededsys 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 12:04:33)[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]numpy 1.14.2pandas 0.22.0sklearn 0.19.1torch 0.4.0a0+9692519IPython 6.2.1keras 2.1.5 compiler   : GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)system     : Darwinrelease    : 17.5.0machine    : x86_64processor  : i386CPU cores  : 24interpreter: 64bit",Observed Bug Behaviour,False,412,NONE,False,False,False,0.661971831,0.4845360825,0.9053254438,1.0,0.9814537694,0.0185462306,0.01231978335,0.004293692176
"Everything looks to be invalid, not just the constant pool address.",Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.2558139535,0.1208791209,0.2,0.2622377622,0.6007887623,0.3992112377,0.01222678832,0.05114946292
I only updated numpy:numpy.version.version 1.11.1,Solution Discussion,False,49,NONE,False,False,False,0.3333333333,0.08450704225,0.2134502924,0.5,0.1785242968,0.8214757032,0.05891636054,0.0003516333028
it seems like the best compromise between speed and flexibility is to create a TF queue and then make a bunch of Python threads that feed it with data.,Solution Discussion,False,151,NONE,False,False,False,0.8285714286,0.4328358209,0.2066574202,0.5,0.04335363766,0.9566463623,0.005164577321,0.043809073
:+1:,Social Conversation,False,4,NONE,False,False,False,0.0625,0.01369863014,0.08836206897,1.0,0.001580861411,0.9984191386,9.273204313e-05,0.0006821006132
Thanks for your comments and making batch normalization available to the community.,Social Conversation,False,83,NONE,False,False,False,0.3428571429,0.04615384615,0.1520342612,1.0,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"For reference my installation procedure is as follows:

- download zip from here: https://adoptopenjdk.net/installation.html
- unzip it under a folder called CODE or CODE (depending on hotspot versus openj9)
- I do **not** add anything to my path (my path is left set to run oracle JDK 1.8)
- configure Eclipse workspace JRE to point to unzipped installation (exact details on how that Eclipse instance was setup are in the other ticket).
- launch a spring boot app configured to run with JRE 11 (details on how to setup exact same app can be found in the other ticket)",Bug Reproduction,True,575,NONE,True,True,False,1.0,1.0,1.0,0.01754385965,0.0,1.0,0.0,0.006553271164
Can you make an explicit request.,Solution Discussion,False,33,CONTRIBUTOR,True,False,False,0.2727272727,0.09677419355,1.0,0.9451476793,0.9195088035,0.08049119647,0.01893430022,0.008255133205
"I also had issues with pickling with [SFrame] URL , which behaves similarly to how Spark has been described to work here.",Motivation,False,121,NONE,False,False,False,0.8076923077,0.137254902,0.5112540193,0.2,0.1448670515,0.8551329485,0.02443361297,0.06319984844
And the people at the university of Groningen would probably be happy to see another parser for Dutch so they can compare Alpino to it :),Motivation,False,137,NONE,False,False,False,0.7027027027,0.4333333333,0.6551724138,0.8333333333,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"You are right, CODE is not set up either and needs to be.",Solution Discussion,True,57,MEMBER,False,False,False,0.4482758621,0.1015625,0.5,0.6333333333,0.04064191678,0.9593580832,0.0002600368647,0.0001090823512
I can verify that the inclusion of the -O0 option directly causes this issue.,Investigation and Exploration,False,77,CONTRIBUTOR,True,False,False,0.1772151899,0.109375,0.1428571429,0.2388888889,0.03198961031,0.9680103897,0.001540680846,0.006548591463
LE Linux ABI:  it requires caller to set up r12 for callee global-entry address.,Solution Discussion,False,80,CONTRIBUTOR,False,False,False,0.8421052632,0.125,0.5714285714,0.5444444444,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
Thanks,Social Conversation,False,6,NONE,False,False,False,0.04347826087,0.003846153846,0.7773019272,1.0,0.6216425187,0.3783574813,0.0279240315,0.007914289561
I can not reproduce it anymore as before.,Bug Reproduction,False,41,NONE,False,False,False,0.4444444444,0.1126760563,0.2105263158,0.3333333333,0.1785242968,0.8214757032,0.05891636054,0.0003516333028
"@zhongyuk awesome, glad to hear that you were able to narrow it down!",Social Conversation,False,69,CONTRIBUTOR,False,False,False,0.4814814815,0.1830985915,0.701754386,0.125,0.459007429,0.540992571,0.001079117078,0.0009613524417
I.e a 32GB PowerVM or a baremetal.,Bug Reproduction,False,34,CONTRIBUTOR,False,False,False,0.3333333333,0.170212766,0.7142857143,0.4038461538,0.3641770197,0.6358229803,0.02184783511,0.004874474413
"I double-checked the superset.dat generated via VS2010 and VS2017 and it turns out  
it returns LocIsStatic for ""static const"" variables on VS2010
it returns LocIsConstant for ""static const"" variables on VS2017

e.g. static const int32_t invalidByteCodeIndex =  -1;
it returns LocIsStatic on VS2010
superset.dat:  F|invalidByteCodeIndex|invalidByteCodeIndex|I32|const I32

That means ""static"" is just ignored when calling get_locationType in the case of ""const static"" variables.",Investigation and Exploration,False,487,CONTRIBUTOR,False,False,False,1.0,0.593220339,1.0,0.4606060606,0.419482155,0.580517845,8.5e-05,6.41e-05
But I am not sure how to repeatedly start it (probably just kill it with ctrl+c and restart),Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,0.6923076923,0.1818181818,1.0,0.7122807018,0.2157040785,0.7842959215,0.00438505838,0.001276611266
Thanks for trying.,Social Conversation,False,18,MEMBER,False,False,False,0.2727272727,0.04411764706,0.487804878,0.5,0.5467479566,0.4532520434,0.01188879527,0.03044075803
We compare the classloader and remove the entry if it corresponds to the classloader we're unloading.,Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,0.5925925926,0.1758241758,0.6666666667,0.5629370629,0.8546478187,0.1453521813,0.002043575217,0.001362640241
Is it the only thing that is still there?,Solution Discussion,False,41,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.4448529412,0.7660620102,0.2339379898,0.0005874486337,0.000396081896
That will definitely not be the case if used here.,Solution Discussion,False,50,MEMBER,False,False,False,0.4347826087,0.1408450704,0.731884058,0.6666666667,0.06552070647,0.9344792935,6.632574066e-06,0.00947335116
"If it's only reproducible at Adopt, someone with access to those machines could run jextract.",Observed Bug Behaviour,False,93,CONTRIBUTOR,False,False,False,0.7142857143,0.3191489362,1.0,0.1461538462,0.07022468829,0.9297753117,0.04938589637,0.1311728793
"- each time when we do CODE, we create a ""global reference"" using CODE.",Investigation and Exploration,True,71,CONTRIBUTOR,False,False,False,0.2203389831,0.06878306878,0.1111111111,0.4628571429,0.4461627725,0.5538372275,0.06246846736,0.001023944321
"@liqunl fyi, the ""Rerun Grinder"" links rarely work as-is, as they typically point at the ""upstream"" job artifact, which by the time you run the grinder has dissappeared!",Investigation and Exploration,False,169,CONTRIBUTOR,True,False,False,1.0,0.6170212766,0.5,0.06923076923,0.004007123078,0.9959928769,0.0003892710042,0.001399658243
"On the other machine (the one that works fine), the gradients are all < 0 after the same iteration.",Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.75,0.2535211268,0.4795321637,0.75,0.4156673014,0.5843326986,0.0004713353126,0.003024101758
The issue here is not the tables being corrupted - the j9method pointer is pointing to unaccessible memory (the table is intact) - that pointer is not modified as part of clean-up so unless there is some kind of double free issue happening the issue is the pointer is stale and the clean-up was not done correctly.,Investigation and Exploration,False,314,CONTRIBUTOR,False,False,False,1.0,0.6263736264,0.2857142857,0.8426573427,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
"No sync and barrier at all.  Check out that from -qlist or dump disassembly;
3) ppcCacheLineSize is wrong ... for example it is too big (e.g. 256) that compiling output codeCache is not walked completely (I admit this is unlikely though ... just throw it out here).",Investigation and Exploration,False,266,CONTRIBUTOR,False,False,False,1.0,0.2701149425,1.0,0.1801470588,0.7325460239,0.2674539761,0.009169774309,7.65e-05
I was wondering if there is an API to check memory properties given its address.,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.9375,0.08620689655,1.0,0.2352941176,0.7475942965,0.2524057035,2.74e-05,0.0003712750967
Looks like AdoptOpenJDK has been having infrastructure problems recently - no new builds since November 6th.,Social Conversation,False,108,CONTRIBUTOR,False,False,False,0.8333333333,0.223880597,0.5,0.9664804469,0.9298292948,0.07017070524,0.3605162089,0.1542127927
"Uups, I missed that.",Social Conversation,False,20,NONE,False,False,False,0.2352941176,0.05882352941,0.7479674797,0.25,0.5911789386,0.4088210614,0.0005279841985,0.0004692809194
I just changed my batchrc from cuda-9.1 to just cuda.,Solution Discussion,False,53,NONE,False,False,False,1.0,0.07874015748,0.5542521994,0.6666666667,0.4120996726,0.5879003274,0.001728185996,0.2379527984
The problem is still the same,Observed Bug Behaviour,False,29,NONE,False,False,False,0.75,0.0618556701,0.9112426036,1.0,0.9830658712,0.01693412879,0.004293692176,0.03509089576
"So if we want the user to be slicing into the string ever, we should probably switch to saving it.",Solution Discussion,False,98,MEMBER,False,False,False,0.7692307692,0.3225806452,0.4713656388,0.2352941176,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
As execution eventually reaches CODE we get the exception when the system tries loading from an invalid address inside of register r2.,Investigation and Exploration,True,134,CONTRIBUTOR,True,False,False,0.4074074074,0.171875,0.7142857143,0.06111111111,0.006753802741,0.9932461973,0.009802165843,0.02838288421
"For additional safety, if you're caching the buffers in TLS during the JVMTI thread start event, you could also cache the JNIEnv and avoid the call entirely in the signal handler (this would work on all VMs).",Solution Discussion,False,208,CONTRIBUTOR,False,False,False,1.0,0.3557692308,1.0,0.9502762431,0.3303069516,0.6696930484,0.0136228909,0.0001988372754
I've cleaned up the VM of stuff like github tokens etc.,Investigation and Exploration,False,55,NONE,True,False,False,0.5714285714,0.1212121212,0.2,0.7789473684,0.5885610122,0.4114389878,1.0,0.002646435418
but still I'm attaching the results here.,Social Conversation,False,41,NONE,True,False,False,0.3333333333,0.05109489051,0.75,0.6654275093,0.02630162169,0.9736983783,0.0005470432334,9.69e-05
![image] URL ,Social Conversation,False,13,NONE,False,False,False,1.0,0.02739726027,0.4547413793,1.0,0.5468870048,0.4531129952,0.02000046477,0.005053785692
I think the wheel is for python 3.6 so the install doesn't work.,Solution Discussion,False,64,NONE,False,False,False,1.0,0.1023622047,0.926686217,0.75,0.9282448049,0.07175519508,0.02806508983,0.00732168145
Sounds awesome and I will definitely try this out later.,Social Conversation,False,56,NONE,False,False,False,0.6666666667,0.1492537313,0.7975034674,1.0,0.6090536099,0.3909463901,0.0001603273732,0.009944877922
"Already tried with the latest nightly build at https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk11u-2018-11-29-02-58/OpenJDK11U-jdk_x64_windows_openj9_2018-11-29-02-58.zip and no segment fault occurred after repeatedly launching the project over 20 times 
CODE
[sts4_windbg_java11_nightly.txt] URL ",Testing,True,323,CONTRIBUTOR,False,False,False,1.0,0.2727272727,0.25,0.9684210526,0.9103914698,0.08960853018,0.006460058278,0.07945790628
@vijaysun-omr @mpirvu @amicic @hangshao0 fyi,Contribution and Commitment,False,44,CONTRIBUTOR,True,False,False,1.0,0.04109589041,1.0,0.04469273743,1.97e-06,0.9999980348,5.94e-06,0.02810021129
"For the time being, I'm going to change to the head stream to ""multiheap,considersize"" to avoid failing the tests every night.",Solution Discussion,False,126,CONTRIBUTOR,True,False,False,1.0,0.3548387097,0.5,0.9367088608,0.9195088035,0.08049119647,0.01893430022,0.008255133205
I don't think so.,Social Conversation,False,17,MEMBER,False,False,False,0.09756097561,0.05633802817,0.2391304348,0.1428571429,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
I know that it's awkward but it didn't froze when running with a _custom_ metric.,Observed Bug Behaviour,False,81,NONE,False,False,False,1.0,0.1546391753,0.8106508876,1.0,0.8526829408,0.1473170592,0.005705487359,0.01083986775
Unfortunately the documentation is still lacking further explanations.,Expected Behaviour,False,70,NONE,False,False,False,0.2857142857,0.1194029851,0.294036061,0.2857142857,0.2770987131,0.7229012869,0.2860540634,0.003376036402
"GeneratePluginConfigMBean.generatePluginConfig(GeneratePluginConfigMBean.java:262)
	at com.ibm.ws.webserver.plugin.runtime.listeners.GeneratePluginConfigListener$1.run(GeneratePluginConfigListener.java:281)
	at com.ibm.ws.threading.internal.ExecutorServiceImpl$RunnableWrapper.run(ExecutorServiceImpl.java:239)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.ClassNotFoundException
	at java.base/java.lang.ClassLoader.findClass(ClassLoader.java:626)
	at java.base/java.lang.ClassLoader.loadClassHelper(ClassLoader.java:1180)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:1095)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:1078)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl$TransletClassLoader.loadClass(TemplatesImpl.java:194)CODE",Bug Reproduction,True,1175,NONE,False,False,False,1.0,0.3308270677,1.0,0.7709923664,0.796966708,0.203033292,0.02606390197,0.0009716429063
"In this case, maybe consider installing one of the more recent ones, or update your conda root or default python and give it another try (or create a new py 27 env by substituting the 3.5 by 2.7 in CODE) ?",Solution Discussion,True,205,CONTRIBUTOR,False,False,False,1.0,0.5633802817,0.8888888889,0.6666666667,0.6460796767,0.3539203233,0.0001352009984,0.00843712351
Actually I read SCREEN_NAME 's code snippet too quickly:,Bug Reproduction,False,56,MEMBER,False,False,False,0.3636363636,0.1126760563,0.1725146199,0.5,0.1683509928,0.8316490072,0.002433479587,8.164645755e-06
"On JITClient:
CODE

On JITServer
- JITServer vs. Regular JIT
CODE",Investigation and Exploration,True,70,CONTRIBUTOR,False,False,False,0.2258064516,0.07407407407,1.0,0.6971428571,0.4485135262,0.5514864738,0.0006369645556,0.0001183702813
"I got 2 failures running a 60x grinder, but I was not able to get a core file using CODE
still trying to get a core from grinder",Bug Reproduction,True,129,CONTRIBUTOR,False,False,False,1.0,0.3152173913,1.0,0.2641509434,0.3660017355,0.6339982645,0.0112234231,0.0001080772833
Alternatively some people reported that this bug was fixed in master.,Solution Discussion,False,69,MEMBER,False,False,False,0.4583333333,0.1549295775,0.283625731,0.8571428571,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
*         [Long.js] URL ,Solution Discussion,False,24,NONE,False,False,False,0.1,0.04109589041,0.4051724138,0.75,0.4752476502,0.5247523498,0.0635462371,0.3197097642
"For the best performance, it's going to be important to integrate optimizations like the CODE for prefetching data to the GPU before it is needed, and we're working on a way to do that more transparently.",Solution Discussion,True,204,CONTRIBUTOR,True,False,False,0.7659574468,0.5373134328,0.5547850208,0.9642857143,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"For reference, I have:CODEandCODE",Investigation and Exploration,True,33,MEMBER,False,False,False,0.4166666667,0.07352941176,0.5731707317,1.0,0.5703414647,0.4296585353,0.001821873532,0.0110293102
"the speed is slow, I use tensorflow benchmark to get the computation time as below:I tensorflow/core/util/stat_summarizer.cc:392] ============================== Top by Computation Time ==============================I tensorflow/core/util/stat_summarizer.cc:392]               [node type]                [start]                [first]               [avg ms]                   [%]                [cdf%]                [mem KB]              [Name]I tensorflow/core/util/stat_summarizer.cc:392]                    Conv2D                106.164                 51.354                 51.004               23.145%               23.145%                 692.224              conv8/Conv2DI tensorflow/core/util/stat_summarizer.cc:392]                    Conv2D                 85.187                 19.115                 19.283                8.750%               31.896%                 692.224              conv7/Conv2DI tensorflow/core/util/stat_summarizer.cc:392]         SquaredDifference                 11.967                 15.105                 14.331                6.503%               38.399%               11075.584              conv1/batch_norm/moments/sufficient_statistics/SquaredDifferenceI tensorflow/core/util/stat_summarizer.cc:392]                       Mul                 11.970                 14.162                 13.495                6.124%               44.523%               11075.584              conv1/batch_norm/batchnorm/mul_1I tensorflow/core/util/stat_summarizer.cc:392]                    Conv2D                  3.948                  8.170                  7.986                3.624%               48.146%               11075.584              conv1/Conv2DI tensorflow/core/util/stat_summarizer.cc:392]                       Sub                 11.960                 10.176                  7.943                3.604%               51.751%               11075.584              conv1/batch_norm/moments/sufficient_statistics/SubI tensorflow/core/util/stat_summarizer.cc:392]         SquaredDifference                 45.570                  5.908                  7.177                3.257%               55.007%                5537.792              conv2/batch_norm/moments/sufficient_statistics/SquaredDifferenceI tensorflow/core/util/stat_summarizer.cc:392]                       Mul                 45.574                  7.755                  6.902                3.132%               58.140%                5537.792              conv2/batch_norm/batchnorm/mul_1I tensorflow/core/util/stat_summarizer.cc:392]                    Conv2D                 40.692                  5.408                  4.845                2.199%               60.338%                5537.792              conv2/Conv2DI tensorflow/core/util/stat_summarizer.cc:392]                       Sub                 45.563                  6.067                  4.784                2.171%               62.509%                5537.792              con",Solution Discussion,False,2967,NONE,False,False,False,1.0,1.0,0.7644539615,0.6,0.617232977,0.382767023,0.005602480188,0.0279240315
"@gacholio   Yes, that should be an addi.",Solution Discussion,False,40,CONTRIBUTOR,False,False,False,1.0,0.0625,1.0,0.7666666667,0.08739582604,0.912604174,0.005260431966,0.02385381934
@jwkvam We recently agreed in #2570 to implement this feature using the CODE parameter.,Task Progress,True,87,MEMBER,False,False,False,1.0,0.1971830986,0.9782608696,0.3333333333,0.999977436,2.256404123e-05,2.35122996e-06,2.449490317e-05
Thanks @ChengJin01 for all your work in investigating this.,Social Conversation,False,59,CONTRIBUTOR,False,False,True,1.0,0.09090909091,0.5,0.9964912281,1.0,0.0,0.2381062384,0.0
"No, not useless: it's one specific sub-sampling strategy.",Solution Discussion,False,57,MEMBER,False,False,False,0.6,0.1267605634,0.4528985507,0.5,0.03983161019,0.9601683898,1.158068488e-06,0.0028917672
"Checking out the swig interface files to see if they're going to be helpful, or if I should just use the c++ API.",Solution Discussion,False,113,NONE,False,False,False,1.0,0.3150684932,0.04956896552,1.0,0.0006346839938,0.999365316,0.004187991532,0.0001418645338
if we discover the timestamp has changed what do we do?,Solution Discussion,False,55,CONTRIBUTOR,False,False,False,0.4074074074,0.0802919708,0.125,0.7732342007,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
It would be better off not to have such package in the first place.,Solution Discussion,False,67,NONE,False,False,False,0.4666666667,0.1102362205,0.9530791789,1.0,0.928984049,0.07101595102,0.001770336874,0.003939258366
"Additionally, ran 200+ iterations locally without being able to reproduce this failure with this patch.",Testing,False,103,MEMBER,False,False,False,0.3947368421,0.1630434783,1.0,0.9119496855,0.6349174086,0.3650825914,0.01709802761,0.01374259717
I ran into this issue too.,Bug Reproduction,False,26,CONTRIBUTOR,False,False,False,0.3333333333,0.03921568627,0.7106109325,0.1428571429,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
"When used for batch jobs the additional memory overhead of storing a new lexeme struct for each new word form encountered in parsing is negligible compared to the speed gains, and because most text conforms to the assumption that vocabulary size grows logarithmically as the total number of tokens grows linearly this is usually a safe bet.",Motivation,False,340,NONE,True,True,False,1.0,0.9193548387,0.01321585903,0.1764705882,0.0,1.0,0.0,0.0008157310994
"After 3 restarts I got the crash, but no core dumps.",Investigation and Exploration,False,52,NONE,True,False,False,0.3333333333,0.1111111111,0.7142857143,0.6035087719,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
@EricYangIBM Can you validate my results for a firm confirmation?,Testing,False,65,CONTRIBUTOR,False,False,False,0.9090909091,0.1075268817,0.75,0.7722007722,0.6103874427,0.3896125573,0.001063107557,0.0008616766512
"Trying an xlc 13 build myself.
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/65/",Task Progress,False,107,CONTRIBUTOR,False,False,False,1.0,0.04597701149,1.0,0.3419117647,0.7627592162,0.2372407838,0.01035388553,0.000268149688
@dmitripivkine,Social Conversation,False,14,CONTRIBUTOR,False,False,False,0.01724137931,0.01098901099,0.1428571429,0.6083916084,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
"@nirmalthacker Every time you run an iterator init op, it restarts the iterator.",Usage,False,80,NONE,False,False,False,0.7647058824,0.1940298507,0.7087378641,0.3333333333,0.5518003453,0.4481996547,0.002095453319,0.004343090399
This is odd â I definitely thought I'd done this.,Social Conversation,False,49,MEMBER,False,False,False,0.8461538462,0.07189542484,0.3408360129,0.3333333333,0.01870139123,0.9812986088,0.001404504327,0.00111366228
I don't believe so - it's the location that's causing issues.,Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,1.0,0.15625,1.0,0.9219858156,0.9830412086,0.01695879142,0.0003967166289,0.0008896069861
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6681034483,1.0,0.7032692861,0.2967307139,0.1143443634,0.03291102261
Below is why we need it:,Motivation,False,24,CONTRIBUTOR,False,False,False,0.2727272727,0.08955223881,0.4771151179,0.1428571429,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9_openj9-0.24.0/OpenJDK11U-debugimage_x64_linux_openj9_11.0.10_9_openj9-0.24.0.tar.gz,Investigation and Exploration,False,168,CONTRIBUTOR,False,False,False,0.04761904762,0.01333333333,1.0,0.2711864407,0.003634671094,0.9963653289,5.86e-05,0.002021828306
"In the long term, I think that an optimal solution would be to add some functionality for a timeout on vocabulary entries that aren't loaded at initialization.",Expected Behaviour,False,159,NONE,True,True,False,0.4736842105,0.435483871,0.05286343612,0.7058823529,0.0,1.0,0.0,0.0008157310994
"2)         Switch the naming scheme and have a bunch of 'categorical encoders' where the name says how it encodes (OnehotEncoder, OrdinalEncoder, and later maybe BinaryEncoder, UnaryEncoder, ...)",Solution Discussion,False,195,CONTRIBUTOR,True,True,False,0.54,0.421875,0.06617647059,0.75,0.0,1.0,0.0,0.0007774126438
The JITServer can't talk about object addresses directly.,Investigation and Exploration,False,57,MEMBER,False,False,False,0.2285714286,0.04232804233,0.2,0.8571428571,0.4980531694,0.5019468306,0.09504926646,0.001840119827
We should be removing the exclude for jdk17 if the problem has been resolved.,Solution Discussion,False,77,CONTRIBUTOR,False,False,False,0.9333333333,0.1505376344,0.8,0.9691119691,0.9195635971,0.08043640294,0.003058765602,0.2682425527
I'll be trying to narrow down if we ever call the classunloading routine without removing anything.,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.3720930233,0.1758241758,1.0,0.2902097902,0.6007887623,0.3992112377,0.01222678832,0.05114946292
"We need to note somewhere that, for specific performance tuning exercise, multiheap:32 may well be recommended.",Solution Discussion,False,111,CONTRIBUTOR,False,False,False,0.5714285714,0.2580645161,1.0,0.5443037975,0.4792143262,0.5207856738,0.01177304509,0.003593754102
"Love the link between bacon and broccoli, wonder what adding sentiment into the mix would change about that :P",Potential New Issues and Requests,False,110,NONE,True,False,False,0.5277777778,0.5,0.5109489051,0.125,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
Please correct me if I'm wrong.,Social Conversation,False,31,NONE,False,False,False,0.3,0.02307692308,0.9057815846,0.2,0.7489109604,0.2510890396,0.04599776246,0.3206669123
"I don't see Tokenizer in the above list of ""state objects that need pickling""; do we not expect the pickler to find the Tokenizer object?",Solution Discussion,False,137,CONTRIBUTOR,False,False,False,1.0,0.1633986928,0.3344051447,0.8333333333,0.01820665371,0.9817933463,0.01064935216,0.001404504327
@andrewcraik @gita-omr Can someone take a look at this?,Contribution and Commitment,False,55,MEMBER,False,False,False,0.9090909091,0.1612903226,0.3333333333,0.0218579235,0.0008061774606,0.9991938225,0.0009414561275,0.0002387130853
The highest likelihood is that OpenBLAS is causing the fees they are talking about in that page.,Investigation and Exploration,False,96,NONE,False,False,False,0.7727272727,0.175257732,0.7337278107,1.0,0.8504261564,0.1495738436,8.045718754e-06,1.849522015e-05
"@mikepb Normally, you don't have to do anything special on Windows, it's trickier on OS X because Apple's default clang doesn't support OpenMP, yet. MSVC does, though.",Solution Discussion,False,167,CONTRIBUTOR,False,False,False,1.0,0.1764705882,0.8778135048,1.0,0.1981355965,0.8018644035,0.0009535759306,0.002396331593
Restarting my windows VM *sometimes* fixes the problem.,Solution Discussion,False,55,NONE,True,True,False,0.08080808081,0.08080808081,0.6,0.01052631579,0.0,1.0,0.0,0.006553271164
@nmhkahn how is it different from pawni's suggestion?,Usage,False,53,NONE,False,False,False,1.0,0.03076923077,0.1541755889,1.0,0.2177121341,0.7822878659,0.007698692487,0.0001386923292
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3038793103,1.0,0.3427354697,0.6572645303,0.2645419447,0.005883505094
-         Using CODE and suffering any relevant performance hits,Motivation,True,64,CONTRIBUTOR,False,False,False,0.225,0.1343283582,0.2524271845,0.625,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
CODE,Solution Discussion,True,4,MEMBER,False,False,False,0.1,0.01470588235,0.8739837398,1.0,0.6329218471,0.3670781529,0.02547446062,0.02946766485
"I've been so far only able to reproduce it once, and it was without a limitfile where I was logging the presumably problematic method (CODE).",Bug Reproduction,True,141,CONTRIBUTOR,False,False,False,0.65,0.1954887218,0.4615384615,0.6590330789,0.6946068931,0.3053931069,9.44e-05,0.004019012644
It would be great if the layer could be added to the documentation with a short explanation how to best handle the change from training to test.,Usage,False,144,NONE,False,False,False,1.0,0.1038461538,0.05139186296,1.0,0.1735517668,0.8264482332,5.01199785e-05,0.00114464291
*         See #6845 for a discussion of input pipeline performance.,Motivation,False,67,CONTRIBUTOR,True,True,False,0.2127659574,0.1492537313,0.01525658807,0.3666666667,0.0,1.0,0.0,0.000766008561
This will define the tokenization standards that we have to target.,Solution Discussion,False,67,MEMBER,False,False,False,0.1833333333,0.1833333333,0.1551724138,0.48,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"Yes, it might be still missing case, but I *think* this is possible (will check by actual coding it next week).",Solution Discussion,False,111,CONTRIBUTOR,True,False,False,0.488372093,0.328125,0.3345588235,0.08333333333,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
"The default ldconf only search /lib and /usr/lib, as well as the library file under the directory listed in the configuration file /etc/ld. so. conf.",Investigation and Exploration,False,149,NONE,False,False,False,0.75,0.2125984252,0.8123167155,0.2222222222,0.7354114739,0.2645885261,0.4152157275,0.1560011388
I just re-ran with the same -Xms option as @jsimomaa and I reproduced my results.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,1.0,0.1167883212,0.5,0.3494423792,0.02012572759,0.9798742724,8.9e-05,6.54e-05
My script is present here https://github.com/brando90/tensor_flow_experiments/blob/master/tf_tutorials/beginner_tutorial_MNIST_BN.py,Usage,False,132,NONE,False,False,False,0.1276595745,0.02307692308,0.2355460385,0.75,0.2252071806,0.7747928194,0.00405768911,0.003439914719
I think the queues are nice enough.,Social Conversation,False,35,NONE,False,False,False,0.4375,0.1044776119,0.8973647712,0.1,0.9153731312,0.08462686876,0.125435556,0.2620248075
"While the compilation log has some useful info such as where OSR can happen, there were some crucial info I was hoping to get at runtime for when OSR is attempted.",Investigation and Exploration,False,163,MEMBER,False,False,False,0.775,0.3369565217,0.6363636364,0.7987421384,0.6067408459,0.3932591541,0.03227550175,0.06952239071
Will the helper wrappers need to be updated?,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,1.0,0.0625,1.0,0.8555555556,0.2167590594,0.7832409406,0.0002757120844,0.0001546049072
"update: I see the problem, I'll fix it and try again.",Task Progress,False,53,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.8,0.3639705882,0.7636365775,0.2363634225,0.00180747065,0.0005973713534
@dartdogCODE,Solution Discussion,True,12,NONE,False,False,False,1.0,0.007874015748,0.4750733138,1.0,0.395352593,0.604647407,0.08170171229,0.1167490581
I just quickly checked SCREEN_NAME  repo really awesome!,Social Conversation,False,56,NONE,False,False,False,1.0,0.1343283582,0.8349514563,0.6666666667,0.7197506803,0.2802493197,0.01478320176,0.1554452775
And I don't wanna break my projects with TF dependency,Social Conversation,False,54,NONE,False,False,False,0.243902439,0.1408450704,0.6403508772,1.0,0.458708442,0.541291558,7.541918537e-05,3.099797711e-05
So I randomly created a demo Spring boot project (with JDK8) and launched it via boot dashboard.,Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.3333333333,0.1717171717,0.6666666667,0.4245614035,0.1408865936,0.8591134064,0.07075263326,0.1924076078
# Code: CODE,Investigation and Exploration,True,12,NONE,True,False,False,0.05555555556,0.0206185567,0.07692307692,0.9090909091,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
"@gita-omr the CODE happens when running CODE, but not CODE.",Contribution and Commitment,True,59,CONTRIBUTOR,False,False,False,0.7333333333,0.0632183908,0.3333333333,0.0625,0.7086383076,0.2913616924,0.003001622719,0.005841410604
"I'd welcome some volunteers to see if my simplified exception code in:

https://github.com/eclipse/openj9/blob/master/runtime/codert_vm/CodertVMHelpers.cpp#L323

called from:

https://github.com/eclipse/openj9/blob/master/runtime/jvmti/jvmtiHook.c#L1314

should be equivalent to the stack walk code in:

https://github.com/eclipse/openj9/blob/master/runtime/codert_vm/jswalk.c#L200

called from:

https://github.com/eclipse/openj9/blob/master/runtime/jvmti/jvmtiHook.c#L1886

@DanHeidinga @andrewcraik @fjeremic 

Note the magic +1 for the handler PC is taken care of in the stackwalk case by:

https://github.com/eclipse/openj9/blob/master/runtime/codert_vm/jswalk.c#L376",Contribution and Commitment,False,692,CONTRIBUTOR,False,False,False,1.0,0.953125,1.0,0.865248227,0.9596665979,0.04033340207,0.006489322312,0.1158821295
"There is no change on my side in terms of STS.ini (the only change is to modify Eclipse/configure.ini to JDK8 to ensure the workspace is running with JDK8)

Other than that, I don't think there is any fundamental difference as to complete bundles/via installer; otherwise these applications in Eclipse won't work correctly.",Investigation and Exploration,False,325,CONTRIBUTOR,False,False,False,1.0,0.5555555556,1.0,0.3473684211,0.1181145134,0.8818854866,0.003554247873,0.004838964607
https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=deblocal,Solution Discussion,False,150,NONE,False,False,False,0.09090909091,0.007874015748,0.5630498534,1.0,0.4314468831,0.5685531169,0.2379527984,0.0008762945681
It still crashes with the latest openj9 and omr changes (including that commit),Task Progress,False,79,CONTRIBUTOR,True,False,False,1.0,0.1397849462,1.0,0.04247104247,0.01037931802,0.989620682,0.007094844115,0.0004923866578
"The livelock condition did not manifest, so it's unclear whether the compilation of CODE on the flight service is the one that is faulty.",Investigation and Exploration,True,137,CONTRIBUTOR,False,False,False,0.406779661,0.3,1.0,0.7990196078,0.9391761414,0.06082385865,0.06820979376,0.04955018304
I re-ran code from a few weeks ago and now this issue appears.,Bug Reproduction,False,62,NONE,False,False,False,0.4375,0.1971830986,0.9269005848,0.375,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"With CODE I can get the ClassFormatError (first attempt on a few of my tests) _plus_ the following:

CODEjava.lang.",Bug Reproduction,True,117,NONE,False,False,False,0.4545454545,0.1503759398,0.2,0.7608142494,0.796966708,0.203033292,0.02606390197,0.0009716429063
I greatly appreciate the work that the TF team has put in here to make batch_norm available and effective.,Social Conversation,False,106,NONE,False,False,False,0.6129032258,0.07307692308,0.3768736617,0.1,0.3712524908,0.6287475092,0.06886363297,0.000473907732
I'll work on a solution,Task Progress,False,23,CONTRIBUTOR,False,False,False,1.0,0.0625,1.0,0.4264705882,0.4169301679,0.5830698321,0.0004668527312,0.5109021712
This issue will be moved forward to the 0.25 release as the investigation continues.,Action on Issue,False,84,CONTRIBUTOR,False,False,False,0.5833333333,0.2258064516,1.0,0.5846994536,0.6994168402,0.3005831598,0.04797128298,0.008864014105
Trying to find the exact place in the port library where it happens.,Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.9285714286,0.07471264368,1.0,0.1323529412,0.7214571752,0.2785428248,0.00724878302,0.01330093329
FYI:  @tajila.,Contribution and Commitment,False,14,CONTRIBUTOR,False,False,False,0.02702702703,0.02542372881,1.0,0.896969697,0.6347909793,0.3652090207,0.02864940725,0.006974193286
just doubling the length of the list is insufficient.,Investigation and Exploration,False,53,NONE,False,False,False,0.4736842105,0.1267605634,0.1198830409,0.8,0.1546493757,0.8453506243,5.56302982e-05,0.007793915485
So we skip timestamp checking if the jar file is opened.,Solution Discussion,False,56,CONTRIBUTOR,False,False,False,0.4074074074,0.0802919708,0.625,0.7881040892,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
It basically ran until I ran out of memory on a 4G box.,Observed Bug Behaviour,False,55,NONE,False,False,False,0.56,0.2258064516,0.2466960352,0.7777777778,0.2016154368,0.7983845632,0.03459730626,0.03432994834
Thanks!,Social Conversation,False,7,CONTRIBUTOR,False,False,False,0.05263157895,0.006535947712,0.652733119,1.0,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
@OscarQQ Could you check if this can be reproduced using JDK11 on mac?,Contribution and Commitment,False,70,CONTRIBUTOR,False,False,False,1.0,0.224137931,0.3333333333,0.6422018349,0.9311896043,0.06881039571,0.0007046806361,0.3152815591
"The only other limit is the stack, which is already at the maximum.
https://github.com/eclipse/openj9/issues/8842#issuecomment-598890366",Solution Discussion,False,137,CONTRIBUTOR,True,False,False,1.0,0.2419354839,1.0,0.4345991561,0.2978645271,0.7021354729,0.0004492192628,0.01034662808
"Taking another look at logs produced with CODE on Linux x86_64, I noticed that there is far less cold call inlining happening in the compilations of the various CODE methods on that platform than on Linux Power 64 LE or Windows.",Investigation and Exploration,True,228,MEMBER,False,False,False,1.0,0.6119402985,0.5,0.6069364162,0.0121839659,0.9878160341,0.0002903767183,0.005263769541
"Foreign is still incubator status for Java 15, but it is included.
https://openjdk.java.net/jeps/383",Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,1.0,0.2978723404,1.0,0.1076923077,0.04861986449,0.9513801355,0.001299478205,0.01613471067
we no longer live in the medieval portion of the information age.,Social Conversation,False,65,NONE,False,False,False,1.0,0.1643835616,0.8081896552,0.6666666667,0.7969930879,0.2030069121,0.2066977323,0.2701229087
Implemented ð,Task Progress,False,13,MEMBER,False,False,False,0.1666666667,0.03225806452,0.6079295154,0.5,0.2581064871,0.7418935129,0.1481803025,0.002179048536
@tshi1983I got the same problem with tensorflow 1.1-gpu for ubuntu.,Bug Reproduction,False,67,NONE,False,False,False,0.5,0.01447178003,0.8844884488,0.2,0.3445264171,0.6554735829,0.04382956016,0.06892677638
CODE.,Observed Bug Behaviour,True,5,NONE,True,True,False,0.06666666667,0.007874015748,0.008797653959,0.5,0.0,1.0,0.0,0.001987007177
I _think_.,Social Conversation,False,10,CONTRIBUTOR,False,False,False,0.06896551724,0.03225806452,0.5714285714,0.2349726776,0.4886807048,0.5113192952,0.2303004492,0.01077464908
"A Summary of what I've picked up

As we've established, the failure occurs because we have an entry in the J9Method_HT, that carries a reference to a J9Method object that has been corrupted in some way.",Investigation and Exploration,False,204,CONTRIBUTOR,False,False,False,0.7647058824,0.4285714286,0.04761904762,0.4125874126,0.8054811495,0.1945188505,0.1631008731,0.2634355634
I'm not going to install a C compiler on Windows just for this.,Contribution and Commitment,False,63,MEMBER,False,False,False,1.0,0.1340206186,0.1272189349,0.5,0.009492338114,0.9905076619,7.410007642e-06,4.98635903e-06
Is that always true?,Motivation,False,20,NONE,False,False,False,0.1333333333,0.05970149254,0.1581137309,0.5428571429,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"However if you take the document that produces the error, pass it through CODE and then call CODE again, it works.",Investigation and Exploration,True,114,NONE,False,False,False,0.7,0.2210526316,0.4421052632,0.6666666667,0.1598964447,0.8401035553,0.03116866066,0.03531242178
"What about introducing a query in CODE, namely CODE?",Solution Discussion,True,52,CONTRIBUTOR,False,False,False,1.0,0.140625,1.0,0.3191489362,0.5357124407,0.4642875593,0.04023187486,0.1839370639
"I am not sure whether the demo project actually got started/kept running as follows:
CODECODE | \ \ \ \
 \\/  ___)",Investigation and Exploration,True,116,CONTRIBUTOR,False,False,False,0.7407407407,0.202020202,0.05555555556,0.1263157895,0.1128986515,0.8871013485,0.002601855342,0.003967626759
"**

https://github.com/eclipse/openj9/blob/11f2b723867955926f2f10d545c90d708a304c63/runtime/gc_base/ClassLoaderManager.cpp#L405-L409

https://github.com/eclipse/openj9/blob/11f2b723867955926f2f10d545c90d708a304c63/runtime/gc_base/ClassLoaderManager.cpp#L343-L359

Respective Hooks handled by JIT:
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/HookedByTheJit.cpp#L6557-L6560

Given this sequence of hooks",Investigation and Exploration,False,471,CONTRIBUTOR,False,False,False,0.3529411765,0.1978021978,0.7619047619,0.465034965,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"But here is something about why re-creating some Python features for JavaScript, because they are written in JavaScript, they are more friend to JavaScript developers, and it's easy for that developers to modify the source code to check if something different is possible, not just the get feeds from upstream :)",Solution Discussion,False,312,CONTRIBUTOR,False,False,False,1.0,0.7123287671,0.7629310345,1.0,0.7054919778,0.2945080222,0.0002671302531,0.0550485294
2.         Select an annotated corpus.,Solution Discussion,False,38,MEMBER,False,False,False,0.1,0.1,0.1465517241,0.44,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Crashes are bad.,Motivation,False,16,CONTRIBUTOR,False,False,False,0.03846153846,0.03225806452,0.375,0.6718146718,0.5547508363,0.4452491637,0.002831223282,0.01376817541
"There's really not a lot that can be done with the available information, so the best thing to do is to try to capture more information the next time this failure is seen.",Investigation and Exploration,False,171,CONTRIBUTOR,False,False,False,1.0,0.5322580645,0.6666666667,0.07650273224,0.1024999691,0.8975000309,0.0006590192892,0.003777918314
60/-199 above are filled in resulting from loader relocations.,Solution Discussion,False,62,CONTRIBUTOR,False,False,False,0.6,0.0703125,1.0,0.5055555556,0.03782700625,0.9621729938,3.78e-05,0.001226532263
"Code ran fine, NO freeze with n_jobs=-1.",Investigation and Exploration,False,40,NONE,False,False,False,0.2916666667,0.07216494845,0.7958579882,0.5,0.850540769,0.149459231,7.813286879e-05,0.005705487359
"This should be enough to keep you all productive, while we try to plan out a prettier, 'automagical' solution/wrapper around this.",Social Conversation,False,130,MEMBER,False,False,False,0.6666666667,0.3548387097,0.6387665198,0.125,0.288728579,0.711271421,0.1151253204,0.02221386295
(You can try it by downloading the current nightly build.),Usage,False,58,CONTRIBUTOR,True,False,True,10.0,0.1492537313,0.9764216366,8.0,1.0,0.0,0.02385162338,0.0
I doubted so-far tested machines are set differently.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.1875,0.05172413793,0.5,0.5036764706,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
*         See #7525 and [many more Stack Overflow questions] URL  for an example of the confusing error.,Motivation,False,104,CONTRIBUTOR,True,True,False,0.3829787234,0.2686567164,0.01664355062,0.4,0.0,1.0,0.0,0.000766008561
"For example, in one instance, CODE might return 142 new {image, label} pairs that will be added to CODE.",Motivation,True,104,CONTRIBUTOR,False,False,False,0.4130434783,0.2835820896,0.6699029126,0.7777777778,0.5116443977,0.4883556023,0.04958391229,0.003143434467
@pshipton,Social Conversation,False,9,CONTRIBUTOR,False,False,False,0.0303030303,0.007299270073,1.0,0.8921933086,0.06795742807,0.9320425719,0.000359450058,0.0002381149578
"@zl-wang performance updated, each test run for 3 times.",Task Progress,False,56,NONE,False,False,False,1.0,0.1612903226,0.5,0.5147679325,0.4775048297,0.5224951703,0.2549319316,0.01177304509
"In 0.24.0 this method is successfully compiled at hot, so we don't have this nasty compile-fail-compile-fail behavior.",Investigation and Exploration,False,118,CONTRIBUTOR,False,False,False,1.0,0.25,1.0,0.2303921569,0.1242931708,0.8757068292,0.0007858204357,0.07018304397
I'm not sure how MAVEN_OPTS gets passed through,Solution Discussion,False,47,MEMBER,False,False,False,0.8888888889,0.06015037594,1.0,0.1221374046,0.006024439826,0.9939755602,0.005541266823,0.0006940890429
"My dataset contains one column with sequences and one with sequence length which i want treat different, because i want to pad the sequences.",Usage,False,141,NONE,False,False,False,1.0,0.3582089552,0.9611650485,0.4,0.9970343733,0.002965626714,0.02821456383,0.02385162338
@nuchi Great work!,Social Conversation,False,18,NONE,False,False,False,0.1764705882,0.04109589041,0.9698275862,0.5,0.9684657834,0.03153421661,0.007495803266,0.5674118797
We do not return the class from the shared cache.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.3703703704,0.07299270073,0.25,0.7769516729,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
"The limitation is historical, and based off the class ArraySet inherits; ArrayList which itself is an implementation of List.",Solution Discussion,False,125,CONTRIBUTOR,False,False,False,0.5,0.4042553191,0.2777777778,0.8846153846,0.7299060094,0.2700939906,0.01554507959,0.00748487997
Which means someone is holding exclusive already - presumably the GC master thread (the only one in the VM with VM access).,Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.28,1.0,0.6666666667,0.08490077475,0.9150992253,3.46e-05,0.000178113446
So @hzongaro and @cathyzhyi have been looking at this.,Contribution and Commitment,False,54,CONTRIBUTOR,False,False,False,0.1875,0.1343283582,0.1111111111,0.6242774566,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"Per value this isn't that much of a difference, but has a big impact when computing vector distances in latent spaces.",Usage,False,118,NONE,False,False,False,0.8076923077,0.08076923077,0.4925053533,0.4444444444,0.386758151,0.613241849,0.0004998808382,0.0004945035936
"@Tshzzz SCREEN_NAME , your solution worked for me.",Solution Discussion,False,50,CONTRIBUTOR,False,False,False,1.0,0.01013024602,0.9273927393,0.3333333333,0.4006589622,0.5993410378,0.05332661552,0.02633936247
"It'll mean writing out all the state to binary data strings, shipping ~1gb to each worker, and then loading from the strings.",Solution Discussion,False,125,MEMBER,False,False,False,0.7419354839,0.1503267974,0.04823151125,0.5833333333,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
The failure rate is low enough that the results can't really be trusted.,Testing,False,72,CONTRIBUTOR,False,False,False,0.5909090909,0.203125,0.5,0.5744680851,0.8477298922,0.1522701078,0.07112047202,0.0001851344268
@robmsylvester The same error persisted even when I tried with num_layers=1 which should effectively skip that line.,Investigation and Exploration,False,116,NONE,False,False,False,1.0,0.02460202605,0.2574257426,0.3333333333,0.06771955093,0.9322804491,0.0061573337,0.001820264
The intention of this instruction is to properly set the loop counter so that the entire data region is properly encoded[1].,Solution Discussion,False,124,CONTRIBUTOR,False,False,False,0.6774193548,0.4468085106,0.8888888889,0.8230769231,0.6986733294,0.3013266706,0.2919761514,0.1217072968
We found this via a newly written test (if we'd resolved the earlier blocker a few days faster we would already have released JDK17 -- for better or worse :) ).,Investigation and Exploration,False,160,CONTRIBUTOR,False,False,False,0.3974358974,0.3333333333,0.625,0.6795366795,0.5547508363,0.4452491637,0.002831223282,0.01376817541
"Would that add CODE more estimators, whereCODE is the parameter value from the constructor?",Solution Discussion,True,91,MEMBER,False,False,False,1.0,0.1971830986,0.1702898551,0.6666666667,0.03913665065,0.9608633494,0.001972331007,0.000142372238
If you install new cuda while you still have previous version please make sure to specify the path  like this CODE,Solution Discussion,True,114,NONE,False,False,False,0.8148148148,0.1732283465,0.6392961877,1.0,0.4677266607,0.5322733393,0.02832686897,0.06170592737
The threads must not be CODEed one by one otherwise the crash will not happen.,Bug Reproduction,True,78,CONTRIBUTOR,True,True,False,0.625,0.1612903226,0.7142857143,0.01930501931,0.0,1.0,0.0,0.03406420424
"Yes:
JDK8 link command:

/usr/vacpp/bin//xlc_r -q64 -q64 -brtl -bnolibpath -liconv -bexpall      -o /home/koblents/openj9-openjdk-jdk8/build/aix-ppc64-normal-server-release/jdk/objs/java_objs/java /home/koblents/openj9-openjdk-jdk8/build/aix-ppc64-normal-server-release/jdk/objs/java_objs/main.o   -L/home/koblents/openj9-openjdk-jdk8/build/aix-ppc64-normal-server-release/jdk/objs",Investigation and Exploration,False,384,CONTRIBUTOR,False,False,False,0.3563218391,0.3563218391,0.3333333333,0.5367647059,0.766404827,0.233595173,1.59e-05,0.0001754195096
@brando90 It slows down training for me as well but I think that this is expected as it needs to calculate some statistics.,Solution Discussion,False,123,NONE,False,False,False,1.0,0.08846153846,0.1798715203,0.5,0.2178244117,0.7821755883,3.5002819e-05,0.0001282422122
"When the server makes its next request, how does it know the new address of the object it was talking to?",Investigation and Exploration,False,105,MEMBER,False,False,False,0.6,0.1111111111,1.0,0.88,0.4980531694,0.5019468306,0.09504926646,0.001840119827
I tried to reproduce this locally on WSL and could not do it.,Bug Reproduction,False,61,CONTRIBUTOR,False,False,False,0.3939393939,0.0977443609,0.125,0.4809160305,0.5596707013,0.4403292987,0.1072383922,0.000211333354
"As per Jack's investigation, the CODE is thrown from CODE due to a CODE: https://github.com/eclipse-openj9/openj9/blob/c430223380bd4a6bfd4a238953720395d7741b6e/runtime/vm/BytecodeInterpreter.hpp#L7031-L7039

CODE is called on an CODE method (constructor):

CODE",Investigation and Exploration,True,265,CONTRIBUTOR,False,False,False,1.0,0.2934782609,0.2,0.5471698113,0.5070196757,0.4929803243,0.01749005949,7.94e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4935344828,1.0,0.5918175419,0.4081824581,0.01788489054,0.05582181283
It's not yet complete (no deprecation warnings and new attributes are not yet calculated in old behaviour).,Task Progress,False,107,CONTRIBUTOR,True,False,False,0.5151515152,0.265625,0.1360294118,0.1111111111,0.002016098271,0.9979839017,0.0039907996,0.01559625638
I don't think the merged commit has made it's way to an adoptopenjdk nightly.,Social Conversation,False,77,CONTRIBUTOR,False,False,False,0.6666666667,0.1538461538,0.75,0.9755244755,0.952674969,0.04732503098,0.1633866501,0.04052333396
"Java -version output
--------------------

openjdk version ""11.0.5"" 2019-10-15
OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.5+10)
Eclipse OpenJ9 VM AdoptOpenJDK (build openj9-0.17.0, JRE 11 Mac OS X amd64-64-Bit Compressed References 20191016_371 (JIT enabled, AOT enabled)",Observed Bug Behaviour,False,286,NONE,True,True,False,0.4526315789,0.3233082707,0.25,0.005089058524,0.0,1.0,0.0,0.0001794494051
I've spent a little time looking into this now.,Social Conversation,False,47,MEMBER,False,False,False,0.3225806452,0.06535947712,0.02893890675,0.08333333333,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"(actually, given a doc, are we guaranteed to get the same packing result if the vocab grows?)",Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.68,0.2741935484,0.7268722467,0.5,0.2945657166,0.7054342834,0.000146521357,8.318051723e-06
"So the test fails on [this line](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/feature_extraction/tests/test_feature_hasher.py#L122), where the expected values are CODE and  CODE (and I get those in the 32bit VM as well).",Potential New Issues and Requests,True,240,MEMBER,False,False,False,1.0,0.5294117647,0.2601626016,0.5,0.3543056001,0.6456943999,0.009464004531,0.003096425316
Why was it that I needed to change updates_collections to be None?,Usage,False,66,NONE,False,False,False,0.4,0.04615384615,0.2505353319,0.1818181818,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
**method='exact'** was the trick.,Solution Discussion,False,33,NONE,False,False,False,0.4,0.05633802817,0.8976608187,1.0,0.6475280273,0.3524719727,0.00843712351,0.0351468626
Then the next time it worked again.,Investigation and Exploration,False,35,NONE,True,False,False,0.2258064516,0.07070707071,0.2727272727,0.05614035088,0.09912996542,0.9008700346,0.005467138405,0.004133788861
Since the BCI is being considered as part of the comparison I believe it should suit the purpose fine.,Solution Discussion,False,102,CONTRIBUTOR,False,False,False,0.7307692308,0.296875,0.6666666667,0.4893617021,0.7919306281,0.2080693719,0.1671307049,0.004342243829
JDK12 and earlier still work with those changes and xlc 13.,Solution Discussion,False,59,CONTRIBUTOR,False,False,False,0.6470588235,0.0632183908,0.75,0.3860294118,0.7654520476,0.2345479524,5.66e-05,1.58e-05
+1 would be cool af,Social Conversation,False,19,NONE,False,False,False,1.0,0.06849315068,0.4612068966,1.0,0.5521169948,0.4478830052,0.01337665255,0.0276259601
"Java 8 for STS4 and Java 11 for OpenJ9.zip 
[STS4_windbg_java8_jre.txt] URL 
[STS4_windbg_java11_jre_Xint2.txt] URL 
No segment fault was detected in this way.",Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,0.4363636364,0.2424242424,0.6666666667,0.8385964912,0.803200419,0.196799581,0.3518178539,0.2306492075
I started a while back but stopped because of shifting project focuses.,Social Conversation,False,71,NONE,False,False,False,0.6,0.09448818898,0.6803519062,0.6666666667,0.5077260474,0.4922739526,0.01267336397,0.02165076149
No diagnostic files though.,Investigation and Exploration,False,27,CONTRIBUTOR,False,False,False,0.2222222222,0.06451612903,0.6666666667,0.7704918033,0.9692607796,0.03073922042,0.2372754111,0.0002193629989
"Once #3386 has been merged, the decomp003-NON-FSD test will fail if the JIT changes are not correct.",Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,1.0,0.296875,0.6666666667,0.1843971631,0.01413138559,0.9858686144,0.06695374525,0.5770832432
Hmm.,Social Conversation,False,4,MEMBER,False,False,False,0.2,0.006535947712,0.4887459807,0.5,0.1132199653,0.8867800347,2.363807545e-05,0.0654089151
"Hmmm, random guess maybe the mkl version, although if I believe the output of CODE the latest mkl version (11.3.3) is from 2016-05-13.",Investigation and Exploration,True,134,MEMBER,False,False,False,1.0,0.3521126761,0.5964912281,1.0,0.4554241693,0.5445758307,0.003896611783,8.635150765e-05
I'm thinking there must be something about the machine configuration which causes this.,Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.6842105263,0.07471264368,0.5,0.7463235294,0.7732003723,0.2267996277,1.31e-05,2.23e-05
"I tried two steps  to narrow down the scope:
1) compiled an older version openJDK11  (only support JVM_BeforeHalt) and openJ9 (including the setting and empty interfaces of JVM_BeforeHalt, JVM_AreNestMates, etc) and it finished without any error:
CODE
2) compiled the same version of openJDK11(only support JVM_BeforeHalt) and the latest version of openJ9 (support all JDK11 natives, including  JVM_BeforeHalt, JVM_AreNestMates, etc) and it ended up with same failure as the latest version of openJDK11:
CODE

So the investigation above indicates:
(1) the problem has nothing to with the latest version of openJDK11
(2) the problem came from the recent changes for JDK11 in openJ9, especially the changes with nestMates.",Investigation and Exploration,True,728,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.8727272727,0.6255636457,0.3744363543,0.0312575819,0.02864940725
and that Hotspot behavior is related to the global machine policy?,Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,1.0,0.0632183908,1.0,0.7389705882,0.7731932057,0.2268067943,2.01e-05,6.97e-06
"@kratzert Using queues increases your performance by overlapping data loading latency, and this is independent of what you use to load your data.",Solution Discussion,False,145,CONTRIBUTOR,False,False,False,0.7931034483,0.3432835821,0.7905686546,0.25,0.6090336754,0.3909663246,0.000261613555,0.0001603273732
"Then I added it to my PATH so that when I'm in a terminal and type'

'java -version' or 'javac -version' it executes one of the Oracle JDK 8 executables.",Investigation and Exploration,False,155,NONE,True,False,False,0.8611111111,0.3131313131,0.5,0.4526315789,0.1964587946,0.8035412054,0.004535009544,0.001033447215
@urisimchoni can you pls run CODE on the first core file and make the result available as well.,Investigation and Exploration,True,95,CONTRIBUTOR,False,False,False,0.5294117647,0.1730769231,0.5,0.07182320442,0.007061211921,0.9929387881,0.01118041169,8.41e-06
"-> The Entry being loaded, during CODE is always a valid j9method.",Investigation and Exploration,True,66,CONTRIBUTOR,False,False,False,0.6111111111,0.1208791209,1.0,0.3146853147,0.6101453274,0.3898546726,0.05114946292,0.001708499748
"It has nothing to do with this problem, but the code needs to be patched in order to compile with xlc 13.",Solution Discussion,False,105,CONTRIBUTOR,False,False,False,1.0,0.1264367816,0.6666666667,0.4522058824,0.766203361,0.233796639,0.000396081896,0.0002229068111
I will also need the CODE (CODE executable) to open the core file in CODE with symbols.,Social Conversation,True,87,CONTRIBUTOR,False,False,False,1.0,0.2266666667,1.0,0.2203389831,0.002600687443,0.9973993126,0.0006595011379,0.00112141451
"In this case, the method is being called to clear memory.",Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.3548387097,0.2340425532,0.3703703704,0.7692307692,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"One scenario, GC happened and we are supposed to fail the compilation but somehow 
CODE we didn't get into here.",Investigation and Exploration,True,113,CONTRIBUTOR,False,False,False,1.0,0.1111111111,0.8333333333,0.1885714286,0.308244607,0.691755393,0.01265320363,0.0005070055754
"any chance we could run this test on a previous release to see if the problem is already ""in the wild"" ?",Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,1.0,0.2258064516,0.5,0.3397683398,0.3835437516,0.6164562484,0.006214516454,0.000634134332
Depending on how many nodes the optimizer creates we may or may not generate profiling instructions.,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,0.5714285714,0.2,1.0,0.5147058824,0.5901481642,0.4098518358,0.0006727318859,0.002367610279
#ERROR!,Testing,False,723,CONTRIBUTOR,True,True,False,1.0,0.8548387097,0.8,0.01687763713,0.0,1.0,0.0,0.003027854511
Will have to enable the tracing to know for sure.,Task Progress,False,49,CONTRIBUTOR,False,False,False,0.2173913043,0.1612903226,0.6666666667,0.737704918,0.9240498584,0.07595014165,0.1265062135,0.2372754111
CODE supports SparseTensor and automatic batching of SparseTensor would make my life a whole lot easier,Motivation,True,103,NONE,False,False,False,0.5161290323,0.2388059701,0.5769764216,0.6,0.4630003862,0.5369996138,0.01269843694,0.02260310577
"True, but getObjectVolatile was.",Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.2352941176,0.05970149254,0.3333333333,0.312849162,0.003702163483,0.9962978365,0.0001999606974,9.22e-05
Thanks for the data.,Social Conversation,False,20,CONTRIBUTOR,False,False,False,0.1428571429,0.06451612903,0.1666666667,0.5232067511,0.4792143262,0.5207856738,0.01177304509,0.003593754102
"I don't think the proposal here is to get rid of queues entirely, is it?",Solution Discussion,False,72,CONTRIBUTOR,False,False,False,0.223880597,0.223880597,0.3689320388,0.25,0.2991231524,0.7008768476,0.01002173327,0.1413171275
"-         If we find the advice to use a CODE statement (see point 2 above) too cumbersome, we could also add a keyword to obtain the same result",Solution Discussion,True,145,CONTRIBUTOR,True,False,False,0.6363636364,0.4375,0.4522058824,0.7142857143,0.07430334202,0.925696658,0.1302436707,0.0003197521392
it solved my problem,Solution Discussion,False,20,NONE,False,False,False,0.6666666667,0.005788712012,0.5247524752,1.0,0.1263831775,0.8736168225,0.09927558477,0.002197250879
I think the commad you did (CODE) also downloads cuda 9.0.,Solution Discussion,True,58,NONE,False,False,False,0.34375,0.08661417323,0.5307917889,0.6,0.407848914,0.592151086,0.0230868493,0.04783163312
Are you certain that the library is correctly compiled?,Investigation and Exploration,False,55,MEMBER,False,False,False,0.45,0.1323529412,0.7357723577,0.75,0.590815313,0.409184687,0.001873670543,0.0005473217492
Is it normal that Batch Normalization makes my experiments **worse**?,Usage,False,69,NONE,False,False,False,0.2127659574,0.03846153846,0.2312633833,0.25,0.2252071806,0.7747928194,0.00405768911,0.003439914719
Going to try to reproduce with CODE instead to see if it will help as we need to continue the limiting on the one particular method.,Task Progress,True,132,CONTRIBUTOR,False,False,False,0.8666666667,0.1954887218,1.0,0.8396946565,0.8292482315,0.1707517685,0.03159699343,0.02587954735
I have been working on https://github.com/eclipse/omr/issues/2885 which would be a prerequisite of DDR support with that compiler.,Task Progress,False,130,CONTRIBUTOR,False,False,False,1.0,0.1440677966,1.0,0.9939393939,0.9092961559,0.09070384413,0.000301424055,0.2816210502
I am receiving the same CODE but with CODE.,Potential New Issues and Requests,True,43,NONE,False,False,False,0.75,0.01302460203,0.9141914191,0.25,0.3876856611,0.6123143389,0.05261488518,0.05332661552
The problem happens because runMacro can expand the following code in CODE into multiple CODE calls https://github.com/eclipse/openj9/blob/06fa4ce85ed4632d1723a1ad346b8e00e9269b60/jcl/src/java.base/share/classes/java/lang/invoke/FilterArgumentsHandle.java#L86-L89.,Investigation and Exploration,True,264,CONTRIBUTOR,False,False,False,0.3777777778,0.1278195489,0.1666666667,0.9440203562,0.9208021236,0.07919787637,0.02945136717,0.001354250294
"If you know your batch size is for example 32, then something likeCODE",Usage,True,70,NONE,False,False,False,1.0,0.1940298507,0.7281553398,0.6666666667,0.5768840719,0.4231159281,0.003144961394,0.0003822408168
See https://www.tensorflow.org/install/install_sources#common_installation_problemssudo apt-get install cuda-7-0vim ~/.bashrcexport PATH=/usr/local/cuda-7.0/bin${PATH:+:${PATH}}export LD_LIBRARY_PATH=/usr/local/cuda7.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}export LD_LIBRARY_PATH=/usr/local/cuda9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PAfor some common reasons and solutions.,Bug Reproduction,False,435,NONE,False,False,False,0.1968503937,0.1968503937,0.651026393,0.6666666667,0.5053260144,0.4946739856,0.4007313547,0.01499535971
"You might want to look into an approximate nearest neighbours library, to avoid the n**2 queries problem .",Workarounds,False,106,MEMBER,False,False,False,0.7727272727,0.4473684211,0.6861313869,0.7777777778,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
I suspect this is some sort of synchronization issue.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.5,0.0989010989,0.4285714286,0.3006993007,0.6101453274,0.3898546726,0.05114946292,0.001708499748
"Although, the sad bit was that the version of Tensorflow I had for which modifications within Tensorflow code were needed, and the version in remotes/origin/r1.0 were both identically labelled.",Solution Discussion,False,193,NONE,False,False,False,0.7209302326,0.04486251809,0.4521452145,0.5,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
"The 'OpenJ9' app is also rather sparse, but it does run a webserver serving some requests.",Investigation and Exploration,False,90,NONE,True,False,False,0.8888888889,0.1616161616,0.75,0.2070175439,0.1140182149,0.8859817851,0.003967626759,0.002853124861
"I think we get BCI from JIT instruction's node, which might be absent or not accurate at all.",Solution Discussion,False,93,CONTRIBUTOR,False,False,False,1.0,0.28125,1.0,0.609929078,0.8761337515,0.1238662485,0.1571286372,0.171061806
"Since https://github.com/eclipse/omr/pull/4079 is merged, I believe this can be closed.",Action on Issue,False,87,CONTRIBUTOR,True,False,True,1.0,0.06849315068,1.0,1.0,1.0,0.0,5.74e-05,0.0
How can you walk the heap objects of the client from the server?,Investigation and Exploration,False,64,MEMBER,False,False,False,0.5,0.06878306878,0.8333333333,0.7428571429,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
+1 pweeettyyy pwease!!!,Social Conversation,False,23,NONE,False,False,False,1.0,0.04109589041,0.4159482759,1.0,0.4941498952,0.5058501048,0.01390095377,0.02346784644
"An easier way of inputting data from native python other than using placeholders, and managing threads.",Expected Behaviour,False,103,NONE,False,False,False,1.0,0.2388059701,0.9001386963,0.3,0.9153731312,0.08462686876,0.125435556,0.2620248075
"On the machine with ample resources, the crash does not appear with CODE.",Solution Discussion,True,73,CONTRIBUTOR,False,False,False,0.5652173913,0.2765957447,0.5,0.3423076923,0.3331491098,0.6668508902,0.04520695765,0.0003119892607
So it ends up being acquire->release->acquire->release->acquire instead of just one pair of acquire and release.,Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.3191489362,0.07936507937,1.0,0.7714285714,0.4488904385,0.5511095615,0.0001804525966,0.0003004784063
I've created https://github.com/eclipse-openj9/openj9/issues/14115 for the separate problem.,Potential New Issues and Requests,False,92,CONTRIBUTOR,False,False,True,0.8888888889,0.08602150538,0.5,0.9961389961,1.0,0.0,0.02585402974,0.0
"I'm getting this issue (Cuda 9.1.85, cuDNN 7.05)",Bug Reproduction,False,48,CONTRIBUTOR,False,False,False,1.0,0.06299212598,0.1876832845,0.3333333333,0.2837406291,0.7162593709,0.2378544464,0.001119586478
"As I see it, the point of stacking is to combine the predictions of estimators of different nature.",Motivation,False,99,MEMBER,False,False,False,1.0,0.2535211268,0.9601449275,0.5,0.07872936647,0.9212706335,8.503030139e-05,7.923995895e-05
this could be useful [keras-js] URL ,Solution Discussion,False,36,NONE,False,False,False,1.0,0.09589041096,0.5581896552,1.0,0.6334968749,0.3665031251,0.003508325412,0.0006531080173
"-         With CODE I was able to solve most of my input-related problems, like loading .mat files in a symbolic-ish manner.",Motivation,True,124,CONTRIBUTOR,False,False,False,0.5,0.3432835821,0.1886269071,0.1818181818,0.04271149234,0.9572885077,0.001149776305,0.005164577321
"If not, the idea is to split it in different classes, one class for each type of encoding (currently 'onehot' and 'ordinal' encoding).",Solution Discussion,False,134,CONTRIBUTOR,True,False,False,0.46,0.359375,0.6875,0.3,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
Looks good to me.,Social Conversation,False,17,NONE,True,False,True,0.5714285714,0.04395604396,0.5,0.9965034965,1.0,0.0,0.1515981559,0.0
I've tried again on a clean Ubuntu 16.04 VM using 0.17.0 build and cloning without CODE.,Bug Reproduction,True,88,CONTRIBUTOR,False,False,False,0.5151515152,0.1278195489,0.05882352941,0.5165394402,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
I'm not sure if there is anything we can do in this case.,Social Conversation,False,57,CONTRIBUTOR,False,False,False,0.6842105263,0.2096774194,1.0,0.8579234973,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
"tf.contrib.layers.batch_norm can take tensor as is_training, so not need to do anything especial.",Usage,False,97,MEMBER,False,False,False,1.0,0.05,0.4068522484,0.5,0.371541484,0.628458516,0.001356181686,0.002464198457
I think option 1 might be the most reasonable/feasible solution right now.,Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.3170731707,0.06878306878,0.875,0.92,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"I did read it, but I do not understand this stuff (i'm just an algo guy :) ).",Social Conversation,False,77,NONE,False,False,False,0.7727272727,0.175257732,0.5236686391,0.8333333333,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
"However, it is clear that the ""out-of-date"" -as you call it- instructions page may not be so out of date.",Investigation and Exploration,False,105,NONE,False,False,False,1.0,0.2268041237,0.7307692308,0.8,0.8504261564,0.1495738436,8.045718754e-06,1.849522015e-05
Couple this with the fact that we cannot seem to reproduce the issue with 0.18.0 or later builds leads me to suggest we close this off as fixed in an upstream build and move on.,Task Progress,False,177,CONTRIBUTOR,False,False,False,0.9,0.2706766917,0.9230769231,0.6743002545,0.6946068931,0.3053931069,9.44e-05,0.004019012644
Could you test this by CODE ?,Solution Discussion,True,29,COLLABORATOR,False,False,False,0.4,0.09677419355,0.1013215859,1.0,0.006430021171,0.9935699788,0.02381581855,0.02955774717
The thread holding exclusive will have CODE.,Investigation and Exploration,True,44,CONTRIBUTOR,False,False,False,1.0,0.09333333333,0.5,0.6723163842,0.08501162193,0.9149883781,0.000178113446,9.19e-06
@AyalaSaenzJorge lol (since you're trolling why dont I have at it) ...,Social Conversation,False,70,NONE,False,False,False,0.8,0.1643835616,0.8189655172,0.125,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
You will get the info you need and be none the wiser how the JIT chose to deliver that information to you (eg by map merging).,Social Conversation,False,126,CONTRIBUTOR,False,False,False,1.0,0.40625,1.0,0.4964539007,0.7919306281,0.2080693719,0.1671307049,0.004342243829
"Is it expected that ""MALLOCOPTIONS=multiheap,buckets"" would reduce the number of threads that can be created?",Expected Behaviour,False,109,CONTRIBUTOR,True,False,False,0.85,0.2741935484,1.0,0.03375527426,0.0007971438362,0.9992028562,0.002461954921,0.004372595291
I am getting the same error when trying to run the translate example (even when doing the small self test) which can be found here: https://github.com/tensorflow/models/tree/master/tutorials/rnn/translate,Bug Reproduction,False,204,NONE,False,False,False,1.0,0.03762662808,0.0396039604,1.0,0.0001284045093,0.9998715955,0.0005278053632,0.002242104842
And *then* switch the OpenJ9 runtime on the Openj9 from JRE <-> JDK.,Investigation and Exploration,False,68,NONE,True,False,False,0.2666666667,0.1212121212,0.4285714286,0.4035087719,0.1209219988,0.8790780012,0.003294872886,0.07075263326
Assuming that's accurate,Solution Discussion,False,24,CONTRIBUTOR,False,False,False,1.0,0.03225806452,0.5,0.9343629344,0.852313953,0.147686047,0.01048932789,0.2809961131
"Would you be able to get the log

@andrewcraik - I am running a grinder with CODE.",Investigation and Exploration,True,84,CONTRIBUTOR,False,False,False,1.0,0.2537313433,0.5,0.3526011561,0.005129489834,0.9948705102,3.41e-05,3.39e-05
-         Feeding from a separate thread and dealing with some one-off queue boilerplate (except this didn't speed things up at all when we tried it),Motivation,False,149,CONTRIBUTOR,False,False,False,0.65,0.3880597015,0.253814147,0.75,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"It seems the problem on jdk8 is resolved by the change, but not jdk11 or jdk14.",Testing,False,79,CONTRIBUTOR,True,False,False,1.0,0.2580645161,0.6666666667,0.3206751055,0.2913636962,0.7086363038,0.1726343793,0.001977731559
Launching from terminal using java.exe seems to work fine.,Investigation and Exploration,False,58,NONE,True,False,False,0.28125,0.09090909091,0.6666666667,0.7333333333,0.2160643057,0.7839356943,0.001276611266,0.001471142506
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2780172414,1.0,0.2441530839,0.7558469161,0.2970470709,0.1151068023
That is 22 indicates something specific which is quite different from 21 or 23.,Potential New Issues and Requests,False,79,NONE,False,False,False,0.6666666667,0.21875,0.8786764706,0.6,0.2637770953,0.7362229047,7.119163405e-05,0.0001159406612
Make sure that you also have installed on your system openmpi.,Solution Discussion,False,62,NONE,True,False,False,1.0,0.08661417323,0.9589442815,1.0,0.929304338,0.07069566203,0.003939258366,8.356226683e-05
"@dmitripivkine maybe it's a very basic question but we would like to get the following out of the way first:
 Our current assumption is that at the time when **Class Loader** unloading JIT hook is called, J9Method of some class (not necessarily belonging to that Class Loader) was already freed (and possibly corrupted by somebody reusing its memory).",Investigation and Exploration,False,352,CONTRIBUTOR,False,False,False,0.6483516484,0.6483516484,0.03571428571,0.6608391608,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
Try CODE and restart Java and see if JVMJ9VM135W is gone and then reproduce.,Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,0.4666666667,0.1052631579,1.0,0.2264631043,0.09284186161,0.9071581384,0.04671162031,0.4323046536
Same problem on my machine when using customized scoring function in CODE.,Observed Bug Behaviour,True,74,NONE,False,False,False,1.0,0.1237113402,0.9142011834,0.5,0.9962410347,0.003758965267,0.03509089576,0.001411219069
"MethodHandle, java.lang.invoke.MethodHandleImpl$Intrinsic)""
at java.base/java.lang.invoke.MethodHandleImpl.makeIntrinsic(MethodHandleImpl.java:1310)",Investigation and Exploration,False,149,MEMBER,True,False,False,0.2727272727,0.0652173913,0.2,0.1509433962,0.3431647145,0.6568352855,0.001046537172,0.001139510487
"The only methods that are executed are these two:
CODE
CODE calls CODE.",Investigation and Exploration,True,73,CONTRIBUTOR,False,False,False,0.6818181818,0.1875,0.6666666667,0.7450980392,0.9245568441,0.07544315591,0.2271166044,0.02415455435
"Thinking about it a bit more, I think the CODE method would be the right interface.",Solution Discussion,True,83,MEMBER,False,False,False,0.8421052632,0.2253521127,0.1413043478,0.2,0.03661251674,0.9633874833,0.0001586202898,0.0007677994074
"I'd like to understand more about your use case, though.",Motivation,False,56,CONTRIBUTOR,True,False,False,0.2391304348,0.1641791045,0.06102635229,0.25,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
so I can't share it with you as it is.,Social Conversation,False,38,NONE,True,False,False,0.1612903226,0.1492537313,1.0,0.07262569832,0.001478498714,0.9985215013,0.002326266906,0.0001379039292
because I'm noticing very slight changes with big impact on my accuracy (maybe my definition of performance is just more easily affected by this slight change).,Usage,False,160,NONE,False,False,False,1.0,0.1,0.4882226981,0.2222222222,0.386758151,0.613241849,0.0004998808382,0.0004945035936
+1 ;),Social Conversation,False,5,NONE,False,False,False,1.0,0.02739726027,0.4806034483,1.0,0.573535873,0.426464127,0.06122240309,0.05162917363
Because NodeJS it's fast!,Motivation,False,25,NONE,False,False,False,1.0,0.05479452055,0.8965517241,0.5,0.919790056,0.08020994398,0.3331738372,0.01198832771
"I don't know why :S. 

For the sake of sanity, could you do the following:

CODE

I did this with
CODE
from https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u212-b04_openj9-(0.14.2/OpenJDK8U-jdk_x64_linux_openj9_8u212b04_openj9-0.14.2.tar.gz)",Investigation and Exploration,True,273,CONTRIBUTOR,False,False,False,1.0,0.204379562,0.8333333333,0.09293680297,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
This technique is only effective if the failure is fairly reproducible,Solution Discussion,False,70,MEMBER,False,False,False,0.2558139535,0.08270676692,1.0,0.4122137405,0.478949853,0.521050147,0.01584223495,0.009466671463
@ebrevdo  is there any update on when the new tutorial of seq2seq using new api will come out?,Task Progress,False,94,NONE,False,False,False,1.0,0.02749638205,0.8547854785,0.3333333333,0.2925508814,0.7074491186,0.0001064391661,5.387222008e-05
"Also, it adds columns, not replaces, so will not yet work out of the box for string categorical data (but that is more feedback on that PR, not to discuss here).",Potential New Issues and Requests,False,161,CONTRIBUTOR,True,False,False,1.0,0.484375,0.6691176471,1.0,0.1226578912,0.8773421088,0.0002371698437,2.888346296e-05
"- jitExceptionHandlerSearch updates userData1 with the bytecode PC if present
- getJitPCOffsetFromExceptionHandler assumes the bytecode PC data is there

Both of the above are used in the JVMTI Exception event (i.e. exception throw) to identify the catching location.",Investigation and Exploration,False,270,CONTRIBUTOR,False,False,False,0.59375,0.59375,0.1818181818,0.08510638298,0.000716727624,0.9992832724,0.003714710253,0.00734286415
"As far as I know you can have sub-packages xxx,yyy,zzz etc.. and install them as followCODE",Solution Discussion,True,91,NONE,False,False,False,0.6666666667,0.157480315,0.9413489736,0.3333333333,0.928984049,0.07101595102,0.001770336874,0.003939258366
There's been a few things that are currently missing and I had to work around:,Motivation,False,78,NONE,False,False,False,0.4838709677,0.223880597,0.572815534,0.3,0.4630003862,0.5369996138,0.01269843694,0.02260310577
"The last tree during instruction selection we see is:

CODE

I suspect we can't functionally run with CODE because these CODE should have been reduced to something else in prepareForOSR pass.",Investigation and Exploration,True,195,CONTRIBUTOR,False,False,False,1.0,0.2481203008,0.6666666667,0.6234096692,0.6090585554,0.3909414446,0.03283597098,0.001209954986
I kept playing around with it switching between JRE/JDK and launching my app and after a few tries it did hit the error again.,Bug Reproduction,False,126,NONE,True,False,False,0.8064516129,0.2525252525,0.1818181818,0.05263157895,0.09912996542,0.9008700346,0.005467138405,0.004133788861
So far it is working well.,Workarounds,False,26,CONTRIBUTOR,False,False,False,0.6,0.09677419355,0.9735682819,0.6666666667,0.6879251154,0.3120748846,0.02091540384,0.2056416849
"Although probably due to lack of context and familiarity to the code base, I personally would still prefer some simpler approach that can keep the CODE immutable.",Solution Discussion,True,162,CONTRIBUTOR,False,False,False,1.0,0.435483871,0.5374449339,0.5,0.2185494447,0.7814505553,0.008439281707,0.0010422294
**GC Classloader unloading invokes the hooks.,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.1176470588,0.06593406593,0.619047619,0.4545454545,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"Since CODE returned true (CODE is true), that means we were able to get defining class and validate the field.",Solution Discussion,True,110,CONTRIBUTOR,False,False,False,0.4651162791,0.3225806452,0.4,0.3606557377,0.6389467947,0.3610532053,0.00359446461,0.01517828221
Sent link in private email.,Social Conversation,False,27,NONE,True,False,False,1.0,0.05050505051,1.0,0.8,0.5983500448,0.4016499552,0.03204496914,0.374152472
"This also means that if I use a separate process to evaluate, I'm getting whatever the last value of the variable was and not the moving average.",Solution Discussion,False,145,NONE,False,False,False,0.6585365854,0.1038461538,0.7901498929,0.6666666667,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
":** Looked at wrong line, NPE occurred at CODE.",Investigation and Exploration,True,47,MEMBER,True,False,False,0.4090909091,0.09782608696,0.6,0.1761006289,0.3431647145,0.6568352855,0.001046537172,0.001139510487
"I was able to get the stackslot from cores generated by -Xdump on NPE thrown from CODE, based on the core dump which came from bytecode frame, it suggests that the error occurred in CODE function.",Investigation and Exploration,True,196,CONTRIBUTOR,False,False,False,1.0,0.3913043478,0.3333333333,0.3836477987,0.4653466555,0.5346533445,0.004763623737,0.09933594565
"Default location: /home/zlwang/jdk-13+33/core or core.8978666
/#
/#",Investigation and Exploration,False,69,CONTRIBUTOR,False,False,False,0.2972972973,0.0632183908,0.6666666667,0.7242647059,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
fyi @babsingh,Contribution and Commitment,False,13,MEMBER,False,False,False,1.0,0.02666666667,1.0,0.06214689266,2.9e-05,0.9999709945,4.66e-05,0.001749406635
"For decay=0.999, you need 1/0.001=1000 steps to converge.",Solution Discussion,False,57,NONE,False,False,False,0.275862069,0.03076923077,0.9336188437,0.2941176471,0.7995481369,0.2004518631,0.3206669123,0.722664447
"The CHelpers discussed above were only created to service the codegen
        
Current solution can be found here
https://github.com/AlenBadel/openj9/tree/2994",Solution Discussion,False,155,CONTRIBUTOR,True,False,False,0.15625,0.15625,1.0,0.9777777778,0.3076445993,0.6923554007,0.1283873506,1.0
Or do we choose another name?,Solution Discussion,False,29,CONTRIBUTOR,True,False,False,0.12,0.09375,0.6985294118,0.6,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
"Maybe we should document this somewhere prominently, e.g. in the README?",Solution Discussion,False,72,MEMBER,False,False,False,0.3793103448,0.1134020619,0.1065088757,1.0,0.009477465184,0.9905225348,0.02437524994,2.548804237e-05
"A ""class action"" is only very weakly a type of action: CODE",Potential New Issues and Requests,True,59,MEMBER,False,False,False,0.5217391304,0.3157894737,0.4160583942,0.2142857143,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"No idea, this doesn't make sense.",Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.09677419355,0.09677419355,0.1666666667,0.4426229508,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"The whole point of package is to save time of building, but package build for very specific set of libraries that installs fine, but does not work is counter-productive.",Solution Discussion,False,169,NONE,False,False,False,1.0,0.2362204724,0.9501466276,0.8333333333,0.928984049,0.07101595102,0.001770336874,0.003939258366
Most often core dumps are generated out there if with Eclipse IDE.,Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,1.0,0.1212121212,1.0,0.09122807018,0.1002964156,0.8997035844,0.004133788861,0.001150976506
"So, it is not an issue of production build vs.  debug build.",Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.4814814815,0.1015625,0.25,0.2055555556,0.0287329189,0.9712670811,6.94e-05,0.003185934733
"ah, sorry, I should have refreshed before posting - I missed Charlie's results.",Social Conversation,False,79,CONTRIBUTOR,False,False,False,1.0,0.08759124088,0.5,0.3717472119,0.02020452776,0.9797954722,5.3e-05,9.03e-05
What was going on was the call to CODE was being recognized as CODE.,Investigation and Exploration,True,68,CONTRIBUTOR,False,False,False,0.4375,0.2978723404,0.6,0.6692307692,0.6412149142,0.3587850858,0.008463782054,0.002100918508
It's not much more efficient.,Solution Discussion,False,29,MEMBER,False,False,False,0.2777777778,0.078125,0.75,0.5,0.1246419028,0.8753580972,0.001078451553,0.1409809963
"So, after we have started loading classes from the SCC, if we discover the timestamp has changed what do we do?",Investigation and Exploration,False,111,CONTRIBUTOR,False,False,False,0.75,0.1532846715,0.5,0.7657992565,0.04443530314,0.9555646969,3.48e-05,0.0005201258903
I added the compiler option to the setup file and committed the changes to the master branch.,Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.6296296296,0.1111111111,0.8906752412,0.3636363636,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"@jnothman I just tried, but I'm not able to run e.g. a ppc64 Docker image on my amd64 system.",Potential New Issues and Requests,False,93,MEMBER,False,False,False,1.0,0.2794117647,0.4471544715,0.1428571429,0.5420075121,0.4579924879,0.02112247576,0.002129547778
"Yes, for LE:  ABI requires r12 to point at the callee global entry.",Solution Discussion,False,67,CONTRIBUTOR,False,False,False,0.9333333333,0.109375,0.3333333333,0.4944444444,0.03782700625,0.9621729938,3.78e-05,0.001226532263
This new API is faster than the old one.,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.4736842105,0.1343283582,0.4951456311,0.3333333333,0.4357408203,0.5642591797,0.0001445491238,0.02256391463
Andrew mentioned that the issue could be due the class being unloaded before the classloader.,Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,0.6,0.1648351648,0.3333333333,0.3811188811,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
I have a working prototype using SWIG here: https://github.com/node-tensorflow/node-tensorflow/pull/13,Task Progress,False,102,NONE,False,False,False,0.2368421053,0.1232876712,0.2176724138,0.2,0.1037013205,0.8962986795,0.265083066,0.07059453633
"Following the java stack traces above:
CODE
[class_bytes.txt] URL 
The passed-in class file can be written to a file as .class, in which case we are able to learn whether the constant pool of this class was corrupted.",Investigation and Exploration,True,220,CONTRIBUTOR,False,False,False,1.0,0.3157894737,1.0,0.3638676845,0.4564079375,0.5435920625,0.003566914598,0.001811662331
"Just FYI, I have both installed.",Solution Discussion,False,32,NONE,False,False,False,0.4615384615,0.04724409449,0.09090909091,0.5,0.1361317784,0.8638682216,0.001267484295,0.0003224172419
"@DanHeidinga 

> Any update on this @Leonardo2718?",Task Progress,False,52,CONTRIBUTOR,False,False,False,0.3684210526,0.1129032258,0.5,0.1420765027,0.2953350651,0.7046649349,0.0001270779714,5.14e-05
"By default Apache Spark uses pickle, but can be told to use cloudpickle instead.",Motivation,False,80,NONE,True,True,False,0.3888888889,0.09150326797,0.01286173633,0.5,0.0,1.0,0.0,0.0054583822
"The idea is that the clean-up should be done during class unloading, rather waiting for class unloading where the objects may not be alive by then.",Solution Discussion,False,147,CONTRIBUTOR,False,False,False,1.0,0.2967032967,1.0,0.5734265734,0.8546478187,0.1453521813,0.002043575217,0.001362640241
I wonder if there may be a connection?,Investigation and Exploration,False,38,NONE,False,False,False,0.25,0.1126760563,0.9415204678,1.0,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"1)  With the same old version JDK11 (only support JVM_BeforeHalt) , I manually merged the changes at https://github.com/eclipse/openj9/pull/2270 (turn on the changes for nestMates on OpenJ9 ) to the older version of OpenJ9 ( (including the setting and empty interfaces of JVM_BeforeHalt, JVM_AreNestMates, etc) and it ended up with pretty much the same compilation failures as the result above at 2).
CODE

2) After removing J9VM_OPT_VALHALLA_NESTMATES in j9cfg.h.in and j9cfg.h.ftl,  all problems above  disappeared and the compilation finished without any error.
CODE 

Given that turning on  J9VM_OPT_VALHALLA_NESTMATES enables all code changes of nestMates, I suspect there might be code issues in the existing implementation of nestMates.",Solution Discussion,True,749,CONTRIBUTOR,False,False,False,1.0,0.9406779661,0.25,0.8787878788,0.6347909793,0.3652090207,0.02864940725,0.006974193286
pinging SCREEN_NAME  given recent announcement on spaCy homepage,Contribution and Commitment,False,64,NONE,False,False,False,1.0,0.1451612903,0.268722467,1.0,0.2127537253,0.7872462747,0.008337610386,0.0002910756073
"I wonder if these transformations in the IL generator also fall in a similar category : 
https://github.com/eclipse-openj9/openj9/blob/5afc033b29efad4b23a171492e6fcb9460a78747/runtime/compiler/ilgen/Walker.cpp#L4374",Solution Discussion,False,216,CONTRIBUTOR,False,False,False,0.5483870968,0.1827956989,1.0,0.8455598456,0.6303548026,0.3696451974,0.008046045613,0.8852104953
"As Peter recommend in https://github.com/eclipse/openj9/issues/8842#issuecomment-605323016, we should use the 0.18.1 release build.",Investigation and Exploration,False,131,NONE,False,False,False,0.9230769231,0.1935483871,0.8,0.8565400844,0.6663614196,0.3336385804,0.02615972953,0.2052027758
3.         useCODE if you don't want to add control dependencies of update op to train_op,Usage,True,89,NONE,False,False,False,0.5517241379,0.06153846154,0.9400428266,0.4705882353,0.7995481369,0.2004518631,0.3206669123,0.722664447
Taking a closer look the j9method we're referencing seems to have been deleted.,Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.3023255814,0.1428571429,0.1,0.2587412587,0.6007887623,0.3992112377,0.01222678832,0.05114946292
"However this flag is NOT mentioned in CODE manual https://www.ibm.com/support/knowledgecenter/en/ssw_aix_72/s_bostechref/shmget.html
Seems passing CODE to CODE in CODE field is not a legitimate (or obsolete) way (???)",Investigation and Exploration,True,218,CONTRIBUTOR,False,False,False,0.7878787879,0.1494252874,1.0,0.25,0.7477267944,0.2522732056,0.0003712750967,0.001172416587
I am personally in favor of option 1 or 2.,Social Conversation,False,42,CONTRIBUTOR,True,False,False,0.2272727273,0.15625,0.4595588235,0.8095238095,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"However, commenting-out GetEnv doesn't solve the issue for me.",Solution Discussion,False,62,NONE,True,False,False,0.2173913043,0.09615384615,0.5555555556,0.8121546961,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
I don't know enough about the math library to speculate what does this mean...,Social Conversation,False,78,NONE,False,False,False,1.0,0.1971830986,0.6695906433,0.5,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.7650862069,1.0,0.708551329,0.291448671,0.0550485294,0.8203682945
"All script/setting changes have been submitted for review:
OpenJDK11: https://github.com/ibmruntimes/openj9-openjdk-jdk11/pull/7
OpenJ9: https://github.com/eclipse/openj9/pull/2483
OMR: https://github.com/eclipse/omr/pull/2798",Task Progress,False,229,CONTRIBUTOR,False,False,False,1.0,0.1525423729,1.0,0.9636363636,0.6462088455,0.3537911545,0.001672417338,0.8162361998
Now the content of this reference sometimes change to bogus values.,Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.2291666667,0.0582010582,0.4705882353,0.5714285714,0.447477842,0.552522158,0.001615795728,8.48e-05
"The next bytecode will be the checkcast and it crashes on the 0xE receiver

Looking at the decompRecord I see:

CODE

The CODE method is CODE

It looks like decompOnReturn was registered with CODE, so after running Object.clone in the JIT it decompiled and transitioned to the interpreter.",Investigation and Exploration,True,297,CONTRIBUTOR,False,False,False,1.0,0.5591397849,0.75,0.6023166023,0.5522533709,0.4477466291,0.005248394148,0.002801381667
So there should be no need to write a callback to do that.,Solution Discussion,False,58,MEMBER,False,False,False,0.619047619,0.1830985915,0.231884058,0.75,0.03945490707,0.9605450929,1.565147108e-05,1.186142875e-05
Can someone tell me either:,Solution Discussion,False,27,CONTRIBUTOR,False,False,False,0.1923076923,0.03267973856,0.536977492,0.4444444444,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
"so I think we should keep this issue open, however the work is completed for the 0.12 release, in particular since the shared cache is no longer enabled by default.",Action on Issue,False,164,CONTRIBUTOR,True,False,False,1.0,0.2054794521,1.0,0.4469273743,0.2378214833,0.7621785167,0.1022989682,0.0004722347161
"Trying also the entire extended.system suite
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/178 - multiheap:24 - stopped it
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/179 - multiheap:28 - stopped it
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/180 - multiheap:30 - stopped it",Testing,False,359,CONTRIBUTOR,True,False,False,1.0,0.3387096774,1.0,0.3797468354,0.2948987454,0.7051012546,0.001511010247,0.008097614762
"The script already prints that out, eg:
CODE",Investigation and Exploration,True,45,CONTRIBUTOR,False,False,False,1.0,0.06569343066,1.0,0.1449814126,0.001448159686,0.9985518403,4.47e-05,1.86e-05
"no SC
7.7104
7.08792
7.25356
8.0851

SC, no hints
9.23496
8.95598
9.325
8.82136

SC, use hints
7.41268
10.0347
7.37226
8.4999
8.2855
8.60048

SC, use hints, skip insignificant updates
7.53726
8.9249
9.76732
8.5943
10.1544
7.5088",Testing,False,254,CONTRIBUTOR,False,False,False,1.0,0.3904109589,1.0,0.9329608939,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
Thank you once again :),Social Conversation,False,23,NONE,False,False,False,0.2941176471,0.007235890014,0.7854785479,1.0,0.2742562411,0.7257437589,0.006610382458,0.005351860947
"For PoS and syntactic parsing there is public available data, for named-entity recognition, is not so easy, there is no public available dataset",Solution Discussion,False,144,NONE,False,False,False,1.0,0.4,0.9310344828,1.0,0.8008033367,0.1991966633,0.0001095095445,0.0006670641737
"Instead trying to figure out which function to log, it may be simpler to log every compiled methods.",Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,1.0,0.2686567164,0.8,0.3854748603,0.004243795073,0.9957562049,0.0005447205204,0.0001206659381
"For example:
CODE",Investigation and Exploration,True,18,CONTRIBUTOR,False,False,False,0.1666666667,0.04395604396,1.0,0.3601398601,0.6219792976,0.3780207024,0.002161429347,0.8023255008
A HTTP query will return a base 64 encoding of the vector.,Potential New Issues and Requests,False,58,NONE,False,False,False,0.6666666667,0.3157894737,0.8759124088,0.8,0.008264937696,0.9917350623,0.003893704171,0.01990868788
"@honnibal thank you for quick answer,",Social Conversation,False,37,NONE,False,False,False,0.2307692308,0.09677419355,0.8898678414,0.25,0.6577461677,0.3422538323,0.0002666834826,0.0002101432121
Ran: CODE,Investigation and Exploration,True,9,NONE,False,False,False,1.0,0.02941176471,0.7195121951,0.5,0.5901817124,0.4098182876,0.0003256305423,0.001873670543
"I believe the CODE has to be part of a method regex, so this would be the correct way:

CODE",Solution Discussion,True,94,CONTRIBUTOR,True,False,False,1.0,0.328125,1.0,0.7163120567,0.9485401721,0.05145982787,0.0001586866516,0.0002524560366
"I'll see if I can't narrow down which AIX machines are affected
- https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/2430/ JDK11-j9 CODE
- https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/2431/ JDK11-j9 CODE
- https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/2434/ JDK14-j9 CODE",Investigation and Exploration,True,306,NONE,True,False,False,1.0,0.2967032967,1.0,0.1223776224,0.1119234172,0.8880765828,0.0005430533463,0.008570999411
This worked for me: Download CUDA Toolkit 9.0 from NVidia previous releases section.,Solution Discussion,False,84,NONE,False,False,False,1.0,0.1023622047,0.7184750733,0.2,0.5124660478,0.4875339522,0.03664686068,0.234967481
"Until then, we should assume that they are different.",Potential New Issues and Requests,False,53,CONTRIBUTOR,False,False,False,0.15,0.12,0.2857142857,0.418079096,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
This is spec behaviour.,Observed Bug Behaviour,False,23,CONTRIBUTOR,False,False,False,0.2105263158,0.05333333333,1.0,0.4802259887,0.03581262904,0.964187371,0.001645470656,0.00168726386
The earlier backtrace seems to suggest we are dealing with interpreted frames though.,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,1.0,0.1413043478,0.5,0.4905660377,0.4979218088,0.5020781912,0.000135264426,0.0008332355771
I haven't tested decoding yet.,Solution Discussion,False,30,NONE,False,False,False,0.25,0.007235890014,0.897689769,1.0,0.3445264171,0.6554735829,0.04382956016,0.06892677638
One concrete example of why this would be useful:,Motivation,False,49,CONTRIBUTOR,False,False,False,0.1956521739,0.1343283582,0.665742025,0.4444444444,0.5116443977,0.4883556023,0.04958391229,0.003143434467
3.         Define tokenization rules.,Solution Discussion,False,37,MEMBER,False,False,False,0.08333333333,0.08333333333,0.1982758621,0.68,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
CODE fixed it,Testing,True,13,NONE,False,False,False,0.25,0.04225352113,0.3333333333,1.0,0.324045968,0.675954032,0.0002259807885,0.0001194252422
"@jdekonin could the machines have changed, this doesn't seem to have been caused by a JVM or test change.",Investigation and Exploration,False,105,CONTRIBUTOR,True,False,False,1.0,0.3064516129,1.0,0.0253164557,0.0004396574399,0.9995603426,0.003027854511,0.002461954921
I'm so glad that this has received so much thought and attention!,Social Conversation,False,65,NONE,True,False,False,0.1935483871,0.1935483871,0.7621145374,0.1666666667,0.3260702381,0.6739297619,0.1206599722,1.0
@somombo please see my comment from 26 Aug where I explain why deeplearnjs is irrelevant to this debate.,Solution Discussion,False,104,NONE,False,False,False,1.0,0.2465753425,0.8512931034,1.0,0.8120589024,0.1879410976,0.0006469111266,0.001164130183
This means we can binary search starting with 200.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.2727272727,0.06766917293,0.7058823529,0.5445292621,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
SGDClassfier does not have the goal to fully optimize the objective to the end.,Solution Discussion,False,79,MEMBER,False,False,False,0.6666666667,0.1971830986,0.5615942029,0.6666666667,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
My setupTensorflow 1.7cuDNN 7.1.2Ubuntu 16.04,Bug Reproduction,False,45,NONE,False,False,False,0.3846153846,0.03937007874,0.7302052786,1.0,0.5124660478,0.4875339522,0.03664686068,0.234967481
"However, I think that #3265 would basically want to implement it like this.",Potential New Issues and Requests,False,75,NONE,False,False,False,1.0,0.05,0.08993576017,0.6666666667,0.202832989,0.797167011,0.000172984946,0.007484820191
1) I didn't spot anything abnormal with the generated module-info.class at java.base in terms of binary format as well as the original java file.,Investigation and Exploration,False,145,CONTRIBUTOR,False,False,False,0.4,0.2033898305,0.5,0.8181818182,0.6024180265,0.3975819735,0.01958885944,0.02154742127
So I think setting it to 0.85 should fix the issue.,Solution Discussion,False,51,MEMBER,False,False,False,0.44,0.1617647059,0.9674796748,0.875,0.6536608828,0.3463391172,0.005246346584,1.0
"For anyone using tensorflow-gpu==1.1.0  and getting this error, switching to 1.0.0 via pip install tensorflow-gpu==1.0.0 is not going to fix the problem, at least didn't work for me.",Solution Discussion,False,182,NONE,False,False,False,1.0,0.04486251809,0.6171617162,0.3333333333,0.1928580592,0.8071419408,0.04210161464,0.004226002744
"Hi guys, I don't know if you're still interested on it, but I found that the problem is related to the operation of copying the cell passed as params to the CODE function.",Investigation and Exploration,True,171,NONE,False,False,False,1.0,0.0477568741,0.7359735974,0.125,0.272648067,0.727351933,0.02402499291,0.006610382458
The maven dependency I'm using is from https://repo1.maven.org/maven2/org/apache/rat/apache-rat-plugin/0.13/ ie with the jar at https://repo1.maven.org/maven2/org/apache/rat/apache-rat-plugin/0.13/apache-rat-plugin-0.13.jarapache-rat-plugin-0.13.jar,Investigation and Exploration,False,249,NONE,True,False,False,1.0,0.1052631579,0.5,0.02798982188,0.0001171462243,0.9998828538,0.0004950187461,5.15e-05
"Jesus christ, stop sending people useless notifications, there's a reason GitHub introduced ð and ð reactions.",Social Conversation,False,110,NONE,False,False,False,1.0,0.2191780822,0.6724137931,0.5,0.7051011873,0.2948988127,5.134566588e-05,0.000336181321
Reproduced for 3.5 with anaconda under OS X El Capitan.,Bug Reproduction,False,55,NONE,False,False,False,1.0,0.1408450704,0.04385964912,0.3333333333,0.05282886859,0.9471711314,0.2771530517,0.0003346120921
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1185344828,1.0,0.02641750817,0.9735824918,0.03100791321,0.001023814872
I guess we are doing this only on gencon ?,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,1.0,0.06164383562,1.0,0.05027932961,0.009306587797,0.9906934122,0.02810021129,0.0003297943533
did you imply that system ran out of physical memory or something by retuning or cutdown?,Investigation and Exploration,False,89,CONTRIBUTOR,False,False,False,1.0,0.2580645161,1.0,0.5907172996,0.4802647602,0.5197352398,0.003640426233,0.003806695701
"I think was able to build JDK 13 with xlC 13

Unless you had the harfbuzz fix, the OpenJDK code would fail to compile in a full build.",Solution Discussion,False,136,CONTRIBUTOR,False,False,False,1.0,0.1666666667,1.0,0.3308823529,0.7589630223,0.2410369777,5.55e-06,0.0002835062781
Failure rate on my side is between 1/10 and 1/20.,Observed Bug Behaviour,False,49,CONTRIBUTOR,False,False,False,0.2127659574,0.2127659574,0.25,0.09230769231,0.04838270716,0.9516172928,0.234046329,0.001299478205
"@tano297 SCREEN_NAME  doesn't the ""smart_cond"" inCODEmake sure that the updates are only calculated and applied if is_training evaluates to True?",Solution Discussion,True,145,NONE,False,False,False,1.0,0.08076923077,0.8565310493,1.0,0.7210851181,0.2789148819,0.000558929072,0.001636711525
"THe issue is that by default the new VS uses a bunch of inlined functions for CRT functions, but mingw doesnt pick them up.",Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.2118644068,0.25,0.08484848485,0.3881725553,0.6118274447,7.34e-05,0.003403174815
"That is, I would like to create input pipelines that share some processing, and then diverge at some point for additional processing.",Expected Behaviour,False,133,CONTRIBUTOR,False,False,False,0.7333333333,0.328358209,0.600554785,1.0,0.4965705946,0.5034294054,0.06171840406,0.0130944201
I have uploaded a number of core files from a reproduction that I made today.,Task Progress,False,77,NONE,True,False,False,1.0,0.2,0.25,0.5367231638,0.07094192738,0.9290580726,0.002460766356,0.02133685301
"I suggested to add documents or a complete official tutorial on batch normalization, but unfortunately got no response = =",Social Conversation,False,122,CONTRIBUTOR,False,False,False,1.0,0.06923076923,0.6959314775,1.0,0.5725805298,0.4274194702,0.0005567984656,0.003358850219
"As far as I can tell, the main things the user needs to be aware of are (a) whether any options they set will be used both on the driver and on workers and (b) when a data object is local vs. distributed.",Solution Discussion,False,204,NONE,False,False,False,1.0,0.2810457516,0.2636655949,1.0,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
"Since the heap parameters can be adjusted before any objects are created, it can happen with very low cost.",Motivation,False,107,CONTRIBUTOR,True,True,False,0.5135135135,0.1301369863,0.8571428571,0.03351955307,0.0,1.0,0.0,5.94e-06
You're using XGBoost.,Investigation and Exploration,False,21,MEMBER,False,False,False,0.2307692308,0.03092783505,0.9526627219,0.25,0.9999752665,2.473351871e-05,0.00109431708,1.092628473e-06
GAC/You set up r2 instead in helper with loading from jitTOC.,Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.6315789474,0.09375,0.4285714286,0.5388888889,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
"And we are experiencing the same problem as was discussed here - growth of StringStore causes tremendous memory growth over time, so it really blocks usage of spaCy without fear of crashing the whole system because of OOM.",Observed Bug Behaviour,False,222,NONE,False,False,False,1.0,0.5967741935,0.8414096916,0.3333333333,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
All this seems pretty amazing !,Social Conversation,False,31,CONTRIBUTOR,False,False,False,0.7142857143,0.07462686567,0.4687933426,1.0,0.4339575966,0.5660424034,0.24574369,0.01344561339
and i'll continue to investigate and hopefully I can come up with better questions for you to answer...,Social Conversation,False,103,CONTRIBUTOR,False,False,False,1.0,0.09523809524,1.0,0.6457142857,0.4475374304,0.5524625696,3.48e-05,0.001020633264
Using CODE slowed both JVMs down and appeared to affect HotSpot even more than OpenJ9.,Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,1.0,0.1094890511,0.5,0.4572490706,0.02075943522,0.9792405648,6.38e-05,0.0001014576777
@snnn Yes I know and I do exactly this.,Social Conversation,False,39,NONE,False,False,False,0.2432432432,0.1343283582,0.7794729542,0.125,0.6090011473,0.3909988527,0.000271284095,0.000261613555
That is fine too.,Social Conversation,False,17,NONE,True,False,False,0.1111111111,0.0404040404,1.0,0.5298245614,0.1973084735,0.8026915265,0.001977734278,0.003898730278
I'll go ahead and close it.,Action on Issue,False,27,CONTRIBUTOR,False,False,True,0.6666666667,0.06060606061,1.0,1.0,1.0,0.0,0.2381062384,0.0
I will submit a PR.,Action on Issue,False,19,MEMBER,False,False,False,0.2,0.07352941176,0.9715447154,1.0,0.6536608828,0.3463391172,0.005246346584,1.0
I am getting the following on CODE: CODE,Investigation and Exploration,True,40,CONTRIBUTOR,False,False,False,1.0,0.1126760563,0.6608187135,1.0,0.4587932492,0.5412067508,0.0004141827923,7.500403389e-05
One way for us to deal with the fact that the SCC API could return NULL even if it returned non-NULL previously is to cache the class chain for each J9Class.,Solution Discussion,False,157,CONTRIBUTOR,False,False,False,0.5333333333,0.5161290323,0.2222222222,0.956284153,0.9848847044,0.01511529561,0.001947660621,0.07932791196
"ValueError: Attempt to reuse RNNCell <tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl.GRUCell object at 0x117f7cbd0> with a different variable scope than its first use.  First use of cell was with scope 'embedding_attention_seq2seq/rnn/multi_rnn_cell/cell_0/gru_cell', this attempt is with scope 'embedding_attention_seq2seq/rnn/multi_rnn_cell/cell_1/gru_cell'.  Please create a new instance of the cell if you would like it to use a different set of weights.  If before you were using: MultiRNNCell([GRUCell(...)] * num_layers), change to: MultiRNNCell([GRUCell(...) for _ in range(num_layers)]).  If before you were using the same cell instance as both the forward and reverse cell of a bidirectional RNN, simply create two instances (one for forward, one for reverse).  In May 2017, we will start transitioning this cell's behavior to use existing stored weights, if any, when it is called with scope=None (which can lead to silent model degradation, so this error will remain until then.)",Bug Reproduction,False,997,NONE,False,False,False,1.0,0.2083936324,0.9669966997,1.0,0.6584056975,0.3415943025,0.358409507,0.2555781183
Well I do not know what causes the AttributeError...,Social Conversation,False,52,NONE,False,False,False,0.4090909091,0.09278350515,0.2159763314,0.1666666667,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
It is fine and doesn't raise the ValueError.,Bug Reproduction,False,44,NONE,False,False,False,0.380952381,0.1126760563,0.0350877193,0.5,0.005251657845,0.9947483422,0.007997893245,0.2771530517
"[image] URL 

[sts4_windbg_java11_b1362_NOK_remove_java8_from_instaledJRE.txt] URL 
because the Java 8 bin path was still out there.
CODE",Investigation and Exploration,True,141,CONTRIBUTOR,False,False,False,0.2337662338,0.1818181818,0.875,0.8807017544,0.9005578376,0.09944216237,0.1143762639,0.00534555638
@MisayaZ you don't need to create two batch_norm layers you can just pass train_phase (assuming it is a tf.bool) to batch_norm.,Usage,False,127,MEMBER,False,False,False,1.0,0.08076923077,0.7473233405,0.3333333333,0.6163375915,0.3836624085,0.002840605583,6.767211672e-05
"I've been talking to @Leonardo2718 offline, and I can't find come up with even the craziest scenario for how this could happen.",Task Progress,False,127,CONTRIBUTOR,False,False,False,0.3709677419,0.3709677419,0.25,0.4480874317,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
This is on a amazon ec2 instance with stock ubuntu 16.04.,Bug Reproduction,False,57,NONE,False,False,False,0.5238095238,0.08661417323,0.3372434018,0.8181818182,0.3566928644,0.6433071356,0.1351135301,0.002261357628
or did I miss something?,Bug Reproduction,False,24,MEMBER,False,False,False,0.2777777778,0.07352941176,0.1544715447,0.75,0.2782444475,0.7217555525,0.01003549822,0.0003149258267
"|| defined(__IBMCPP__), but the built-in(s) are not recognized.",Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.4090909091,0.05172413793,0.6,0.1139705882,0.7188702831,0.2811297169,0.0002320026376,0.00724878302
"-         ~~I don't know how to access _control_flow_ops.with_dependencies()_. How can I access functions within control_flow_ops module? I have seen other examples just using tf.with_dependecies(), but I cannot do that with Tensorflow 0.10.~~ I found it here: _tf.python.control_flow_ops.with_dependencies()_",Usage,False,309,NONE,False,False,False,0.6666666667,0.1461538462,0.3254817987,0.3846153846,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
"For ensembles, that would not be true.",Solution Discussion,False,38,MEMBER,False,False,False,0.3684210526,0.0985915493,0.152173913,0.8,0.03661251674,0.9633874833,0.0001586202898,0.0007677994074
re original CODE,Bug Reproduction,True,16,MEMBER,True,False,False,0.07894736842,0.04411764706,0.1869918699,0.2,0.2809523721,0.7190476279,0.0006692173817,5.939390591e-05
"Many thanks!

@vij-singh After more investigation, I find that this problem should only happen when using optionCODE to disable without peeking.",Solution Discussion,True,146,CONTRIBUTOR,False,False,False,1.0,0.1729323308,0.4,0.9720101781,0.950729363,0.04927063696,0.001789180059,0.03518393768
The SHAs will help track down changes,Investigation and Exploration,False,37,CONTRIBUTOR,False,False,False,0.6363636364,0.05109489051,1.0,0.7249070632,0.04247659552,0.9575234045,0.001395974822,0.0004207387775
"Still got the same illegal instruction
3) looked at omrvmem.c : mprotect() is used to set memory properties.",Bug Reproduction,False,109,CONTRIBUTOR,False,False,False,0.2903225806,0.1034482759,0.5,0.1397058824,0.7262039141,0.2737960859,0.01330093329,0.008601580477
@lukaszkaiser can you take a look?,Contribution and Commitment,False,34,CONTRIBUTOR,False,False,False,0.2142857143,0.008683068017,0.3432343234,0.75,0.07171178222,0.9282882178,0.001538799449,8.78093455e-06
I wanted to ask @gacholio : what is the convention between JITted code and the helpers in cnathelp.cpp in terms of setting the TOC?,Solution Discussion,False,131,CONTRIBUTOR,False,False,False,1.0,0.1796875,1.0,0.08333333333,0.02630992985,0.9736900702,0.02838288421,0.0003156516855
"I am talking about line 753 within batch_norm(): CODECODEis_trainingCODETensorCODEVariableCODEPlaceholderCODEneeds_moments` will be true.is_training_value = utils.constant_value(is_training)need_moments = is_training_value is None or is_training_valueif need_moments:...mean, variance = utils.smart_cond(is_training,_force_updates,moving_vars_fn)...CODE",Solution Discussion,True,353,CONTRIBUTOR,False,False,False,0.5945945946,0.08461538462,0.8608137045,0.6666666667,0.7213435746,0.2786564254,0.001636711525,0.0005628859124
"With these options, the regression is still there, actually a bit worse.
CODE",Investigation and Exploration,True,78,NONE,True,False,False,1.0,0.175,1.0,0.3480392157,0.2390911188,0.7609088812,0.01413316902,0.3746116206
[performance.xlsx] URL,Investigation and Exploration,False,23,NONE,False,False,False,0.125,0.03225806452,1.0,0.2784810127,0.2188871415,0.7811128585,0.257542654,0.01185472132
"We could still try to reduce it, blindly.",Solution Discussion,False,41,CONTRIBUTOR,False,False,False,0.3636363636,0.05479452055,0.6666666667,0.8603351955,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
"So, I will need the core file to study the native stack in CODE.",Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,0.8235294118,0.1866666667,0.4,0.2033898305,0.002600687443,0.9973993126,0.0006595011379,0.00112141451
i don't remember who and how placed it there but pretty much it overloaded the system default libcudnn.so.7.1.2 !!!,Investigation and Exploration,False,115,NONE,False,False,False,0.5,0.1417322835,0.7712609971,0.75,0.5795291024,0.4204708976,0.1256221876,1.0
The class unload mutex is a compromise to allow GC to occur but also prevent class unloading during a compilation.,Investigation and Exploration,False,114,CONTRIBUTOR,False,False,False,0.3846153846,0.2197802198,0.6153846154,0.8006993007,0.86612727,0.13387273,0.03684751755,0.005897328255
"From my checking, these didn't make it into TF 1.1 but hopefully will be in 1.2.",Potential New Issues and Requests,False,80,NONE,False,False,False,1.0,0.2388059701,0.3925104022,1.0,0.3274164665,0.6725835335,0.02224733169,0.03860581352
"Tried to build scikit-learn 0.19.2 it in a Debian sid/unstable i386 VM, were scipy and numpy 1.2.1 were installed with apt-get.",Potential New Issues and Requests,False,127,MEMBER,False,False,False,0.6666666667,0.3529411765,0.2479674797,0.2,0.3543056001,0.6456943999,0.009464004531,0.003096425316
:+1:,Social Conversation,False,4,NONE,False,False,False,0.04,0.01369863014,0.06681034483,0.3333333333,0.001454209969,0.99854579,0.004261247633,0.002175772592
To do this we are going to use another JIT option called CODE.,Investigation and Exploration,True,62,CONTRIBUTOR,False,False,False,0.3939393939,0.0977443609,0.4705882353,0.534351145,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
@ry sure I can change the license surely :),Action on Issue,False,43,CONTRIBUTOR,False,False,False,0.28125,0.1232876712,0.6185344828,0.5,0.6567214309,0.3432785691,0.0009029755035,0.000624336739
CODE,Usage,True,4,CONTRIBUTOR,True,False,True,1.0,0.01492537313,0.9736477115,6.0,1.0,0.0,0.02385162338,0.0
"SC alone appears to regress completion time (since the test is so simple, there is probably no benefit of SC, but there is some cost of maintaining SC?).",Testing,False,153,CONTRIBUTOR,False,False,False,0.4912280702,0.1917808219,0.7777777778,0.9217877095,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"Here's the paper I mentioned, titled ""sense2vec"": http://arxiv.org/pdf/1511.06388.pdf , by SCREEN_NAME ",Motivation,False,103,MEMBER,False,False,False,0.3333333333,0.2631578947,0.1605839416,0.05555555556,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
This to me implies that we should be able to observe a 100% reproducibility rate of the problem when CODE is specified.,Investigation and Exploration,True,119,CONTRIBUTOR,False,False,False,0.6666666667,0.1654135338,0.3529411765,0.5292620865,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
We have to deal with it as though it were a memory leak and periodically re-initialize the code.,Observed Bug Behaviour,False,96,NONE,False,False,False,0.76,0.3064516129,0.2290748899,0.3333333333,0.2016154368,0.7983845632,0.03459730626,0.03432994834
"First of all let's list all the different places this failure can occur:

CODE

CODE

CODE

CODE

CODE

Firstly, the failure looks to be identical in each one of these cases.",Investigation and Exploration,True,186,CONTRIBUTOR,False,False,False,0.4404761905,0.4065934066,0.1666666667,0.2377622378,0.5985521651,0.4014478349,1.0,0.01222678832
The InputQueue starts CODE that calls CODE and puts these on the CODE.,Solution Discussion,True,70,NONE,False,False,False,0.8125,0.1940298507,0.9042995839,0.6,0.9153731312,0.08462686876,0.125435556,0.2620248075
A reference could be the dropout implementation here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L433-L435,Potential New Issues and Requests,False,166,NONE,False,False,False,0.6923076923,0.03461538462,0.09207708779,1.0,0.202832989,0.797167011,0.000172984946,0.007484820191
"Actually, the email bounced back saying attachments are too large as well.  

@hzongaro - I've sent you the attachments via slack.",Social Conversation,False,132,CONTRIBUTOR,False,False,False,1.0,0.328358209,0.5,0.4855491329,0.006154516798,0.9938454832,6.19e-06,0.003668136449
Most likely it has something to do with the way code cache is allocated.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.08045977011,0.6666666667,0.1286764706,0.7214571752,0.2785428248,0.00724878302,0.01330093329
"I also need to set up a program to generate Brown clusters, and configure word2vec to generate word vectors.",Solution Discussion,False,108,MEMBER,False,False,False,0.3166666667,0.3166666667,0.08620689655,0.16,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"The jextract problem may be related to https://github.com/eclipse/openj9/issues/9549, for which we have a PR under review.",Investigation and Exploration,False,122,CONTRIBUTOR,False,False,False,1.0,0.3404255319,0.3333333333,0.1923076923,0.1090281199,0.8909718801,0.009663080221,0.009602972199
"I tried using this as a basis for my prior reproduction case, however I didn't have the CODE flag, and without that flag, it doesn't hang, or at the very least it produces thousands of thread dumps, instead of very few.",Bug Reproduction,True,219,NONE,True,False,False,1.0,0.5466666667,0.8,0.7740112994,0.08541061734,0.9145893827,2.19e-06,2.98e-05
Analysis of the core has shown that we have a resolved filed defined on the class of the current method that is being compiled.,Investigation and Exploration,False,127,CONTRIBUTOR,False,False,False,0.96,0.3870967742,0.125,0.262295082,0.4942847726,0.5057152274,0.01863655198,0.01288492485
"If you want to have tensorflow work with your CUDA version, you need to first uninstall it then compile it from source and specify the CUDA version while running ./configure",Solution Discussion,False,173,NONE,False,False,False,1.0,0.2362204724,0.5131964809,0.5,0.4058602603,0.5941397397,0.0003105854165,0.001371752256
"It's warning you that it can't connect to a Jaeger Service, so the open-tracing traces are not being sent anywhere (which is fine).",Investigation and Exploration,False,131,NONE,True,False,False,1.0,0.3,0.5714285714,0.6519607843,0.8720495954,0.1279504046,0.001670230889,0.034636993
I am using the same scope and CODE.,Usage,True,35,NONE,False,False,False,0.2962962963,0.03076923077,0.04710920771,0.3333333333,0.1735517668,0.8264482332,5.01199785e-05,0.00114464291
Changes are in https://github.com/eclipse/openj9/pull/3463/files~,Action on Issue,False,65,CONTRIBUTOR,False,False,False,0.1739130435,0.0625,1.0,0.3404255319,0.6514259667,0.3485740333,0.4569382132,0.5748015215
"There's apparently a bug in the logic to introduce this constraint, that's leaving the automaton with no available actions.",Investigation and Exploration,False,123,MEMBER,False,False,False,0.4523809524,0.2,0.3473684211,0.6666666667,0.1453780739,0.8546219261,0.07593267665,0.03116866066
"Ok, I got the testcase running.",Testing,False,31,CONTRIBUTOR,False,False,False,0.04379562044,0.04379562044,0.25,0.3568773234,0.02016926055,0.9798307394,6.54e-05,5.3e-05
For information I had this issue while trying to stack LSTM cells:,Bug Reproduction,False,66,NONE,False,False,False,0.4615384615,0.01736613603,0.4818481848,0.125,0.08979967049,0.9102003295,0.01683649271,0.03567836101
"Repro rate with following command was 5/7 (killed early to make progress):

CODE

Console:

CODE",Bug Reproduction,True,102,CONTRIBUTOR,False,False,False,1.0,0.1428571429,1.0,0.7582697201,0.7924397519,0.2075602481,0.005813915463,0.02606390197
The verbose logs above were collected with with just CODE (as opposed to CODE) so they are missing some information.,Investigation and Exploration,True,116,CONTRIBUTOR,False,False,False,0.4255319149,0.25,0.125,0.181372549,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
a)         Bagging:,Solution Discussion,False,19,MEMBER,False,False,False,0.1,0.04225352113,0.8224637681,0.3181818182,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
I suspect the value of the counter should be actually slightly less than 0x4001FFE.,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.4827586207,0.2978723404,0.8333333333,0.5884615385,0.5039948473,0.4960051527,0.005154978519,0.01512432343
There's nothing to suggest this is JIT/AOT though.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.6923076923,0.1551724138,0.6666666667,0.1467889908,0.0207995758,0.9792004242,3.3e-05,8.67e-05
"Perhaps it will work, even though 2010 and 2013 do not.",Solution Discussion,False,55,CONTRIBUTOR,True,False,False,0.9166666667,0.09322033898,0.4,0.06060606061,0.3881489186,0.6118510814,0.0001845122672,7.34e-05
I based my suggestion on the one flat_map code example on the github page you linked.,Usage,False,85,NONE,False,False,False,0.7272727273,0.2388059701,0.6837725381,0.3333333333,0.5121402298,0.4878597702,0.0005771785436,0.0001414952691
The GC data can be stored in the shared cache as a hint.,Motivation,False,56,CONTRIBUTOR,True,True,False,0.3513513514,0.08904109589,0.4285714286,0.01675977654,0.0,1.0,0.0,5.94e-06
"Considering the relative rarity of it before in my jit logs, I am almost certain that in-lining it was hanging the JITC and halting execution of my program (which is why i had abnormal cpu time devoted to a jit thread in my coredumps.",Investigation and Exploration,False,234,NONE,True,False,False,1.0,0.671641791,1.0,0.469273743,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
I'm otherwise at a loss.,Social Conversation,False,24,MEMBER,False,False,False,0.7142857143,0.07352941176,0.7032520325,1.0,0.5872153731,0.4127846269,0.01255525015,0.008422193983
"Actually, GetEnv can result in records being put in the trace buffer, so calling it definitely has the potential for corruption.",Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,1.0,0.2019230769,0.5,0.7513812155,0.3053817121,0.6946182879,0.01204726646,0.01340473801
The exact stage of the build the failure happens on varies.,Observed Bug Behaviour,False,59,NONE,True,False,False,0.5238095238,0.08270676692,0.3333333333,0.06615776081,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
"@DanHeidinga, I tried with the options as suggested above with CODE.",Investigation and Exploration,True,68,CONTRIBUTOR,False,False,False,0.34375,0.08270676692,0.5,0.7251908397,0.7800282869,0.2199717131,0.007400755077,0.0003568549673
Code below.,Observed Bug Behaviour,False,11,NONE,False,False,False,0.04651162791,0.0206185567,0.4171597633,0.5,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"I don't think we can be sure that we're running the very latest version of the code, so it probably doesn't matter to anyone if we only check for updates every 100ms instead of on every class load.",Solution Discussion,False,197,CONTRIBUTOR,False,False,False,1.0,0.2773722628,1.0,0.9442379182,0.07060357069,0.9293964293,0.0004054165976,0.0007946827895
"@markehammons Good news, the build is available on AdoptOpenJDK at https://adoptopenjdk.net/nightly.html?variant=openjdk9-openj9
The build is dated 16 November 2017 and the filename is OpenJDK9-OPENJ9_x64_Linux_20171611.tar.gz.",Social Conversation,False,228,CONTRIBUTOR,False,False,False,1.0,0.3582089552,0.3333333333,0.9776536313,0.990322308,0.009677692014,0.1542127927,0.02467101294
"@bhack Thanks, will try that soon, I was using a workaround which I'm not proud of :-)",Social Conversation,False,86,NONE,False,False,False,0.6538461538,0.2537313433,0.9389736477,0.3333333333,0.9754490635,0.02455093652,0.04231472009,0.001898479689
Will ponder this tonight and look again in the morning to see if there is a safe workaround.,Contribution and Commitment,False,92,CONTRIBUTOR,False,False,False,0.6206896552,0.2903225806,0.7142857143,0.2404371585,0.4886807048,0.5113192952,0.2303004492,0.01077464908
here's a full traceback..,Workarounds,False,25,NONE,False,False,False,0.1219512195,0.007235890014,0.4158415842,0.4,0.08288349415,0.9171165058,5.446552647e-05,0.004827734083
"OK, I have run the test on my Windows10 using the jdk8u212-b04_openj9-0.14.2 SDK (the one used by @jsimomaa).",Testing,False,109,CONTRIBUTOR,False,False,False,0.5405405405,0.1459854015,0.25,0.8029739777,0.04520980406,0.9547901959,0.0006439456684,0.01947449064
If so click here: https://appear.in/spacy_issue429,Social Conversation,False,50,MEMBER,False,False,False,0.5,0.05263157895,0.5578947368,1.0,0.1887283593,0.8112716407,1.151867231e-05,4.730238472e-06
"At a guess, the problem would most likely be that a catch map got merged away.",Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,1.0,0.25,0.5,0.3971631206,0.7587102376,0.2412897624,0.002764994686,0.005380920094
"Well, I think you could say ""the trap is set"": the existing design is such that the strings have to be globally available.",Solution Discussion,False,122,MEMBER,False,False,False,0.46,0.3709677419,0.550660793,0.1428571429,0.2188215168,0.7811784832,0.0010422294,0.002309046196
"https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_ppc64le_linux_Nightly/147
OpenJ9: c9d84df
OMR: 54fb162
OpenJDK: 8bf2a81

https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_ppc64le_linux_Nightly/148
OpenJ9: b0e9913
OMR: ffb0d98
OpenJDK: 8bf2a81

https://github.com/eclipse/openj9/compare/c9d84df...b0e9913
https://github.com/eclipse/openj9-omr/compare/54fb162...ffb0d98",Investigation and Exploration,False,416,CONTRIBUTOR,True,False,False,1.0,0.3731343284,1.0,0.2427745665,0.005020000581,0.9949799994,4.91e-06,6.9e-06
However options should be applied wisely because it might depend on GC policy they were taken.,Solution Discussion,False,94,CONTRIBUTOR,False,False,False,1.0,0.1095890411,0.5,0.1173184358,0.01027692807,0.9897230719,0.0008466218856,0.0001215876069
Not really sure how this works.,Solution Discussion,False,31,NONE,False,False,False,0.1935483871,0.08219178082,0.02586206897,0.8571428571,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
Eventually I experienced the segfault and I have seen it on both JDK/JRE.,Bug Reproduction,False,73,NONE,True,False,False,0.2857142857,0.1414141414,0.8888888889,0.3754385965,0.1194799462,0.8805200538,0.004838964607,0.001815624911
Any method that has been DLT compiled also has a DLTRecord added to the DLTRecord Table.,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.3137254902,0.1758241758,0.380952381,0.4370629371,0.8054811495,0.1945188505,0.1631008731,0.2634355634
However we cannot merge GPL code into TensorFlow.,Action on Issue,False,49,CONTRIBUTOR,False,False,False,1.0,0.1232876712,0.6142241379,1.0,0.6566394894,0.3433605106,0.0005984425886,0.0005714418505
"https://ci.eclipse.org/openj9/job/Build_JDK15_ppc64_aix_xl_Personal/11
CODE",Testing,True,76,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6174863388,0.8065965028,0.1934034972,0.1713865063,0.1197204731
My comments were about switching from CODE to CODE.,Social Conversation,True,51,CONTRIBUTOR,False,False,False,1.0,0.06569343066,1.0,0.3866171004,0.02029985943,0.9797001406,5.3e-05,1.9e-05
"This could be a LRU cache, or even something simpler.",Solution Discussion,False,53,MEMBER,False,False,False,0.25,0.1612903226,0.3876651982,0.75,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
Thats my next step.,Task Progress,False,19,NONE,False,False,False,0.2941176471,0.06849315068,0.1357758621,1.0,0.02901004364,0.9709899564,0.01651736955,0.001724506158
ð,Social Conversation,False,1,NONE,False,False,False,1.0,0.01369863014,0.4655172414,1.0,0.5545037786,0.4454962214,0.01532070569,0.02505292255
"Update: TSNE(perplexity=30, n_components=2, init='pca', n_iter=1000, **method='exact'**) make it  worked ...",Solution Discussion,False,108,NONE,False,False,False,1.0,0.1408450704,0.8947368421,0.5,0.6475280273,0.3524719727,0.00843712351,0.0351468626
"Monday morning, I go back and try to run and it just freezes.",Observed Bug Behaviour,False,61,NONE,False,False,False,0.3023255814,0.1340206186,0.4112426036,0.3333333333,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"The fundamentally weird thing we are doing is derefing the j9method pointer to get to the classloader to see if we need to clean up the entry

I do not think this is a race between hooks - this clean up is currently in one place.",Investigation and Exploration,False,231,CONTRIBUTOR,False,False,False,0.8070175439,0.5054945055,0.4285714286,0.8461538462,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
Lol,Social Conversation,False,3,NONE,False,False,False,0.03333333333,0.01369863014,0.7844827586,1.0,0.7609816807,0.2390183193,0.1170572737,0.4412746119
"The swig bindings do not run things on IO threads, they execute on the main event loop from what I understand/experienced.",Solution Discussion,False,122,NONE,False,False,False,0.6111111111,0.301369863,0.3146551724,0.6666666667,0.3441984002,0.6558015998,0.02043978005,0.1292799766
The work to fix it should continue at the same priority so we have a fix by Oct 2 for 0.23 M2.,Social Conversation,False,94,CONTRIBUTOR,False,False,False,1.0,0.4680851064,1.0,0.4307692308,0.3690988178,0.6309011822,0.01937481932,0.007316005049
"It's surprising to find that your pickle works, sometimes, depending on state, but then your long-running process dies because you didn't meet the assumed invariant.",Solution Discussion,False,165,MEMBER,False,False,False,0.5652173913,0.1699346405,0.4180064309,0.7894736842,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
The error has indeed been removed and the Old Bard is hallucinating just fine now ð,Solution Discussion,False,83,NONE,False,False,False,0.7272727273,0.02315484805,0.1419141914,0.6666666667,0.02030719624,0.9796928038,0.00388105441,0.005971272817
CODE appears to follow the same pattern as the provided example.,Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.7845303867,0.3141071294,0.6858928706,0.0004107031265,0.0006521105157
This thread has been automatically locked since there has not been any recent activity after it was closed.,Action on Issue,False,107,NONE,False,False,True,18.0,0.2903225806,0.9955947137,1.0,1.0,0.0,0.9898268541,0.0
"So, I thought that this problem was fixed in the latest release but it appears to not be.",Social Conversation,False,89,NONE,False,False,False,0.8571428571,0.1353383459,1.0,0.7150127226,0.7787161072,0.2212838928,0.2412282351,0.0001541057533
The usage of BN layer is quite confusing.,Social Conversation,False,41,CONTRIBUTOR,False,False,False,0.4444444444,0.03076923077,0.6937901499,0.6666666667,0.5725805298,0.4274194702,0.0005567984656,0.003358850219
"Checked the range in CODE (16 methods) as follows:
CODE
Now keep checking the compiled methods in CODE (only 4 methods):
CODE",Investigation and Exploration,True,128,CONTRIBUTOR,False,False,False,1.0,0.1954887218,1.0,0.4478371501,0.5286949676,0.4713050324,0.06976085403,0.06758416136
@Abduoit your Ubuntu version doesn't really matter.,Solution Discussion,False,51,NONE,False,False,False,0.3181818182,0.05511811024,0.642228739,0.5,0.4727437799,0.5272562201,0.06170592737,0.4007313547
"@nmhkahn  quick question. When you wrote (for testing): CODE in theory, can bx and by be any data set?",Usage,True,102,NONE,False,False,False,1.0,0.07692307692,0.1862955032,0.3333333333,0.2219186371,0.7780813629,0.02579900529,0.002721595999
"Curious thing, If you add a comma like this: CODE the error goes away.",Investigation and Exploration,True,70,CONTRIBUTOR,False,False,False,1.0,0.1473684211,0.2736842105,0.8,0.1100086119,0.8899913881,0.04915356896,0.07593267665
"If there is some setup, then it'd be worth discussing what needs to be communicated for each worker to do the same setup.",Solution Discussion,False,121,NONE,False,False,False,0.8571428571,0.1568627451,0.1575562701,1.0,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Anyone have these issues when working with legacy_seq2seq.rnn_decoder()?,Bug Reproduction,False,72,NONE,False,False,False,1.0,0.01157742402,0.6666666667,1.0,0.2252288995,0.7747711005,0.04734857901,0.005343317335
"@urisimchoni As the documentation for this feature came from the back of a napkin somewhere, it's not clear to me if the call requires that the env_id be filled in, or whether it's returned by the call.",Investigation and Exploration,False,202,CONTRIBUTOR,False,False,False,1.0,0.3557692308,0.25,0.7624309392,0.3138477417,0.6861522583,0.01340473801,0.0004107031265
"We can compute the offsets on JITServer using only TR::Node, then pass that vector to JITClient to compute for the actual object address.",Solution Discussion,False,137,CONTRIBUTOR,False,False,False,0.3150684932,0.1216931217,0.5,0.9657142857,0.5018185814,0.4981814186,0.001953523523,1.0
"That is, if I do TSNE on the whole data set it **works**, if I do it on a reduced set it does not.",Investigation and Exploration,False,98,NONE,False,False,False,1.0,0.338028169,0.1081871345,1.0,0.154639826,0.845360174,0.1585619872,5.56302982e-05
"I new here but have been trolling for a while, would be glad to add Bahasa support",Contribution and Commitment,False,82,NONE,False,False,False,1.0,0.2833333333,0.7068965517,1.0,0.448394353,0.551605647,0.2563539137,0.0002826479106
I just pasted the full commandline that Eclipse reports in the properties page you can access from the debug perspective (if you right click the process in the debug view and select 'Properties'.,Investigation and Exploration,False,195,NONE,True,False,False,0.7857142857,0.3333333333,0.625,0.6947368421,0.2144667264,0.7855332736,0.001641357342,0.00438505838
*         An CODE can be created from a CODE.,Solution Discussion,True,45,CONTRIBUTOR,True,True,False,0.1914893617,0.1343283582,0.03051317614,0.7333333333,0.0,1.0,0.0,0.000766008561
I don't know what other profilers would think of it,Social Conversation,False,51,NONE,True,False,False,0.2173913043,0.09615384615,0.3333333333,0.8011049724,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
"Instead, we guarantee that the CODE attribute faithfully retains the slice for each token, so that we just have to join the CODE attributes and check whether the token has a trailing space.",Solution Discussion,True,189,MEMBER,False,False,False,1.0,0.5322580645,0.4449339207,1.0,0.2163098383,0.7836901617,0.001341566856,2.040170794e-05
"@gacholio Can you confirm that there might be a problem with allocating a large amount on native stack (640 frames * 16 bytes per frame, 10K I believe)?",Solution Discussion,False,152,NONE,True,False,False,0.6086956522,0.2692307692,0.8888888889,0.8287292818,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
"Ignoring the naming of everything, this might look like: CODE",Solution Discussion,True,61,MEMBER,False,False,False,0.2173913043,0.06535947712,0.4308681672,1.0,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"might be in the wrong way?)

I am wondering whether it is possible to get the linker (VS2017) to pick up the static libraries ( __imp___iob_func) supported in mingw.",Solution Discussion,False,167,CONTRIBUTOR,False,False,False,0.6170212766,0.2457627119,1.0,0.04848484848,0.3880894914,0.6119105086,0.0357099532,0.0001845122672
"Thanks!

> Some followup discussion can be found from openj9 slack #newcomers: https://openj9.slack.com/archives/C862YFGL9/p1559066270001000",Social Conversation,False,142,NONE,True,True,False,0.3513513514,0.09489051095,1.0,0.03717472119,0.0,1.0,0.0,5.34e-05
"If before you were using: MultiRNNCell([GRUCell(...)] * num_layers), change to: MultiRNNCell([GRUCell(...) for _ in range(num_layers)]).",Bug Reproduction,False,136,NONE,False,False,False,0.3421052632,0.01881331404,0.1848184818,0.8,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"If this method is at issue, it would also be good to check which atomic long we are updating in the program (perhaps via inspecting the stack using CODE), e.g. maybe we get into some state where exceptions are being thrown on all threads and there is a lot of contention for updating a particular atomic long that keeps track of number of failed transactions, i.e. perhaps it is a manifestation still of the original problem being some exceptions occurring.",Investigation and Exploration,True,457,CONTRIBUTOR,False,False,False,1.0,1.0,0.5,0.9166666667,0.9666406206,0.03335937939,0.04562398057,0.02395737432
My reading about it so far is that MS only provides support for OpenMP in VS professional editions or higher.,Solution Discussion,False,109,CONTRIBUTOR,False,False,False,0.6060606061,0.1307189542,0.9678456592,0.3333333333,0.2018945648,0.7981054352,4.380506786e-05,0.1692698285
"The crash is caused by a corrupt o-slot

We will exclude the test on PPC and arch64.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.4222222222,0.2043010753,0.5,0.9459459459,0.9188394381,0.08116056195,0.2809961131,0.003058765602
I'll attempt to run this workload with gdb to get a snapshot of where we're crashing.,Task Progress,False,85,CONTRIBUTOR,False,False,False,0.6956521739,0.3404255319,1.0,0.1884615385,0.1072645887,0.8927354113,0.01345561023,0.009663080221
@AlenBadel @gita-omr Is this still an open issue?,Social Conversation,False,49,MEMBER,False,False,False,1.0,0.0703125,0.5,0.7777777778,0.1928965305,0.8071034695,0.1292651629,0.000130769984
"In that regard, to be consistent with CategoricalEncoder, it might better be named OrdinalEncoder because it needs ordinal data as input).",Solution Discussion,False,138,CONTRIBUTOR,True,True,False,0.42,0.328125,0.05514705882,0.625,0.0,1.0,0.0,0.0007774126438
Then we should look for a solution that allows for early stopping and adding additional estimators.,Solution Discussion,False,99,MEMBER,False,False,False,1.0,0.2253521127,0.1376811594,1.0,0.03646640003,0.9635336,0.0001465833962,0.0001586202898
"Using method='exact' seems to works for me, but it is so painfully slow.",Solution Discussion,False,72,NONE,False,False,False,1.0,0.1830985915,0.9035087719,0.6666666667,0.6535614795,0.3464385205,0.0351468626,0.006016236851
https://ci.eclipse.org/openj9/job/Pipeline-Release-Build/80,Testing,False,59,CONTRIBUTOR,False,False,False,0.1666666667,0.005747126437,1.0,0.9485294118,0.7963722046,0.2036277954,0.00187043267,0.004816889792
"Currently it ended up with linking failure on unresolved external symbols as follows:

CODE

It seems the failure was triggered when linking (VS2017) the .obj files (compiled by mingw) with non-existent functions in libraries in VS2017 (___iob_func was already renamed to acrt_iob_func since VS2015)",Investigation and Exploration,True,303,CONTRIBUTOR,False,False,False,1.0,0.3983050847,0.3333333333,0.03636363636,0.3880894914,0.6119105086,0.0357099532,0.0001845122672
We are now again able to reproduce the issue.,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.1323529412,0.06766917293,0.3333333333,0.844783715,0.8337431676,0.1662568324,0.02587954735,0.00358081273
"If we find xlclang++ not up to the task (say, more than 10% slower), we may need to ask xlC team for a possible fix (not high hope though, until Wyvern compiler is out).",Contribution and Commitment,False,169,CONTRIBUTOR,False,False,False,1.0,0.1954022989,1.0,0.5955882353,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
When we later know the class is not actually updated we will remove the stale marking.,Solution Discussion,False,86,CONTRIBUTOR,False,False,False,0.4705882353,0.1167883212,1.0,0.9256505576,0.06914383896,0.930856161,0.0005002484678,0.001788553918
In a turn of events.,Social Conversation,False,20,CONTRIBUTOR,False,False,False,0.1282051282,0.1063829787,0.25,0.2384615385,0.1142105821,0.8857894179,0.0002203960832,0.005424033477
c) Forest:,Solution Discussion,False,10,MEMBER,False,False,False,0.06666666667,0.02816901408,0.847826087,0.6363636364,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"Another environment variable might be worth trying: CODE
The reason why compareAndSwapObject was not shown in the log might be it was transformed by UnsafeFastPath.",Social Conversation,True,165,CONTRIBUTOR,False,False,False,1.0,0.3880597015,1.0,0.5474860335,0.005414287308,0.9945857127,0.0003370027271,0.0001990987978
Am I correct to assume that https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/learn/python/learn/dataframe is part of the new input pipeline initiative?,Task Progress,False,174,NONE,False,False,False,0.5,0.223880597,0.4466019417,0.1111111111,0.402192445,0.597807555,0.001827732055,0.008699923145
"But if we want to have it propagate into testing and thus become a part of the next Debian stable release (Whenever that would be) -- yes, should get addressed one way (fixed) or another (disabled)",Task Progress,False,197,MEMBER,True,False,False,1.0,0.5294117647,0.1829268293,1.0,0.2807260694,0.7192739306,0.007023674687,0.0006692173817
"Sure, where and in what format would you like it?",Bug Reproduction,False,49,NONE,True,False,False,1.0,0.1408450704,0.02339181287,1.0,0.003864097583,0.9961359024,0.0008763847724,8.510605321e-05
"If so, please add the doc:externals label.",Action on Issue,False,42,CONTRIBUTOR,False,False,False,0.8,0.05479452055,1.0,0.5642458101,0.2525005556,0.7474994444,0.04295972467,0.002218893623
You can change the batch_size during test to see how the performance degrades as you make your batch smaller.,Usage,False,109,MEMBER,False,False,False,0.7307692308,0.07307692308,0.4154175589,1.0,0.3730683512,0.6269316488,0.007204899096,0.03827269103
CODE,Usage,True,4,MEMBER,False,False,False,0.02941176471,0.003846153846,0.2890792291,1.0,0.2263105393,0.7736894607,3.074160625e-05,0.0884793142
Setting CODE on Linux doesn't solve the issue for me.,Investigation and Exploration,True,53,NONE,False,False,False,0.4347826087,0.1052631579,0.1368421053,1.0,0.004005078259,0.9959949217,0.008598273629,0.1559472602
Perf runs I conducted locally that heavily utilized CODE methods did not indicate any perf differences compared to the version without the workaround.,Workarounds,True,150,MEMBER,False,False,False,1.0,0.25,1.0,0.9496855346,0.6394476,0.3605524,0.0002725427144,0.05549281815
+1 for trying with larger variance or even a different distribution (e.g. uniform).,Solution Discussion,False,83,MEMBER,False,False,False,1.0,0.1911764706,0.918699187,1.0,0.6439362924,0.3560637076,0.002426517307,0.02351100859
That being said I would expect this should be pretty rare.,Expected Behaviour,False,58,CONTRIBUTOR,False,False,False,0.3793103448,0.1774193548,1.0,0.2513661202,0.4886807048,0.5113192952,0.2303004492,0.01077464908
See https://humantoanimal.com for a demo; I will be providing more details in the future.,Potential New Issues and Requests,False,89,CONTRIBUTOR,False,False,False,0.875,0.1917808219,0.9568965517,1.0,0.9680066181,0.0319933819,0.2254964429,0.0002863848778
what is your OS level?,Investigation and Exploration,False,22,CONTRIBUTOR,False,False,False,1.0,0.02873563218,1.0,0.7720588235,0.7732123869,0.2267876131,4.37e-06,4.82e-05
The checkcast then crashes when trying to work with this invalid value.,Observed Bug Behaviour,False,71,CONTRIBUTOR,False,False,False,0.1290322581,0.1290322581,0.25,0.3783783784,0.3937305493,0.6062694507,0.03688423691,0.3568236584
*         multiprocessing rather than threading,Expected Behaviour,False,47,NONE,False,False,False,0.1666666667,0.07462686567,0.145631068,0.2857142857,0.04064994448,0.9593500555,0.2125437083,0.01543061897
@tajila @gacholio,Contribution and Commitment,False,17,CONTRIBUTOR,False,False,False,1.0,0.01923076923,1.0,0.08287292818,0.007066522146,0.9929334779,8.41e-06,0.001461775901
I am glad that the problem disappeared.,Social Conversation,False,39,CONTRIBUTOR,False,False,False,0.2916666667,0.0875,0.2,0.3725490196,0.2985071133,0.7014928867,0.0007771213165,0.005374605821
I was trying to run the translate example: python2.7 translate.py --data_dir data/ --train_dir train/ --size=256 --num_layers=2 --steps_per_checkpoint=50,Bug Reproduction,False,153,NONE,False,False,False,0.4473684211,0.02460202605,0.1617161716,0.1,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"In the instance I'm looking at, the vmThread list is corrupted and the JIT sampler crashes as a result.",Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,1.0,0.1826923077,1.0,0.6519337017,0.1404522465,0.8595477535,0.007465904141,2.46e-05
"The other crash: CODE that i was originally chasing:

This is a long output, I'll summarize what happens:
- j9jni_createGlobalRef stores object pointer CODE at CODE
- we compile CODE and in the end deleteMethodHandleRef at CODE
- j9jni_createGlobalRef then stores object pointer CODE at CODE
CODE
- we compile CODE
CODE
- after these moves, we strangely request for another compile with the same methodHandle!
- note that the first time the compilation request is CODE
- there is a theory here: since the compilation is queued, we don't have it ready so we requested a new one.
CODE
- then j9jni_createGlobalRef at CODE for CODE
- though we already have CODE at CODE
- so at this point it seems that CODE already contains bogus information
- and we perform a deleteMethodHandleRef on CODE
- note that the deletion is on another vmthread CODE instead of CODE
CODE

- after that we proceed to use CODE again for a new object pointer
CODE
- then after a series of moves, we arrive at a bad object pointer at CODE
CODE",Investigation and Exploration,True,1037,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.4,0.411769521,0.588230479,0.003375208545,0.002068168866
The value in the globalreference will change anytime a GC occurs on the client.,Investigation and Exploration,False,79,MEMBER,False,False,False,0.7777777778,0.07407407407,0.5,0.6514285714,0.4480458909,0.5519541091,0.001020633264,0.0003017200526
"You guys can ignore my previous 20+ comments, I have summarized everything in this comment.",Social Conversation,False,91,CONTRIBUTOR,False,False,False,0.2542372881,0.07936507937,0.8888888889,0.5028571429,0.4461627725,0.5538372275,0.06246846736,0.001023944321
ulimit -m unlimited  (for RSS unlimited),Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.7777777778,0.1129032258,0.5,0.2320675105,0.04759185897,0.952408141,0.003690015373,0.00225193033
Once I have some basic tensor flow experience under my belt I'll likely be interested in building out proper bindings.,Contribution and Commitment,False,118,NONE,False,False,False,0.5555555556,0.2739726027,0.3168103448,0.8333333333,0.3441984002,0.6558015998,0.02043978005,0.1292799766
@xiezhongzhao What version of Cuda are you using?,Solution Discussion,False,49,NONE,False,False,False,0.4210526316,0.06299212598,0.293255132,0.3333333333,0.3428688502,0.6571311498,0.00239742362,0.0004045005306
To effectively paint a picture if any method is still in the HT that belonged to an class that was previously unloaded.,Investigation and Exploration,False,119,CONTRIBUTOR,False,False,False,0.88,0.2417582418,0.6666666667,0.3916083916,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
"Specifically on Power, CODE is compiled using the CODE[5], which is only invoked by CODE.",Investigation and Exploration,True,89,CONTRIBUTOR,False,False,False,0.4838709677,0.3191489362,0.5925925926,0.7923076923,0.6986733294,0.3013266706,0.2919761514,0.1217072968
Will be easier to step through.,Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.375,0.03448275862,0.5,0.4779411765,0.766321062,0.233678938,5.75e-05,6.23e-05
"If before you were using: MultiRNNCell([BasicLSTMCell(...)] * num_layers), change to: MultiRNNCell([BasicLSTMCell(...) for _ in range(num_layers)]).",Observed Bug Behaviour,False,148,NONE,True,True,False,0.164556962,0.01881331404,0.02310231023,0.6363636364,0.0,1.0,0.0,0.0005278053632
I thought we would never get to the bottom of this one to be honest :) !,Social Conversation,False,72,MEMBER,False,False,False,0.7619047619,0.2253521127,0.7923976608,0.3333333333,0.473997047,0.526002953,0.006263805516,1.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6271551724,1.0,0.6870502879,0.3129497121,0.28998505,0.04966188215
"Please remove the assignee, as this issue is inviting external contributions.",Action on Issue,False,77,MEMBER,False,False,False,1.0,0.04230769231,0.9892933619,0.3333333333,0.9977234775,0.002276522477,0.2238197937,0.01441639293
This makes sense.,Social Conversation,False,17,MEMBER,False,False,False,0.1071428571,0.07894736842,0.09489051095,0.25,0.003440430228,0.9965595698,0.0006606771075,0.0004625994361
"After the first call, you have a object pointer in hand.",Investigation and Exploration,False,56,MEMBER,False,False,False,0.3142857143,0.0582010582,0.6,0.8685714286,0.4980531694,0.5019468306,0.09504926646,0.001840119827
Also @mpirvu what was the java -version from your development build?,Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,1.0,0.0802919708,0.5,0.7211895911,0.04247659552,0.9575234045,0.001395974822,0.0004207387775
Thank you for your advice SCREEN_NAME .,Social Conversation,False,39,NONE,False,False,False,0.5454545455,0.02307692308,0.6423982869,0.3333333333,0.5688734124,0.4311265876,0.003618682739,0.002504984351
FYI SCREEN_NAME  SCREEN_NAME 8ramit (who are working on the upcoming 1.5 release),Contribution and Commitment,False,81,MEMBER,False,False,False,0.7222222222,0.1023622047,0.04398826979,1.0,0.0329509246,0.9670490754,0.1295333454,0.2905541361
"The JVM is here https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK8_x86-64_mac_Personal/597/OpenJ9-JDK8-x86-64_mac-20201125-021416.tar.gz

It prints output to stderr like CODE.",Investigation and Exploration,True,212,CONTRIBUTOR,True,False,False,1.0,0.224137931,0.5,0.8532110092,0.9975840581,0.002415941924,0.004205153524,0.0006064079553
"I don't want to rush this, because it touches a lot of files, but I also don't want to block the v1.0.0 release, which is otherwise ready.",Task Progress,False,138,MEMBER,False,False,False,1.0,0.435483871,0.6211453744,0.5,0.2586753238,0.7413246762,0.002179048536,0.1151253204
I've uploaded it to google drive.,Task Progress,False,33,NONE,True,False,False,0.3333333333,0.07070707071,0.6,0.7859649123,0.5885610122,0.4114389878,1.0,0.002646435418
It does launch.,Investigation and Exploration,False,15,CONTRIBUTOR,False,False,False,0.1111111111,0.0303030303,0.5,0.750877193,0.2164794247,0.7835205753,0.001471142506,0.02954037942
We are delivering a change to statically link in future builds.,Task Progress,False,63,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.6666666667,0.9816176471,0.798212252,0.201787748,6.67e-05,0.0007994877042
Could you try to build scikit-learn master to see whether the problem disappears ?,Solution Discussion,False,82,MEMBER,False,False,False,0.5833333333,0.1971830986,0.2865497076,1.0,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
This is a long-standing problem that is not JDK17-specific.,Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,0.4230769231,0.1182795699,0.3333333333,0.8571428571,0.8399273015,0.1600726985,0.8852104953,0.004353145679
"A bit more progress:
1) did verbose build from scratch for JDK 8 and JDK 13.",Task Progress,False,77,CONTRIBUTOR,False,False,False,0.2266666667,0.09770114943,0.5,0.2022058824,0.7471500091,0.2528499909,0.03667212771,0.0001206082958
We hope more developers to discuss and contribute.,Contribution and Commitment,False,50,NONE,False,False,False,0.380952381,0.1095890411,0.09051724138,0.3333333333,0.001618769515,0.9983812305,0.0006821006132,7.325610089e-05
"-         We then define a CODE method, which is the Cython way of adding a destructor.",Solution Discussion,True,87,MEMBER,False,False,False,0.6153846154,0.2580645161,0.5110132159,0.7647058824,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"I was using the scikit-learn word count module, so YMMV.",Solution Discussion,False,56,NONE,False,False,False,0.2894736842,0.07189542484,0.5594855305,0.1538461538,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
So where you will end up will depend on the initialization.,Solution Discussion,False,59,MEMBER,False,False,False,0.5238095238,0.1549295775,0.5652173913,0.8333333333,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
"Yes (the other case easily be translated in its equivalent CODE value, with a nice deprecation warning, and without different in new and legacy behaviour)",Solution Discussion,True,154,CONTRIBUTOR,True,False,False,0.5555555556,0.390625,0.5110294118,0.25,0.07586856219,0.9241314378,0.0001680122564,0.000726968286
I am worried about having to write'defensive' code to avoid such problems.,Solution Discussion,False,74,MEMBER,False,False,False,0.3636363636,0.1690140845,0.6449275362,1.0,0.06511199992,0.9348880001,0.000167358443,3.516317045e-05
I think we'll still need to do something better for the more advanced cases where we might want to reinitialize an iterator in the same session.,Solution Discussion,False,144,CONTRIBUTOR,True,False,False,0.5531914894,0.3880597015,0.547850208,0.7857142857,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Thanks for your hard work @JamesKingdon!,Social Conversation,False,40,NONE,True,False,False,0.375,0.08955223881,0.5,0.9441340782,0.3681008747,0.6318991253,0.1312948834,1.0
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.07692307692,0.007874015748,0.9208211144,0.25,0.9282448049,0.07175519508,0.02806508983,0.00732168145
"Thus, I'm guessing I still have a scope issue so that it's not finding the proper existing variables.",Usage,False,101,NONE,False,False,False,0.5806451613,0.06923076923,0.3961456103,1.0,0.3712524908,0.6287475092,0.06886363297,0.000473907732
I would be interested in a pipeline where:,Expected Behaviour,False,42,NONE,False,False,False,0.1818181818,0.1194029851,0.4174757282,0.3333333333,0.3861707704,0.6138292296,0.3801876085,0.001120764685
"Hm, how would the conda scikit-learn version differ from the pip wheels?",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.1830985915,0.4649122807,0.3333333333,0.4155863901,0.5844136099,0.0001185949392,0.0004713353126
I looked at the attached log and the only non-trivial optimization done seems to be from local CSE.,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.7916666667,0.2375,0.5,0.8039215686,0.9470188736,0.05298112636,0.04955018304,0.0226844032
"True, although it ought to be faster, so it's hard to let it go :)",Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.6,0.1094890511,0.5,0.6208178439,0.02564146366,0.9743585363,0.0002157528574,0.0002654464138
This might be a bug in itself.,Investigation and Exploration,False,30,MEMBER,False,False,False,0.1666666667,0.0985915493,0.1695906433,1.0,0.1679332519,0.8320667481,0.008272861908,0.002433479587
We may even be interested in disabling the inlining of that method to be even more paranoid.,Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,0.4047619048,0.2125,1.0,0.8823529412,0.9558660429,0.04413395706,0.001152633296,0.002453151618
"I will note that outside of docker I am not using the java scc layers, it is just one SCC generated the first time the server starts.",Investigation and Exploration,False,133,NONE,True,False,False,1.0,0.3375,0.5,0.1274509804,0.09701181711,0.9029881829,0.01961071442,0.02610750661
Submitted a PR that resolves this.,Solution Discussion,False,34,CONTRIBUTOR,False,False,False,0.4615384615,0.06593406593,0.6666666667,0.9615384615,0.9227873075,0.07721269245,0.2377056189,0.1633866501
"@OktayGardener not sure what model are you trying to create, it seems that the variables are not saved in your checkpoint.",Usage,False,122,MEMBER,False,False,False,1.0,0.08076923077,0.7537473233,0.3333333333,0.6163482777,0.3836517223,6.767211672e-05,0.005602480188
Moving on to the next one...,Task Progress,False,28,CONTRIBUTOR,False,False,False,0.2,0.08955223881,1.0,0.8715083799,0.1409452519,0.8590547481,0.06580775503,0.4477852629
But still find the problem that how to dynamically feed data to the Dataset.,Usage,False,76,NONE,False,False,False,0.6666666667,0.2089552239,0.9126213592,0.2222222222,0.9479523715,0.05204762849,0.2620248075,0.005625200409
I still don't know much about tensorflow.,Social Conversation,False,41,NONE,False,False,False,0.2121212121,0.09589041096,0.7693965517,0.5,0.7541437327,0.2458562673,0.8203682945,0.005981548758
CODE,Solution Discussion,True,4,NONE,False,False,False,0.5,0.007874015748,0.8445747801,0.5,0.8322044655,0.1677955345,0.7490188829,0.1779957627
"Well, looks like if compiled with -O0 target code expects r12 to be set, from which it derives r2.",Solution Discussion,False,98,CONTRIBUTOR,False,False,False,0.7916666667,0.1484375,0.5,0.4666666667,0.03778350873,0.9622164913,0.0003858680808,2.53e-05
"Hum, that is likely related to issues of multiprocessing on windows.",Investigation and Exploration,False,68,MEMBER,False,False,False,0.6111111111,0.1134020619,0.2337278107,0.1666666667,0.2588472304,0.7411527696,0.001083708651,1.0
"*         adding an CODE field to the queue CODE and letting the background thread enqueue an item with CODE together with an assertion around the dequeue operation (but using CODE will dequeue elements from the next epoch if the number of items per epoch is not an integer multiple of the batch size, see also #2514)",Workarounds,True,317,CONTRIBUTOR,False,False,False,1.0,0.8358208955,0.8932038835,0.8461538462,0.8997769167,0.1002230833,0.0385452454,0.125435556
And none of them are about CODE CODE,Potential New Issues and Requests,True,36,MEMBER,False,False,False,0.5,0.1176470588,0.1097560976,1.0,0.2704545226,0.7295454774,0.02725455123,0.002183761982
Which appears to be a mismatch between 9.0 (TF wants) vs 9.1 Which is most current Nvidia.,Investigation and Exploration,False,90,NONE,False,False,False,0.4594594595,0.1338582677,0.3988269795,0.7272727273,0.3802587264,0.6197412736,0.006558528713,0.00183836987
"But, it contained native stack for only one thread. CODE showed 38 threads.",Investigation and Exploration,True,75,CONTRIBUTOR,False,False,False,0.5416666667,0.1733333333,0.375,0.3728813559,0.03339237467,0.9666076253,0.01898374244,2.23e-05
"**IGNORE THIS, IT IS INCORRECT**",Social Conversation,False,32,CONTRIBUTOR,True,False,False,0.07462686567,0.07462686567,0.25,0.1734104046,0.004657816202,0.9953421838,0.0006332221901,0.0003635972979
"Actually, the above Docker setup with conda wouldn't have worked anyway for other platforms, it should have been, something along the lines of, I think,CODE",Potential New Issues and Requests,True,156,MEMBER,False,False,False,0.7878787879,0.3823529412,0.4756097561,0.5,0.5427276402,0.4572723598,0.002129547778,0.01188879527
4.         Closer integration with HDF5 anyway,Expected Behaviour,False,46,NONE,False,False,False,0.4666666667,0.1044776119,0.8488210818,1.0,0.7617931948,0.2382068052,0.1736946043,0.06663052939
By also loading CODE during argument setup we'll end up doing it twice if we end up going through a trampoline.,Solution Discussion,True,111,MEMBER,False,False,False,0.3962264151,0.1640625,0.5,0.6111111111,0.04021507893,0.9597849211,0.0001975507147,0.0003594564091
The changes are merged to the 0.20.0 branches.,Action on Issue,False,46,CONTRIBUTOR,True,False,True,0.6153846154,0.1290322581,0.5,0.9957805907,1.0,0.0,0.4337999574,0.0
Thanks for the summary SCREEN_NAME .,Social Conversation,False,36,MEMBER,False,False,False,0.09433962264,0.078125,0.09191176471,0.5,0.0001767079666,0.999823292,0.0007774126438,0.002483571005
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1896551724,1.0,0.07010931617,0.9298906838,0.007222033488,0.1385345903
The change was https://github.com/ibmruntimes/openj9-openjdk-jdk13/commit/4684bdb39f02d0f39c170dab1639d6be0b5dd6d7,Investigation and Exploration,False,114,CONTRIBUTOR,False,False,False,1.0,0.02298850575,1.0,0.5477941176,0.7664674294,0.2335325706,0.0001754195096,7.18e-05
"If you want to investigate more, I will do my best to provide what I can to help.",Contribution and Commitment,False,81,NONE,True,False,False,0.5,0.1818181818,0.8571428571,0.5228070175,0.1973084735,0.8026915265,0.001977734278,0.003898730278
"Java 11 support for Eclipse 4.9 from the Eclipse marketplace
6) created a demo spring boot project and ran it via jdk8 (Hotspot) as as ""Spring boot app""
7) downloaded the OpenJ9.zip from https://github.com/spring-projects/sts4/files/2578527/OpenJ9.zip
8) imported OpenJ9.zip as an existing project and set up its JRE to jdk11 (OpenJ9) and changed pom.xml to from 1.8 to 11
9) started the OpenJ9 project as ""Spring boot app""

![image] URL 

After switching back and forth between the demo and OpenJ9, I didn't detect any crash in the Eclipse IDE.",Bug Reproduction,False,553,CONTRIBUTOR,False,False,False,1.0,0.9393939394,1.0,0.1228070175,0.112164474,0.887835526,0.006411425468,0.002601855342
â£Sent from my phone.,Social Conversation,False,21,MEMBER,False,False,False,0.8,0.0625,0.1139705882,0.6666666667,0.0007687859941,0.999231214,0.0001212291825,0.001496651552
"Related to JSR292 tests, 
There are no regressions seen with JRuby related benchmarks.",Investigation and Exploration,False,87,NONE,False,False,False,0.5833333333,0.2089552239,0.3333333333,0.5895953757,0.01191281987,0.9880871801,0.0006655096996,0.0002903767183
"I am wondering, for this test case, how much the increase is.",Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,0.7058823529,0.1935483871,1.0,0.6962025316,0.5111305761,0.4888694239,0.1405385381,0.04003593754
This NPE appeared once out of 35 CODE runs at https://github.com/eclipse-openj9/openj9/issues/13370#issuecomment-925742840,Investigation and Exploration,True,122,MEMBER,True,False,False,0.5789473684,0.1195652174,1.0,0.2327044025,0.3436160955,0.6563839045,0.0001805763305,1.59e-05
"Hm, not sure if that helps -- personally, I am not getting this mysterious issue anymore with  CODE",Solution Discussion,True,99,CONTRIBUTOR,False,False,False,0.8260869565,0.2676056338,0.8625730994,0.25,0.6457035792,0.3542964208,0.0001660605916,0.002055691741
"Well this is getting interesting - I ran (**note:** without CODE):

CODE",Investigation and Exploration,True,74,NONE,True,False,False,0.5833333333,0.102189781,0.4,0.4981412639,0.02107188063,0.9789281194,0.0002397714096,5.22e-05
Maybe a class CODE that takes a tensorflow queue delegate and a python function CODE.,Solution Discussion,True,85,NONE,False,False,False,0.9375,0.223880597,0.9015256588,0.4,0.9153731312,0.08462686876,0.125435556,0.2620248075
"Another thing that confuses me is this:
CODE
It doesn't matter if it's queued or not, startPC is always 0..",Investigation and Exploration,True,109,CONTRIBUTOR,False,False,False,1.0,0.1216931217,0.25,0.4057142857,0.4127998443,0.5872001557,0.002068168866,0.001724646721
It looks like the foreign package is also included in J9 Java 14 builds.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.8235294118,0.2978723404,0.25,0.1115384615,0.05156448094,0.9484355191,0.01613471067,0.05286071254
"The logic reads:
CODE
CODE is 1100 and the number of nodes is 435, so this cannot be it why most of the time we bail out.",Investigation and Exploration,True,123,CONTRIBUTOR,False,False,False,0.75,0.375,0.8,0.4852941176,0.5900416852,0.4099583148,0.488236616,0.0006727318859
**Dockerfile**CODEbuilt withCODE,Potential New Issues and Requests,True,32,MEMBER,False,False,False,0.1052631579,0.02941176471,0.4715447154,1.0,0.5420075121,0.4579924879,0.02112247576,0.002129547778
"The next step is to check when the object pointer value changed, now that we know which routine generates it and what the value should be.",Investigation and Exploration,False,138,CONTRIBUTOR,False,False,False,1.0,0.1375661376,1.0,0.2685714286,0.3261213452,0.6738786548,0.001309936854,0.001859572286
fyi @0xdaryl,Contribution and Commitment,False,12,MEMBER,True,False,False,0.06896551724,0.02173913043,1.0,0.5408805031,0.5013662667,0.4986337333,0.009822949607,0.01749005949
Any advice on how to debug?,Investigation and Exploration,False,27,NONE,True,True,False,0.07894736842,0.075,0.8,0.01960784314,0.0,1.0,0.0,0.0188118453
Currently we disable the maintenance of the table if we disable CHOpts for whatever reason.,Solution Discussion,False,91,CONTRIBUTOR,False,False,False,0.25,0.2419354839,0.6666666667,0.9781420765,0.9848847044,0.01511529561,0.001947660621,0.07932791196
"In the end, TF knows the true version.",Solution Discussion,False,38,NONE,False,False,False,0.3333333333,0.06299212598,0.2639296188,0.6666666667,0.3379076477,0.6620923523,0.001120325967,0.0004436934522
I did not use Tensorflow.js in any way.,Potential New Issues and Requests,False,39,CONTRIBUTOR,False,False,False,0.7272727273,0.1095890411,0.9676724138,1.0,0.9680492001,0.03195079986,0.000479816395,0.007495803266
"so that, I asked for:  https://github.com/eclipse/openj9/issues/8842#issuecomment-601719169",Social Conversation,False,91,CONTRIBUTOR,False,False,False,0.6363636364,0.1129032258,1.0,0.4641350211,0.3026672975,0.6973327025,0.001607271518,0.007592972344
"To the extent possible, I would like to code dataset-independent tensorflow computations.",Expected Behaviour,False,89,NONE,False,False,False,0.2131147541,0.1940298507,0.07489597781,0.2857142857,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
Analogically **fails for low points' values**,Bug Reproduction,False,45,NONE,False,False,False,1.0,0.08450704225,0.2602339181,0.5,0.268566054,0.731433946,0.1743374667,0.0859712289
They do not exist.,Investigation and Exploration,False,18,NONE,True,False,False,0.16,0.05970149254,0.5,0.2905027933,0.00339246652,0.9966075335,0.0001068755452,0.0002499508717
@wraschke's experience indicates this unfortunately isn't the case as the issue has reoccured on CODE.,Investigation and Exploration,True,102,MEMBER,False,False,False,1.0,0.1127819549,0.3333333333,0.7175572519,0.7787428733,0.2212571267,0.0001541057533,0.007400755077
We currently don't call CODE for any other case other than CODE which accepts a long type length value.,Solution Discussion,True,103,CONTRIBUTOR,False,False,False,0.6333333333,0.4042553191,0.6,0.95,0.7315269328,0.2684730672,0.001396795956,0.005094870496
"The local stackslots for this method is:
CODE
and CODE is a valid object:
CODE

If we look at the raw stack:
CODE
We can see that CODE passes in the valid CODE object CODE to CODE which then calls CODE, as seen in the bytecodes:
CODE

Given that the value at the top of the stack is CODE, it means that CODE loaded the valid value CODE to the top of the stack and then CODE updated it (via the return value) with CODE.",Observed Bug Behaviour,True,428,CONTRIBUTOR,False,False,False,1.0,1.0,0.1666666667,0.3745173745,0.3937305493,0.6062694507,0.03688423691,0.3568236584
The work-around is to not use Accelerate.,Workarounds,False,41,MEMBER,False,False,False,0.2857142857,0.0824742268,0.6213017751,0.5,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
@EdeMeijer That's smart.,Social Conversation,False,24,NONE,False,False,False,0.1666666667,0.0447761194,0.8072122053,0.2,0.6149282872,0.3850717128,0.001498933696,0.123123279
-         n_values='auto' (the default),Solution Discussion,False,39,CONTRIBUTOR,True,False,False,0.09302325581,0.0625,0.3419117647,0.25,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
Looking forward to a simple/beautiful/flexible API with minimum number of classes/concepts introduced.,Social Conversation,False,102,NONE,False,False,False,0.75,0.223880597,0.2427184466,0.8571428571,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
Thanks.,Social Conversation,False,7,NONE,False,False,False,0.02564102564,0.01369863014,0.7543103448,1.0,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
Those questions are summarized in https://github.com/scikit-learn/scikit-learn/issues/10521#issuecomment-363851328 and https://github.com/scikit-learn/scikit-learn/issues/10521#issuecomment-364802471.,Solution Discussion,False,200,CONTRIBUTOR,True,False,False,0.1538461538,0.125,0.9632352941,0.8571428571,0.8867760579,0.1132239421,0.6154659147,0.1194514257
My results are very consistent.,Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.1041666667,0.03649635036,1.0,0.3234200743,0.01977002475,0.9802299753,0.003972585721,0.0002223786649
But this is a stupid way since you need to build more than one graph.,Usage,False,69,NONE,False,False,False,0.5172413793,0.05769230769,0.948608137,0.7058823529,0.7995481369,0.2004518631,0.3206669123,0.722664447
"No delta with  -Xnoaot

No AOT |   |  
-- | -- | --
0.24.0 | 6700.33 |  
0.26.0 | 6694.00 | 99.9%",Testing,False,102,NONE,True,False,False,1.0,0.25,1.0,0.1568627451,0.116105529,0.883894471,0.02076334771,0.001196128892
What do you think?,Potential New Issues and Requests,False,18,MEMBER,False,False,False,0.1111111111,0.05882352941,0.2804878049,1.0,0.3543056001,0.6456943999,0.009464004531,0.003096425316
"If the assert fires and we get CODE returns non-null, then it's a problem in AOT record creation.",Solution Discussion,True,97,CONTRIBUTOR,False,False,False,0.5428571429,0.3064516129,0.6666666667,0.5191256831,0.6631878845,0.3368121155,0.0184875191,0.1091893746
"The array doesn't seem to work across different CODE instances if there're OOV tokens, which kind of defeats the purpose of serialization for normal users.",Solution Discussion,True,155,CONTRIBUTOR,False,False,False,1.0,0.4032258065,0.59030837,0.5,0.2194242891,0.7805757109,0.002309046196,0.1481803025
"These are the options in play as you posted above:
CODE
@babsingh : Can you try removing just the CODE from this option list to see if the test still fails?",Solution Discussion,True,158,CONTRIBUTOR,False,False,False,1.0,0.3440860215,0.5,0.4324324324,0.4846584266,0.5153415734,0.02724539507,0.2051611074
@pltrdy 's solution didn't do it for me oddly.,Solution Discussion,False,46,NONE,False,False,False,0.6153846154,0.01157742402,0.5115511551,0.6666666667,0.09847950355,0.9015204965,0.03567836101,0.01542216894
CODE,Usage,True,4,NONE,False,False,False,0.03703703704,0.003846153846,0.7366167024,0.3333333333,0.6158890256,0.3841109744,0.00136237059,0.002840605583
we also didn't chase further the previous failure with RSS set to unlimited.,Solution Discussion,False,76,CONTRIBUTOR,False,False,False,1.0,0.2096774194,0.75,0.3966244726,0.2965277651,0.7034722349,0.003121198774,0.006977483614
Moving forward since I don't see any fix in hand and it's becoming too late to update the 0.19 release.,Task Progress,False,103,CONTRIBUTOR,False,False,False,1.0,0.2197802198,0.5,0.09440559441,0.1003075691,0.8996924309,0.0636581768,0.01551514965
"If before you were using the same cell instance as both the forward and reverse cell of a bidirectional RNN, simply create two instances (one for forward, one for reverse).",Observed Bug Behaviour,False,172,NONE,True,True,False,0.3797468354,0.04341534009,0.02640264026,0.7272727273,0.0,1.0,0.0,0.0005278053632
As quoted from the offical website http://www.tensorflow.org/,Motivation,False,61,NONE,False,False,False,0.2258064516,0.09589041096,0.01939655172,0.4285714286,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
That way we can see if the long compiles are inlining a lot of method handles.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,1.0,0.2388059701,1.0,0.4566473988,0.005340441676,0.9946595583,3.62e-05,4.18e-05
"That's a problem for some usages, yes.",Solution Discussion,False,38,MEMBER,False,False,False,0.2,0.04575163399,0.4469453376,0.1666666667,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
What would be your use cases ?,Motivation,False,30,NONE,False,False,False,0.1818181818,0.08219178082,0.7737068966,1.0,0.7541437327,0.2458562673,0.8203682945,0.005981548758
The root of the problem is that a number of spaCy classes carry large binary data structures.,Investigation and Exploration,False,93,MEMBER,False,False,False,0.3695652174,0.1111111111,0.3890675241,0.3157894737,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
@Lucidyan could you try the same snippet with scikit-learn master and see whether it fails too ?,Investigation and Exploration,False,96,MEMBER,False,False,False,1.0,0.2394366197,0.298245614,1.0,0.2951604364,0.7048395636,0.0448632062,0.1677394642
only one copy of each package etc.,Observed Bug Behaviour,False,34,NONE,False,False,False,0.4666666667,0.07216494845,0.5769230769,0.4,0.8488522439,0.1511477561,0.0002798718168,0.0005769674315
unlikely to succeed.,Social Conversation,False,20,CONTRIBUTOR,False,False,False,0.3333333333,0.04838709677,0.5,0.3670886076,0.2946115703,0.7053884297,0.001306819673,0.000466721312
Crash happens during MemberName.clone().,Observed Bug Behaviour,False,40,CONTRIBUTOR,True,True,False,0.1666666667,0.04301075269,0.2857142857,0.007722007722,0.0,1.0,0.0,0.03406420424
The text it tried to parse isn't relevant: CODE but I did update global CODE in a loop while parsing the doc in the same loop.,Observed Bug Behaviour,True,126,CONTRIBUTOR,False,False,False,1.0,0.2736842105,0.5157894737,0.5,0.1887229939,0.8112770061,0.02657364924,1.151867231e-05
Exploration of other OSR problems with existing JIT optimizations will also be conducted in the background and contributed to the code base when ready.,Investigation and Exploration,False,151,CONTRIBUTOR,False,False,False,0.9230769231,0.2580645161,0.7777777778,0.8725868726,0.8399273015,0.1600726985,0.8852104953,0.004353145679
PR that enables it by default has just been merged.,Action on Issue,False,51,CONTRIBUTOR,False,False,False,1.0,0.06849315068,1.0,0.9944134078,0.9999809852,1.9e-05,0.01208850295,5.74e-05
CODE,Usage,True,4,CONTRIBUTOR,False,False,False,0.05263157895,0.003846153846,0.374732334,1.0,0.3603780918,0.6396219082,0.3882282375,0.06886363297
I can also reproduce the bug with the code sample from ivan-krukov,Bug Reproduction,False,66,NONE,False,False,False,1.0,0.1830985915,0.09356725146,1.0,0.1215728467,0.8784271533,0.0628243198,0.03406414755
"Here is the key architectural section of the code, which now fails with build#105:CODE",Solution Discussion,True,86,NONE,False,False,False,0.6363636364,0.02026049204,0.102310231,0.5,0.005573211817,0.9944267882,0.01544625718,0.04704112764
While we are at it your CPU information (CODE according to Google) and your platform information (CODE) would be great.,Investigation and Exploration,True,119,MEMBER,False,False,False,0.625,0.2816901408,0.6140350877,0.6,0.4572983615,0.5427016385,0.001200894845,0.004204377413
"Passing CODE to the CODE call, and following that with CODE will run your CODE function in parallel and should decently increase the performance.",Usage,True,145,CONTRIBUTOR,True,False,True,24.0,0.3582089552,0.972260749,5.0,1.0,0.0,0.02385162338,0.0
Does the JITServer do something to get vmaccess on the client before attempting to read the globalreference's value?,Investigation and Exploration,False,116,MEMBER,False,False,False,1.0,0.09523809524,1.0,0.6571428571,0.4480458909,0.5519541091,0.001020633264,0.0003017200526
"Re: fusion of SpaCy and gensim APIs, I personally find the current gensim API tree not as straightforward/simple as scikit-learn (don't mistake me, gensim is extremely uniquely useful, e.g LDA, wikicorpus, etc).",Potential New Issues and Requests,False,211,NONE,False,False,False,1.0,0.8947368421,0.8905109489,0.1428571429,0.02374400586,0.9762559941,0.01990868788,0.001584253352
I won't have time the coming two weeks to work on the PR that is blocked by this anyway.,Contribution and Commitment,False,88,CONTRIBUTOR,True,False,False,0.7916666667,0.296875,0.9191176471,0.8333333333,0.2716685717,0.7283314283,0.03415611878,0.7749660924
"But when we call CODE, which calls to CODE with the same parameters used by CODE, we get NULL.",Solution Discussion,True,94,CONTRIBUTOR,False,False,False,0.4418604651,0.3064516129,0.5,0.3661202186,0.6389467947,0.3610532053,0.00359446461,0.01517828221
"booking
CODE

customer
CODE

I have done a handful of runs and they all look good, so will close this.",Action on Issue,True,108,NONE,True,False,False,1.0,0.3,1.0,0.3676470588,0.2983841117,0.7016158883,0.3746116206,0.0007771213165
I will try to see whether it is possible to reproduce it locally.,Task Progress,False,65,CONTRIBUTOR,False,False,False,1.0,0.1313131313,1.0,0.0350877193,0.09311817284,0.9068818272,0.3212156581,0.01583808516
"I have 16GB physical memory and an SSD, so I don't notice paging as much.",Solution Discussion,False,73,NONE,False,False,False,0.7272727273,0.1045751634,0.6655948553,0.3333333333,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Common usage is to load this data and consider it immutable, however you can write to these models, e.g. to change the word vectors, and pickle should not silently dump these changes.",Solution Discussion,False,183,MEMBER,False,False,False,0.6956521739,0.2091503268,0.3922829582,0.3684210526,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"Given zero known failures with default options, the esoteric options needed to cause the problem, and the nature of the test itself (I'd like to believe it's not all that common to have multiple parallel threads continuously adding then removing a static field from one particular class), I'm just worried that we are being more cautious with this defect than any of the other ones we deferred already and holding back our already very late JDK17 release.",Motivation,False,455,CONTRIBUTOR,False,False,False,1.0,0.8387096774,0.75,0.6833976834,0.5547508363,0.4452491637,0.002831223282,0.01376817541
This is unlike other JS => Python solutions out there that suggest simply spawning a python script...,Solution Discussion,False,101,NONE,False,False,False,0.4102564103,0.2191780822,0.7392241379,0.3636363636,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
"(<tf.Tensor 'arg0:0' shape=(?, 43200) dtype=float32>, <tf.Tensor 'arg1:0' shape=(?, 36) dtype=float32>)",Usage,False,103,NONE,False,False,False,0.2295081967,0.2089552239,0.746185853,0.75,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"If there's a WordNet for the language you're targeting, and it's any good, I would prefer to lemmatize to WordNet sense-keys.",Solution Discussion,False,125,MEMBER,False,False,False,0.3666666667,0.3666666667,0.2327586207,0.84,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"Also, enabling sampling verbose options does not cause this to failure to be triggered.",Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.7777777778,0.1538461538,0.2857142857,0.2972027972,0.6101453274,0.3898546726,0.05114946292,0.001708499748
I can reproduce the regression with Xshareclasses using the jdk8u212-b04_openj9-0.14.2 SDK (the one used by @jsimomaa).,Bug Reproduction,False,119,CONTRIBUTOR,False,False,False,1.0,0.1313868613,0.3333333333,0.6951672862,0.0410907045,0.9589092955,0.007829219811,0.0005884545304
**EDIT 2:**,Social Conversation,False,11,NONE,False,False,False,0.0350877193,0.007692307692,0.3319057816,0.6153846154,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
Right.,Social Conversation,False,6,MEMBER,False,False,False,0.0625,0.01470588235,0.1016260163,0.3333333333,0.2704545226,0.7295454774,0.02725455123,0.002183761982
"But, I can no longer reproduce the segfault.",Bug Reproduction,False,44,CONTRIBUTOR,False,False,False,0.4705882353,0.08602150538,0.75,0.1544401544,0.08713752309,0.9128624769,0.002189628546,0.0003096067621
Softlink seems not solve this issue: CODE,Solution Discussion,True,41,NONE,False,False,False,1.0,0.05511811024,0.862170088,0.5,0.8554747501,0.1445252499,0.008876087511,0.06974861068
"This just in, if I repeat the same 'broken' subset that doesn't work(by means of list*10) then it works.",Investigation and Exploration,False,104,NONE,False,False,False,1.0,0.2676056338,0.1140350877,0.4,0.1546493757,0.8453506243,5.56302982e-05,0.007793915485
Got in touch with @andrewcraik offline who suggested a path forward.,Contribution and Commitment,False,68,CONTRIBUTOR,False,False,False,1.0,0.08270676692,0.3333333333,0.8727735369,0.840649683,0.159350317,0.000959379849,0.00441061294
The feature isn't enabled by default,Social Conversation,False,36,CONTRIBUTOR,True,False,False,0.2,0.04109589041,0.5,0.4413407821,0.2378214833,0.7621785167,0.1022989682,0.0004722347161
I don't have a way to test this on OSX at the moment but I may be able to try in the upcoming days.,Contribution and Commitment,False,99,MEMBER,False,False,False,0.7272727273,0.2474226804,0.325443787,1.0,0.8123482033,0.1876517967,3.933462502e-05,5.52274028e-06
"Another one running memoryMXBeanShutdownTest_0
https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_extended.functional_x86-64_mac_Nightly/90
osx1011-x86-2
CODE",Testing,True,161,CONTRIBUTOR,True,False,False,1.0,0.2068965517,1.0,0.04587155963,0.01058730116,0.9894126988,0.05589632154,0.05762474144
Which and how many samples are generated differs per epoch (potentially conditional on past training behavior).,Motivation,False,111,CONTRIBUTOR,False,False,False,0.3333333333,0.2388059701,0.04576976422,0.25,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
"An invalid counter value, which could be due to overflow.",Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.3448275862,0.2127659574,0.5833333333,0.5769230769,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"The particular failure in this case is in jitTest1, which throws from an inlined frame to a catch in the outer frame.",Testing,False,117,CONTRIBUTOR,False,False,False,1.0,0.34375,1.0,0.6595744681,0.9457140687,0.05428593134,0.003207393836,0.007145708007
You can usually determine if forward progress is being made or if one or more threads are stuck waiting.,Investigation and Exploration,False,104,MEMBER,False,False,False,0.475,0.2835820896,1.0,0.05027932961,0.0005659745819,0.9994340254,0.00144281986,0.002326266906
+10000,Social Conversation,False,6,NONE,False,False,False,1.0,0.01369863014,0.2737068966,1.0,0.2263880451,0.7736119549,0.708526811,0.0226086918
Which leaves us with the question of what's going on with the OP's setup.,Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,1.0,0.102189781,1.0,0.4126394052,0.02056711873,0.9794328813,0.0001064270333,7.91e-05
"In a [previous comment](https://github.com/eclipse/openj9/issues/12224#issuecomment-800525378), you can see that I got:
CODE

So you can see that the ""245"" dump turns up two minutes later than the file timestamp indicates that it should.",Investigation and Exploration,True,240,NONE,True,False,False,0.9487179487,0.4933333333,0.75,0.8531073446,0.08562237087,0.9143776291,0.0002356611565,6.35e-05
Agent support for exception catch information,Motivation,False,45,CONTRIBUTOR,True,True,False,0.1276595745,0.09375,0.25,0.007092198582,0.0,1.0,0.0,0.0002548603798
It needs some kind of handle (a GlobalReference or some other GC root) to hold the object for it or you can't map the pointer the server has to a valid object in the client.,Expected Behaviour,False,173,MEMBER,False,False,False,1.0,0.1851851852,0.4,0.8628571429,0.4980531694,0.5019468306,0.09504926646,0.001840119827
This means that you'll get consistent integer encodings between flushings.,Workarounds,False,74,MEMBER,False,False,False,0.303030303,0.1612903226,0.6828193833,0.75,0.288728579,0.711271421,0.1151253204,0.02221386295
Users would then explicitly save the state after they change it.,Solution Discussion,False,64,MEMBER,False,False,False,0.2391304348,0.07189542484,0.4115755627,0.6842105263,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
@jnothman it doesn't seem to be happening only on Python 3.5 so if you could try to reproduce with Python 2.7 (snippet: https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-218365487) that would be great.,Bug Reproduction,False,221,MEMBER,False,False,False,1.0,0.3802816901,0.134502924,1.0,0.1560441576,0.8439558424,0.0003311524965,0.001746127121
"There is a [CODE](https://xml.apache.org/xalan-j/apidocs/javax/xml/transform/TransformerFactory.html#setAttribute(java.lang.String,%20java.lang.Object)) method that can be used to specify settings on the XSLT processor.",Investigation and Exploration,True,219,MEMBER,False,False,False,0.6944444444,0.1879699248,0.4285714286,0.08905852417,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
"We have the nightly builds and debug images that can be downloaded from Adopt, especially for recent builds so reproducing this - locally or on a build farm - seems like the next step to me.",Investigation and Exploration,False,190,MEMBER,False,False,False,1.0,0.5483870968,1.0,0.1092896175,0.1047391146,0.8952608854,4.8e-05,0.0001562891595
"@babsingh Just to be clear: you mean it fails every time with the test's default command line options (which include several esoteric options to try to force problems to be found), correct ?",Social Conversation,False,190,CONTRIBUTOR,False,False,False,1.0,0.3440860215,1.0,0.2972972973,0.3809305973,0.6190694027,0.003566073067,0.004767198096
"And my startup was:

CODE",Investigation and Exploration,True,27,NONE,True,False,False,0.25,0.04379562044,0.6,0.5018587361,0.02107188063,0.9789281194,0.0002397714096,5.22e-05
Additional Language Support,Expected Behaviour,False,27,NONE,True,True,False,0.5,0.05,0.008620689655,0.5,0.0,1.0,0.0,0.01391101632
The segfault is caused by matcher.,Potential New Issues and Requests,False,34,CONTRIBUTOR,False,False,False,0.2222222222,0.06315789474,0.6315789474,0.25,0.1887379296,0.8112620704,7.438390269e-06,4.080282041e-06
"edit: hmm, there is a new issue with this bench.",Potential New Issues and Requests,False,48,NONE,True,False,False,0.2777777778,0.1492537313,0.4285714286,0.782122905,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
"Ultimately, we're trying to dereference something that has been deleted somewhere after the class unload hook is called, and when the class unloader hook is answered.",Solution Discussion,False,166,CONTRIBUTOR,False,False,False,0.962962963,0.2857142857,0.8888888889,0.5699300699,0.8546478187,0.1453521813,0.002043575217,0.001362640241
"Let's play with/without it as well ... for example:
MALLOCOPTIONS=multiheap:4,buckets",Social Conversation,False,86,CONTRIBUTOR,False,False,False,1.0,0.1935483871,1.0,0.1097046414,0.005042930135,0.9949570699,0.007003736688,0.2206716703
"When serializing a Doc (with CODE), would it make sense to include the relevant OOV entries?",Usage,True,92,CONTRIBUTOR,False,False,False,0.5714285714,0.2580645161,0.7136563877,0.75,0.2945274675,0.7054725325,0.02221386295,0.000146521357
"Then you'd run with CODE, binary searching until the problem doesn't occur or you've been able to find a smallish set of methods that cause the failure.",Investigation and Exploration,True,152,MEMBER,False,False,False,0.4833333333,0.2180451128,1.0,0.4376590331,0.4821785449,0.5178214551,0.009122488321,0.000823259913
"Then shortly after when slave also is brought up it may not be able to read them, if master just updated them.",Solution Discussion,False,110,CONTRIBUTOR,False,False,False,0.511627907,0.1506849315,1.0,0.625698324,0.2535003741,0.7464996259,6.29e-05,8.28e-05
I have version 1.1.0-rc2.,Bug Reproduction,False,25,NONE,False,False,False,1.0,0.005788712012,0.5808580858,1.0,0.1542837338,0.8457162662,0.001071629999,0.06612589558
"In my opinion, this would be a very ugly workaround;",Workarounds,False,52,NONE,False,False,False,0.5882352941,0.01447178003,0.2904290429,0.6,0.06821665651,0.9317833435,0.0002230832021,5.707607458e-05
But TF makes it quite easy to place e.g. image loading + preprocessing explicitly on CPU and graph computation on GPU and both is done in parallel.,Solution Discussion,False,147,NONE,False,False,False,0.7027027027,0.3880597015,0.334257975,0.4444444444,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
We need a stop-ship determination on this issue.,Investigation and Exploration,False,48,MEMBER,False,False,False,0.2647058824,0.1914893617,0.5,0.02692307692,0.001674205379,0.9983257946,0.0003091269739,0.001010387239
Or was it a code change?,Task Progress,False,24,NONE,False,False,False,0.3529411765,0.06315789474,0.1789473684,1.0,0.07664535565,0.9233546443,0.1559472602,0.02247209918
bctrl is predicted by the countCache; while bl doesn't need prediction.,Solution Discussion,False,71,CONTRIBUTOR,False,False,False,1.0,0.0859375,1.0,0.6611111111,0.0408289265,0.9591710735,0.0001623351525,0.0570348239
Sorry for dropping the ball on this.,Social Conversation,False,36,NONE,True,False,False,0.3181818182,0.06730769231,1.0,0.2596685083,0.08429996571,0.9157000343,0.002473459958,0.0181710758
-         The class name CODE says what type of data it accepts (categorical data),Motivation,True,82,CONTRIBUTOR,True,True,False,0.28,0.21875,0.01470588235,0.1666666667,0.0,1.0,0.0,0.0007774126438
"This would still require first creating a node C++ add-on, but rather than binding to the C API directly, you can employ ""embedded"" python to run python methods directly from C++.",Solution Discussion,False,179,NONE,False,False,False,0.8205128205,0.4383561644,0.7370689655,0.2727272727,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
"To achieve this, one can use CODE; and please unset the two environment variables when logging.",Investigation and Exploration,True,95,CONTRIBUTOR,False,False,False,0.8888888889,0.2388059701,1.0,0.3910614525,0.004243795073,0.9957562049,0.0005447205204,0.0001206659381
"Once the C/C++ API is compiled to wasm, you just need to ensure the necessary API is exposed.",Solution Discussion,False,93,NONE,False,False,False,0.4523809524,0.2602739726,0.7931034483,0.4444444444,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"@pshipton  we asked xlC team, and they cannot fix it (linking in libc++.a by default), since the same command can be used for xlC build (as opposed to xlclang++ build) which doesn't need libc++.a.

we have to decide if libc++.a should be statically linked in as well (it is not available on most AIX installations).",Solution Discussion,False,317,CONTRIBUTOR,False,False,False,1.0,0.3333333333,1.0,0.8823529412,0.7917571205,0.2082428795,0.002178863875,9.54e-05
This is definitely a feature we want.,Social Conversation,False,37,MEMBER,False,False,False,0.4117647059,0.0985915493,0.02898550725,0.1111111111,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
It applies to all current releases with OSR-enabled and could occur in any release in the field.,Investigation and Exploration,False,96,MEMBER,False,False,False,0.6428571429,0.1935483871,0.4285714286,0.9150579151,0.8498306174,0.1501693826,0.005725859998,0.01048932789
"I was having a discussion with @r30shah and he mentioned that in the past, adding the CODE option does tend to improve the performance.",Solution Discussion,True,135,CONTRIBUTOR,False,False,False,1.0,0.1751824818,0.5,0.3382899628,0.02006648971,0.9799335103,0.0002232068908,8.9e-05
Please open a new issue for related bugs.,Action on Issue,False,41,NONE,False,False,True,8.0,0.08421052632,1.0,2.0,1.0,0.0,1.0,0.0
"CODE resets the ""training"" state modethe estimator (adaptive learning rate for sgd) CODE",Solution Discussion,True,88,MEMBER,False,False,False,0.4642857143,0.1830985915,0.3115942029,0.8,0.03951545499,0.960484545,4.948110811e-06,1.193161472e-05
"The same problem = can't get the build?

Are you able to run the test locally or on a cloud machine to reproduce the issue?",Investigation and Exploration,False,125,MEMBER,False,False,False,0.7352941176,0.4032258065,0.5,0.1038251366,0.1047391146,0.8952608854,4.8e-05,0.0001562891595
"@mldm4 actually, the command CODE probably installed 9.1 for you because you also had that in your system.",Solution Discussion,True,106,NONE,False,False,False,0.5625,0.1417322835,0.5249266862,0.2,0.407848914,0.592151086,0.0230868493,0.04783163312
Please let me know if there is anything I can do to help further.,Contribution and Commitment,False,65,NONE,True,False,False,1.0,0.1866666667,1.0,0.8757062147,0.08570829787,0.9142917021,7.46e-05,0.3961122692
So its a long running process that won't exit until its told to do so.,Expected Behaviour,False,70,NONE,True,False,False,0.8333333333,0.1515151515,0.875,0.2105263158,0.1140182149,0.8859817851,0.003967626759,0.002853124861
"Here's the code path of the #MHd output above:
CODE",Investigation and Exploration,True,52,CONTRIBUTOR,False,False,False,1.0,0.0582010582,1.0,0.2628571429,0.325468759,0.674531241,0.0005752961223,0.001309936854
My question is if anyone has managed to compile from source with cuda-9.1/cuda-9.0 without problems?,Solution Discussion,False,100,NONE,True,False,False,0.4054054054,0.1181102362,0.715542522,1.0,0.5094864043,0.4905135957,0.02165076149,0.03664686068
_**sigh**_.,Social Conversation,False,11,CONTRIBUTOR,False,False,False,0.02173913043,0.01612903226,0.25,0.7103825137,0.9240498584,0.07595014165,0.1265062135,0.2372754111
"How much perf would it cost to flush the compilation queue

I don't know about perf, but I don't think the JIT would be functionally correct if class unloading happened during the compilation.",Investigation and Exploration,False,194,CONTRIBUTOR,False,False,False,0.6538461538,0.3736263736,0.6923076923,0.8041958042,0.86612727,0.13387273,0.03684751755,0.005897328255
"Probably, the data after generation is good that's why the first run passes.",Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.3023255814,0.1397849462,0.3076923077,0.2007722008,0.3402178482,0.6597821518,0.06293969756,0.0116494207
"When computations are done, you can directly grab the next batch on copy the data on the GPU, without waiting for native Python to load new data into memory.",Solution Discussion,False,157,NONE,False,False,False,0.8787878788,0.4328358209,0.3148404993,1.0,0.2822482794,0.7177517206,0.03560947306,0.002163656075
"@cathyzhyi if you comment in this issue, I can assign it to you",Contribution and Commitment,False,63,MEMBER,False,False,False,1.0,0.0977443609,1.0,0.9211195929,0.8721997171,0.1278002829,0.006658022574,0.001833735834
"It looks like there's a significant platform dependency that I don't understand, but I wonder if it relates somehow to the OS or filesystem.",Investigation and Exploration,False,140,CONTRIBUTOR,False,False,False,0.1751824818,0.1751824818,0.75,0.3643122677,0.02016926055,0.9798307394,6.54e-05,5.3e-05
"Confirmed with Windows JDK13 runs
fast (11m)
https://ci.eclipse.org/openj9/job/Test_openjdk13_j9_extended.system_x86-64_windows_Nightly/42
OpenJ9: e60693e
OMR: 54fb162
OpenJDK: 05ba4bd

slow (58m)
https://ci.eclipse.org/openj9/job/Test_openjdk13_j9_extended.system_x86-64_windows_Nightly/43
OpenJ9: 0449f02
OMR: ffb0d98
OpenJDK: 05ba4bd

https://github.com/eclipse/openj9/compare/e60693e...0449f02",Investigation and Exploration,False,410,CONTRIBUTOR,True,False,False,1.0,0.552238806,1.0,0.2658959538,0.005033691081,0.9949663089,4.08e-06,1.72e-05
"Either the webpage instructions should work with the default latest of everything, or it should tell you explicitly to install tensorflow-gpu-1.4 (for example) and not tensorflow-gpu..",Solution Discussion,False,184,NONE,False,False,False,0.7631578947,0.2283464567,0.1202346041,1.0,0.2135778,0.7864222,0.01947000817,0.01902853319
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.0775862069,1.0,0.001575129686,0.9984248703,0.002175772592,1.040192369e-05
I have already extended tf.contrib.layers.batch_norm to allow passing a Tensor or a Placeholder for is_training.,Task Progress,False,112,MEMBER,False,False,False,1.0,0.05769230769,0.1713062099,0.3333333333,0.2177695226,0.7822304774,2.921974455e-05,0.0003125903922
The assert isn't providing any value considering the tracepoint engine is already disabled.,Investigation and Exploration,False,91,CONTRIBUTOR,True,False,False,0.5909090909,0.224137931,0.6,0.9724770642,0.9996774263,0.000322573672,0.005742138251,0.001861415604
I'll have to run more testing.,Testing,False,30,CONTRIBUTOR,True,False,False,0.375,0.09677419355,1.0,0.3248945148,0.2913636962,0.7086363038,0.1726343793,0.001977731559
There could still be an OpenJ9 issue here so I look forward to seeing the next round of test results to see if they continue to point to a problem elsewhere or not...,Investigation and Exploration,False,166,CONTRIBUTOR,False,False,False,1.0,0.4925373134,1.0,0.6648044693,0.1121434343,0.8878565657,0.001260959053,0.002111653916
@AlenBadel could you kindly take a look?,Contribution and Commitment,False,40,CONTRIBUTOR,False,False,False,1.0,0.1489361702,1.0,0.08846153846,0.005668791506,0.9943312085,0.002175337965,0.234046329
"withe the following stack trace:
CODE
The crash is intermittent, 1/10 or so.",Observed Bug Behaviour,True,78,CONTRIBUTOR,True,False,False,1.0,0.07936507937,1.0,0.04571428571,0.130882812,0.869117188,0.2625556309,0.001685327921
I'm only interested in loading graphs created in python and I think I like the minimalism.,Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.7619047619,0.2191780822,0.1422413793,1.0,0.02910588399,0.970894116,0.001724506158,0.1562320249
That is RSS in kbyte.,Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.5555555556,0.08064516129,1.0,0.7215189873,0.5175852387,0.4824147613,0.004416350414,0.2648672615
E.g.: CODE,Usage,True,10,NONE,False,False,False,0.08333333333,0.02985074627,0.9639389736,0.8,0.9970343733,0.002965626714,0.02821456383,0.02385162338
"We're running the same test with the same number of allocations, both with and without -Xint.",Testing,False,93,CONTRIBUTOR,False,False,False,0.6153846154,0.3404255319,0.6666666667,0.5307692308,0.5002525673,0.4997474327,0.2185584951,0.01535044408
I'll say a little bit about what will be required to add new languages.,Solution Discussion,False,71,MEMBER,False,False,False,0.2333333333,0.2333333333,0.1120689655,0.28,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"There is no central documentation for that, right?",Potential New Issues and Requests,False,50,MEMBER,False,False,False,0.5333333333,0.1126760563,0.268115942,0.5,0.03947204023,0.9605279598,6.73785302e-06,6.386923175e-06
"Personally, I'd prefer CODE (or CODE) over CODE - warm start is quite implicit - you have to:: CODECODECODE`# if you forget warm_start=True you nuke your previous estimators - quite implicitest.fit(X, y, n_estimators=2000, warm_start=True) # alternatively - more explicitest.fit_more(X, y, n_estimators=1000)CODE",Solution Discussion,True,312,MEMBER,False,False,False,0.5492957746,0.5492957746,0.2173913043,1.0,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
"With embedded python however, memory accessed by your python script / numpy arrays directly point to your js Float32Array buffers.",Solution Discussion,False,130,NONE,False,False,False,0.4871794872,0.2602739726,0.7435344828,0.5454545455,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
The slowdown is on the second run.,Investigation and Exploration,False,34,NONE,True,False,False,0.7777777778,0.05109489051,0.5,0.56133829,0.02523589078,0.9747641092,2.73e-05,5.42e-05
"This makes it appear as if the thread is running java while the ASGCT stack modification is in place, which is clearly impossible.",Investigation and Exploration,False,130,CONTRIBUTOR,False,False,False,0.8846153846,0.2211538462,0.625,0.1491712707,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
I think it would be better with a official NodeJS API however a community one will be as (if not more) interesting in my opinion.,Expected Behaviour,False,129,NONE,False,False,False,1.0,0.3424657534,0.06896551724,0.5,0.001454209969,0.99854579,0.004261247633,0.002175772592
"The original issue with CODE remains the most concerning, IMO.",Social Conversation,True,62,MEMBER,False,False,False,1.0,0.1470588235,0.4268292683,1.0,0.5172462918,0.4827537082,3.625790768e-05,0.0520553054
Won't the method returned by https://github.com/eclipse/openj9/blob/82275daf0c7145f8ce63878ca43961b8b2e17039/runtime/codert_vm/CodertVMHelpers.cpp#L340 potentially be wrong?,Solution Discussion,False,173,MEMBER,False,False,False,1.0,0.140625,1.0,0.914893617,0.9829695792,0.01703042077,0.0004808686411,0.0003967166289
If only I could reproduce it on mymac.,Bug Reproduction,False,38,MEMBER,False,False,False,0.4705882353,0.1176470588,0.6178861789,0.3333333333,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
If you create a conda environment from scratch you should not have this problem.,Investigation and Exploration,False,80,MEMBER,False,False,False,0.4827586207,0.1971830986,0.9152046784,0.75,0.654594251,0.345405749,0.006016236851,0.8667419106
"Like this?

!",Social Conversation,False,15,NONE,True,False,False,0.09090909091,0.0303030303,0.4285714286,0.5964912281,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
"If this is the bug, then I think it's been around for quite a while",Solution Discussion,False,67,CONTRIBUTOR,False,False,False,0.2112676056,0.1612903226,1.0,0.7142857143,0.5586206714,0.4413793286,0.0008281048336,0.009049469938
"I didn't find a ""non-static field for which PdbScanner would encounter offset type LocIsConstant"".",Investigation and Exploration,False,98,CONTRIBUTOR,False,False,False,1.0,0.1271186441,0.3333333333,0.5090909091,0.4196774374,0.5803225626,0.0001321913482,0.0003516613975
No. Class and Classloader always unloaded together (with exception of Anonymous Class,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.1318681319,0.1318681319,0.5714285714,0.7132867133,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"In fact, we should view the official document of tensorflow ,it give tensorflowâs envirment(include python,gcc,cuda,cudnn,an so on).",Solution Discussion,False,132,NONE,False,False,False,1.0,0.1653543307,0.1524926686,1.0,0.2163869875,0.7836130125,0.01329083736,0.1507278421
"re: https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-984786749

> I didn't see a message for the copy of the object 0x00000007058C31A0.",Investigation and Exploration,False,155,CONTRIBUTOR,False,False,False,0.7894736842,0.1612903226,0.1666666667,0.5714285714,0.55101082,0.44898918,0.003338530748,0.005248394148
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1099137931,1.0,0.02020853713,0.9797914629,0.3323996685,0.05306596701
"Could SpaCy keep an eye on Apache Flink, Apache Spark, and TensorFlow's about-to-be-released distributed processing framework as well?",Potential New Issues and Requests,False,134,NONE,False,False,False,0.6176470588,0.5526315789,0.9197080292,0.7142857143,0.02374400586,0.9762559941,0.01990868788,0.001584253352
In response to a few recent questions:,Usage,False,38,CONTRIBUTOR,True,False,True,7.0,0.1044776119,0.9694868239,3.0,1.0,0.0,0.02385162338,0.0
We'll change the ps option to 'v' and deliver the change to the test.,Solution Discussion,False,69,CONTRIBUTOR,True,False,False,0.6666666667,0.2258064516,0.5,0.7805907173,0.5598736768,0.4401263232,0.008625593247,0.002832414962
"I think @charliegracie was in communication at one point, not sure if we got as far as filing a bug.",Social Conversation,False,100,CONTRIBUTOR,False,False,False,1.0,0.1694915254,0.5,0.2484848485,0.4060559153,0.5939440847,0.026079663,0.03011392996
"Nevertheless, the documentation seams to be out-dated.",Usage,False,54,NONE,False,False,False,0.1403508772,0.03076923077,0.3169164882,0.07692307692,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
-         The CODE remains a single source of truth for the string-to-integer mapping.,Solution Discussion,True,86,MEMBER,False,False,False,0.5769230769,0.2419354839,0.5198237885,0.8823529412,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"As per https://github.com/eclipse/openj9/pull/7499, we are statically linking libc++",Solution Discussion,False,84,CONTRIBUTOR,False,False,False,1.0,0.04597701149,1.0,0.9705882353,0.798179412,0.201820588,0.0002166460475,2.53e-05
This was tagged vm since vm was looking.,Action on Issue,False,40,CONTRIBUTOR,False,False,False,0.6666666667,0.08695652174,0.5,0.2075471698,0.3435330448,0.6564669552,0.001139510487,7.64e-05
"If the API you call is emailing me ""hey, train this model"", well...",Solution Discussion,False,67,MEMBER,False,False,False,0.2166666667,0.2166666667,0.1810344828,0.6,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
I'm trying to get a core file which has more than one thread's context.,Task Progress,False,71,CONTRIBUTOR,False,False,False,0.6086956522,0.1538461538,0.75,0.9160839161,0.8779153049,0.1220846951,0.01532565869,0.003869158807
Do you wanna run CODE on the CODE file in your platform to see which math library sklearn using underneath?,Investigation and Exploration,True,107,NONE,False,False,False,0.9523809524,0.2816901408,0.6549707602,0.6666666667,0.4587221489,0.5412778511,4.884949071e-05,0.0004141827923
"10K runs on AMD64 with no errors - will try some on P.

@gita-omr Look in #3389",Testing,False,81,CONTRIBUTOR,False,False,False,1.0,0.296875,1.0,0.5390070922,0.7972872011,0.2027127989,0.01296902725,0.009819337652
I am running tf 1.2.1 (GPU)  on ubuntu 16.04 lts.,Potential New Issues and Requests,False,49,NONE,False,False,False,0.9166666667,0.01591895803,0.9174917492,0.5,0.3876856611,0.6123143389,0.05261488518,0.05332661552
How did you install scikit-learn?,Investigation and Exploration,False,33,MEMBER,False,False,False,0.1578947368,0.0618556701,0.4467455621,0.6666666667,0.8484749906,0.1515250094,1.519746876e-05,1.184011945e-05
"After the two instructions above, an invalid (assumed TOC) address is fed into register r2.",Investigation and Exploration,False,91,CONTRIBUTOR,True,False,False,0.2777777778,0.1171875,0.5714285714,0.05555555556,0.006753802741,0.9932461973,0.009802165843,0.02838288421
"CODE
Why is this flagged as a JIT issue?",Investigation and Exploration,True,41,CONTRIBUTOR,False,False,False,0.7692307692,0.1724137931,0.3333333333,0.09174311927,0.02062527793,0.9793747221,0.0002366406152,0.0009727685091
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.2478448276,1.0,0.166777232,0.833222768,0.005033424479,0.2582538711
Thank you very much.,Social Conversation,False,20,NONE,False,False,False,0.2105263158,0.01538461538,0.835117773,1.0,0.7056210173,0.2943789827,0.001322497813,0.09017334918
"I agree that adding in n_estimators parameter to the prediction method is nice, but I think you'll agree that it solves a different problem.",Solution Discussion,False,140,CONTRIBUTOR,True,False,False,0.75,0.338028169,0.1014492754,0.9090909091,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
I would like to train a small number of sub-estimators at a time (and wait a relatively short time).,Motivation,False,100,CONTRIBUTOR,True,False,False,0.625,0.2816901408,0.06884057971,0.09090909091,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
"There is sort of an anomaly that Nursery hint is aggressively growing (on restarts), while Tenure hint grows on first restart buy may continue to decline on subsequent ones.",Solution Discussion,False,173,CONTRIBUTOR,False,False,False,0.3815789474,0.198630137,0.6666666667,0.4972067039,0.238226106,0.761773894,0.0005830751334,0.0001494982185
@khelkun answer is rather simple: providing mature JavaScript package that allows easy interaction with Tensorflow opens myriad new possibilities.,Motivation,False,146,NONE,False,False,False,0.5757575758,0.2602739726,0.775862069,0.3333333333,0.7544761605,0.2455238395,0.005981548758,0.1170572737
"-         in fit, if the range is consecutive => fine, no change in behaviour (for all people that now combined LabelEncoder with it, which is a typical use case I think)",Solution Discussion,False,170,CONTRIBUTOR,True,False,False,0.6976744186,0.46875,0.3566176471,0.5833333333,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
"If I'm really the only one running into this, then its probably not worth more of your time right now.",Social Conversation,False,102,NONE,True,False,False,0.5555555556,0.202020202,0.7142857143,0.5157894737,0.1973084735,0.8026915265,0.001977734278,0.003898730278
The culprit data is only generated when CODE is specified.,Investigation and Exploration,True,58,CONTRIBUTOR,False,False,False,0.2325581395,0.1075268817,0.8461538462,0.2277992278,0.3402178482,0.6597821518,0.06293969756,0.0116494207
Sorry are you saying that after excluding CODE the flight service no longer showed a livelock ?,Social Conversation,True,95,CONTRIBUTOR,False,False,False,0.2,0.2,0.1666666667,0.9068627451,0.9666406206,0.03335937939,0.04562398057,0.02395737432
"It still crashes with the latest openj9 and omr changes (including that commit)

Thanks confirming",Social Conversation,False,100,CONTRIBUTOR,False,False,False,1.0,0.1720430108,1.0,0.04633204633,0.01049588996,0.98950411,0.0004923866578,0.0009250900844
But sorry nonetheless for the ambiguity :confused:,Social Conversation,False,50,CONTRIBUTOR,False,False,False,0.2333333333,0.0752688172,1.0,0.1853281853,0.325316952,0.674683048,0.005733320402,0.06293969756
@markehammons thanks for the offer and we may well take you up on that.,Social Conversation,False,71,CONTRIBUTOR,False,False,False,0.35,0.2089552239,0.25,0.7150837989,0.1131600924,0.8868399076,0.0001456610252,0.002266795837
It removes any sense of shared responsibility of the code base and puts all the onus on the JIT to always prove that it isn't at fault.,Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,0.9,0.4655172414,0.5,0.2018348624,0.0208416062,0.9791583938,6.43e-05,5.63e-06
"the reason I resort to pip for some packages is that conda does not have some packages, which actually is very frustrating because I know mixing pip with conda is a bad idea.",Solution Discussion,False,174,NONE,False,False,False,1.0,0.3402061856,0.5443786982,0.5,0.8485344376,0.1514655624,7.298758198e-05,0.0001585701904
I'm doing something like this:CODE,Workarounds,True,34,NONE,False,False,False,0.2857142857,0.08955223881,0.8058252427,1.0,0.6147419151,0.3852580849,0.02902485329,0.001498933696
will that solve it or make it worse?,Solution Discussion,False,36,NONE,False,False,False,0.5714285714,0.0824742268,0.5680473373,1.0,0.8486180736,0.1513819264,6.418695628e-05,0.0003438203814
"Finally, I write a moving average by myself, and I find it worked!",Usage,False,66,NONE,False,False,False,0.4482758621,0.05,0.9507494647,0.7647058824,0.7995481369,0.2004518631,0.3206669123,0.722664447
"And what is a ""dataset"", anyway?",Motivation,False,32,NONE,False,False,False,0.2,0.08955223881,0.1497919556,0.3714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"If an instance method is chosen, does it need to be more general as SCREEN_NAME  noted?",Solution Discussion,False,87,CONTRIBUTOR,True,False,False,0.5862068966,0.2394366197,0.7862318841,0.625,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly_testList_0/125
cmdLineTester_CryptoTest_0",Testing,False,130,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.6146788991,0.8983414046,0.1016585954,0.05033867386,0.07858840073
What do you think?,Social Conversation,False,18,MEMBER,False,False,False,0.1333333333,0.05633802817,0.8695652174,0.9090909091,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
In a case like that there is no benefit to storing the hints.,Solution Discussion,False,61,CONTRIBUTOR,True,False,False,0.65,0.08904109589,0.3333333333,0.7262569832,0.2638115076,0.7361884924,0.001870010978,0.005993563236
"Would love to contribute, any pointers on where to start looking?",Contribution and Commitment,False,65,NONE,True,True,False,0.3142857143,0.2894736842,0.03649635036,1.0,0.0,1.0,0.0,0.003237761122
@dsouzai Neither the print statements got invoked nor the breakpoint was hit before the segfault.,Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.4166666667,0.1612903226,1.0,0.4208494208,0.4782081127,0.5217918873,0.3568236584,0.02724539507
"Suppose you have one feature with values [2, 3, 5, 2].",Investigation and Exploration,False,54,CONTRIBUTOR,True,False,False,0.25,0.171875,0.2463235294,0.2142857143,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"So I tried to put the above logic in code (will push some updates to the PR), and I have one more question for the case of integer data when CODE or CODE is not set (typical case for 'legacy_mode').",Task Progress,True,198,CONTRIBUTOR,True,False,False,0.9090909091,0.625,0.4117647059,0.1904761905,0.07430334202,0.925696658,0.1302436707,0.0003197521392
@jdmcclur any thoughts on that code path and maybe we can instrument it in some way ?,Contribution and Commitment,False,85,CONTRIBUTOR,False,False,False,0.4444444444,0.2,1.0,0.9705882353,0.9705973268,0.02940267322,0.001040994599,0.001009097829
I think the JIT can also change the value if the MutableCallSite#setTarget() method is called.,Solution Discussion,False,94,MEMBER,False,False,False,0.5769230769,0.07936507937,0.5,0.7314285714,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
"As the rookie, I raise some of my opinion.",Social Conversation,False,42,NONE,False,False,False,0.75,0.01302460203,0.6402640264,0.2,0.2038763093,0.7961236907,0.028390304,0.04042101496
2)         Similarity between entities can be kind of fun. Here's what Reddit thinks of Donald Trump: CODE,Potential New Issues and Requests,True,106,MEMBER,False,False,False,0.7826086957,0.4736842105,0.4306569343,0.3571428571,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"Another occurrence https://ci.eclipse.org/openj9/job/Build_JDK15_x86-64_mac_Nightly/71/
there are diagnostic files including a core in https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK15_x86-64_mac_Nightly/71/Build_JDK15_x86-64_mac_Nightly-71-20201006-235858-diagnostics.tar.gz

CODE",Testing,True,321,CONTRIBUTOR,False,False,False,1.0,0.2419354839,1.0,0.2568306011,0.4907337275,0.5092662725,0.01077464908,0.01863655198
harfbuzz is a graphical text shaping engine.,Solution Discussion,False,44,CONTRIBUTOR,False,False,False,0.3181818182,0.04022988506,0.3333333333,0.4485294118,0.766203361,0.233796639,0.000396081896,0.0002229068111
What can I do to solve the problem?,Solution Discussion,False,35,NONE,False,False,False,0.1904761905,0.01157742402,0.2310231023,0.7142857143,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
-         running TSNE on larger datasets (in which case the trustworthiness score gets more stable),Solution Discussion,False,100,MEMBER,False,False,False,0.6,0.2205882353,0.9512195122,0.375,0.6536608828,0.3463391172,0.005246346584,1.0
@keithc-ca fyi https://github.com/eclipse/openj9/issues/1697#issuecomment-398613633,Contribution and Commitment,False,83,CONTRIBUTOR,True,False,False,1.0,0.03389830508,1.0,0.3757575758,0.4158758067,0.5841241933,0.0003752752636,0.001350389027
To clarify the current behaviour a little: CODE is currently interning _all_ strings seen.,Observed Bug Behaviour,True,90,MEMBER,False,False,False,0.35,0.2258064516,0.2731277533,0.02777777778,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"That makes sense, and it's what I was assuming.",Social Conversation,False,47,CONTRIBUTOR,False,False,False,0.2727272727,0.1343283582,0.306518724,0.5,0.2778207232,0.7221792768,0.0007705893431,0.03560947306
"@dartdog after installing cuda-toolkit-9.0, did you face the issue CODE ?",Solution Discussion,True,73,NONE,False,False,False,1.0,0.08661417323,0.4721407625,1.0,0.3887096779,0.6112903221,0.09812724389,0.08170171229
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR/199
cmdLineTester_CryptoTest_0",Testing,False,115,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.4403669725,0.03533771188,0.9646622881,0.06240341433,0.5740636644
"I can't find any of this statement in the post of SCREEN_NAME , but could be a misunderstanding of my side as I'm not a English native speaker.",Social Conversation,False,143,NONE,False,False,False,0.75,0.4029850746,0.3231622746,0.8,0.2825713456,0.7174286544,0.000434665323,0.0005756516163
"If you aren't satisfied with the shuffling it provides, you can do it outside TF: You can load all the filenames into memory then shuffle them in any way you like.",Workarounds,False,163,CONTRIBUTOR,False,False,False,1.0,0.4626865672,0.7780859917,1.0,0.6089674168,0.3910325832,0.0008759473312,0.000271284095
"It is on the list of things to look at

> There is known performance issue related with handling of class unloading related hooks in JIT (particular that one walks tables for each element and create N**2 behaviour).",Investigation and Exploration,False,217,CONTRIBUTOR,False,False,False,1.0,0.4175824176,0.6,0.8286713287,0.8672060445,0.1327939555,0.005897328255,0.0001401924951
"I still have the core file, if you need this, then I'll need to get somewhere to upload it, as it is 66M compressed.",Social Conversation,False,116,NONE,True,False,False,0.4385964912,0.3333333333,0.4285714286,0.1694915254,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
https://github.com/pascalwhoop/tf_openailab_gpu_docker,Solution Discussion,False,54,NONE,False,False,False,0.05,0.007874015748,0.6774193548,0.5,0.5077260474,0.4922739526,0.01267336397,0.02165076149
"So it seems the CODE is slowing things down on my setup..

Here is the javacore.txt file @charliegracie requested:
[javacore.20190529.190736.13032.0001.txt] URL ",Investigation and Exploration,True,164,NONE,True,False,False,1.0,0.1751824818,1.0,0.5092936803,0.02107188063,0.9789281194,0.0002397714096,5.22e-05
Thanks a lot for the info.,Social Conversation,False,26,CONTRIBUTOR,False,False,False,0.8571428571,0.03448275862,0.5,0.2536764706,0.7481451978,0.2518548022,0.001172416587,0.02794923017
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6314655172,1.0,0.6898904437,0.3101095563,0.00144254763,0.01609443176
I do have a lower decay for non-training calls...,Usage,False,49,NONE,False,False,False,0.3448275862,0.03846153846,0.6316916488,0.5,0.5678279549,0.4321720451,0.377195146,0.003001821466
Masking that decision isn't necessarily a good service to them.,Solution Discussion,False,63,MEMBER,False,False,False,0.243902439,0.06535947712,0.2025723473,1.0,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
"I would've thought that the better way to do things was to divide the documents in the master node, and then send a reference to a function like this: CODE",Solution Discussion,True,155,MEMBER,False,False,False,1.0,0.2026143791,0.06109324759,0.9166666667,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"That implements predicting with a subset of the estimators, which is also very helpful.",Motivation,False,87,MEMBER,False,False,False,0.8235294118,0.1971830986,0.03985507246,0.4444444444,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
not sure if I'll have time before that :-/,Social Conversation,False,42,MEMBER,False,False,False,0.6428571429,0.140625,0.7647058824,1.0,0.2514647759,0.7485352241,0.4169661461,0.02304981706
"Sure, we'll take a look as soon as somebody is available.",Contribution and Commitment,False,57,CONTRIBUTOR,False,False,False,1.0,0.0632183908,1.0,0.07352941176,0.7107229471,0.2892770529,0.005841410604,0.0103669977
I believe I installed the right versions from nvidia.,Bug Reproduction,False,53,NONE,False,False,False,0.4285714286,0.07086614173,0.3225806452,0.3636363636,0.3566928644,0.6433071356,0.1351135301,0.002261357628
@lesteve are you saying that Openblas does not cause a freeze anymore?,Investigation and Exploration,False,70,NONE,False,False,False,1.0,0.1237113402,0.7189349112,1.0,0.8504231356,0.1495768644,2.268694029e-05,8.045718754e-06
Working on it.,Task Progress,False,14,CONTRIBUTOR,False,False,False,0.3333333333,0.004341534009,0.6138613861,1.0,0.1826155768,0.8173844232,0.005664414752,0.04210161464
"No Setting |   |  
-- | -- | -- | --
  |   | Startup time in ms | Footprint in kb
  | mean | 12044.2292 | 436334.75
  | CI | 2.57% | 0.54%
  |   |   |  
3 | MALLOCOPTIONS=""multiheap,considersize""
  | mean | 11996.8125",Social Conversation,False,224,NONE,False,False,False,1.0,0.564516129,0.75,0.9831223629,0.923401339,0.07659866095,0.01459087501,0.09372347346
In retrospect it make sense since we are collecting dataset statistics for testing.,Usage,False,83,NONE,False,False,False,0.3714285714,0.05,0.147751606,0.9130434783,0.2164964176,0.7835035824,0.06906725807,0.007698692487
I don't think the currently running JVM is expected to now start using the updated jars is it?,Solution Discussion,False,94,CONTRIBUTOR,False,False,False,0.4736842105,0.1313868613,0.6666666667,0.9330855019,0.07033383167,0.9296661683,0.001788553918,0.0004054165976
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3060344828,1.0,0.3430624486,0.6569375514,0.005883505094,0.02043978005
This PR has not been merged yet.,Action on Issue,False,32,CONTRIBUTOR,False,False,False,0.2333333333,0.0752688172,0.4,0.305019305,0.3820592256,0.6179407744,0.004767198096,5.6e-05
"However, the [CODE implementation] URL  is much simpler, because it doesn't need to support as many different concurrent operations as a CODE.",Solution Discussion,True,142,CONTRIBUTOR,True,False,True,23.0,0.3432835821,0.9805825243,11.0,1.0,0.0,0.02385162338,0.0
Hmmm interesting ...,Social Conversation,False,20,MEMBER,False,False,False,0.06666666667,0.02816901408,0.3771929825,0.25,0.4149662283,0.5850337717,0.0004752100597,0.0002007949321
And dump the information in our assert.,Solution Discussion,False,39,CONTRIBUTOR,False,False,False,0.2,0.1129032258,0.5,0.5136612022,0.6631878845,0.3368121155,0.0184875191,0.1091893746
thanks :),Social Conversation,False,9,NONE,False,False,False,0.1666666667,0.02816901408,0.3304093567,0.8,0.324045968,0.675954032,0.0002259807885,0.0001194252422
"there were some changes to some of the core_rnn files, among a few others.",Solution Discussion,False,74,NONE,False,False,False,1.0,0.02026049204,0.201320132,0.75,0.05313233101,0.946867669,0.03037586316,0.004152670075
"Which it did.
CODE",Investigation and Exploration,True,19,CONTRIBUTOR,False,False,False,0.08474576271,0.02645502646,1.0,0.32,0.3768356435,0.6231643565,0.0999392835,0.03439401659
The relevant portion of the code in my seq2seq_model.py is:CODE,Bug Reproduction,True,63,NONE,False,False,False,0.2619047619,0.01591895803,0.2277227723,0.5714285714,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
"The eu.bioemergences.utils.irods.IRODSServiceBench,listcontents thread and the main thread are the next two biggest, and all others take minimal time.",Investigation and Exploration,False,150,NONE,True,False,False,1.0,0.2985074627,1.0,0.1396648045,0.001850743645,0.9981492564,0.0002284033828,0.0005464443196
<tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl.BasicLSTMCell object at 0x10210d5c0> with a different variable scope than its first use.,Observed Bug Behaviour,False,142,NONE,True,True,False,0.164556962,0.01881331404,0.01320132013,0.3636363636,0.0,1.0,0.0,0.0005278053632
"load r2 with jitTOC
bl helper

On Linux32, no change is required.",Solution Discussion,False,68,CONTRIBUTOR,True,False,False,0.109375,0.109375,0.4210526316,0.9166666667,0.3076445993,0.6923554007,0.1283873506,1.0
"however, this batch of data didn't show that at all.",Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.3225806452,0.1612903226,0.6666666667,0.8776371308,0.7442803236,0.2557196764,0.3314129696,0.1778324879
It raises really interesting questions about why the xjit: options we tried change the behaviour.,Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.7142857143,0.223880597,0.2857142857,0.6089385475,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
That's what caused the bug and is in the fix Alen made a few comments earlier.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.5,0.3404255319,1.0,0.6769230769,0.6412149142,0.3587850858,0.008463782054,0.002100918508
"I see the CODE option being used in the grinder, but it's still running slow.",Investigation and Exploration,True,77,CONTRIBUTOR,True,False,False,0.75,0.223880597,0.3333333333,0.1965317919,0.004997333654,0.9950026663,0.0003635972979,1.94e-05
"@soloice , notice, how in about [comment](https://github.com/tensorflow/tensorflow/issues/1122#issuecomment-235928564) the following parameter is passed inside to the layer for calling batch_norm: >  batch_norm_params = {'is_training': is_training, 'decay': 0.9, 'updates_collections': None}",Usage,False,291,CONTRIBUTOR,False,False,False,0.6444444444,0.1115384615,0.6059957173,0.2,0.5080421357,0.4919578643,0.008986491854,0.001406808951
"I agree that we need such a functionality, however, I'm not sure if CODE is the best solution to the problem that SCREEN_NAME  describes.",Solution Discussion,True,137,MEMBER,False,False,False,0.3521126761,0.3521126761,0.1956521739,0.25,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
Wow three numpy installed I saw two before but never three ...,Social Conversation,False,62,MEMBER,False,False,False,0.4074074074,0.1134020619,0.5295857988,0.2,0.8485070338,0.1514929662,1.996530209e-05,7.298758198e-05
Recall that we're allowing transport to/from numpy arrays.,Solution Discussion,False,58,MEMBER,False,False,False,0.18,0.1451612903,0.5550660793,0.2857142857,0.2188215168,0.7811784832,0.0010422294,0.002309046196
"The jextract problem may be related to #9549, for which we have a PR under review.",Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,0.4210526316,0.3404255319,0.125,0.2038461538,0.1107806812,0.8892193188,0.009602972199,0.01857337902
"I would be happy to help, of course.",Contribution and Commitment,False,36,NONE,False,False,False,0.2,0.1194029851,0.2884882108,1.0,0.2323183319,0.7676816681,1.0,0.07410076703
+1,Social Conversation,False,2,CONTRIBUTOR,False,False,False,0.07142857143,0.01666666667,0.3275862069,0.3333333333,0.1948898442,0.8051101558,0.01700768191,0.005299459514
"I'm guessing it's some part of the way we handle Unsafe that's getting in the way, but I'll defer to Victor on that.",Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,0.696969697,0.3432835821,0.75,0.5251396648,0.005276343682,0.9947236563,0.000261155566,1.47e-05
"The stack trace indicates that we think we are running concurrently, while we actually might be in STW (holding exclusive).",Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,0.8695652174,0.2666666667,0.6666666667,0.6892655367,0.08501734132,0.9149826587,9.19e-06,0.0001249419873
I believe Microsoft has implemented OpenMP in Visual Studio.,Solution Discussion,False,60,NONE,False,False,False,0.6923076923,0.05882352941,0.8713826367,0.8333333333,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
Some of the C helpers (in particular instanceof) are called directly.,Solution Discussion,False,69,CONTRIBUTOR,False,False,False,1.0,0.0859375,1.0,0.45,0.03739957659,0.9626004234,0.0002304042575,0.0001713537721
@Foorack I am willing to contribute it if some people are interested as well.,Contribution and Commitment,False,77,NONE,False,False,False,1.0,0.1917808219,0.07974137931,0.3333333333,0.001575707779,0.9984242922,1.040192369e-05,9.273204313e-05
"Now, the object CODE in CODE is valid:
CODE

At the time of the crash:
CODE
CODE
So that CODE is definitely the problem.",Investigation and Exploration,True,126,CONTRIBUTOR,False,False,False,0.935483871,0.311827957,0.6,0.5019305019,0.5363077428,0.4636922572,0.003129639439,0.0028647951
If you go to the source file in youtensorflow release you can change the method definition you re self.,Solution Discussion,False,103,NONE,False,False,False,1.0,0.02749638205,0.8052805281,1.0,0.2900126696,0.7099873304,0.0002065892845,4.604057575e-05
By that I mean with warm_start you won't refit the first n sub-estimators of an ensemble or the existing splits in a decision tree.,Solution Discussion,False,131,CONTRIBUTOR,True,False,False,0.8620689655,0.3521126761,0.7789855072,0.375,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
"Despite that comment in murmurhash3, I'm not sure the hash value is actually platform dependent: after all this test passes on Appveyor 32bit and 64bit (and it works fine for me on i386) .",Potential New Issues and Requests,False,188,MEMBER,False,False,False,0.4852941176,0.4852941176,0.3170731707,0.3333333333,0.358845198,0.641154802,0.01032797867,0.001373656731
"The real test runs 5 concurrently, but for the purposes of collecting the data we only ran 1.",Testing,False,93,CONTRIBUTOR,True,False,False,0.6428571429,0.2903225806,0.8,0.7383966245,0.5560450992,0.4439549008,0.2648672615,0.0167902992
"Under ABI, the JIT(caller) is required to load r12(PPCLE) or r2(AIX, LinuxX64BE) with the jitTOC, or the target method's address respectively.",Expected Behaviour,False,142,CONTRIBUTOR,True,False,False,0.1640625,0.1640625,0.2105263158,0.8944444444,0.3076445993,0.6923554007,0.1283873506,1.0
Should I open another issue for that segfault? CODE,Potential New Issues and Requests,True,51,CONTRIBUTOR,False,False,False,0.375,0.09473684211,0.7157894737,1.0,0.1887596939,0.8112403061,4.264436363e-05,1.863208436e-05
Does it fail every time?,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,0.1923076923,0.05376344086,0.7142857143,0.2702702703,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
"If so, one way to get the stacktrace is to debug it via Windbg  URL ",Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,1.0,0.1616161616,0.6666666667,0.6736842105,0.2140035771,0.7859964229,0.004786279063,0.001641357342
A sample option looks like CODE,Investigation and Exploration,True,31,MEMBER,True,False,False,0.5,0.0652173913,1.0,0.3396226415,0.3661720137,0.6338279863,0.0002473694342,0.0008075588312
"If we insist that all integers can always be mapped back to strings, there's no solution.",Solution Discussion,False,89,MEMBER,False,False,False,0.4,0.2580645161,0.3612334802,0.5833333333,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
Also hangs with CODE.,Investigation and Exploration,True,21,CONTRIBUTOR,False,False,False,0.1025641026,0.08510638298,0.75,0.2461538462,0.1142105821,0.8857894179,0.0002203960832,0.005424033477
It should do.,Solution Discussion,False,13,MEMBER,False,False,False,0.1666666667,0.03092783505,0.1183431953,0.3333333333,0.009489555966,0.990510444,2.066061112e-06,7.410007642e-06
"That might be a reason to favor option 3 and give up my objection on introducing a temporary keyword CODE (but also not fully sure it is worth it, as this would be the only case\* where such a keyword is actually needed)",Solution Discussion,True,220,CONTRIBUTOR,True,False,False,0.671875,0.671875,0.4852941176,0.6,0.07437602253,0.9256239775,0.0003197521392,0.006398297259
One needs to balance between quick start (small decay) and a longer effective range (large decay).,Usage,False,98,CONTRIBUTOR,False,False,False,0.5,0.06153846154,0.6274089936,1.0,0.5082642878,0.4917357122,0.001406808951,0.377195146
Thank you for your fast reply.,Social Conversation,False,30,NONE,True,False,False,0.1666666667,0.0618556701,0.05029585799,0.09090909091,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
AttributeError: 'NoneType' object has no attribute 'update' in tf=1.3,Potential New Issues and Requests,False,69,NONE,False,False,False,1.0,0.01302460203,0.9636963696,1.0,0.5712118187,0.4287881813,0.2231277001,0.358409507
"Similar to Irwin's observation, I do not see signs of CODE being invoked for the CODE.",Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,0.8421052632,0.1720430108,0.5,0.5791505792,0.55101082,0.44898918,0.003338530748,0.005248394148
"it's easy to reproduce, but I am not sure gdb can provide something useful.

CODE

CODE",Social Conversation,True,91,NONE,False,False,False,1.0,0.24,1.0,0.3502824859,0.02156154817,0.9784384518,9.93e-05,2.65e-05
"agreed, didn't really mean the information was usable or retrievable, rather that the scoring of vectors **not** using POS tagging is influenced by these ""use cases"" and that making this information explicit seems a natural extension.",Motivation,False,234,NONE,True,False,False,1.0,0.9473684211,0.5328467153,0.5,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.02631578947,0.003846153846,0.8993576017,1.0,0.7414423331,0.2585576669,0.006199252888,0.001298350941
#3354 is merged.,Action on Issue,False,16,CONTRIBUTOR,False,False,False,0.6,0.0234375,0.5,0.9833333333,0.9966558697,0.003344130284,1.0,0.00485352044
"If we ""warm started"" ensembles / trees, that would not be the case.",Solution Discussion,False,67,MEMBER,False,False,False,0.4615384615,0.1690140845,0.3369565217,0.3333333333,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
"the real flag for RSS is v:

ps  v",Testing,False,36,CONTRIBUTOR,False,False,False,0.6875,0.1774193548,0.8333333333,0.7637130802,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
@ogrisel I'd have to have a look at the SGD implementation to see the details but what is the difference in what actually happens between warm-starts and partial_fit?,Solution Discussion,False,166,MEMBER,False,False,False,1.0,0.4225352113,0.2789855072,0.2,0.03947792369,0.9605220763,6.386923175e-06,3.579484417e-05
Good.,Social Conversation,False,5,CONTRIBUTOR,False,False,False,0.04,0.008474576271,0.5,0.5393939394,0.4198277578,0.5801722422,0.0001150597199,9.31e-05
You can test for yourself:https://github.com/tensorflow/tensorflow/blob/4addf4b5806cd731949c6582a83f5824599cd1ef/tensorflow/python/ops/batch_norm_benchmark.py,Solution Discussion,False,158,MEMBER,False,False,False,1.0,0.05,0.3490364026,1.0,0.2951601039,0.7048398961,7.578871243e-05,0.02076519409
should I just create a new environment (using conda) and re-install everything there?,Solution Discussion,False,85,NONE,False,False,False,1.0,0.1443298969,0.5650887574,0.6666666667,0.8486180736,0.1513819264,6.418695628e-05,0.0003438203814
(cc SCREEN_NAME  ? ),Contribution and Commitment,False,20,NONE,False,False,False,0.07894736842,0.04109589041,0.2262931034,1.0,0.1037013205,0.8962986795,0.265083066,0.07059453633
This thread has been automatically locked since there has not been any recent activity after it was closed.,Action on Issue,False,107,NONE,False,False,True,18.0,0.4736842105,0.9927007299,1.0,1.0,0.0,1.0,0.0
"you can email my personal address for the, thanks",Investigation and Exploration,False,49,MEMBER,False,False,False,1.0,0.1323529412,0.7642276423,1.0,0.5913376307,0.4086623693,0.0004692809194,5.179701097e-06
"10/10 passed on s390-linux for entire jdk_util_1 suite (Test_grinder/job/Grinder/18363), 

I think larger grinder is required.",Investigation and Exploration,False,128,MEMBER,True,False,False,1.0,0.2065217391,0.5,0.2264150943,0.3436160955,0.6563839045,0.0001805763305,1.59e-05
"Google found http://www.herongyang.com/JVM/Micro-Benchmark-Watch-JIT-Compilation-Log.html
but first we need to be able to successfully run the JVM on some machine.",Investigation and Exploration,False,164,CONTRIBUTOR,False,False,False,1.0,0.1091954023,1.0,0.7977941176,0.7733253242,0.2266746758,6.31e-05,6.85e-06
"However, the CPU utilization remains 0 for all python processes.",Observed Bug Behaviour,False,64,NONE,False,False,False,0.7142857143,0.1030927835,0.174556213,0.8571428571,0.2546091762,0.7453908238,0.1079292843,0.008572782863
"That's almost what I'm looking for but exactly like expected so can be closed once updated in docs, thx.",Action on Issue,False,104,NONE,True,False,False,0.5135135135,0.5,0.05839416058,0.2,0.002926751675,0.9970732483,0.0005265343115,0.0006606771075
The error message is -CODE,Observed Bug Behaviour,True,26,NONE,False,False,False,0.2083333333,0.05154639175,0.201183432,0.8,0.2578934907,0.7421065093,0.000173866989,0.0009051930247
"My goal: POS tag the English language Wikipedia dump (approx 23GB, maybe 3B words).",Motivation,False,83,CONTRIBUTOR,False,False,False,0.5769230769,0.09803921569,0.5337620579,0.3333333333,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
[1] https://github.com/eclipse/openj9/pull/3463/files#diff-4e3b1a3c145fc0a879cf6bd655b245ffR1336,Solution Discussion,False,96,CONTRIBUTOR,True,False,False,0.06896551724,0.03125,1.0,0.4326241135,0.759681792,0.240318208,0.005380920094,0.001158893425
I agree.,Social Conversation,False,8,CONTRIBUTOR,False,False,False,0.1176470588,0.04255319149,0.5,0.7038461538,0.6436084271,0.3563915729,0.002558884395,0.002369973467
"Google developers implemented a small portion of Tensorflow in Javascript in their [playground] URL , the neural network implementation is [here] URL  and does include [back propagation](https://github.com/tensorflow/playground/blob/master/src/nn.ts#L282).",Motivation,False,256,NONE,False,False,False,0.75,0.4520547945,0.5689655172,1.0,0.6335331717,0.3664668283,0.0006531080173,0.08742750468
We've been focused on shipping the 0.18 release and haven't gotten to the bottom of this yet.,Task Progress,False,93,MEMBER,False,False,False,1.0,0.1353383459,0.5,0.3155216285,0.4050724031,0.5949275969,0.004984524022,1.06e-05
Caffe [DB] URL  is simpler but still usable.,Solution Discussion,False,44,NONE,False,False,False,0.3333333333,0.1343283582,0.2815533981,0.8,0.1079818594,0.8920181406,0.2293928428,1.0
This will be updated when that design has been fleshed out more.,Task Progress,False,64,MEMBER,False,False,False,0.6315789474,0.08759124088,1.0,0.970260223,0.1862210471,0.8137789529,0.170274971,0.002992794434
"I'm fine with 1., and it would not be any more expensive, since autoalready needs to examine the set of labels.",Solution Discussion,False,111,MEMBER,False,False,False,1.0,0.328125,0.5,0.5,0.07583037256,0.9241696274,0.006398297259,0.0001680122564
"I'm attempting to recreate the problem with CODE to track it further, but so far there haven't been any failures with CODE.",Bug Reproduction,True,123,CONTRIBUTOR,True,False,False,1.0,0.3793103448,1.0,0.8990825688,0.9982614946,0.001738505423,0.003302748254,0.002428514487
"As far as I understand it, CODE preserves a 1:1 mapping, which is not sufficient for our use case.",Motivation,True,98,CONTRIBUTOR,False,False,False,0.4130434783,0.2835820896,0.6643550624,0.3333333333,0.5116443977,0.4883556023,0.04958391229,0.003143434467
"In this situation, we can make CODE work transparently, which is nice.",Solution Discussion,True,70,MEMBER,False,False,False,0.3,0.07843137255,0.8006430868,0.7368421053,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
You would need to use the whole data on each call to CODE.,Solution Discussion,True,58,MEMBER,False,False,False,0.6842105263,0.1830985915,0.1557971014,1.0,0.03661251674,0.9633874833,0.0001586202898,0.0007677994074
"For my use case it seems like CODE could represent a collection of time series, and the CODE would behave like a python iterator/generator and could handle any preprocessing to form batches of examples?",Expected Behaviour,True,202,NONE,False,False,False,0.7954545455,0.5223880597,0.2732316227,1.0,0.07487735986,0.9251226401,0.199242644,0.03685646374
"I'm not actually sure if we should be sniffing for strings in the data,though.",Solution Discussion,False,78,MEMBER,False,False,False,0.7142857143,0.234375,0.3860294118,0.5,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
"If holding back the release is the right thing to do, then we should hold it back.",Solution Discussion,False,82,CONTRIBUTOR,False,False,False,0.2179487179,0.1827956989,0.875,0.6872586873,0.5547508363,0.4452491637,0.002831223282,0.01376817541
Then it will take again a few more restarts for them to converge (assuming the order of options stay same).,Solution Discussion,False,107,CONTRIBUTOR,False,False,False,0.625,0.1369863014,0.5714285714,0.5363128492,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
"If I recall correctly, many of the design decisions for timestamp checking came about from supporting the SCC in development scenarios when you want to be sure you're running the very latest version of the code you just wrote.",Solution Discussion,False,226,MEMBER,False,False,False,1.0,0.2846715328,1.0,0.9033457249,0.06855807269,0.9314419273,0.0006646513169,0.000151565347
"When you use slim.batch_norm,be sure to use ""slim.learning.create_train_op"" instead of ""tf.train.GradientDecentOptimizer(lr).minimize(loss)"" or other optimizer.",Usage,False,160,NONE,False,False,False,1.0,0.05384615385,0.9614561028,0.5,0.913665577,0.08633442295,0.722664447,0.02471483102
"So far, it seems like adding the CODE option manages to hide the problem.",Solution Discussion,True,73,MEMBER,False,False,False,0.25,0.152173913,1.0,0.8742138365,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
"If you're not worried about development effort, then actually serialization sounds like the best option.",Solution Discussion,False,104,NONE,False,False,False,0.3488372093,0.09803921569,0.2186495177,0.2631578947,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
Yes the fix was merged and this issue can be closed.,Action on Issue,False,52,MEMBER,False,False,True,1.0,0.1195652174,1.0,1.0,1.0,0.0,1.83e-05,0.0
"It manifests itself when CODE calls are transformed to allocations by the JIT and an OSR is subsequently provoked during these ""artificial"" allocations.",Investigation and Exploration,True,152,CONTRIBUTOR,False,False,False,0.8846153846,0.247311828,0.4444444444,0.861003861,0.8399273015,0.1600726985,0.8852104953,0.004353145679
@geovedi do you have a fork or branch i can check out?,Task Progress,False,54,NONE,False,False,False,1.0,0.2,0.75,1.0,0.4491181279,0.5508818721,0.003118709101,0.04109506146
"@pshipton  sure, that is certainly better, on the assumption that system testing can be reset.",Social Conversation,False,94,CONTRIBUTOR,False,False,False,1.0,0.2580645161,0.25,0.5780590717,0.4802647602,0.5197352398,0.003640426233,0.003806695701
The JIT waits until the GC issues the class loader unload hook to do any clean up.,Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,0.6296296296,0.1868131868,0.2222222222,0.548951049,0.8546478187,0.1453521813,0.002043575217,0.001362640241
"-  VM_createMethodHandleArchetypeSpecimen is called here on the server (wrappedCompile)

CODE

Code Path on JITClient
- vm calls CODE
- leads to CODE
- which leads to CODE
- leads to CODE
- leads to CODE
- leads to CODE
- then one of the compilation thread pop it off the compilation queue and initiate a remote compilation.",Investigation and Exploration,True,335,CONTRIBUTOR,False,False,False,1.0,0.3121693122,0.1666666667,0.2914285714,0.3768356435,0.6231643565,0.0999392835,0.03439401659
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly_testList_0/51 - osx1013-x86-3
cmdLineTester_CryptoTest_0",Testing,False,145,CONTRIBUTOR,True,False,False,1.0,0.1034482759,1.0,0.5229357798,0.7464641784,0.2535358216,0.1023406456,0.03333540361
Here's a minimal example that now reproduces this issue:CODE,Bug Reproduction,True,60,NONE,False,False,False,0.3125,0.1408450704,0.9298245614,0.5,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
I don't see how the proposed change would help with the missing values that much.,Motivation,False,81,MEMBER,False,False,False,1.0,0.234375,0.6102941176,0.3333333333,0.1225315788,0.8774684212,7.444610875e-05,0.0001733007777
"JDK8 Having **-Xint** right before -cp, we get failures https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/4944
CODE

JDK8 Removing JIT completely, still get failures https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/4946/
CODE

JDK11 works perfectly fine with the same command https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/4947/
CODE",Bug Reproduction,True,368,CONTRIBUTOR,False,False,False,1.0,0.6034482759,0.5,0.6880733945,0.9927545584,0.007245441552,0.02651069351,0.006864019174
"Below is my code, it only works when CODE CODE",Observed Bug Behaviour,True,46,NONE,False,False,False,1.0,0.1030927835,0.949704142,1.0,0.9995643962,0.0004356038077,0.0002286970723,0.00109431708
CODE fixes the issue.,Solution Discussion,True,21,NONE,True,False,False,1.0,0.05970149254,1.0,0.1955307263,0.002453570813,0.9975464292,0.0001387658288,0.0002146129899
Peter just discussed with me.,Social Conversation,False,29,CONTRIBUTOR,False,False,False,0.1515151515,0.03649635036,0.2,0.9739776952,0.1882122667,0.8117877333,0.002992794434,1.0
For reference here are some stats from one JVM.,Investigation and Exploration,False,47,CONTRIBUTOR,True,False,False,0.2727272727,0.1451612903,0.3333333333,0.6497890295,0.4821513057,0.5178486943,0.002228594265,0.0007234180335
"I installed master, the code snippet runs cleanly now.",Solution Discussion,False,54,NONE,False,False,False,1.0,0.1267605634,0.2339181287,1.0,0.1787439166,0.8212560834,0.0009277251719,0.2064171901
"2)         If it is such a fundamental way how spaCy works, maybe, there are some more clever workarounds to prevent such memory leaks?",Workarounds,False,135,NONE,False,False,False,0.6486486486,0.3870967742,0.8634361233,0.8888888889,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
Any ideas?,Social Conversation,False,10,NONE,True,False,False,0.09523809524,0.01503759398,0.6666666667,0.0534351145,0.0002110051991,0.9997889948,0.0001643249677,0.0008114056243
Then there will only be one jvm.dll in a given build.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.3928571429,0.09322033898,1.0,0.7515151515,0.554332487,0.445667513,0.001135549147,0.0236395635
I was looking at the code executed prior to the crash.,Investigation and Exploration,False,54,CONTRIBUTOR,False,False,False,0.3666666667,0.1208791209,0.3333333333,0.3636363636,0.7687454681,0.2312545319,0.8023255008,0.03674198804
If it is still slow then there is likely some sort of issue with how the file is being read on your system.,Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,0.9583333333,0.1678832117,1.0,0.5724907063,0.02527198456,0.9747280154,5.42e-05,0.0001395560709
"It's too late to put any fixes into the 0.20.0 release, moving forward.",Action on Issue,False,71,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.9821882952,0.9568403491,0.04315965092,0.03518393768,0.2148438586
"Looking into the assembly:
CODE

As Dmitri has pointed out, It became obvious that the seg fault happens at:
CODE
Specifically the segfault happens while fetching:
CODE

Expanding this further, we can see that it's trying to obtain the j9class using the constant pool address.
CODE
As we're iterating through the j9method entries in the HT, the entry that we see the segfault looks to be a valid j9method, however the constant pool address is invalid.",Testing,True,461,CONTRIBUTOR,False,False,False,1.0,0.9230769231,0.8333333333,0.2517482517,0.5985521651,0.4014478349,1.0,0.01222678832
Compile time resolution is allowed to fail in general for any reason so it shouldn't be cause to kill the VM.,Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.724137931,0.3387096774,0.8571428571,0.2459016393,0.4886807048,0.5113192952,0.2303004492,0.01077464908
"The old space and new space sizes are only two numbers, but the entire CML is such a long string.",Solution Discussion,False,97,CONTRIBUTOR,False,False,False,0.5555555556,0.1369863014,0.5,0.2625698324,0.0285314246,0.9714685754,0.04266521959,0.0006509267927
Thanks again for bringing this to our attention and for helping with the problem determination.,Social Conversation,False,95,CONTRIBUTOR,False,False,False,0.375,0.223880597,1.0,0.7318435754,0.1131600924,0.8868399076,0.0001456610252,0.002266795837
The size argument represents the size of the memory segment requested.,Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.3548387097,0.2340425532,0.1851851852,0.75,0.6986733294,0.3013266706,0.2919761514,0.1217072968
I'm not sure what 'demo' project this is.,Social Conversation,False,41,NONE,True,False,False,0.4444444444,0.08080808081,0.25,0.1929824561,0.1140182149,0.8859817851,0.003967626759,0.002853124861
Yes.,Social Conversation,False,4,CONTRIBUTOR,False,False,False,0.04761904762,0.02631578947,0.8394160584,0.5,0.005237570315,0.9947624297,0.0006334939121,0.003893704171
Until then we'll have to arrange that no compiles can occur in parallel with CODE.,Solution Discussion,True,82,CONTRIBUTOR,False,False,False,0.2678571429,0.1271186441,1.0,0.5939393939,0.4307180112,0.5692819888,0.006132428413,0.004460705601
I'd like to understand your use case a little better.,Motivation,False,53,CONTRIBUTOR,True,False,False,0.2340425532,0.1641791045,0.5214979196,0.1071428571,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"As part of the TOC optimization work I'm doing in the VM, the jitTOC will be stored in the TOC slot in the current C stack frame, so the JIT will have the option of encoding the r2 load on the old ABI platforms as either potentially multiple instructions to load the compile-time constant, or a single instruction to fetch it from r1 (the offset will be CODE).",Solution Discussion,True,360,CONTRIBUTOR,False,False,False,1.0,0.5390625,1.0,0.7555555556,0.08368699722,0.9163130028,0.002348920944,0.0001223955515
These log files may have names like CODE.,Investigation and Exploration,True,41,CONTRIBUTOR,False,False,False,0.4444444444,0.1194029851,1.0,0.2849162011,0.003350542477,0.9966494575,0.0004628400625,0.0001068755452
VM build failure - VMState: 0x00050080 or 0x000501ff,Investigation and Exploration,False,52,NONE,True,True,False,0.3333333333,0.1129032258,0.5,0.005464480874,0.0,1.0,0.0,0.003289514691
"Isn't this what we want to abstract away behind an interface so we can implement different ways of holding the vectors in memory, i.e. local vs central?",Solution Discussion,False,152,NONE,True,False,False,0.75,0.7105263158,0.5182481752,0.25,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
"For the record, can you post the output of this snippet: CODE",Investigation and Exploration,True,61,MEMBER,False,False,False,0.2926829268,0.1690140845,0.4239766082,0.4,0.4154346398,0.5845653602,0.001838152366,0.0002081292748
Yes this should be fixed - closing - please reopen if further issues are seen once the update has been picked up.,Action on Issue,False,113,CONTRIBUTOR,False,False,False,1.0,0.1503759398,1.0,0.9923664122,0.9943299808,0.00567001925,0.000403454585,0.03182672137
"conv1 = tf.nn.relu(batch_norm_layer(conv2d_stride2_valid(data, W_conv1) + b_conv1, train_phase, scope=""conv1""))",Usage,False,111,NONE,False,False,False,0.1714285714,0.02307692308,0.1370449679,0.6956521739,0.2164964176,0.7835035824,0.06906725807,0.007698692487
I will rerun the latter with a build prior to this change.,Task Progress,False,58,MEMBER,False,False,False,0.2,0.1791044776,1.0,0.7283236994,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
Similar to what yazabazra is asking above:,Social Conversation,False,42,NONE,False,False,False,0.1891891892,0.05511811024,0.3782991202,0.09090909091,0.3802587264,0.6197412736,0.006558528713,0.00183836987
It seems the problem is specific to JDK8.,Investigation and Exploration,False,41,CONTRIBUTOR,False,False,False,0.6153846154,0.1379310345,1.0,0.6605504587,0.9311896043,0.06881039571,0.0007046806361,0.3152815591
"Yes, looks like that from the Alen’s Investigation above.",Social Conversation,False,57,CONTRIBUTOR,False,False,False,1.0,0.078125,0.3333333333,0.3166666667,0.03688589167,0.9631141083,0.0004075557136,8.8e-05
And the output ofCODEis CODE,Bug Reproduction,True,28,NONE,False,False,False,0.15625,0.07042253521,0.932748538,0.625,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"That way, the warning will also go away",Solution Discussion,False,39,CONTRIBUTOR,True,False,False,0.1818181818,0.125,0.4448529412,0.619047619,0.07430334202,0.925696658,0.1302436707,0.0003197521392
*         setting a timeout on the CODE of the training op and assuming that a timeout is due to the queue being exhausted (but the network connection might be down or our workers might be too slow),Workarounds,True,198,CONTRIBUTOR,False,False,False,0.6607142857,0.552238806,0.8904299584,0.6923076923,0.8997769167,0.1002230833,0.0385452454,0.125435556
and I just need to flesh out the details to make it real.,Task Progress,False,57,CONTRIBUTOR,False,False,False,0.40625,0.1940298507,0.25,0.8882681564,0.3165978639,0.6834021361,0.4477852629,0.1312948834
So it looks like it can happen if we fail to compile-time resolve the defining class of a field.,Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.6896551724,0.3225806452,0.1428571429,0.218579235,0.4886807048,0.5113192952,0.2303004492,0.01077464908
Is CODE world writable?,Investigation and Exploration,True,23,MEMBER,False,False,False,0.2857142857,0.03007518797,0.5,0.2519083969,0.2206780693,0.7793219307,0.003175723071,0.005021721962
I have CUDA 8.0 and Tensorflow 1.3.,Bug Reproduction,False,35,NONE,False,False,False,0.3888888889,0.05511811024,0.1260997067,0.5,0.2151249515,0.7848750485,0.01902853319,0.002231038575
"The tracepoint here may be of use:
https://github.com/eclipse/openj9/blob/fcb6d3f438eedd4c13116b4a04e13b246162070f/runtime/vm/createramclass.cpp#L2557-L2558",Investigation and Exploration,False,157,CONTRIBUTOR,False,False,False,1.0,0.0989010989,1.0,0.8811188811,0.8690000566,0.1309999434,0.0001710040325,0.0003289131615
We should really think about the organization of the docs.,Potential New Issues and Requests,False,58,MEMBER,False,False,False,0.6666666667,0.1408450704,0.2717391304,0.75,0.03947204023,0.9605279598,6.73785302e-06,6.386923175e-06
"then your code could just load data in Python and stuff it onto the queue in parallel, while the model sits totally separate from all of that.",Solution Discussion,False,142,NONE,False,False,False,0.7714285714,0.4029850746,0.2122052705,1.0,0.04335363766,0.9566463623,0.005164577321,0.043809073
Just got confused by this problem last week and wasted 3 days of training...,Social Conversation,False,76,NONE,False,False,False,0.7,0.05384615385,0.7109207709,0.5,0.5972872705,0.4027127295,0.1430218228,0.09912504113
"What I did is:
1) started demo2",Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.170212766,0.08080808081,0.75,0.3894736842,0.1199922694,0.8800077306,0.001815624911,0.003294872886
So installing Spacy on all the machines and just packaging the data to be lazy-loaded seems the easiest solution to me.,Solution Discussion,False,119,NONE,False,False,False,0.3859649123,0.1437908497,0.4823151125,0.8571428571,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
"To run it:

CODE",Investigation and Exploration,True,18,CONTRIBUTOR,False,False,False,0.2631578947,0.078125,1.0,0.1914893617,0.01413138559,0.9858686144,0.06695374525,0.5770832432
I see OOMs which aren't just a failure to allocate threads.,Investigation and Exploration,False,59,CONTRIBUTOR,True,False,False,0.7333333333,0.1774193548,0.6,0.6033755274,0.4808175087,0.5191824913,0.003806695701,0.001055956968
"I agree with @0xdaryl 's analysis and suggested course of action, which suggests this issue can be removed from 0.29.1's milestone blockers https://github.com/eclipse-openj9/openj9/milestone/32 .",Social Conversation,False,195,CONTRIBUTOR,False,False,False,1.0,0.2365591398,0.3333333333,0.8841698842,0.8409579034,0.1590420966,0.004353145679,0.0215829485
"As above, if I use nlp(text) everything is fine.",Investigation and Exploration,False,48,NONE,False,False,False,0.3,0.09473684211,0.2315789474,1.0,0.08711286573,0.9128871343,0.02247209918,0.04915356896
CODE,Solution Discussion,True,4,MEMBER,False,False,False,0.0303030303,0.01369863014,0.9224137931,0.6111111111,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"https://github.com/eclipse/openj9/pull/3368 changes the VM to always use the stack map approach, obviating the need for bytecode PC information in the JIT handler data completely.",Solution Discussion,False,179,CONTRIBUTOR,False,False,False,0.375,0.375,0.4545454545,0.1063829787,0.000716727624,0.9992832724,0.003714710253,0.00734286415
"The real kicker is that after excluding CODE I still see a livelock, but on the customer service which is running a HotSpot JVM.",Investigation and Exploration,True,128,CONTRIBUTOR,False,False,False,1.0,0.3,1.0,0.9019607843,0.959419322,0.04058067795,0.01999637537,0.04562398057
"If JIT-ed code calls C code directly (JNI code in essence), we do set r12 (on LE) to the global entry.",Investigation and Exploration,False,102,CONTRIBUTOR,False,False,False,1.0,0.171875,1.0,0.3944444444,0.03701179774,0.9629882023,2e-05,4.38e-05
"It will probably be nice to give you a web API, so you can run things.",Solution Discussion,False,70,MEMBER,False,False,False,0.2666666667,0.2666666667,0.1724137931,0.56,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"In particular, I don't think a ""regularization path for alpha"" makes sense in the SGD setting.",Solution Discussion,False,94,MEMBER,False,False,False,0.5517241379,0.2253521127,0.5724637681,0.3333333333,0.04267891418,0.9573210858,8.738153135e-06,0.0006227250095
"Does it fail with the same setNativeOutOfMemoryError issue?

To summarize:

**Running the test as-is (Without Overriding JVM Options) on a resource constraint system**
- The test will fail with the segmentation fault we're seeing.",Investigation and Exploration,False,235,CONTRIBUTOR,False,False,False,1.0,0.7872340426,0.1,0.4346153846,0.3704340031,0.6295659969,0.007316005049,0.001912007579
run:   sedmgr     to see,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,0.75,0.03448275862,1.0,0.8382352941,0.7733531053,0.2266468947,8.27e-06,2e-05
This makes average usage of Spark etc really problematic.,Solution Discussion,False,57,MEMBER,False,False,False,0.1956521739,0.05882352941,0.4019292605,0.5263157895,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"Observed in latest JDK17 CODE CODE release build CODE (CODE)
CODECODEmain' threw exception: java.lang.BootstrapMethodError: bootstrap method initialization exception

21:58:17  TEST RESULT: Failed.",Investigation and Exploration,True,200,MEMBER,True,False,False,0.8965517241,0.2826086957,0.2,0.5157232704,0.5013662667,0.4986337333,0.009822949607,0.01749005949
"but this still wouldn't help unless someone has access to non amd64 platforms and is able to run it there, using the [appropriate Docker Debian image](https://github.com/docker-library/official-images#architectures-other-than-amd64) ...",Potential New Issues and Requests,False,236,MEMBER,False,False,False,1.0,0.4852941176,0.4796747967,1.0,0.5427276402,0.4572723598,0.002129547778,0.01188879527
"Keeping in mind the structure of DLTTracking
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationRuntime.hpp#L316-L329
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationThread.cpp#L12653
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationThread.cpp#L12712

Any method added to the table has been requested a DLT.",Investigation and Exploration,False,512,CONTRIBUTOR,False,False,False,0.4901960784,0.2747252747,0.3333333333,0.4335664336,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"If it's a 4D tensor coming from a convolution, it will normalize over the three first dimensions (batch, width, depth), and thus perform per-feature normalization.",Solution Discussion,False,163,MEMBER,False,False,False,1.0,0.1,0.3618843683,0.75,0.2990721664,0.7009278336,0.004008482248,0.3882282375
Thanks.,Social Conversation,False,7,MEMBER,False,False,False,0.0243902439,0.006535947712,0.1607717042,0.07142857143,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
"I see another problem in the output of that run:

00:40:53          at com.ibm.oti.jvmtests.GetNanoTimeAdjustment.test_LowerBound(GetNanoTimeAdjustment.java:139)
00:40:53          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:40:53          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
00:40:53          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:40:53          at com.ibm.oti.jvmtests.AutoRun.main(AutoRun.java:34)
00:40:53  
00:40:53  FAILURES!!!
00:40:53  Tests run: 9,  Failures: 0,  Errors:",Observed Bug Behaviour,False,574,CONTRIBUTOR,False,False,False,1.0,1.0,0.5,0.07339449541,0.02058426934,0.9794157307,5.41e-05,0.0002366406152
"Currently batch_norm requires a python boolean, but we are working in adding the option of passing a Tensor.",Task Progress,False,108,MEMBER,False,False,False,1.0,0.06923076923,0.0556745182,1.0,0.1738831205,0.8261168795,0.0009536999958,1.156614889e-05
Sorry my answer is wrong.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.3846153846,0.02645502646,0.3333333333,0.6628571429,0.4481962023,0.5518037977,0.0003017200526,0.0006369645556
"I would recommend circulating a proposed implementation on the discuss mailing list early on, so that a consensus about where such API might live (in repo / off repo / in 'contrib' directory) can be reached ahead of time.",Solution Discussion,False,221,MEMBER,False,False,False,1.0,0.5068493151,0.0625,1.0,0.001217388868,0.9987826111,0.006994519071,0.004261247633
I am using Catalina.,Investigation and Exploration,False,20,NONE,True,False,False,0.1818181818,0.03007518797,0.2857142857,0.2595419847,0.2215502762,0.7784497238,0.005021721962,0.0366849359
it says CODEafter using the update that SCREEN_NAME  posted.,Solution Discussion,True,60,NONE,False,False,False,1.0,0.01447178003,0.795379538,0.5,0.2899624105,0.7100375895,0.05776988707,0.0002065892845
"You'll need to double check that the two CODE op you created share the same scope, otherwise they won't share the underlying mean/variance statistics.",Usage,True,150,CONTRIBUTOR,False,False,False,1.0,0.09615384615,0.04282655246,0.75,0.1735438522,0.8264561478,0.0001056172017,5.01199785e-05
I'm trying to think if we can verify if the pointer was ever valid or not...,Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.6666666667,0.1758241758,1.0,0.8776223776,0.8689687756,0.1310312244,0.001217055727,0.0001710040325
"Unless proven, there is no guarantee that during the execution of each of these GC hooks that the the class, or it's methods will be alive until class unloading, where currently the tables are being cleaned up.",Investigation and Exploration,False,210,CONTRIBUTOR,False,False,False,1.0,0.4065934066,0.6,0.493006993,0.8536703555,0.1463296445,0.2634355634,0.0006108387286
"-         constructor: CODE (optional), CODE (>=0), a list CODE of fitted estimators or a forest (optional).",Solution Discussion,True,108,MEMBER,False,False,False,0.5333333333,0.2253521127,0.8514492754,0.6818181818,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"Hi, I am using Tensorflow r1.0 using GPU built using source.",Bug Reproduction,False,60,NONE,False,False,False,0.2619047619,0.01591895803,0.2178217822,0.1428571429,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
The other difference is the handling of unseen categories.,Solution Discussion,False,58,CONTRIBUTOR,True,False,False,0.2045454545,0.140625,0.2757352941,0.7857142857,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"@jdmcclur Did you build the Liberty containers yourself, or did you use Liberty images published on Docker Hub?",Usage,False,111,CONTRIBUTOR,False,False,False,0.72,0.225,0.3333333333,0.03431372549,0.004949898627,0.9950501014,0.01246148827,0.08811482837
"Main issue:
PPC ABI is not being followed on Linux and AIX when calling VM Helpers from JIT compiled code.",Observed Bug Behaviour,False,107,CONTRIBUTOR,True,False,False,0.1640625,0.1640625,0.05263157895,0.8777777778,0.3076445993,0.6923554007,0.1283873506,1.0
"I will try that too, though I've used it for other JVM options and it appears to pass through fine (or through JAVA_TOOL_OPTIONS).",Solution Discussion,False,130,NONE,True,False,False,1.0,0.1804511278,0.5,0.1246819338,0.006144993941,0.9938550061,0.0006940890429,0.03656966316
"Personally, I'm a very big fan of the CODE method of feeding data into the graph.",Motivation,True,81,NONE,False,False,False,0.5,0.2388059701,0.1262135922,0.2,0.01422300953,0.9857769905,0.003307324671,0.2125437083
"(Also, I do not see the problem with openj9 0.24.0 even with the small amount of Liberty errors).",Investigation and Exploration,False,97,NONE,True,False,False,0.375,0.225,1.0,0.4558823529,0.5115354209,0.4884645791,0.08681141034,0.007489941643
CODE,Solution Discussion,True,4,NONE,False,False,True,1.0,0.007874015748,0.9970674487,2.0,1.0,0.0,0.2966697109,0.0
"However, blang's minimal example works on my Macbook (OSX 10.11.3) where I don't have OpenMP support in place (obviously only in single-thread).",Bug Reproduction,False,144,NONE,False,False,False,1.0,0.2421052632,0.1263157895,0.6666666667,0.004005078259,0.9959949217,0.008598273629,0.1559472602
So what about CODE,Solution Discussion,True,18,MEMBER,False,False,False,0.6666666667,0.05633802817,0.6014492754,0.5,0.04551519476,0.9544848052,0.002306767149,3.860228292e-06
I suspect including CODE is really just affecting the timing or ordering of compilations in such a way that it is making the problem more reproducible.,Investigation and Exploration,True,151,CONTRIBUTOR,False,False,False,1.0,0.2795698925,0.2857142857,0.2586872587,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
I've verified that both these compilations will effectively call PPCPrivateLinkage and generate the proper linkage.,Solution Discussion,False,115,CONTRIBUTOR,True,False,False,0.125,0.125,0.8947368421,0.9666666667,0.3076445993,0.6923554007,0.1283873506,1.0
I have the exact same problem on OSX 10.10.5,Bug Reproduction,False,44,NONE,False,False,False,1.0,0.09278350515,0.2840236686,1.0,0.8083906687,0.1916093313,0.3850825819,0.004286302035
That way we can periodically run through validation data without losing our place int the training set.,Solution Discussion,False,103,NONE,False,False,False,0.6071428571,0.2537313433,0.5880721221,1.0,0.4658107767,0.5341892233,0.02260310577,0.1856733495
I will have an update soon with the summary of the issue from a top-down approach.,Task Progress,False,82,CONTRIBUTOR,False,False,False,1.0,0.3617021277,1.0,0.7076923077,0.6436084271,0.3563915729,0.002558884395,0.002369973467
"In case your problem do not seem to match this description, please post the exact commands you ran to create your conda environment, so we can try to reproduce.",Bug Reproduction,False,160,MEMBER,False,False,False,1.0,0.4084507042,0.918128655,1.0,0.654594251,0.345405749,0.006016236851,0.8667419106
"So yes, please open an issue.",Potential New Issues and Requests,False,29,MEMBER,False,False,False,0.375,0.06315789474,0.7473684211,1.0,0.1887683728,0.8112316272,1.863208436e-05,0.0002408449665
2.         A cache in the CODE,Investigation and Exploration,True,30,MEMBER,False,False,False,0.3043478261,0.1129032258,0.1674008811,0.3333333333,0.02336154952,0.9766384505,0.01526654747,0.6482365618
"The top level build for xlc 16 is https://ci.eclipse.org/openj9/job/Pipeline-Release-Build/79
Test results:
sanity.functional: only a ddr failure
extended.functional: only ddr failures
sanity.system: passed
extended.system: passed",Testing,False,235,CONTRIBUTOR,False,False,False,1.0,0.1666666667,1.0,0.9338235294,0.7951105023,0.2048894977,0.002545177611,0.001665008746
"Use: multicell = rnn.MultiRNNCell([rnn.DropoutWrapper(rnn.GRUCell(INTERNALSIZE),input_keep_prob=pkeep) for _ in range(NLAYERS)], state_is_tuple=False)  Which creates a separate grucell object for each layer.",Solution Discussion,False,207,CONTRIBUTOR,False,False,False,1.0,0.03183791606,0.1122112211,1.0,0.01701737918,0.9829826208,0.04704112764,0.003676957012
@honnibal could we get an update on the current status of this and your thoughts on how best to proceed?,Task Progress,False,104,NONE,True,False,False,0.3225806452,0.3225806452,0.7665198238,0.3333333333,0.3260702381,0.6739297619,0.1206599722,1.0
"Point where it's hanging:
Stack Trace of all three threads

CODE

CODE

CODE

Safe to assume that the second thread is waiting on the third thread, and that thread is hanging somewhere in libc.",Investigation and Exploration,True,202,CONTRIBUTOR,False,False,False,1.0,0.829787234,1.0,0.25,0.1142105821,0.8857894179,0.0002203960832,0.005424033477
That sounds good.,Social Conversation,False,17,NONE,False,False,False,0.1034482759,0.046875,0.8308823529,0.125,0.262961705,0.737038295,0.002558830732,0.003516053103
@yarikoptic I am unable to reproduce the failure on 32bit debian CODE on docker.,Bug Reproduction,True,80,CONTRIBUTOR,False,False,False,0.7777777778,0.2058823529,0.04471544715,0.3333333333,0.01632298172,0.9836770183,0.00144962568,0.1491477665
This seems like the best path forward to me.,Social Conversation,False,44,NONE,False,False,False,0.2142857143,0.1232876712,0.7974137931,0.6666666667,0.7855057516,0.2144942484,0.4412746119,0.2066977323
I am new to this whole SWIG thing but searched around and found this. http://www.swig.org/Doc3.0/Javascript.html,Solution Discussion,False,112,NONE,False,False,False,0.4838709677,0.2054794521,0.02370689655,0.7142857143,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
"When I was still using redshift, I used word2vec and gensim to generate word cluster with CODE.",Solution Discussion,True,95,NONE,False,False,False,0.85,0.2833333333,0.275862069,0.3333333333,0.08236964625,0.9176303537,0.3353511726,0.426740286
but we would need a backtrace to tell the root cause.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,1.0,0.1774193548,1.0,0.04918032787,0.0009310392468,0.9990689608,0.0004165850335,0.110942232
"Yes, Windows Defender but I've turned it off and have verified that the process is not active during the Spring Boot app startup.

> If it does then it feels like some sort of file IO or something that is making shared classes slow

Also made me think of my SSD performanace but I ran couple of benchmarks and the disk seems to be in good shape.",Investigation and Exploration,False,349,NONE,True,False,False,1.0,0.503649635,1.0,0.5464684015,0.02516645846,0.9748335415,8.32e-05,1.9e-05
Good point.,Social Conversation,False,11,CONTRIBUTOR,False,False,False,0.08695652174,0.02985074627,0.09847434119,0.3333333333,0.003774842471,0.9962251575,0.004893293226,0.03692313957
"The problem occurs when running the cmdlinetester Java application, using the JVM.",Bug Reproduction,False,82,CONTRIBUTOR,True,False,False,0.8,0.2068965517,0.6666666667,0.2568807339,0.02084462621,0.9791553738,1.18e-05,4.43e-05
Did a little search on those bullet points.,Social Conversation,False,43,NONE,False,False,False,0.2666666667,0.1095890411,0.3965517241,0.25,0.4752476502,0.5247523498,0.0635462371,0.3197097642
"Maybe it could, but I haven't tried that.",Investigation and Exploration,False,41,NONE,True,False,False,0.1904761905,0.08080808081,0.375,0.6877192982,0.2144667264,0.7855332736,0.001641357342,0.00438505838
With the Catalina OS update the default changed to only be writeable by root.,Investigation and Exploration,False,77,MEMBER,False,False,False,1.0,0.1052631579,1.0,0.2544529262,0.2206780693,0.7793219307,0.003175723071,0.005021721962
The stack walker needs to treat all of the methods in the map.,Solution Discussion,False,62,CONTRIBUTOR,False,False,False,0.619047619,0.203125,1.0,0.9078014184,0.9828827558,0.01711724422,0.000432781777,0.0004808686411
https://github.com/eclipse-openj9/openj9/pull/14007 is reverted temporarily until the build breaks can be fixed.,Workarounds,False,112,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.2983425414,0.1088254552,0.8911745448,0.007726096919,0.00345613271
*Running the test with -Xjit:count=0 on a system with ample resources**,Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,1.0,0.2553191489,0.75,0.4807692308,0.3707829483,0.6292170517,0.001912007579,0.2098027598
"Perhaps this could be compensated with decreasing Tenure age threshold with larger Nursery (initial threshold is always 10, no matter what heap size is), but is sort of a independent issue to investigate.",Solution Discussion,False,204,CONTRIBUTOR,False,False,False,0.4342105263,0.2260273973,1.0,0.5139664804,0.238226106,0.761773894,0.0005830751334,0.0001494982185
"n_jobs=1 works,but takes forever of course (it worked in the previous env as well).",Observed Bug Behaviour,False,83,NONE,False,False,False,1.0,0.1546391753,0.5798816568,0.6,0.8488522439,0.1511477561,0.0002798718168,0.0005769674315
I am wondering whether there is anything different in config/setting during compilation as compared to the JDK generated from AdoptOpenJDK.,Solution Discussion,False,139,CONTRIBUTOR,False,False,False,0.724137931,0.2121212121,1.0,0.9403508772,0.9075428156,0.09245718442,0.008713378481,0.001248242127
-         running the tests several times with different random seeds and make an assertion on the median score.,Solution Discussion,False,112,MEMBER,False,False,False,0.72,0.2647058824,0.9552845528,0.5,0.6536608828,0.3463391172,0.005246346584,1.0
"Tinkering with these command-line options has caused the problem to go into hiding before, so I just want to be sure that hasn't happened by disabling this feature.",Solution Discussion,False,164,CONTRIBUTOR,False,False,False,1.0,0.311827957,1.0,0.7606177606,0.6101357533,0.3898642467,0.007960250968,0.001063107557
Same issue on OS X EI Capitan using Python 3.5,Bug Reproduction,False,46,NONE,False,False,False,1.0,0.1408450704,0.09649122807,1.0,0.1274204357,0.8725795643,0.03406414755,0.1585619872
I faced the same issue when in presence of my own make_Score cost function..my system starts freezing.,Observed Bug Behaviour,False,102,NONE,False,False,False,1.0,0.1958762887,0.2662721893,0.8571428571,0.6343054009,0.3656945991,1.0,0.005493875023
"So that perhaps points in that direction (though I think its strange that it sometimes works and sometimes doesn't, even without me making any changes to my system).",Investigation and Exploration,False,165,NONE,True,False,False,0.7777777778,0.2828282828,0.3571428571,0.498245614,0.1973084735,0.8026915265,0.001977734278,0.003898730278
@winston-li I think you could just use CODE for that.,Usage,True,53,NONE,False,False,False,0.8461538462,0.1641791045,0.7267683773,0.3333333333,0.5768840719,0.4231159281,0.003144961394,0.0003822408168
There is only one subscriber to this hook in JIT code CODE in CODE and it is where crash occur,Investigation and Exploration,True,94,CONTRIBUTOR,False,False,False,0.9090909091,0.2197802198,1.0,0.05244755245,0.003804455496,0.9961955445,0.005933531811,0.005236420778
It will be really helpful if you could let us/me know what is a probable date for a new tutorial.,Task Progress,False,97,NONE,False,False,False,1.0,0.03039073806,0.5709570957,0.6666666667,0.1519966151,0.8480033849,0.02814194594,0.00832954705
"Currently, there are four VM hooks that are used for class unloading, these hooks are invoked by the GC.",Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.6551724138,0.2087912088,0.2,0.5104895105,0.8539779528,0.1460220472,0.001070700924,0.001618376001
"Rerun with

CODE

produced this vlog:

[vlog.20190528.222507.6492.txt] URL ",Investigation and Exploration,True,81,NONE,True,False,False,0.44,0.0802919708,1.0,0.07434944238,0.0005686837121,0.9994313163,0.0002882226271,0.0003971343382
"to destroy the cache, do CODE",Investigation and Exploration,True,29,CONTRIBUTOR,False,False,False,0.1363636364,0.04379562044,1.0,0.0594795539,0.0003769182743,0.9996230817,0.0002111976147,0.0002882226271
Maybe this is some kind of degrees of freedom check run amok?,Investigation and Exploration,False,61,NONE,False,False,False,0.6315789474,0.1690140845,0.1228070175,1.0,0.1546493757,0.8453506243,5.56302982e-05,0.007793915485
"7) in generational configuration, Tenure and Nursery hints are independently maintained.",Solution Discussion,False,88,CONTRIBUTOR,False,False,False,0.1447368421,0.07534246575,0.5555555556,0.4916201117,0.238226106,0.761773894,0.0005830751334,0.0001494982185
"But given that involuntary OSR is only used under debug (FSD compiles), it may be okay to disable such optimizations (performance under debug is anyway not expected to be close to the peak level, presently it is within 25-30% of peak).",Solution Discussion,False,235,CONTRIBUTOR,False,False,False,1.0,0.4516129032,1.0,0.722007722,0.5607631223,0.4392368777,0.009049469938,0.004800769914
"I could imagine adding an CODE method internally, which would allow iterators to specialize their behavior in this case (or fall back to using CODE in a loop).",Solution Discussion,True,159,CONTRIBUTOR,True,False,False,0.5957446809,0.4179104478,0.5339805825,0.4285714286,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Probably we should turn this feature off if user specified any of -Xmns/-Xmnx/-Xmn/-Xmos/-Xmox/-Xmo/-Xms/-Xmx.,Solution Discussion,False,110,CONTRIBUTOR,False,False,False,1.0,0.08904109589,0.5,0.1843575419,0.01381788133,0.9861821187,0.0003613942987,0.001770078156
All five core files have the same backtrace for all threads.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.2444444444,0.1466666667,0.2,0.5649717514,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
"Ok, low cpu would also suggest we're stuck on a lock somewhere.",Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.4285714286,0.1791044776,1.0,0.1173184358,0.001697923746,0.9983020763,5.6e-05,0.0001611752173
"If the the tensorflow version and cuda version are compatible, then check the environment variables i.e. CODEand CODE.",Solution Discussion,True,118,NONE,False,False,False,0.9473684211,0.1417322835,0.2991202346,1.0,0.3428688502,0.6571311498,0.00239742362,0.0004045005306
And thusCODEshould be equivalent to line 804:CODE,Solution Discussion,True,49,NONE,False,False,False,0.1842105263,0.02692307692,0.8672376874,0.5,0.7214324611,0.2785675389,0.0005628859124,0.02303946421
"Just now, I rebased both openj9 and omr repos with the latest changes.",Task Progress,False,70,CONTRIBUTOR,False,False,False,0.7647058824,0.1397849462,0.5,0.1505791506,0.08713752309,0.9128624769,0.002189628546,0.0003096067621
"@kdvolder Can you try using the path: CODE?

Are you seeing any output like this when the segfault occurs?",Investigation and Exploration,True,108,MEMBER,False,False,False,1.0,0.202020202,0.25,0.6175438596,0.2077710739,0.7922289261,0.002877441266,0.004409374785
"However, then we started seeing CODE that https://github.com/eclipse/openj9/issues/8548 is opened for and that https://github.com/eclipse/openj9/pull/8598 supposedly fixes.",Solution Discussion,True,172,NONE,False,False,False,0.7619047619,0.1203007519,0.6,0.7099236641,0.7787161072,0.2212838928,0.2412282351,0.0001541057533
This lets you see different vectors for CODE and CODE.,Motivation,True,54,MEMBER,False,False,False,0.3571428571,0.2631578947,0.1094890511,0.75,0.003440430228,0.9965595698,0.0006606771075,0.0004625994361
Would also be glad to help.,Contribution and Commitment,False,27,CONTRIBUTOR,False,False,False,1.0,0.09677419355,0.2643171806,1.0,0.2105772073,0.7894227927,0.03432994834,0.008337610386
The output to this program would be exactly one gigantic C++ file that talks to [TensorFlow C API] URL  and [Node C++ Addon API] URL  based on [this example] URL .,Solution Discussion,False,163,MEMBER,False,False,False,0.9696969697,0.4383561644,0.9202586207,0.5555555556,0.9204563137,0.0795436863,0.01198832771,0.1095689952
The above PR has been merged.,Action on Issue,False,29,CONTRIBUTOR,False,False,False,0.75,0.1276595745,0.3333333333,0.9846153846,0.8147080379,0.1852919621,0.2393844938,1.0
"I downloaded the java, and it gives:
CODE",Task Progress,True,42,NONE,True,False,False,0.3214285714,0.12,0.5,0.9322033898,0.3683619523,0.6316380477,0.005131592796,0.01360883005
Reverting to TF 1.3 until this is resolved.,Workarounds,False,43,NONE,False,False,False,0.4444444444,0.06299212598,0.1319648094,1.0,0.2151249515,0.7848750485,0.01902853319,0.002231038575
"I might be totally wrong, but I expect the feature of converting to/from numpy to only be used internally?",Solution Discussion,False,106,CONTRIBUTOR,False,False,False,0.8,0.3225806452,0.5859030837,0.3333333333,0.2194242891,0.7805757109,0.002309046196,0.1481803025
It looks like that PR was not copied across correctly to 0.19.1.,Task Progress,False,64,MEMBER,False,False,False,0.4285714286,0.1764705882,0.9796747967,0.25,0.9921128047,0.007887195265,0.0008629382027,1.795629714e-05
"we've definitely favored flexibility over performance with the initial version of the API, but look out for improvements over the coming versions.",Task Progress,False,146,CONTRIBUTOR,True,False,False,0.4893617021,0.3432835821,0.5298196949,0.3214285714,0.4592244679,0.5407755321,0.003916059713,0.008479027653
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1702586207,1.0,0.06137055114,0.9386294489,0.1833290361,0.002434714096
"For failure https://ci.adoptopenjdk.net/view/Test_openjdk/job/Test_openjdk8_j9_sanity.openjdk_ppc64le_linux/148/ the crash occur in the same method as before CODE:
CODE
just from different hook, this time CODE",Bug Reproduction,True,211,CONTRIBUTOR,False,False,False,1.0,0.2527472527,0.2,0.1678321678,0.284435888,0.715564112,0.01329594867,0.3731531372
"As discussed with @fjeremic, to speed up the test to trigger the exception on the JIT side, I will help to reproduce with the option as follows:
CODE and keep trying with CODE if it fails in this way.",Investigation and Exploration,True,201,CONTRIBUTOR,False,False,False,1.0,0.3007518797,1.0,0.5597964377,0.5665174366,0.4334825634,0.0005240413151,0.0302145381
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.03879310345,1.0,0.0003672977931,0.9996327022,0.000502169465,0.0004087734693
"If only one of them is being restarted (more likely slave), hints will be used, but this is not very realistic scenario.",Solution Discussion,False,120,CONTRIBUTOR,False,False,False,0.3384615385,0.1506849315,0.8333333333,0.5921787709,0.253235282,0.746764718,0.002218893623,0.000737706338
"@amueller, CODE already is marked with CODE suggesting perhaps that this assertion is brittle.",Potential New Issues and Requests,True,94,MEMBER,False,False,False,0.5833333333,0.2058823529,0.2317073171,0.3333333333,0.3511052513,0.6488947487,7.769551645e-05,0.009464004531
"If it's 0.14, does it still happen in the current development version?",Investigation and Exploration,False,70,MEMBER,False,False,False,0.6666666667,0.1237113402,0.03550295858,0.5555555556,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
"(for instance if you create a train_model and a valid_model supposed to share tensors, it will fail)",Solution Discussion,False,100,NONE,False,False,False,0.6538461538,0.02460202605,0.4917491749,0.5,0.08979967049,0.9102003295,0.01683649271,0.03567836101
The failure seems to happen randomly.,Bug Reproduction,False,37,NONE,True,False,False,0.1935483871,0.04511278195,0.2857142857,0.1832061069,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
Sorry for the confusion.,Social Conversation,False,24,MEMBER,False,False,False,0.09756097561,0.05970149254,1.0,0.7687861272,0.01724097253,0.9827590275,1.59e-05,1.18e-05
"A)         DON'T DO IT, go for something smaller; or",Solution Discussion,False,52,CONTRIBUTOR,False,False,False,0.3846153846,0.06535947712,0.540192926,0.5555555556,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
"Whatever our recommended workflow is, it should be the obvious and least-effort thing to do.",Solution Discussion,False,92,MEMBER,False,False,False,0.3902439024,0.1045751634,0.1897106109,0.7142857143,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
I was able to read the core file.,Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.3333333333,0.1066666667,0.25,0.3672316384,0.03339237467,0.9666076253,0.01898374244,2.23e-05
"# Java VM: OpenJDK 64-Bit Server VM (13+33, mixed mode, tiered, compressed oops, g1 gc, aix-ppc64)
/# Core dump will be written.",Investigation and Exploration,False,129,CONTRIBUTOR,False,False,False,0.6486486486,0.1379310345,0.5,0.7205882353,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
The title mentions that the CODE.,Investigation and Exploration,True,33,CONTRIBUTOR,False,False,False,0.08,0.08,0.6666666667,0.08474576271,0.00183020417,0.9981697958,0.001144827456,0.0001509806852
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_OMR/772
CODE",Testing,True,70,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.3387978142,0.6382618984,0.3617381016,0.004953063947,0.00359446461
Let me know if any of this is unclear!,Social Conversation,False,38,CONTRIBUTOR,True,False,False,0.1956521739,0.1343283582,0.0693481276,1.0,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
Because the test has not changed in the recent past - so it should not start to time out all on a sudden due to any test issue.,Investigation and Exploration,False,127,CONTRIBUTOR,False,False,False,1.0,0.4029850746,1.0,0.1156069364,0.003349898568,0.9966501014,0.001425190268,2.44e-05
But it looks like these two can be separated out.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.1369863014,0.05291005291,0.3,0.9542857143,0.5018185814,0.4981814186,0.001953523523,1.0
"@nbhuiyan can you pls cherry pick the change for the 0.29.1 release branch, i.e. https://github.com/eclipse-openj9/openj9-omr/tree/vhttps://github.com/eclipse-openj9/openj9-omr/tree/v0.29.1-release-release",Contribution and Commitment,False,205,CONTRIBUTOR,False,False,False,1.0,0.1630434783,1.0,0.9559748428,0.6573848516,0.3426151484,0.05549281815,9.99e-05
Below is what the J9Method reference points to at the point of the crash.,Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,0.2745098039,0.1538461538,0.09523809524,0.4160839161,0.8054811495,0.1945188505,0.1631008731,0.2634355634
This seems important.,Social Conversation,False,21,MEMBER,False,False,False,0.1,0.01153846154,0.4539614561,0.25,0.3808921239,0.6191078761,0.003059753667,0.001631435738
"I don't recall if that was necessary, or simply conveinient.

CODE

This assumes that r2 is already loaded with the jitTOC.",Social Conversation,True,127,CONTRIBUTOR,False,False,False,1.0,0.1796875,1.0,0.3388888889,0.03694655147,0.9630534485,8.8e-05,7.09e-06
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.7176724138,1.0,0.705356003,0.294643997,3.430421643e-05,0.001234509156
Either it does not respect mutex (but must) and code with missed mutex check interfere with hook handler or handlers of different hooks interfere each other.,Investigation and Exploration,False,157,CONTRIBUTOR,False,False,False,0.2857142857,0.2857142857,0.6785714286,0.7237762238,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
This only seems to occur when I have more than 1 bucket.,Potential New Issues and Requests,False,56,NONE,False,False,False,1.0,0.01736613603,0.9207920792,0.75,0.3876856611,0.6123143389,0.05261488518,0.05332661552
"That said, CODE is interpreted, and so is the method it calls:
CODE
namely CODE:
CODE
The checkcast it crashes on happens after the invokespecial to CODE.",Investigation and Exploration,True,158,CONTRIBUTOR,False,False,False,1.0,0.3333333333,0.8,0.5057915058,0.5363077428,0.4636922572,0.003129639439,0.0028647951
We could try to assure that the data provided when warm starting is the same as the original.,Solution Discussion,False,93,MEMBER,False,False,False,0.6923076923,0.2535211268,0.3405797101,0.4444444444,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
"that seemed indicating EAGAIN can happen unpredictably, depending on timing, for pthread_create call.",Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,0.3421052632,0.2096774194,0.125,0.1434599156,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
The app will run in production inside a container so there openJ9 **should** give me a nice boost in terms of performance.,Expected Behaviour,False,122,NONE,True,False,False,1.0,0.1605839416,0.75,0.6802973978,0.02636609455,0.9736339055,9.69e-05,0.01430180553
The first javacore shows CODE,Investigation and Exploration,True,29,CONTRIBUTOR,False,False,False,1.0,0.04807692308,1.0,0.1049723757,0.008318682773,0.9916813172,0.0001986857803,0.0001490711459
"Multiplying X by 1000 will mean at least the pairwise distances are much more distinguished in a float32, which I *think* may help.",Solution Discussion,False,131,MEMBER,False,False,False,0.6388888889,0.3382352941,0.8617886179,1.0,0.6243074007,0.3756925993,0.05176800464,0.02547446062
@andrewcraik Is there something we can add to the code around the assert to make the conditions leading to it easier to diagnose?,Investigation and Exploration,False,129,MEMBER,False,False,False,0.6571428571,0.3709677419,0.5,0.2076502732,0.4447988064,0.5552011936,0.0002184327063,0.2303004492
I still think the windows case is an extreme stress case - you have 5 JVMs all with 3 compile threads loading and compiling methods in 10000 classes with count=1.,Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,1.0,0.4328358209,0.4,0.8728323699,0.01918518568,0.9808148143,1.3e-06,0.0002576922821
"I'll figure this out, thanks.",Social Conversation,False,29,MEMBER,False,False,False,0.3846153846,0.03267973856,0.347266881,1.0,0.01870139123,0.9812986088,0.001404504327,0.00111366228
I was just wondering if adding the function really solved an issue or if we just added another way to do warm starts.,Solution Discussion,False,117,MEMBER,False,False,False,1.0,0.323943662,0.7644927536,0.6666666667,0.07435902202,0.925640978,3.965507246e-06,0.0008481974348
@cathyzhyi might this be related to the AOT issues we have been looking at?,Investigation and Exploration,False,75,CONTRIBUTOR,False,False,False,1.0,0.2258064516,1.0,0.03825136612,0.0008516623191,0.9991483377,0.0002387130853,0.0004165850335
"Warm runs 8.896s,9.672s,9.25s",Social Conversation,False,29,CONTRIBUTOR,False,False,False,0.08333333333,0.02189781022,1.0,0.405204461,0.02049630879,0.9795036912,0.0002559218155,0.0001064270333
"Looking at the code though, I don't know that the fatal assert is necessary - there is a path through the code that could be crafted to avoid the problem",Investigation and Exploration,False,153,CONTRIBUTOR,False,False,False,1.0,0.4677419355,0.4285714286,0.2295081967,0.4886807048,0.5113192952,0.2303004492,0.01077464908
"@andrewcraik here's a reduced version of the bench that still triggers the bug, but doesn't rely on our servers (cept for the build, but that's fine)",Bug Reproduction,False,149,NONE,True,False,False,1.0,0.3880597015,0.5,0.7374301676,0.1140492878,0.8859507122,0.002266795837,0.0009299896227
"Doing some research I found that libblas, liblapack and liblapack_atlas were missing from my /usr/lib/, also I did not see the directory /usr/lib/atlas-base/.",Investigation and Exploration,False,158,NONE,False,False,False,0.9642857143,0.2783505155,0.6715976331,0.8181818182,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
TF 1.0 works but doesn't have devicewrapper api for multiple GPUs.,Usage,False,66,NONE,False,False,False,1.0,0.01591895803,0.5907590759,1.0,0.1703708442,0.8296291558,0.06612589558,0.0413883417
"Since multiheap:18 appeared safe for both java8 and java11, let's settle for that as a fix.",Solution Discussion,False,91,CONTRIBUTOR,False,False,False,0.5714285714,0.2580645161,0.8333333333,0.5400843882,0.4792143262,0.5207856738,0.01177304509,0.003593754102
"I've created a reproducer here (my difficulty has been in providing a sample Java program that is small enough yet reproduces the issue when running with agent loaded, eventually I supplied the Java program in binary form but the source code for the native agent is there):

https://gitlab.com/urisimchoni/agct-crash-demo",Bug Reproduction,False,323,NONE,True,False,False,1.0,0.4903846154,1.0,0.3149171271,0.1316131138,0.8683868862,0.0326248414,0.0007086181756
Did you try searching the file system for CODE?,Investigation and Exploration,True,47,CONTRIBUTOR,False,False,False,1.0,0.06766917293,1.0,0.1984732824,0.01438072849,0.9856192715,0.000475806623,0.01328334366
"@kdvolder , please send it to jincheng@ca.ibm.com if you can.",Social Conversation,False,61,CONTRIBUTOR,False,False,False,1.0,0.09090909091,1.0,0.7964912281,0.589307769,0.410692231,0.002646435418,0.03204496914
[4] make sure CODE ends up with the correct CODE and JDK directory.,Investigation and Exploration,True,67,CONTRIBUTOR,False,False,False,0.3513513514,0.0977443609,1.0,0.5089058524,0.5597074071,0.4402925929,0.000211333354,0.0002117421226
Or do you want these as parameters to CODE?,Solution Discussion,True,43,MEMBER,False,False,False,0.8181818182,0.1267605634,0.6086956522,0.5,0.0455187507,0.9544812493,3.860228292e-06,0.02110253454
"GeneratePluginConfigMBean.generatePluginConfig(GeneratePluginConfigMBean.java:160)
	at com.ibm.ws.webcontainer.osgi.mbeans.",Bug Reproduction,False,124,NONE,False,False,False,0.09090909091,0.03007518797,0.8,0.7684478372,0.796966708,0.203033292,0.02606390197,0.0009716429063
Is this enough or do I need to add the directory CODE to it ?,Solution Discussion,True,61,NONE,False,False,False,1.0,0.1102362205,0.8387096774,1.0,0.748095447,0.251904553,0.1560011388,0.2854442666
"If CODE can be null, it can cause the JIT to think two fields from different classes are actually the same field.",Solution Discussion,True,113,CONTRIBUTOR,False,False,False,0.5,0.3548387097,0.3,0.9071038251,0.9845135933,0.01548640667,0.001320457339,0.001947660621
"Just wanna say that I ran CODE on CODE (I assume this is the t_sne.py compiled file?), it seems like it's indeed using BLAS.",Investigation and Exploration,True,124,NONE,False,False,False,0.8275862069,0.338028169,0.5730994152,0.3333333333,0.4547028327,0.5452971673,0.0006836161022,0.0003054131048
@amicic gentle ping.,Contribution and Commitment,False,20,MEMBER,False,False,False,0.4285714286,0.02054794521,0.5,0.7765363128,0.8995961528,0.1004038472,0.7369047902,0.0001470921313
"adding ""reuse=tf.get_variable_scope().reuse"" to the call where the GRUCell is created doesn't help.",Solution Discussion,False,99,NONE,False,False,False,0.3095238095,0.01881331404,0.2343234323,0.8571428571,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
"@boazsh thanks a lot for the snippet, it is not deterministic though, can you edit it and use a CODE to make sure the random numbers are always the same on each run.",Bug Reproduction,True,165,MEMBER,False,False,False,1.0,0.3402061856,0.3195266272,0.3333333333,0.8123482033,0.1876517967,3.933462502e-05,5.52274028e-06
"Are any of these methods JIT compiled, or is this all interpreted?",Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.8571428571,0.1304347826,0.5,0.4402515723,0.4976639776,0.5023360224,0.0006447716188,0.0002080991169
I then got myself busy with other pressing issues.,Task Progress,False,50,NONE,True,False,False,0.4090909091,0.08653846154,0.6,0.2486187845,0.08429996571,0.9157000343,0.002473459958,0.0181710758
"In the former case, when investigating the trained model, I found out that the moving mean and moving variance consist of all zeros.",Usage,False,132,NONE,False,False,False,0.7666666667,0.08846153846,0.4197002141,0.5,0.3791120712,0.6208879288,0.03827269103,0.003216099592
"Sorry, didn't see your comment before I posted mine.",Social Conversation,False,52,CONTRIBUTOR,True,False,False,1.0,0.1451612903,1.0,0.358649789,0.2943248187,0.7056751813,6.42e-05,0.0006679948777
"@fjeremic , the problem is not specific to macOS as it also occurs on Linux.",Task Progress,False,76,CONTRIBUTOR,False,False,False,1.0,0.1052631579,1.0,0.3918575064,0.4730703195,0.5269296805,4.74e-05,0.001447858298
Will continue onwards and let you know about my results when I get them!,Social Conversation,False,72,CONTRIBUTOR,False,False,False,0.4242424242,0.09150326797,0.6205787781,1.0,0.1671414152,0.8328585848,4.685962093e-06,7.983490974e-07
I don't understand the connection to AOT though.,Social Conversation,False,48,CONTRIBUTOR,False,False,False,0.4,0.1,0.6666666667,0.2254901961,0.1242931708,0.8757068292,0.0007858204357,0.07018304397
Only use pip when you have to.,Solution Discussion,False,30,MEMBER,False,False,False,0.21875,0.07216494845,0.5,0.8,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
The standard functional and system testing passed.,Testing,False,50,CONTRIBUTOR,False,False,False,0.2916666667,0.04022988506,0.3333333333,0.9044117647,0.7942021981,0.2057978019,0.006755954606,0.002545177611
"Do you imagine that most uses will combine exactly two datasets (and hence we might use method chaining to combine them, e.g. CODE, CODE) or will it be more common to combine more datasets (and hence we'd take a similar approach to CODE, e.g. CODE, CODE)?",Motivation,True,255,CONTRIBUTOR,True,False,False,1.0,0.7014925373,0.5228848821,0.1428571429,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Are you going to take on building higher level framework-style APIs to replicate the python experience?,Task Progress,False,103,NONE,False,False,False,1.0,0.2328767123,0.1336206897,0.75,0.02901004364,0.9709899564,0.01651736955,0.001724506158
"Further to our phone discussion, the BCI of the stack map at any throw point also needs to be correct (even outside of FSD).",Solution Discussion,False,124,CONTRIBUTOR,False,False,False,1.0,0.375,0.5,0.7730496454,0.9535181949,0.04648180506,0.0005193381324,0.01198084219
Easy to use batch norm layer.,Expected Behaviour,False,29,CONTRIBUTOR,True,True,False,0.3529411765,0.02307692308,0.002141327623,0.3333333333,0.0,1.0,0.0,0.0003713342537
I don't understand why I am getting this error with the [seq2seq tutorial model] URL :CODE,Bug Reproduction,True,90,NONE,False,False,False,1.0,0.02315484805,0.1155115512,0.5,0.01791190943,0.9820880906,0.003676957012,0.0007664331927
"It works by keeping two copies of the CODE: the active one, and the backup.",Solution Discussion,True,75,MEMBER,False,False,False,0.46875,0.2419354839,0.9162995595,0.6,0.6578010252,0.3421989748,0.0002101432121,0.0002159883295
That solved my problem.,Solution Discussion,False,23,NONE,False,False,False,0.2857142857,0.03149606299,0.7478005865,1.0,0.5399330381,0.4600669619,0.1028511002,0.2627005402
"I think scikit learn is part of anaconda, but I did upgrade with pip (pip install --upgrade sklearn), but thats before I got this problem..",Investigation and Exploration,False,139,NONE,False,False,False,1.0,0.2783505155,0.4585798817,0.6,0.8484794361,0.1515205639,1.184011945e-05,2.737530974e-05
"Apple didn't make SSD MBP in 2011, so it's probably going to be much slower for you.",Solution Discussion,False,84,NONE,False,False,False,0.7727272727,0.1111111111,0.6688102894,0.4166666667,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Just for completeness though, it is recommended to stick to released versions for production code, so you may need to wait a little bit more until the 0.18 release is out.",Solution Discussion,False,171,MEMBER,False,False,False,1.0,0.4366197183,0.3421052632,1.0,0.324066469,0.675933531,0.0001194252422,0.005396415693
Thanks again.,Social Conversation,False,13,MEMBER,False,False,False,0.05555555556,0.02941176471,0.8130081301,0.07692307692,0.6243074007,0.3756925993,0.05176800464,0.02547446062
Ran many many times with -Xint with no failure.,Testing,False,47,CONTRIBUTOR,False,False,False,1.0,0.08653846154,1.0,0.6408839779,0.1357370059,0.8642629941,0.004967523245,0.007465904141
I've taken a look at the code and I don't see any allocations.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.7777777778,0.1346153846,0.25,0.182320442,0.0241690347,0.9758309653,0.01268066734,9.99e-05
"In fact, the preprocessed dataset size for one input architecture variant can be easily an order of magnitude larger than the unprocessed file set size.",Motivation,False,152,NONE,False,False,False,0.5681818182,0.3731343284,0.2676837725,0.3333333333,0.07487735986,0.9251226401,0.199242644,0.03685646374
The way around this issue is to update our config/setting file (e.g./runtime/makelib/mkconstants.mk.ftl) to point to the new version of mingw64 (which is installed separately/outside of cygwin dir) rather than the outdated one installed in cygwin by default.,Workarounds,False,258,CONTRIBUTOR,False,False,False,0.7454545455,0.3474576271,0.6666666667,0.2363636364,0.3976562389,0.6023437611,0.002619750082,0.026079663
"You then add on the fact that with Leo's assert, we make the same call to CODE again which now returns a non-NULL class and it makes things even more confusing.",Solution Discussion,True,160,CONTRIBUTOR,False,False,False,0.5161290323,0.5161290323,0.6666666667,0.4754098361,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
Is this just a resource exhaustion issue?,Investigation and Exploration,False,41,CONTRIBUTOR,False,False,False,0.3043478261,0.1489361702,0.6,0.3769230769,0.3601897468,0.6398102532,0.1462886158,0.02184783511
I'll fill in the additional data as it becomes available.,Task Progress,False,57,CONTRIBUTOR,True,False,False,0.3571428571,0.1612903226,0.4,0.7299578059,0.5560450992,0.4439549008,0.2648672615,0.0167902992
In order to do early stopping the user has to write some some code that basically repeatedly calls CODE and then checks the CV error.,Solution Discussion,True,133,MEMBER,False,False,False,0.3521126761,0.3521126761,0.1992753623,0.375,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
"I had thought the active_features_ thing made them basicallyidentical, but I'm probably forgetting something.",Solution Discussion,False,109,MEMBER,False,False,False,1.0,0.21875,0.2352941176,1.0,0.008302130491,0.9916978695,0.0007367317101,0.0005898735392
*         counting the number of items we've processed and comparing with the expected number of items in the iterator (but that's fiddly and sometimes we don't even know how long the iterator is),Workarounds,False,196,CONTRIBUTOR,False,False,False,0.6071428571,0.5074626866,0.8918169209,0.7692307692,0.8997769167,0.1002230833,0.0385452454,0.125435556
#3462 and #3463 introduce the support of this Issue for X86 CodeGen and common infrastructure.,Solution Discussion,False,94,CONTRIBUTOR,False,False,False,0.7142857143,0.234375,0.5,0.2482269504,0.269831671,0.730168329,0.6410820506,1.0
"Still got illegal instruction as Gita said.
CODE",Bug Reproduction,True,49,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.3713235294,0.763849763,0.236150237,0.0005973713534,0.004433211296
"As spacy itself is very fast, it would take huge batch sizes to make it worth it to use this multiprocessing model.",Solution Discussion,False,115,NONE,False,False,False,1.0,0.1437908497,0.6784565916,0.6666666667,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Note plinux seemed to have been affected as well https://github.com/eclipse/openj9/issues/7178#issuecomment-535484726
The other platforms seem fine according to https://github.com/eclipse/openj9-systemtest/pull/99#issuecomment-535156261",Investigation and Exploration,False,237,CONTRIBUTOR,True,False,False,1.0,0.2835820896,1.0,0.4046242775,0.00526823645,0.9947317636,5.27e-05,3.08e-05
Thanks both of you.,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.1212121212,0.02614379085,0.61414791,0.3333333333,0.1671414152,0.8328585848,4.685962093e-06,7.983490974e-07
Also seen here https://github.com/eclipse/openj9/issues/9291,Bug Reproduction,False,60,CONTRIBUTOR,False,False,False,1.0,0.06451612903,1.0,0.01639344262,0.0006267905675,0.9993732094,0.003289514691,0.0009414561275
"The deprecation warning in case of CODE will only be raise in CODE and not upon construction (which is not really ideal), but it is only in fit that we know that the user is passing it numeric data and not string data.",Solution Discussion,True,218,CONTRIBUTOR,True,False,False,1.0,0.671875,0.375,1.0,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
The last parameter for CODE should be the BitVector containing dead symrefs.,Solution Discussion,True,76,MEMBER,False,False,False,0.24,0.1304347826,0.5,0.9748427673,0.6767585371,0.3232414629,0.05983688721,1.0
"Running an experiment to verify if the HT was invalid upon classunloading verified that it was corrupted somewhere prior to entering the classunloading routine. 

CODE

The CODE method should also segfault if the j9method being inserted was also invalid upon entry.",Investigation and Exploration,True,269,CONTRIBUTOR,False,False,False,1.0,0.4725274725,0.3,0.2657342657,0.6007887623,0.3992112377,0.01222678832,0.05114946292
"On the other side, it takes longer time before we start Tenuring and there is less need to expand Tenure.",Solution Discussion,False,105,CONTRIBUTOR,False,False,False,0.2631578947,0.1369863014,0.8888888889,0.5083798883,0.238226106,0.761773894,0.0005830751334,0.0001494982185
Not surprising - I'm running a docker on my macbook.,Social Conversation,False,52,CONTRIBUTOR,False,False,False,0.36,0.08653846154,0.5,0.6243093923,0.1325885209,0.8674114791,3.67e-05,1.76e-05
I will keep an eye on your project for sure ;-D,Social Conversation,False,47,NONE,False,False,False,0.4782608696,0.1506849315,0.8836206897,1.0,0.836290065,0.163709935,0.003132528254,1.0
I think it has to be one of the JIT changes.,Investigation and Exploration,False,44,CONTRIBUTOR,True,False,False,1.0,0.1641791045,0.5,0.2485549133,0.005026440444,0.9949735596,6.9e-06,3.68e-06
It seems a bit unlikely.,Social Conversation,False,24,MEMBER,False,False,False,0.625,0.05154639175,0.1834319527,1.0,0.2578278976,0.7421721024,0.008572782863,8.343708337e-07
"If you or somebody else try and succeed to create a problem with their own scenarios, I'm more than willing to investigate...",Contribution and Commitment,False,125,CONTRIBUTOR,False,False,False,1.0,0.1506849315,1.0,0.9608938547,0.9684026741,0.03159732594,2.94e-05,0.0001713134092
-         The Barnes Hut Cython code works on 32 bit float,Solution Discussion,False,58,MEMBER,False,False,False,0.34375,0.1617647059,0.8861788618,0.5,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
"So if you haven't already (unfortunately we are not mind readers and ""not working for me"" does not tell us what you tried) could you try to run the snippet mentioned above in https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-243782185.",Investigation and Exploration,False,255,MEMBER,False,False,False,0.4788732394,0.4788732394,0.3099415205,0.4,0.3240071752,0.6759928248,0.0003023686606,0.0002259807885
Is it something in OpenJ9 or in the sample agent?,Investigation and Exploration,False,49,NONE,True,False,False,0.4,0.09615384615,0.6666666667,0.6850828729,0.2891215161,0.7108784839,0.01909072661,0.01291495446
Then the IPython and all the spawned python instances become idle - silently - and don't respond to any python code anymore till I restart it.,Observed Bug Behaviour,False,142,NONE,False,False,False,1.0,0.2474226804,0.2041420118,1.0,0.2578934907,0.7421065093,0.000173866989,0.0009051930247
"Every different set of command lines has it's own hints, which can be used independently.",Solution Discussion,False,89,CONTRIBUTOR,True,False,False,1.0,0.102739726,0.6666666667,0.6368715084,0.253527781,0.746472219,8.28e-05,0.0003822470545
"For what is worth, I am attaching the compilation log for CODE when compiled at cold with disable inlining: [log.txt.4.1.87859.20211108.161059.1.zip] URL ",Investigation and Exploration,True,154,CONTRIBUTOR,False,False,False,0.3559322034,0.2625,0.375,0.7745098039,0.9391761414,0.06082385865,0.06820979376,0.04955018304
"There will be explicit operations for initializing an iterator, so that it can be reused after you have processed all of the elements in a dataset.",Usage,False,147,CONTRIBUTOR,True,True,False,0.5531914894,0.3880597015,0.03328710125,0.8,0.0,1.0,0.0,0.000766008561
It may be that there is a better solution.,Social Conversation,False,42,NONE,False,False,False,0.3103448276,0.140625,0.8419117647,0.5,0.262961705,0.737038295,0.002558830732,0.003516053103
The performance gain of using the new Dataset API is negligible.,Solution Discussion,False,64,NONE,False,False,False,0.4583333333,0.1641791045,0.9486823856,0.4,0.9876981106,0.01230188943,0.005682714673,0.0468741252
Do we have one?,Usage,False,15,NONE,False,False,False,0.1666666667,0.05970149254,0.9514563107,0.8,0.9876981106,0.01230188943,0.005682714673,0.0468741252
"As such, I don't think this is a JIT issue.",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.3333333333,0.1612903226,0.8888888889,0.8196721311,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"Then i upgrade numpy, scipy to 1.11.0, 0.17.0 and test with the same code and it also doesn't raise any error.",Bug Reproduction,False,110,NONE,False,False,False,1.0,0.2957746479,0.04093567251,1.0,0.005251657845,0.9947483422,0.007997893245,0.2771530517
Can you share those files from the crash?,Social Conversation,False,41,MEMBER,False,False,False,0.5,0.08080808081,0.6666666667,0.02456140351,0.00184916656,0.9981508334,0.006553271164,0.002233056532
"If this fails, the osrtransitions file produced might contain useful information.",Solution Discussion,False,81,CONTRIBUTOR,False,False,False,0.3142857143,0.1182795699,0.8,0.471042471,0.5337820175,0.4662179825,0.002331376221,0.004039808715
Everything should now pickle.,Task Progress,False,29,MEMBER,False,False,False,0.2,0.02614379085,0.3118971061,0.5,0.01445541281,0.9855445872,0.01796302825,0.01064935216
"I had the same problem as reported here, and I do not use conda.",Bug Reproduction,False,64,NONE,False,False,False,1.0,0.1971830986,0.9532163743,0.25,0.8221631882,0.1778368118,0.1070466705,0.1393667667
CODE,Solution Discussion,True,4,NONE,False,False,False,0.0303030303,0.001447178003,0.7590759076,1.0,0.272648067,0.727351933,0.02402499291,0.006610382458
did something change with the SharedClasses.SCM23.MultiCL_0 test?,Testing,False,65,CONTRIBUTOR,False,False,False,0.2962962963,0.1194029851,0.1666666667,0.08670520231,0.003349898568,0.9966501014,0.001425190268,2.44e-05
Can I send the link to one of you?,Social Conversation,False,34,NONE,True,False,False,0.4285714286,0.09090909091,1.0,0.7929824561,0.5885610122,0.4114389878,1.0,0.002646435418
+1000,Social Conversation,False,5,NONE,False,False,False,1.0,0.01369863014,0.6767241379,1.0,0.7051198707,0.2948801293,0.000336181321,6.19689071e-06
Running CODE indicated that both of them somehow didn't have CODE loaded.,Investigation and Exploration,True,73,NONE,False,False,False,0.3636363636,0.1690140845,0.730994152,0.3333333333,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
This is consistent with many of our other evaluators.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.2368421053,0.1914893617,0.8888888889,0.9269230769,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"Feature Request: Vector ""File"" interface",Expected Behaviour,False,40,NONE,True,True,False,0.1428571429,0.1315789474,0.007299270073,0.2,0.0,1.0,0.0,0.003237761122
When trying to run a t-SNE CODE,Observed Bug Behaviour,True,31,NONE,True,True,False,0.6153846154,0.1126760563,0.008771929825,0.6,0.0,1.0,0.0,0.0002726161379
Does that help?,Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.2142857143,0.06382978723,0.6666666667,0.2769230769,0.1405282549,0.8594717451,0.006159641184,0.02092045419
"Actually, that fix is in CODE according to git",Investigation and Exploration,True,46,CONTRIBUTOR,False,False,False,0.45,0.1125,1.0,0.5343137255,0.590537134,0.409462866,8.99e-05,1.59e-05
"yeah, i clicked the logs column after failing to work it out",Bug Reproduction,False,60,MEMBER,False,False,False,1.0,0.1764705882,0.162601626,1.0,0.2783509428,0.7216490572,0.0003149258267,0.007023674687
"If both master and slave are restated at some point later (and brought up in same order - master first and slave second), again, no hints will be used at any of the restarts.",Solution Discussion,False,174,CONTRIBUTOR,False,False,False,0.5076923077,0.2260273973,0.6666666667,0.5865921788,0.253235282,0.746764718,0.002218893623,0.000737706338
"I boiled it down to single words, while german words work, english words like 'windows' don't work.",Investigation and Exploration,False,99,NONE,True,True,False,0.85,0.1789473684,0.04210526316,0.4,0.0,1.0,0.0,0.008598273629
@brando90The relevant part of the code is here [L227-256](https://github.com/tensorflow/tensorflow/blob/98d63de3bb2bab7c9a81f83c8ca864741399300c/tensorflow/contrib/layers/python/layers/layers.py#L227-L256).,Solution Discussion,False,206,NONE,False,False,False,0.5588235294,0.07307692308,0.2719486081,0.2,0.225873701,0.774126299,0.0001639552333,0.002735597126
CODE,Usage,True,4,NONE,False,False,False,0.003846153846,0.003846153846,0.7623126338,0.4,0.617232977,0.382767023,0.005602480188,0.0279240315
Actually SCREEN_NAME  can reproduce the issue with python 3.5.1 from conda so it's probably not related to the version of Python either.,Investigation and Exploration,False,136,MEMBER,False,False,False,1.0,0.323943662,0.1871345029,0.5,0.1683691658,0.8316308342,9.769898141e-05,0.000240649474
Performance difference between 0.24.0 and 0.26.0 in containers running AcmeAirMS benchmark on Open Liberty.,Observed Bug Behaviour,False,108,NONE,True,True,False,0.1842105263,0.175,0.2,0.004901960784,0.0,1.0,0.0,0.0188118453
Keep in mind we are running with that change for all other versions of java.,Solution Discussion,False,76,CONTRIBUTOR,False,False,False,1.0,0.08620689655,0.5,0.4191176471,0.7657208376,0.2342791624,9.33e-06,4.25e-06
I am also getting this issue and struggling to resolve it.,Bug Reproduction,False,58,NONE,False,False,False,0.5238095238,0.08661417323,0.3137829912,0.09090909091,0.3566928644,0.6433071356,0.1351135301,0.002261357628
"@amueller, running the script with 50k rows works as expected.",Bug Reproduction,False,62,NONE,False,False,False,0.2631578947,0.1030927835,0.9763313609,0.25,0.9999975983,2.401746992e-06,4.823458058e-05,1.350886112e-06
All I can think of right now to try and help you reproduce it would be to try and package up a sanitised version of my Windows VirtualBox VM and somehow make it available for download.,Investigation and Exploration,False,184,NONE,True,False,False,1.0,0.3636363636,0.4285714286,0.501754386,0.1973084735,0.8026915265,0.001977734278,0.003898730278
"If False, gamma isnot used.",Solution Discussion,False,27,NONE,False,False,False,0.09615384615,0.01923076923,0.817987152,0.5,0.7054086222,0.2945913778,0.4437492017,2.252355309e-05
@GaelVaroquaux scikit-learn is not an app but a library in a rich ecosystem.,Solution Discussion,False,76,MEMBER,False,False,False,1.0,0.1443298969,0.6360946746,0.25,0.8491787771,0.1508212229,0.000108726466,0.001720552123
So you can always try.,Social Conversation,False,22,NONE,False,False,False,0.1351351351,0.08333333333,0.6206896552,0.5,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"Note somewhere: multiheap,bucket setting may give another 100% to 40% performance boost for certain applications.",Solution Discussion,False,113,CONTRIBUTOR,False,False,False,0.32,0.2580645161,1.0,0.9282700422,0.9167594621,0.08324053794,0.01000533813,0.01893430022
"If I understood correctly if the flag is CODE the network is not efficient, so I should let CODE and then I should collect all the batch_norm updates and run them together.",Usage,True,172,NONE,False,False,False,1.0,0.1230769231,0.3040685225,0.3333333333,0.2659544384,0.7340455616,0.1426765631,0.1141986754
"indeed, it is unpredictable.",Social Conversation,False,28,CONTRIBUTOR,False,False,False,0.2105263158,0.06451612903,0.6666666667,0.1814345992,0.04581586316,0.9541841368,0.0008605174189,0.001881470289
"Repro rate with following command was 3/4:

CODE

Console:

CODE

I checked the trace log of one of the failures and I glanced at the trees and did not see any CODE so GRA certainly didn't run, implying the CODE worked as intended.",Bug Reproduction,True,239,CONTRIBUTOR,False,False,False,1.0,0.3533834586,0.5,0.8575063613,0.8343651076,0.1656348924,0.00358081273,0.003611879142
"There's the main intern area, which holds a fixed number of strings, hopefully the common ones.",Solution Discussion,False,95,MEMBER,False,False,False,0.4,0.2580645161,0.3788546256,0.6944444444,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"You can remove CODE from following line to rule it out.
https://github.com/eclipse/openj9/blob/22e0009fda531be602d728ea128f4ad9b4d289fd/runtime/compiler/runtime/MetaData.cpp#L706",Solution Discussion,True,179,CONTRIBUTOR,False,False,False,0.7647058824,0.203125,1.0,0.4539007092,0.7598910366,0.2401089634,0.001158893425,0.0002837124983
Intermittent problems like this are almost always the JIT.,Investigation and Exploration,False,58,CONTRIBUTOR,True,False,False,1.0,0.1551724138,1.0,0.1651376147,0.02081460774,0.9791853923,8.67e-05,9.15e-05
So unfortunately I have to move this out of the milestone.,Task Progress,False,58,MEMBER,False,False,False,0.4074074074,0.1774193548,0.6255506608,0.75,0.2586753238,0.7413246762,0.002179048536,0.1151253204
"I mainly created this issue in case someone else is running into similar problems when trying spaCy on Spark, as the error messages raised by Spark when failing to pickle the language models are not very helpful (workers just crash because of segmentation fault).",Motivation,False,263,NONE,True,False,False,1.0,0.2875816993,0.07073954984,0.6666666667,0.002086131182,0.9979138688,0.0004639102472,1.030911661e-05
Here's the error output from VS 2010 express edition: https://ci.spacy.io/builders/spacy-win64-py34-64-install/builds/98/steps/shell_2/logs/stdio.,Solution Discussion,False,146,CONTRIBUTOR,False,False,False,0.303030303,0.06535947712,0.9710610932,0.6666666667,0.2018945648,0.7981054352,4.380506786e-05,0.1692698285
Thanks for sharing this with us ;-),Social Conversation,False,35,NONE,False,False,False,1.0,0.09589041096,0.8943965517,1.0,0.901273743,0.09872625696,0.0976605631,0.3331738372
"To be clear, I'm not suggesting the options make the problem go away.",Solution Discussion,False,69,CONTRIBUTOR,False,False,False,0.1666666667,0.1397849462,0.125,0.6640926641,0.5547508363,0.4452491637,0.002831223282,0.01376817541
strangechoice of hash function :\,Social Conversation,False,33,MEMBER,False,False,False,0.25,0.05882352941,0.2926829268,0.4285714286,0.3553526876,0.6446473124,0.003096425316,0.01032797867
"[**TL;DR:** We're designing a new input pipeline API for TensorFlow, and we'd like to collect your feature requests on this issue.]",Motivation,False,131,CONTRIBUTOR,True,True,False,0.4680851064,0.328358209,0.002773925104,0.06666666667,0.0,1.0,0.0,0.000766008561
"There is a number of fundamental facts about classes:
- j9class or **any it's part** must be valid if class is a member of active (not unloaded) Classloader (with exception of partially initialized classes at class loading time)
- GC unloads classes single threaded (at least at the moment) under VM Exclusive Access and mutex CODE acquired for Write (exclusively)
- GC unloading classes on Classloader basis.",Investigation and Exploration,True,412,CONTRIBUTOR,False,False,False,0.7362637363,0.7362637363,0.25,0.6818181818,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"@babsingh, @pshipton, where do we find gcore?",Investigation and Exploration,False,45,NONE,True,False,False,0.4375,0.09333333333,0.5,0.5141242938,0.0626179028,0.9373820972,0.04024904373,0.003794429075
@M-Davies feel free to run jdk_nio when there's an available build to confirm.,Social Conversation,False,78,CONTRIBUTOR,False,False,False,0.6666666667,0.1538461538,1.0,0.979020979,0.952674969,0.04732503098,0.1633866501,0.04052333396
Investigation continues.,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,0.04166666667,0.02985074627,0.8888888889,0.6647398844,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
I do not seem to find any documentation regarding a CODE flag?,Solution Discussion,True,62,NONE,False,False,False,0.5454545455,0.01736613603,0.1056105611,0.75,0.005573211817,0.9944267882,0.01544625718,0.04704112764
"This does not apply to CODE (4.4.0-21, Ubuntu 16.04) with the same packages under 3.5.",Bug Reproduction,True,86,NONE,False,False,False,1.0,0.2253521127,0.05847953216,1.0,0.05373960794,0.9462603921,0.004970747043,0.003152245181
"- so it proves  the jvm can dump, but in this case it was unrelated to the xslt issue.",Investigation and Exploration,False,86,NONE,True,False,False,0.6551724138,0.1428571429,1.0,0.2188295165,0.03611802688,0.9638819731,0.05548420273,0.2798752602
This is very strange.,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.1,0.02298850575,0.3333333333,0.4595588235,0.7662829103,0.2337170897,0.0002229068111,4.94e-05
"-         When the user wants to do a distributed operation, they call CODE on the driver, and English handles the map under the hood.",Solution Discussion,True,134,NONE,False,False,False,0.5581395349,0.1568627451,0.2347266881,0.5263157895,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
Something like CODE is basically just a remote message from JITServer to JITClient to ask JITClient to perform CODE,Investigation and Exploration,True,115,CONTRIBUTOR,False,False,False,0.3958333333,0.1005291005,0.6470588235,0.5885714286,0.447477842,0.552522158,0.001615795728,8.48e-05
"@fjeremic no, it's not self-contained.",Investigation and Exploration,False,38,NONE,False,False,False,0.2608695652,0.04511278195,0.25,0.7811704835,0.7978584392,0.2021415608,0.00412079602,0.0003049413581
<2> then start OpenJ9.zip (set to Java 11) at boot dash which gets Java 11 started.,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.2909090909,0.1616161616,0.5,0.8315789474,0.803200419,0.196799581,0.3518178539,0.2306492075
@mrry Have you tested this [section of the documentation](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/docs_src/programmers_guide/datasets.md#applying-arbitrary-python-logic-with-tfpy_func) with python3?,Testing,False,222,NONE,False,False,False,1.0,0.3582089552,0.932038835,1.0,0.967611182,0.03238881795,0.08326284019,0.02053157431
"That said, I will quickly try to do the changes to have an idea how possible it is to integrate this in OnehotEncoder.",Solution Discussion,False,118,CONTRIBUTOR,True,False,False,1.0,0.359375,0.1286764706,1.0,0.001108978882,0.9988910211,0.001496651552,0.0039907996
Set CODE to where you want the files written.,Investigation and Exploration,True,45,MEMBER,False,False,False,0.4285714286,0.09090909091,0.6666666667,0.5789473684,0.2049075531,0.7950924469,0.01382387628,0.003692040835
Could you please point me to corresponding doc/guide?,Solution Discussion,False,53,NONE,False,False,False,0.3214285714,0.15,0.775862069,0.75,0.4575489558,0.5424510442,0.04109506146,0.1027852809
"I still a bit worry about the omrvmem.c change (eclipse/omr#4087), if it might cause some subtle issues in the future.",Solution Discussion,False,118,CONTRIBUTOR,False,False,False,1.0,0.1206896552,0.5,0.5514705882,0.7664930605,0.2335069395,7.18e-05,0.006331049572
"Really everything could be serialized, because everything knows how to write itself to disk and load itself back, usually in a binary format.",Solution Discussion,False,141,MEMBER,False,False,False,0.1503267974,0.1503267974,0.09967845659,0.5714285714,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
However this meant that no GC could happen during a compilation.,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.2115384615,0.1208791209,0.4615384615,0.7937062937,0.86612727,0.13387273,0.03684751755,0.005897328255
"How about we LOVE ""badly"" designed languages?",Social Conversation,False,45,NONE,False,False,False,0.4666666667,0.09589041096,0.8211206897,0.25,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
Thanks again for continuing to develop such a great library!,Social Conversation,False,60,NONE,True,True,False,0.1754385965,0.1612903226,0.0704845815,0.9411764706,0.0,1.0,0.0,0.0008157310994
I think it's more of debugging skills that is needed :),Social Conversation,False,55,CONTRIBUTOR,False,False,False,1.0,0.1208791209,0.5,0.08041958042,0.006083887962,0.993916112,0.001958073201,0.4507797245
"2.         I think others have mentioned something like this, but a way to create a Dataset from a streaming source of data.",Expected Behaviour,False,124,NONE,False,False,False,0.6052631579,0.3432835821,0.6227461859,0.5714285714,0.5016859242,0.4983140758,0.003761840049,0.03050902669
"At the developmenthead, this completes in 11s on my macbook, and in 7s at version 0.14(that's something to look into!)",Investigation and Exploration,False,118,MEMBER,False,False,False,0.9523809524,0.206185567,0.09171597633,0.8,0.0003221026152,0.9996778974,8.580113407e-05,9.25754306e-06
"@winston-li seeing ""?"" as shape is because at that point you're looking at the 'static' shape of the tensor, which isn't always defined (the graph doesn't know in advance how many examples there will be).",Usage,False,204,NONE,False,False,False,1.0,0.5223880597,0.7503467406,0.2,0.5818615051,0.4181384949,0.00639731668,0.009301532526
"
REFERENCE",Investigation and Exploration,False,10,NONE,False,False,False,0.05405405405,0.002894356006,0.05610561056,0.5555555556,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
@shanchao95  thanks for the data.,Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.24,0.09677419355,0.1428571429,0.4810126582,0.4402101884,0.5597898116,0.00359667111,0.001910640371
"With CODE, the statistics converge (bias<0.001) after 550~600 steps of learning/updates.",Solution Discussion,True,88,CONTRIBUTOR,False,False,False,0.5454545455,0.04615384615,0.4817987152,0.6666666667,0.3866792137,0.6133207863,0.001443840919,0.0004998808382
Still got: CODE,Solution Discussion,True,15,NONE,False,False,False,0.4285714286,0.02362204724,0.8651026393,1.0,0.8554747501,0.1445252499,0.008876087511,0.06974861068
Doing the same thing as JNI is probably the right answer (loading r12 and using it to call indirect).,Solution Discussion,False,101,CONTRIBUTOR,False,False,False,1.0,0.1484375,0.5,0.5944444444,0.04007896426,0.9599210357,3.37e-05,0.0001975507147
"Here's typical explanations online of what happens to ""unresolved external symbol __imp___iob_func""
[1] https://stackoverflow.com/questions/30412951/unresolved-external-symbol-imp-fprintf-and-imp-iob-func-sdl2
[2] https://msdn.microsoft.com/en-us/library/bb531344.aspx#BK_CRT

There are a bunch of discussions on ""unresolved external symbol __imp___iob_func"" but none of them works for our case (tried with legacy_stdio_definitions.lib but didn't work.",Solution Discussion,False,456,CONTRIBUTOR,False,False,False,0.9361702128,0.3728813559,0.6666666667,0.04242424242,0.3880894914,0.6119105086,0.0357099532,0.0001845122672
"The one I'm currently struggling with is the integration of CODE with the ability of picking the source from which the input should come, for having train/val data in the same symbolic variable.",Motivation,True,194,CONTRIBUTOR,False,False,False,0.7391304348,0.5074626866,0.1900138696,0.2727272727,0.04271149234,0.9572885077,0.001149776305,0.005164577321
"-         Implementation A: Simpler, but requires user to be aware of local vs. distributed operations",Solution Discussion,False,102,NONE,False,False,False,0.3488372093,0.09803921569,0.231511254,0.4736842105,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
CODE,Investigation and Exploration,True,4,CONTRIBUTOR,False,False,False,0.04166666667,0.01408450704,0.4766081871,0.5,0.4156673014,0.5843326986,0.0004713353126,0.003024101758
Then: CODE,Solution Discussion,True,10,NONE,False,False,False,0.1538461538,0.0157480315,0.7214076246,0.4,0.5124660478,0.4875339522,0.03664686068,0.234967481
@amicic do you agree to enable CODE by default next week after the branch for the 0.15 release?,Solution Discussion,True,95,CONTRIBUTOR,True,False,False,1.0,0.1232876712,1.0,0.9776536313,0.9684666234,0.03153337665,2.18e-05,0.08308572023
then its simple to tell tensorflow which one to use with a feed dictionary as in: CODE,Usage,True,86,NONE,False,False,False,0.5862068966,0.06538461538,0.08137044968,0.6666666667,0.202765491,0.797234509,0.001533935132,0.0002544552755
"For the record, here's the complete output of a run:
CODECODE | \ \ \ \
 \\/  ___)",Investigation and Exploration,True,84,CONTRIBUTOR,False,False,False,0.1442307692,0.1442307692,0.02631578947,0.408839779,0.1325438863,0.8674561137,6.47e-05,3.39e-05
My gut feeling is saying all these little variations on these steps is probably not what matters.,Investigation and Exploration,False,97,NONE,True,False,False,0.4722222222,0.1717171717,0.1428571429,0.4877192982,0.1973084735,0.8026915265,0.001977734278,0.003898730278
@doomerxe pls create a JVM with the change reverted and run a grinder to see if the problem still occurs.,Solution Discussion,False,105,CONTRIBUTOR,True,False,False,1.0,0.2985074627,0.6666666667,0.2023121387,0.004997333654,0.9950026663,0.0003635972979,1.94e-05
Were you able to implement this in spaCy?,Task Progress,False,41,NONE,False,False,False,0.8,0.1333333333,0.9568965517,1.0,0.8009401878,0.1990598122,0.0006670641737,0.002222477325
Can you set the CODE environment variable to CODE?,Solution Discussion,True,50,MEMBER,False,False,False,1.0,0.06766917293,0.5,0.1195928753,0.006024439826,0.9939755602,0.005541266823,0.0006940890429
Do you know where compilation threads reserves it?,Solution Discussion,False,50,CONTRIBUTOR,False,False,False,0.347826087,0.08791208791,1.0,0.9370629371,0.8789792843,0.1210207157,0.001947289162,0.001105363904
"With xlc 16 we only got the expected DDR failures, all the other standard testing passed.",Testing,False,89,CONTRIBUTOR,False,False,False,1.0,0.09195402299,1.0,0.9375,0.7957046984,0.2042953016,0.001665008746,0.00187043267
"To sumarise when we launch a boot app from STS then there will be two java processes active:

1. the boot app, 
2. the STS/Eclipse process that launched the boot app.",Investigation and Exploration,False,169,NONE,True,False,False,0.9444444444,0.3434343434,0.875,0.4631578947,0.1964587946,0.8035412054,0.004535009544,0.001033447215
"but I haven't tested, so I might be wrong about that :)",Social Conversation,False,55,NONE,False,False,False,0.3157894737,0.04615384615,0.8715203426,1.0,0.7214324611,0.2785675389,0.0005628859124,0.02303946421
@lesteve: Thank you for the solution!,Social Conversation,False,37,NONE,False,False,False,0.5,0.08450704225,0.9736842105,0.3333333333,0.8481484551,0.1518515449,0.01200604239,0.8838761808
jdk15+36: java/foreign/TestMismatch.java.TestMismatch J9 Crash,Observed Bug Behaviour,False,62,CONTRIBUTOR,True,True,False,0.2222222222,0.170212766,0.25,0.003846153846,0.0,1.0,0.0,0.002175337965
Maybe there's sth funny going on in CODE.,Investigation and Exploration,True,41,CONTRIBUTOR,False,False,False,0.4,0.1126760563,0.4093567251,0.8888888889,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"From what I can tell, it is populating a Hashmap with CreationalContexts on every request that get released/removed later.",Investigation and Exploration,False,122,NONE,True,False,False,1.0,0.25,0.5,0.9754901961,0.9707570453,0.02924295466,0.001009097829,0.008707818333
"If before you were using the same cell instance as both the forward and reverse cell of a bidirectional RNN, simply create two instances (one for forward, one for reverse).",Bug Reproduction,False,172,NONE,False,False,False,0.7894736842,0.04341534009,0.1881188119,0.9,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"Using local mapper
<229600> 	Locals starting at 0x00000000002779E8 for 0x0000000000000003 slots
<229600> 		I-Slot: a0[0x00000000002779E8] = 0x0000000000000000

The incoming CODE is CODE, this can cause CODE at [1],
CODE
It seems the CODE was reported at CODE
CODE",Investigation and Exploration,True,270,MEMBER,True,False,False,1.0,0.4891304348,0.3333333333,0.4088050314,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
https://ci.eclipse.org/openj9/view/Test/job/Grinder/708 - multiheap:20 x 3 unlimited - passed,Testing,False,93,CONTRIBUTOR,True,False,False,1.0,0.09677419355,1.0,0.417721519,0.2976942551,0.7023057449,0.001055956968,0.0007234180335
"@mpirvu @vijaysun-omr fyi

0.27 is released, for now you can get docker images as described in https://github.com/eclipse-openj9/openj9/issues/13534#issuecomment-924085997",Contribution and Commitment,False,173,CONTRIBUTOR,False,False,False,1.0,0.2375,1.0,0.02941176471,0.002977512039,0.997022488,0.0188118453,0.01246148827
Before doing that I had one more run with the old JMeter and looked at the output from the auth service.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,1.0,0.2625,0.6666666667,0.6274509804,0.8717852336,0.1282147664,0.2743165754,0.001670230889
"I am on Tf (now 1.0) as well, and I don't have this CODE issue anymorewhen I execute CODE which previously didn't work.",Solution Discussion,True,119,CONTRIBUTOR,False,False,False,1.0,0.323943662,0.865497076,0.5,0.6457035792,0.3542964208,0.0001660605916,0.002055691741
"Simultaneously, there are efforts to determine when then stack slot is being set to NULL, which will further help to pinpoint where the failure is occurring.",Investigation and Exploration,False,157,CONTRIBUTOR,False,False,False,0.8666666667,0.2826086957,1.0,0.6352201258,0.5582838217,0.4417161783,0.0001275446201,0.0004086462498
For the rest I fought quite some time to get them running with all the preprocessing I wanted and with queues for testing and validation in the same run.,Solution Discussion,False,153,NONE,False,False,False,0.7837837838,0.4328358209,0.3411927878,1.0,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
The vectors for the verb and noun senses are quite different: CODE,Potential New Issues and Requests,True,66,MEMBER,False,False,False,0.4,0.3157894737,0.2262773723,0.5555555556,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"@jsimomaa would it be possible run the following command using the OpenJ9 VM and provide the javacore*.txt and the gc.log?
CODE",Investigation and Exploration,True,128,CONTRIBUTOR,False,False,False,1.0,0.1605839416,1.0,0.4237918216,0.02061974402,0.979380256,7.91e-05,4.56e-06
Is there any news on this.,Task Progress,False,26,NONE,True,False,False,0.6,0.04511278195,0.5,0.31043257,0.404206657,0.595793343,1.0,0.004984524022
Is this correct?,Investigation and Exploration,False,16,CONTRIBUTOR,False,False,False,0.09090909091,0.02255639098,0.8333333333,0.6259541985,0.6090585554,0.3909414446,0.03283597098,0.001209954986
yeah waiting for the new tutorial...,Social Conversation,False,36,NONE,False,False,False,0.2857142857,0.008683068017,0.8646864686,0.3333333333,0.2925639875,0.7074360125,5.387222008e-05,7.23833794e-05
My mainconcern is that we have tried implementing this as a change to OHE for along time and it never flew.,Solution Discussion,False,107,MEMBER,False,False,False,0.875,0.328125,0.1029411765,0.6666666667,0.0007412302777,0.9992587697,0.002483571005,0.0001212291825
And I think the idea of partial language support is important and overdue.,Motivation,False,74,MEMBER,False,False,False,0.5652173913,0.2166666667,0.4568965517,0.875,0.3864300618,0.6135699382,0.4682936827,0.03367017273
I don't see a reason to force the user to provide the same input data.,Solution Discussion,False,70,MEMBER,False,False,False,1.0,0.2112676056,0.0652173913,1.0,0.0214071977,0.9785928023,2.210858022e-06,0.003908726797
You can enable with CODE.,Investigation and Exploration,True,25,CONTRIBUTOR,False,False,False,0.2631578947,0.05494505495,0.5,0.1293706294,0.1134912755,0.8865087245,0.008570999411,0.04891716703
With the latest configuration I have to wait for more than an hour to reproduce it.,Bug Reproduction,False,83,CONTRIBUTOR,False,False,False,0.7272727273,0.2,0.6666666667,0.9901960784,0.9721353064,0.02786469359,0.008707818333,0.1760484251
It tells to do the following: CODE,Usage,True,34,NONE,False,False,False,0.1228070175,0.02692307692,0.3190578158,0.1538461538,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
Hope to have the results shortly.,Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.24,0.06593406593,1.0,0.4020979021,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
"@mshunshin moving mean and variance are not trainable variables: there are no gradients coming to them, they are just accumulating statistics across minibatches of examples.",Solution Discussion,False,173,NONE,False,False,False,1.0,0.09615384615,0.5460385439,0.5,0.4920094851,0.5079905149,0.001170108729,0.003259624837
"Well I am not against that pattern, but that does not seem very intuitive to me nevertheless.",Solution Discussion,False,93,MEMBER,False,False,False,0.6538461538,0.2394366197,0.6775362319,0.5454545455,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
But a class action _lawsuit_ is definitely a type of lawsuit: CODE,Potential New Issues and Requests,True,66,MEMBER,False,False,False,0.5217391304,0.3157894737,0.4233576642,0.2857142857,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
We can try compiling the BytecodeInterpreter with VS2017 instead of mingw.,Solution Discussion,False,74,CONTRIBUTOR,True,False,False,0.9166666667,0.09322033898,0.2,0.05454545455,0.3881489186,0.6118510814,0.0001845122672,7.34e-05
As the commit message says:,Investigation and Exploration,False,27,NONE,False,False,False,0.1351351351,0.007235890014,0.0495049505,0.3333333333,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
"New occurrence: https://ci.adoptopenjdk.net/view/Failing%20Builds/job/build-scripts/job/jobs/job/jdk11u/job/jdk11u-linux-ppc64le-openj9-linuxXL/413/console
CODE",Testing,True,161,CONTRIBUTOR,False,False,False,1.0,0.08064516129,1.0,0.3333333333,0.6373181319,0.3626818681,0.00328449111,0.004953063947
Don't downgrade.,Solution Discussion,False,16,NONE,True,False,False,0.1818181818,0.0157480315,0.9149560117,0.75,0.9259629187,0.07403708125,0.001998099513,0.02806508983
"""java/lang/OutOfMemoryError"" ""Failed to create a thread: retVal -1073741830, errno 11""
11 EAGAIN The limit on the number of threads per process has been reached.",Testing,False,162,CONTRIBUTOR,True,True,False,0.5094339623,0.435483871,0.4,0.008438818565,0.0,1.0,0.0,0.003027854511
"I was hoping the new input pipeline would be build on top of queues, since they provide major performance boosts but make it quite hard to work with (e.g. having seperate input pipelines with queues to switch between training and validation datasets).",Solution Discussion,False,251,NONE,False,False,False,1.0,0.6268656716,0.7683772538,0.6,0.5844291371,0.4155708629,0.00636830506,0.1964778875
Is there a way to cut down the runtime to failure (assuming I can reproduce eventually)?,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.4848484848,0.1203007519,1.0,0.4987277354,0.5596707013,0.4403292987,0.1072383922,0.000211333354
This means that each worker process will take a while to load all the data models.,Solution Discussion,False,82,NONE,False,False,False,0.7272727273,0.1045751634,0.6591639871,0.1666666667,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
So I don't think my theory holds water - we are still trying to figure out what is going on.,Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,0.6551724138,0.2835820896,0.2,0.8670520231,0.01918518568,0.9808148143,1.3e-06,0.0002576922821
"There are 3 ways to solve this:
1. create a new remote routine where instead of the object address, globalreference is used.",Solution Discussion,False,125,CONTRIBUTOR,False,False,False,0.5609756098,0.1216931217,0.375,0.8971428571,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"However, it adds another function to our API...",Solution Discussion,False,47,MEMBER,False,False,False,0.3076923077,0.1126760563,0.6920289855,0.9090909091,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
Closing for now.,Action on Issue,False,16,MEMBER,False,False,False,0.2142857143,0.03157894737,0.8210526316,0.6666666667,0.1889319923,0.8110680077,7.189240303e-05,0.20086138
"If you believe that this is the cause of some kind of memory leak, I think we should really take a look at my testing script and update it as it's very rudimentary and I'm far from an expert profiler.",Investigation and Exploration,False,200,NONE,True,False,False,0.9756097561,0.6451612903,0.1189427313,0.2,0.01937624511,0.9806237549,0.02003548886,0.01526654747
"So, if your process is slow, it might be worth taking a closer look and checking that you're at least doing around 10,000 tokens per thread per second.",Solution Discussion,False,151,MEMBER,False,False,False,0.7,0.1830065359,0.8135048232,0.9473684211,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"I performed the same tests again, both installing from the zip you posted above and installing directly from master (commit 9cd21ad5b5aa664642a2e17925cd7b39eacb9aa9) and got nearly identical results to my previous trials.",Solution Discussion,False,221,NONE,True,False,False,0.7317073171,0.4838709677,0.1145374449,0.1,0.01937624511,0.9806237549,0.02003548886,0.01526654747
Just like SCREEN_NAME  did above?,Social Conversation,False,33,MEMBER,False,False,False,0.2307692308,0.08450704225,0.6739130435,0.4545454545,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
"50x using nightly build for each platform also passed, I assume this can only be reproduced when running entire suite, will try running the entire CODE and CODE in grinder.",Testing,True,172,CONTRIBUTOR,False,False,False,0.6818181818,0.3260869565,0.3333333333,0.1257861635,0.3428264365,0.6571735635,0.0002941917355,0.001046537172
"While the code allows it, I don't know if there's any valid reason for while this could happen.",Social Conversation,False,95,CONTRIBUTOR,False,False,False,0.2903225806,0.2903225806,0.8333333333,0.4863387978,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
Closing.,Action on Issue,False,8,CONTRIBUTOR,False,False,False,0.09090909091,0.001447178003,0.9900990099,1.0,0.7567199611,0.2432800389,0.0001320700021,1.0
Wouldn't there be a way to have an CODE tensor indicating when the iterator is empty?,Expected Behaviour,True,85,CONTRIBUTOR,False,False,False,0.64,0.2388059701,0.5006934813,0.6666666667,0.4385463379,0.5614536621,0.02256391463,0.02590584966
"(If the JCL patch is added back, this check would only happen once I believe)
For Liberty, one possibility is that they might have called SharedClassURLHelper.setMinimizeUpdateChecks() in their java code that disabled most timestamp checks.",Investigation and Exploration,False,241,CONTRIBUTOR,False,False,False,1.0,0.2627737226,1.0,0.8847583643,0.06771827233,0.9322817277,0.0001677157529,0.000359450058
"@smlambert ok sorry, I must have been looking at old links by accident, please ignore.",Social Conversation,False,86,CONTRIBUTOR,True,False,False,1.0,0.2586206897,1.0,0.3669724771,0.0211976952,0.9788023048,0.0003140794877,7.08e-05
Anyone up to write a NodeJS library?,Contribution and Commitment,False,36,NONE,False,False,False,0.28,0.09589041096,0.06465517241,0.1666666667,0.001454209969,0.99854579,0.004261247633,0.002175772592
Thank you very much.,Social Conversation,False,20,NONE,False,False,False,0.07692307692,0.01538461538,0.8244111349,1.0,0.7054086222,0.2945913778,0.4437492017,2.252355309e-05
"is wrong to fix by switching from one hook to another because of just reducing time window for race condition

The proposed solution is that unless we have an explicit expectation, the JIT needs to clean up the table entries during the respective hooks.",Solution Discussion,False,255,CONTRIBUTOR,False,False,False,1.0,0.4945054945,1.0,0.5979020979,0.8553689744,0.1446310256,0.002579695967,0.005301125006
"If I have some time this week, I'll submit a PR.",Contribution and Commitment,False,48,NONE,False,False,False,0.3235294118,0.01591895803,0.5412541254,1.0,0.1352070615,0.8647929385,0.03407322991,0.00125745356
That made some senses that failing to allocate memory could not be explained previously.,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.4242424242,0.2258064516,1.0,0.6455696203,0.4818277043,0.5181722957,0.005901107588,0.002228594265
1. It is only guaranteed after a few hundred (thousand?) times.,Bug Reproduction,False,63,NONE,True,False,False,0.7857142857,0.1466666667,0.4285714286,0.1073446328,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
How do we determine RSS on AIX?,Investigation and Exploration,False,31,CONTRIBUTOR,True,False,False,0.4117647059,0.1129032258,0.3333333333,0.7004219409,0.5169439657,0.4830560343,0.04003593754,0.004416350414
"with the code fragment: import tensorflow as tffrom tensorflow.contrib import rnn hidden_size = 100batch_size  = 100num_steps   = 100num_layers  = 100is_training = Truekeep_prob   = 0.4 input_data = tf.placeholder(tf.float32, [batch_size, num_steps])lstm_cell = rnn.BasicLSTMCell(hidden_size, forget_bias=0.0, state_is_tuple=True) if is_training and keep_prob < 1:lstm_cell = rnn.DropoutWrapper(lstm_cell)cell = rnn.MultiRNNCell([lstm_cell for _ in range(num_layers)], state_is_tuple=True) _initial_state = cell.zero_state(batch_size, tf.float32) iw = tf.get_variable(""input_w"", [1, hidden_size])ib = tf.get_variable(""input_b"", [hidden_size])inputs = [tf.nn.xw_plus_b(i_, iw, ib) for i_ in tf.split(input_data, num_steps, 1)] if is_training and keep_prob < 1:inputs = [tf.nn.dropout(input_, keep_prob) for input_ in inputs] outputs, states = rnn.static_rnn(cell, inputs, initial_state=_initial_state)",Observed Bug Behaviour,False,900,NONE,True,True,False,1.0,0.1143270622,0.03300330033,0.9090909091,0.0,1.0,0.0,0.0005278053632
Reopening this.,Action on Issue,False,15,MEMBER,False,False,False,0.04347826087,0.01307189542,0.3729903537,0.05263157895,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"In another instance, it might return 389 new pairs, etc.",Motivation,False,56,CONTRIBUTOR,False,False,False,0.2173913043,0.1492537313,0.6712898752,0.8888888889,0.5116443977,0.4883556023,0.04958391229,0.003143434467
Thus my biggest wish would be to make that method more performant.,Expected Behaviour,False,66,NONE,False,False,False,0.375,0.1791044776,0.1289875173,0.6,0.01422300953,0.9857769905,0.003307324671,0.2125437083
From my observations the failure rate is around 1/20.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,1.0,0.0989010989,1.0,0.2027972028,0.3546423234,0.6453576766,0.0005314990198,0.0001694634556
I never tried it on Python 3.x. But a quick check for /openmp [here] URL  it is supported on VS 2010 ans 2015. For Python 3.4 using VS 2010 and for 3.5 VS 2015 are [suggested] URL .,Solution Discussion,False,181,CONTRIBUTOR,False,False,False,1.0,0.2483660131,0.9581993569,0.3333333333,0.2018791345,0.7981208655,6.508280685e-05,4.380506786e-05
"But if what you have is a collection of texts, not a collection of larger archives, you have to think about the details a bit more.",Solution Discussion,False,131,MEMBER,False,False,False,0.65,0.1699346405,0.8038585209,0.7894736842,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
Why do you expect to see it in the current c-stack?!,Social Conversation,False,52,CONTRIBUTOR,False,False,False,1.0,0.1318681319,1.0,0.3426573427,0.621583916,0.378416084,0.02856229515,0.002161429347
input_fn has to return features and labels only.,Expected Behaviour,False,48,NONE,False,False,False,0.4705882353,0.1194029851,0.6907073509,0.5,0.5219059395,0.4780940605,0.07840110346,0.05557964708
"This methodhandle is the object passed to 
CODE",Investigation and Exploration,True,48,CONTRIBUTOR,True,False,False,0.5625,0.04761904762,1.0,0.09714285714,0.1341075982,0.8658924018,0.0001651389588,5.38e-05
"Already tried with JRE (repeatedly starting) and no crash occurs during the run:
![image] URL 

I believe we already run out of all options we have to reproduce the crash except getting the VirtualBox image but everything works good on both JRE11 and JDK11

@DanHeidinga ,  any input at this point?",Investigation and Exploration,False,303,CONTRIBUTOR,False,False,False,1.0,0.5454545455,1.0,0.5719298246,0.2010068066,0.7989931934,0.005835937215,0.01382387628
"Therefore, CODE is returning different values.",Solution Discussion,True,46,CONTRIBUTOR,False,False,False,0.2,0.09677419355,0.7777777778,0.8142076503,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
I was also able to reproduce a big win on Linux launching this spring application by adding the noTimestampChecks.,Bug Reproduction,False,114,CONTRIBUTOR,False,False,False,1.0,0.1386861314,0.3333333333,0.8587360595,0.06757472377,0.9324252762,0.003514162664,4.8e-05
"But if you need something fast, then [here] URL  is the repository.",Solution Discussion,False,67,NONE,False,False,False,0.9285714286,0.2166666667,0.5431034483,0.875,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
The use case is when you want to combine several estimators together.,Motivation,False,69,MEMBER,False,False,False,0.8,0.1690140845,0.9239130435,0.3333333333,0.07860762409,0.9213923759,8.878525073e-06,1.133503399e-05
Currently I am worried that my training/prediction preprocessing will diverge over time.,Motivation,False,88,NONE,False,False,False,0.2954545455,0.1940298507,0.4160887656,0.1666666667,0.3861707704,0.6138292296,0.3801876085,0.001120764685
"Unfortunately, I haven't been able to reproduce this so there's no chance of it making the 0.22 code split.",Bug Reproduction,False,107,CONTRIBUTOR,False,False,False,1.0,0.3064516129,1.0,0.1475409836,0.2953350651,0.7046649349,0.0001270779714,5.14e-05
worse JIT compiler optimization at build time or something?,Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,0.4285714286,0.1343283582,0.6666666667,0.3930635838,0.005219068791,0.9947809312,4.36e-05,5.27e-05
"I guess -Xmoi, -Xmine, -Xmaxe also matter here ?",Solution Discussion,False,48,CONTRIBUTOR,False,False,False,0.6153846154,0.05479452055,1.0,0.1899441341,0.01381788133,0.9861821187,0.0003613942987,0.001770078156
"I have find the reason is ldconf,  ldconfig is a dynamic link library management command whose purpose is to allow the dynamic link library to be usedby the system.",Investigation and Exploration,False,164,NONE,False,False,False,0.8333333333,0.2362204724,0.8093841642,0.1111111111,0.7354114739,0.2645885261,0.4152157275,0.1560011388
"Yes, it makes sense to see whether compilation time increased or it was always that bad (24 sec for one warm compilation !)",Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.328358209,1.0,0.4161849711,0.00530190674,0.9946980933,5.28e-06,5.04e-06
Is it possible that caused the problem?,Investigation and Exploration,False,39,NONE,False,False,False,0.5,0.0985915493,0.6783625731,1.0,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
"Repro rate with following command was 3/4:

CODE

Console:

CODE

Adding scratch space and allowing huge methods while only doing CODE did the trick.",Investigation and Exploration,True,157,CONTRIBUTOR,False,False,False,0.4117647059,0.2105263158,0.1666666667,0.8422391858,0.8337431676,0.1662568324,0.02587954735,0.00358081273
This is worrisome.,Social Conversation,False,18,CONTRIBUTOR,False,False,False,0.2307692308,0.04838709677,0.25,0.388185654,0.2965277651,0.7034722349,0.003121198774,0.006977483614
To be honest I would rather remove all of them and then do a binary search.,Solution Discussion,False,75,CONTRIBUTOR,False,False,False,1.0,0.09195402299,1.0,0.4007352941,0.765544539,0.234455461,4.91e-05,4.26e-05
"@yarikoptic, I can't find the CODE failure under 0.19.0-1 logs.",Investigation and Exploration,True,63,MEMBER,False,False,False,1.0,0.1617647059,0.4959349593,1.0,0.5467479566,0.4532520434,0.01188879527,0.03044075803
Or just testing that values are stored in the same spot dueto collision?,Potential New Issues and Requests,False,72,MEMBER,False,False,False,0.8125,0.1911764706,0.3089430894,1.0,0.3553526876,0.6446473124,0.003096425316,0.01032797867
Here's a design that achieves something like the reference counting:,Solution Discussion,False,68,MEMBER,False,False,False,0.3846153846,0.1612903226,0.4757709251,0.2941176471,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"-Xint run, xlc16 build looks 15% better;
JIT-compiler run, xlc13 build looks 8% better.",Testing,False,88,CONTRIBUTOR,False,False,False,0.7272727273,0.09195402299,1.0,0.9595588235,0.7980912206,0.2019087794,0.004816889792,3.05e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.411637931,1.0,0.4930156902,0.5069843098,0.3197097642,0.006507399198
"where batch_norm_layer is similar to the examples from SCREEN_NAME  SCREEN_NAME , conv2d_stride2_valid is just a def to define a convolutional layer, and W_conv1 and b_conv1 are variables holding the weights and biases.",Usage,False,219,NONE,False,False,False,0.9142857143,0.1230769231,0.1391862955,0.7391304348,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"Having some bundles, predefined ""easy-starter"" wrappers should be welcomed.",Expected Behaviour,False,75,NONE,False,False,False,0.2325581395,0.1492537313,0.3522884882,1.0,0.2977348857,0.7022651143,0.1209962692,0.001143668596
I will give it a try on commandline.,Investigation and Exploration,False,36,NONE,True,False,False,0.1904761905,0.08080808081,1.0,0.7052631579,0.2144667264,0.7855332736,0.001641357342,0.00438505838
"So, the call sequences need to be:

*",Solution Discussion,False,39,CONTRIBUTOR,False,False,False,0.07207207207,0.0625,0.6153846154,0.7055555556,0.08012656297,0.919873437,0.0570348239,0.002818533349
Arrg ... it seemed impossible things actually happened.,Social Conversation,False,55,CONTRIBUTOR,False,False,False,0.4375,0.04022988506,0.5,0.5257352941,0.7663923908,0.2336076092,0.0001376186725,1.89e-05
"Comparing the output against the only prior failure I've found linked from this issue, which is from the initial comment https://github.com/eclipse-openj9/openj9/issues/14014#issue-1063735139

Within rc021, the original failure occurred in CODE:
CODE
The crash was in libj9vm29.so:
CODE",Investigation and Exploration,True,291,CONTRIBUTOR,False,False,False,0.5466666667,0.4408602151,0.5,0.9884169884,0.9938790902,0.006120909826,0.03826814184,0.02585402974
If its thrown by the bytecodeinterpreter CODE target only CODE will trigger it.,Investigation and Exploration,True,79,CONTRIBUTOR,False,False,False,0.6842105263,0.1413043478,0.6666666667,0.3144654088,0.3660920551,0.6339079449,0.0001236847171,0.0002473694342
I noticed that in my platform CODE is not loaded...,Investigation and Exploration,True,51,NONE,False,False,False,0.7142857143,0.1408450704,0.6754385965,0.8333333333,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
You could also fake out CODE with CODE and CODE but that would be quite ugly :).,Workarounds,True,80,CONTRIBUTOR,True,False,False,0.3617021277,0.2537313433,0.5256588072,0.2142857143,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"GC walks all classes of this classloader and for each one
- set ""unloaded"" flag to j9class
- replace pointer to class object to -1
- remove class from active classes list (and re-assign CODE and CODE to itself)
- issue a hook ""class unloading""

When this loop is complete GC calls CODE and first thing this function triggers ""classloader unload"" hook.",Investigation and Exploration,True,357,CONTRIBUTOR,False,False,False,1.0,0.7032967033,0.6,0.534965035,0.8542739958,0.1457260042,0.001618376001,0.002043575217
@pavan-08 Install openmpi on your system also nccl 2.x whatever is the latest from nvidia.,Solution Discussion,False,90,NONE,True,False,False,0.75,0.1181102362,0.9618768328,0.3333333333,0.9293111322,0.07068886784,8.356226683e-05,0.5218093819
I notice the cmdline tester for cmdLineTester_locales is already running with -Xint.,Investigation and Exploration,False,84,CONTRIBUTOR,True,False,False,0.2727272727,0.2068965517,0.1428571429,0.7889908257,0.9968553268,0.003144673225,0.003909680331,0.004205153524
"created a new env and installed everything with conda, still freezes indefinitely.",Observed Bug Behaviour,False,82,NONE,False,False,False,0.8,0.1237113402,0.573964497,0.2,0.8488522439,0.1511477561,0.0002798718168,0.0005769674315
"For me, the way tensorpack handles input data, is the most elegant way.",Solution Discussion,False,71,NONE,False,False,False,0.7222222222,0.1940298507,0.8307905687,0.75,0.7179125891,0.2820874109,0.01649590529,0.01478320176
-         Need to ensure configuration/setup of English is identical across workers,Solution Discussion,False,83,NONE,False,False,False,0.4285714286,0.07843137255,0.1511254019,0.8666666667,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
The only method that could be compiled would be CODE.,Investigation and Exploration,True,53,CONTRIBUTOR,False,False,False,0.1075268817,0.1075268817,0.4166666667,0.3861003861,0.3937305493,0.6062694507,0.03688423691,0.3568236584
So I guess that's a question to SCREEN_NAME  too.,Solution Discussion,False,49,MEMBER,False,False,False,1.0,0.1470588235,0.8658536585,0.3333333333,0.6329218471,0.3670781529,0.02547446062,0.02946766485
Thanks in advance!,Social Conversation,False,18,NONE,False,False,False,0.07142857143,0.03092783505,0.9437869822,1.0,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
n_jobs=-1 is what freezes indefinitely.,Observed Bug Behaviour,False,39,NONE,False,False,False,0.3333333333,0.05154639175,0.5828402367,0.8,0.8488522439,0.1511477561,0.0002798718168,0.0005769674315
"wasm will run in Node.js, all major browsers, and even outside of any of those, since it is meant to be an extremely portable bytecode.",Solution Discussion,False,135,NONE,False,False,False,0.5952380952,0.3424657534,0.7952586207,0.5555555556,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"@zhongyuk thanks, I've run about 5k updates with CODE, so it should've converged and testing performance using large batch sizes is fine.",Usage,True,137,NONE,False,False,False,0.9230769231,0.09230769231,0.4946466809,0.5555555556,0.386758151,0.613241849,0.0004998808382,0.0004945035936
"@ppwwyyxx stated that queues and StagingArea can still be used with the Dataset API, but I still haven't seen a working example of this.",Usage,False,136,NONE,False,False,False,1.0,0.3582089552,0.9500693481,0.6,0.9876981106,0.01230188943,0.005682714673,0.0468741252
https://github.com/eclipse/openj9-systemtest/pull/99,Investigation and Exploration,False,52,CONTRIBUTOR,True,False,False,0.05,0.01492537313,1.0,0.7803468208,0.01725199905,0.9827480009,1.18e-05,3.36e-06
But it is probably something in the OS/environment.,Investigation and Exploration,False,51,NONE,True,False,False,0.25,0.09090909091,0.2142857143,0.4912280702,0.1973084735,0.8026915265,0.001977734278,0.003898730278
Please help me how to continue training the model.,Usage,False,50,NONE,False,False,False,0.8181818182,0.01302460203,0.5874587459,0.6666666667,0.1703708442,0.8296291558,0.06612589558,0.0413883417
"
REFERENCE",Investigation and Exploration,False,10,NONE,False,False,False,0.05405405405,0.002894356006,0.05940594059,0.6666666667,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
Tagging Wikipedia should be no problem.,Solution Discussion,False,39,MEMBER,False,False,False,0.2068965517,0.03921568627,0.5980707395,0.2,0.1671397646,0.8328602354,3.922323826e-06,4.685962093e-06
"The freeze they are referring to is the one in https://github.com/scikit-learn/scikit-learn/issues/2889#issuecomment-334155175, which you don't seem to have.",Investigation and Exploration,False,157,MEMBER,False,False,False,0.4857142857,0.175257732,0.7455621302,0.4,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
"Sure, debug build just exposed some confusion in the calling conventions for helper calls.",Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.8235294118,0.109375,0.5,0.2277777778,0.03092806384,0.9690719362,0.003185934733,0.001540680846
The callable could also return a value whether or not the training should proceed.,Solution Discussion,False,82,MEMBER,False,False,False,0.1971830986,0.1971830986,0.2065217391,0.625,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
We are hoping for 0.11.0 release.,Task Progress,False,33,CONTRIBUTOR,False,False,False,0.6,0.046875,1.0,0.8,0.1929866325,0.8070133675,0.000130769984,0.005357918949
I expect starting with 200 we will fail.,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.2424242424,0.06015037594,0.8235294118,0.5496183206,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
See [tensorflow/go/genop/main.go] URL  and [tensorflow/go/op/generate.go] URL  for inspiration.,Motivation,False,95,MEMBER,False,False,False,0.4848484848,0.2191780822,0.9375,1.0,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"At the same time, I would very happy to make this be merged by Tensorflow official group, that would be a zero-cost PR to me :)",Action on Issue,False,127,CONTRIBUTOR,False,False,False,0.7297297297,0.3698630137,0.6099137931,1.0,0.6566062306,0.3433937694,0.04791701478,0.0005984425886
I don't have access to the others to check.,Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.4736842105,0.0989010989,1.0,0.1363636364,0.1134912755,0.8865087245,0.008570999411,0.04891716703
"The OP's date was from 2015, its now 2017 and it's not really been picked up by anyone on the project.",Task Progress,False,102,NONE,False,False,False,0.8076923077,0.2876712329,0.5215517241,0.3333333333,0.6112664041,0.3887335959,0.000183250911,0.003347427571
There look to be over 100k nodes in the method.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.1470588235,0.07518796992,0.6666666667,0.8498727735,0.8337431676,0.1662568324,0.02587954735,0.00358081273
"The methods compiled during that period when the problem appeared are:
CODE
I don't think it's one these at fault though.",Investigation and Exploration,True,123,CONTRIBUTOR,False,False,False,0.8518518519,0.2875,1.0,0.7352941176,0.8886091519,0.1113908481,0.05954547102,0.2271166044
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2521551724,1.0,0.184811133,0.815188867,0.06623967139,0.01420703591
@pshipton I understand the concern.,Social Conversation,False,35,CONTRIBUTOR,False,False,False,0.2272727273,0.03424657534,0.3333333333,0.9497206704,0.9684026741,0.03159732594,2.94e-05,0.0001713134092
I have access to both CODE and CODE and the attribute is set to True on both of them.,Investigation and Exploration,True,85,CONTRIBUTOR,False,False,False,1.0,0.2087912088,0.75,0.1328671329,0.1134912755,0.8865087245,0.008570999411,0.04891716703
Need to identify the set of C helpers called directly.,Solution Discussion,False,54,CONTRIBUTOR,False,False,False,0.5,0.078125,1.0,0.4888888889,0.03780096692,0.9621990331,2.53e-05,3.78e-05
P.S. The batch norm layer is used just after the last fully connected layer of the network and before softmax.,Usage,False,110,NONE,False,False,False,1.0,0.07692307692,0.8051391863,1.0,0.6241540904,0.3758459096,0.007173142915,0.07061844097
*         A CODE represents a collection of data elements.,Solution Discussion,True,58,CONTRIBUTOR,True,True,False,0.1914893617,0.1343283582,0.02635228849,0.6333333333,0.0,1.0,0.0,0.000766008561
"And when run in training or test time, CODE",Usage,True,43,NONE,False,False,False,0.4285714286,0.03461538462,0.1006423983,0.6666666667,0.2055898638,0.7944101362,0.009973469892,0.06906725807
This is a part of the DLT Optimization.,Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,0.1568627451,0.08791208791,0.2380952381,0.4265734266,0.8054811495,0.1945188505,0.1631008731,0.2634355634
@Leonardo2718 I think the assert should just be removed:,Solution Discussion,False,56,CONTRIBUTOR,False,False,False,0.18,0.1451612903,0.5,0.8743169399,0.9695596396,0.03044036043,7e-05,0.07716070228
"Might aswell limit n_iter to 250, as we know divergence precedes that.",Investigation and Exploration,False,70,MEMBER,False,False,False,0.7058823529,0.1764705882,0.6422764228,1.0,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
"If you are asking about issuers of memory allocation requests with OMRPORT_VMEM_MEMORY_MODE_EXECUTE there are only:
- J9::CodeCacheManager::allocateCodeCacheSegment() uses it as well as MEMORY_TYPE_CODE caused use the same flag for memory segments
- initS390WriteOnceHelpers() in compiler/runtime/Runtime.cpp",Investigation and Exploration,True,310,CONTRIBUTOR,False,False,False,1.0,0.2126436782,0.6666666667,0.2242647059,0.7475845162,0.2524154838,0.0006037502447,2.74e-05
"With ulimit -m unlimited:

https://ci.eclipse.org/openj9/view/Test/job/Grinder/683 - multiheap:24,buckets x 3 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/684 - multiheap:32,buckets - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/685 - multiheap,buckets - failed

Without changing ulimit:
https://ci.eclipse.org/openj9/view/Test/job/Grinder/686 - multiheap x 3 - passed",Solution Discussion,False,405,CONTRIBUTOR,True,False,False,1.0,0.4677419355,1.0,0.2573839662,0.04815731435,0.9518426857,7.29e-05,0.4459959687
I have been running the same code and simply wanted to update the model with the new month data and it stopped running.,Observed Bug Behaviour,False,119,NONE,False,False,False,1.0,0.2371134021,0.8165680473,0.6666666667,0.8567528578,0.1432471422,0.01083986775,0.005718638633
"An offending field is
CODE",Investigation and Exploration,True,27,CONTRIBUTOR,False,False,False,0.4,0.05084745763,0.6,0.4060606061,0.418446316,0.581553684,0.006630634685,0.00192059444
The core file is not saved on disk.,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,0.2162162162,0.170212766,0.2,0.4384615385,0.3704340031,0.6295659969,0.007316005049,0.001912007579
"Great, this should be a big help.",Social Conversation,False,33,CONTRIBUTOR,False,False,False,1.0,0.1044776119,1.0,0.8100558659,0.1146639484,0.8853360516,0.0001353182306,0.0009687751028
"Here's the steps I did:
1) downloaded hotspot JDK8 from https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u192-b12/OpenJDK8U-jdk_x64_windows_hotspot_8u192b12.zip
2) downloaded OpenJ9/OpenJDK11 from  https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.1%2B13/OpenJDK11-jdk_x64_windows_openj9_11.0.1_13.zip
3) downloaded Eclipse 4.9 from http://download.eclipse.org/eclipse/downloads/drops4/R-4.9-201809060745/download.php?dropFile=eclipse-SDK-4.9-win32-x86_64.zip
4) configured eclipse.ini file to jdk8 (Hotspot)
5) installed http://dist.springsource.com/snapshot/TOOLS/sts4/nightly/e4.9 and",Bug Reproduction,False,643,CONTRIBUTOR,False,False,False,0.4301075269,0.404040404,0.6666666667,0.1192982456,0.112164474,0.887835526,0.006411425468,0.002601855342
"[AlenBadel@27e93e6] URL 

I would like to see detailed explanation of mechanism how this problem occur as well of how proposed change help to fix the problem.",Social Conversation,False,160,CONTRIBUTOR,False,False,False,0.6,0.2967032967,1.0,0.6048951049,0.8563386878,0.1436613122,0.005301125006,0.003785967656
That's correct.,Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.2222222222,0.02197802198,0.5,0.1993006993,0.3546423234,0.6453576766,0.0005314990198,0.0001694634556
"The Python threading API isn't perfect, but in general when we're doing mostly non-GIL-taking tasks in NumPy or whatever, the TF queue API seems more of a burden than a help.",Motivation,False,174,CONTRIBUTOR,False,False,False,0.825,0.4925373134,0.2565880721,1.0,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"I kind of ran out of ideas of why this is happening, @cathyzhyi @liqunl since I see you guys work on JSR292 related things, I have a question for you guys, is the content of a ""global reference"" which stores a method handle object pointer supposed to change during a compilation?",Contribution and Commitment,False,279,CONTRIBUTOR,False,False,False,0.8644067797,0.2698412698,0.4444444444,0.48,0.4461627725,0.5538372275,0.06246846736,0.001023944321
"This may be be a BLAS problem indeed, the CODE env works fine.",Investigation and Exploration,True,62,CONTRIBUTOR,False,False,False,0.65,0.1830985915,0.3918128655,0.2222222222,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"Please see: javanext/issues/176#issuecomment-19050257
1- no setting
2- export MALLOCOPTIONS=multiheap
3- export MALLOCOPTIONS=multiheap,considersize


1 |",Testing,False,160,NONE,False,False,False,0.6,0.3387096774,0.5,0.9789029536,0.923401339,0.07659866095,0.01459087501,0.09372347346
"hi,I have same problem as other described that I have good training results but validation/testing is bad after using batch_norm.",Usage,False,129,NONE,False,False,False,1.0,0.08461538462,0.5246252677,0.2,0.4870778235,0.5129221765,0.5564473214,0.0300603195
We're trying to understand why the system is so stressed.,Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.3448275862,0.1492537313,1.0,0.8901734104,0.01918518568,0.9808148143,1.3e-06,0.0002576922821
Or even to grow by 110% (10% more estimators): CODE,Solution Discussion,True,51,MEMBER,False,False,False,0.243902439,0.1408450704,0.2608695652,1.0,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
"Many thanks to everyone who pushed this along, particularly @0dvictor for the common stack map code and initial prototype on X, and @fjeremic for the greatly-simplified platform code and general diligence throughout this process.",Social Conversation,False,229,CONTRIBUTOR,False,False,False,1.0,0.546875,1.0,0.3475177305,0.7552095159,0.2447904841,0.5748015215,0.01563784821
"The lexemes.bin data file has been constructed in a way that depends on various intermediate data files --- for instance, I processed an unannotated corpus into a list of word counts, and then smoothed the counts with another script, and then consumed the smoothed probabilities with the current quick-and-dirty make_lexicon.py script, which isn't even in this repository yet.",Solution Discussion,False,376,MEMBER,False,False,False,1.0,1.0,0.0775862069,0.12,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"Otherwise if a package dependends, say on numpy, and you happen not to have the latest numpy, numpy will be upgraded with pip, which you do not want.",Solution Discussion,False,149,MEMBER,False,False,False,0.875,0.2886597938,0.5059171598,1.0,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
This core file was created using CODE.,Social Conversation,True,38,CONTRIBUTOR,False,False,False,0.2916666667,0.09333333333,0.5,0.3785310734,0.03339237467,0.9666076253,0.01898374244,2.23e-05
The larger corpora cost more.,Solution Discussion,False,29,NONE,False,False,False,0.1351351351,0.08333333333,0.6034482759,0.3333333333,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"@dominikandreas If your poor testing performance is caused by statistics not converging, you'd see reasonably good training performance but bad testing performance.",Usage,False,164,CONTRIBUTOR,False,False,False,1.0,0.08846153846,0.5053533191,0.3333333333,0.386836239,0.613163761,0.0004945035936,0.01129830123
"Given the reference to the memory segment, offset, size and a value, the method will set the entire memory segment to a value specified by the value argument.",Investigation and Exploration,False,158,CONTRIBUTOR,False,False,False,0.9032258065,0.5957446809,0.3333333333,0.7653846154,0.6986733294,0.3013266706,0.2919761514,0.1217072968
[CompareAndSwapInline.zip] URL,Investigation and Exploration,False,31,NONE,True,False,False,0.1111111111,0.02985074627,1.0,0.5642458101,0.005492387743,0.9945076123,0.0001990987978,0.0006886577466
I guess now you have enough info for bug related to current issue.,Social Conversation,False,66,CONTRIBUTOR,False,False,False,1.0,0.1368421053,0.7684210526,1.0,0.1888805584,0.8111194416,0.0002408449665,3.85279729e-05
"Agreed, since there is no need to externalize this outside of the JIT codebase, a TR_ option or equivalent seems sensible, and can be set in the hook disable code.",Solution Discussion,False,163,CONTRIBUTOR,False,False,False,1.0,0.46875,1.0,0.3262411348,0.5689232806,0.4310767194,0.1839370639,0.4569382132
This is happening because the instructions generated which computes how much memory should be cleared was not correct[2].,Investigation and Exploration,False,121,CONTRIBUTOR,False,False,False,0.5806451613,0.3829787234,0.4444444444,0.7769230769,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_ppc64le_linux_Nightly/32
jdk_util_1
-Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:-UseCompressedOops
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java

https://openj9-artifactory.osuosl.org/artifactory/ci-openj9/Test/Test_openjdk17_j9_sanity.openjdk_ppc64le_linux_Nightly/32/openjdk_test_output.tar.gz
CODE",Testing,True,458,CONTRIBUTOR,False,False,False,1.0,0.3152173913,1.0,0.1194968553,0.3427313433,0.6572686567,0.01482991505,0.0002941917355
"(Indirectly, this could also be used to implement subsampling strategies or for monitoring the fitting process.)",Motivation,False,112,MEMBER,False,False,False,0.8421052632,0.2253521127,0.9492753623,1.0,0.07863322684,0.9213667732,1.645860972e-05,1.933623445e-05
You are right there are two use cases.,Social Conversation,False,38,NONE,False,False,False,0.275862069,0.125,0.8345588235,0.25,0.262961705,0.737038295,0.002558830732,0.003516053103
They key priority is that the library should make the right thing easy.,Solution Discussion,False,71,MEMBER,False,False,False,0.3170731707,0.08496732026,0.1864951768,0.6428571429,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
My code is like this now:**Batch Normalisation wrapper**CODE**Model definition**CODE**Training**CODE**Validation**CODE,Usage,True,118,NONE,False,False,False,1.0,0.03461538462,0.6638115632,1.0,0.5706429231,0.4293570769,5.184475509e-05,0.001836887066
"Once that change is in, can we revisit this question to see how much overhead remains on different platforms?",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.6129032258,0.1386861314,0.5,0.8327137546,0.06284506069,0.9371549393,0.007031224118,0.002372867318
"Im facing the same issue, but I am trying to run tensorflow using nvidia-docker.",Bug Reproduction,False,80,NONE,False,False,False,0.8,0.125984252,0.5835777126,0.5,0.4545910844,0.5454089156,0.2835245529,0.04654492211
*         https://groups.google.com/forum/#!topic/v8-reviews/DjiUKahI6ak,Solution Discussion,False,72,NONE,False,False,False,0.04761904762,0.02739726027,0.8017241379,0.8888888889,0.7855057516,0.2144942484,0.4412746119,0.2066977323
CODE,Expected Behaviour,True,4,NONE,False,False,False,0.03571428571,0.015625,0.7830882353,0.625,0.2567040608,0.7432959392,0.02304981706,0.003308173532
"I got pretty far along with this, but last I remember a was having issues with TF_Session related segfaults.",Solution Discussion,False,108,NONE,False,False,True,19.0,0.2602739726,0.9978448276,12.0,1.0,0.0,0.5674118797,0.0
GC changes are in #4168,Solution Discussion,False,23,MEMBER,False,False,False,1.0,0.03424657534,1.0,0.4357541899,0.2039479555,0.7960520445,0.2112765929,0.1022989682
"However, the following will print ""hit exception"" forever, unless CODE is used. CODE",Usage,True,84,NONE,False,False,False,0.8666666667,0.1940298507,0.5117891817,1.0,0.4431919084,0.5568080916,0.01145704499,0.1250288844
Using CODE as the first line this works fine for amd64.,Potential New Issues and Requests,True,55,MEMBER,False,False,False,0.5789473684,0.1617647059,0.4593495935,0.5714285714,0.5420075121,0.4579924879,0.02112247576,0.002129547778
I was putting print statements into the code and comparing the values of the variable X during different stages of execution...,Investigation and Exploration,False,127,NONE,False,False,False,1.0,0.3088235294,0.6016260163,0.5,0.5798125448,0.4201874552,0.01015048758,0.0002044255366
[1] which expands bitfield support so blacklisting that type should be temporary.,Workarounds,False,81,CONTRIBUTOR,False,False,False,0.5217391304,0.1016949153,0.8,0.6484848485,0.5222439948,0.4777560052,0.01501286261,0.003822899709
"I believe using of this list is more effective then iterate all classes in the system and look for ""unloaded"" flag.",Investigation and Exploration,False,115,CONTRIBUTOR,False,False,False,0.5526315789,0.2307692308,0.4,0.8251748252,0.8672060445,0.1327939555,0.005897328255,0.0001401924951
Definitely some timing issue.,Investigation and Exploration,False,29,CONTRIBUTOR,True,False,False,0.3636363636,0.02116402116,0.6666666667,0.06285714286,0.1331240796,0.8668759204,0.002813570532,0.001175011289
Also weird that only certain platforms seem to be affected.,Investigation and Exploration,False,59,CONTRIBUTOR,True,False,False,1.0,0.1492537313,1.0,0.5549132948,0.01118684115,0.9888131589,5.33e-07,5.92e-05
This PR is related to ASGCT but doesn't immediately appear to have anything to do with memory corruption: https://github.com/eclipse-openj9/openj9/pull/13979,Solution Discussion,False,157,CONTRIBUTOR,False,False,False,1.0,0.1826923077,1.0,0.2817679558,0.09933503066,0.9006649693,0.0008767019524,0.001297479501
"Given that CODE is the key method to generate the class bytes (to be used in CODE),  I will try to 1) disable optimizing it and 2) force compiling it with CODE (VM will wait until the compilation is finished before executing a method) to see what happens in both cases.",Solution Discussion,True,269,CONTRIBUTOR,False,False,False,0.7647058824,0.3909774436,1.0,0.427480916,0.480594089,0.519405911,0.009466671463,0.009122488321
"I think it'd be great to introduce an API lineage of scikit-learn flavour, or that simple.",Potential New Issues and Requests,False,90,NONE,False,False,False,0.5294117647,0.4736842105,0.897810219,0.2857142857,0.02374400586,0.9762559941,0.01990868788,0.001584253352
https://ci.eclipse.org/openj9/view/Test/job/Grinder/519/,Testing,False,56,CONTRIBUTOR,True,False,False,0.01492537313,0.01492537313,1.0,0.1907514451,0.004657816202,0.9953421838,0.0006332221901,0.0003635972979
I do see buckets option later on.,Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.5833333333,0.1129032258,0.5,0.1054852321,0.005042930135,0.9949570699,0.007003736688,0.2206716703
"I think this is a recipe for having long-running processes suddenly die, though. Mostly Python is designed around the assumption that things can either be pickled or they can't.",Solution Discussion,False,177,MEMBER,False,False,False,0.652173913,0.1960784314,0.4147909968,0.7368421053,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
We could hack through this by writing down the OOV strings in the global store only when we pack into an array.,Workarounds,False,111,MEMBER,False,False,False,0.44,0.3548387097,0.5682819383,0.7142857143,0.2188215168,0.7811784832,0.0010422294,0.002309046196
FYI Have just updated to 11.0.6 (openj9 0.18.0) so will report back on any findings,Bug Reproduction,False,83,NONE,True,False,False,1.0,0.1127819549,1.0,0.3944020356,0.4733217934,0.5266782066,0.001447858298,0.01656125888
"The instances where these guards can fail are rare, hence the intermittent nature of this problem.",Observed Bug Behaviour,False,98,MEMBER,False,False,False,0.6956521739,0.1739130435,0.6,0.9371069182,0.6394476,0.3605524,0.0002725427144,0.05549281815
"For example, the following codeCODEgets 3 CODE before getting a CODE.",Usage,True,69,NONE,False,False,False,0.7333333333,0.1641791045,0.8183079057,0.8,0.6302370014,0.3697629986,0.123123279,0.6886518758
cross fingers,Social Conversation,False,13,NONE,False,False,False,0.1111111111,0.02816901408,0.8801169591,0.75,0.6460564675,0.3539435325,0.002055691741,0.0001352009984
I don't really see the motivation for that.,Social Conversation,False,43,MEMBER,False,False,False,0.347826087,0.1126760563,0.8949275362,0.5714285714,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
xLinux: https://ci.adoptopenjdk.net/job/Test_openjdk15_j9_sanity.openjdk_x86-64_linux_xl/41/console,Investigation and Exploration,False,99,CONTRIBUTOR,True,False,False,1.0,0.04255319149,1.0,0.06153846154,0.003581389105,0.9964186109,0.0004608281741,0.001943492734
"About 20 minutes or so, and thus is not easy to work with to investigate JIT failures.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.5151515152,0.1278195489,0.75,0.4936386768,0.5596707013,0.4403292987,0.1072383922,0.000211333354
So the error is reducing much more slowly...,Investigation and Exploration,False,44,MEMBER,False,False,False,0.2962962963,0.1176470588,0.581300813,0.2,0.5763800548,0.4236199452,0.006827881986,0.01015048758
When I look in the folder cuda folder for where I ran the tar command like CODE I seeCODE,Solution Discussion,True,89,NONE,False,False,False,1.0,0.1496062992,0.357771261,0.6666666667,0.3589581559,0.6410418441,0.02559963321,0.2554187912
ValueError: Attempt to reuse RNNCell with a different variable scope than its first use.,Observed Bug Behaviour,False,88,NONE,True,True,False,0.1772151899,0.02026049204,0.003300330033,0.09090909091,0.0,1.0,0.0,0.0005278053632
17 just happens to be where we found it.,Investigation and Exploration,False,40,MEMBER,False,False,False,0.3214285714,0.09677419355,0.5714285714,0.9189189189,0.8498306174,0.1501693826,0.005725859998,0.01048932789
*         [mljs] URL ,Solution Discussion,False,21,NONE,False,False,False,0.1,0.04109589041,0.4073275862,0.875,0.4752476502,0.5247523498,0.0635462371,0.3197097642
Does this summary of pros/cons sound about right?,Solution Discussion,False,49,NONE,False,False,False,0.3214285714,0.05882352941,0.115755627,0.1333333333,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5021551724,1.0,0.5958652714,0.4041347286,0.009641476675,0.01115728041
"The patch will touch every class, and it might be fiddly, especially to keep efficiency nice.",Solution Discussion,False,93,MEMBER,False,False,False,0.5161290323,0.1045751634,0.05144694534,0.6666666667,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
2. CODE does nothing once java has hung.,Observed Bug Behaviour,True,40,NONE,True,False,False,0.3636363636,0.1066666667,0.5,0.1412429379,0.002090300149,0.9979096999,0.0002669513564,0.000160608439
"Then a solution I really like to see, is to be able to receive(similar to dequeue) tensors from a different process.",Expected Behaviour,False,116,CONTRIBUTOR,False,False,False,0.7,0.3134328358,0.1067961165,0.3076923077,0.008365735399,0.9916342646,0.03692313957,0.0188753671
I'm surprised nobody is using Windows it seems.,Social Conversation,False,47,CONTRIBUTOR,False,False,False,0.2962962963,0.0522875817,0.8938906752,0.4545454545,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
I've just realised we have a higher level of verbosity available to us.,Investigation and Exploration,False,71,MEMBER,False,False,False,0.8235294118,0.2058823529,0.6341463415,0.7777777778,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
And the one which threw error seems to use MKL..,Investigation and Exploration,False,48,NONE,False,False,False,0.3793103448,0.1549295775,0.5760233918,0.6666666667,0.4547028327,0.5452971673,0.0006836161022,0.0003054131048
The SCC in CODE was always removed before running.,Bug Reproduction,True,50,CONTRIBUTOR,False,False,False,0.2727272727,0.06766917293,0.5,0.4885496183,0.5596707013,0.4403292987,0.1072383922,0.000211333354
"wow, you will enjoy it!",Social Conversation,False,23,NONE,False,False,False,0.1388888889,0.03937007874,0.8269794721,0.7777777778,0.7354114739,0.2645885261,0.4152157275,0.1560011388
"Whenever JITServer needs to access the object pointer for compilation, it will send back the global reference and the dereferencing happens on JITClient, then the content (which is the object pointer) will be sent back to JITServer for compilation.",Investigation and Exploration,False,248,CONTRIBUTOR,False,False,False,0.8125,0.2063492063,0.4117647059,0.5657142857,0.447477842,0.552522158,0.001615795728,8.48e-05
"Yes, single CPU and 8 cores (CODE).",Investigation and Exploration,True,35,NONE,True,False,False,1.0,0.05109489051,1.0,0.4535315985,0.02071700436,0.9792829956,2.11e-05,6.38e-05
This line appears to be used because the same architecture is used on both the encoder and decoder side.,Investigation and Exploration,False,104,NONE,False,False,False,0.5135135135,0.02749638205,0.2739273927,0.6,0.06816238482,0.9318376152,0.001820264,0.0002230832021
Unfortunately I'm unable to limit further due to OSR.,Task Progress,False,53,CONTRIBUTOR,False,False,False,0.6428571429,0.06766917293,0.6666666667,0.8676844784,0.8404830514,0.1595169486,0.03161211786,0.000959379849
"Not sure the best way to fix it, but I did the following on Ub18 and it seemed to fix the problem
CODE",Solution Discussion,True,103,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.3701657459,0.1323546318,0.8676453682,3.48e-05,4.06e-05
r2 is calculated from r12.,Solution Discussion,False,26,CONTRIBUTOR,False,False,False,0.2631578947,0.0390625,0.7142857143,0.55,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
@ebrevdo I am as well facing the same issue and unable to progress with seq2seq.,Bug Reproduction,False,80,NONE,False,False,False,0.7142857143,0.02170767004,0.5676567657,0.3333333333,0.1519966151,0.8480033849,0.02814194594,0.00832954705
"One way to know once you have built scikit-learn from source is to run the equivalent of CODE (Google seems to say CODE) on CODE (name will be different if you are using Python 3, i.e. something like CODE).",Investigation and Exploration,True,206,MEMBER,False,False,False,1.0,0.5633802817,0.5438596491,0.5,0.4545783063,0.5454216937,7.597272067e-05,4.179191556e-05
Trace CODE,Observed Bug Behaviour,True,10,NONE,True,True,False,0.1,0.02105263158,0.06315789474,0.6,0.0,1.0,0.0,0.008598273629
I would think that we would probably want to abort all current compilations if a class gets redefined (at least all the compilations that might try to look at the class that got redefined).,Solution Discussion,False,189,CONTRIBUTOR,False,False,False,0.7727272727,0.5483870968,0.9,0.9398907104,0.9845135933,0.01548640667,0.001320457339,0.001947660621
Next step is to hack the agent to not even make the call (and I'll have a look through the agent code to see if I can spot anything obvious).,Investigation and Exploration,False,141,CONTRIBUTOR,False,False,False,1.0,0.2884615385,1.0,0.7016574586,0.2972782131,0.7027217869,0.01291495446,0.0003838884996
but it is still a win even on this Windows 10 machine.,Investigation and Exploration,False,54,CONTRIBUTOR,False,False,False,0.4615384615,0.08759124088,0.6,0.6394052045,0.02581807522,0.9741819248,0.0002654464138,9.32e-05
"Hey, I just took a look at the StringStore class in main and saw that some work has been done on this.",Task Progress,False,102,NONE,True,False,False,1.0,0.3548387097,0.8105726872,0.2,0.6128462627,0.3871537373,0.09855593002,0.1714850105
"-         A potential advantage of this is that we can also add to the warning message that if they used the LabelEncoder to create the integers, they can now directly use OneHotEncoder (I think this currently is a typical usage pattern).",Solution Discussion,False,238,CONTRIBUTOR,True,False,False,0.9318181818,0.640625,0.4411764706,0.5714285714,0.07430334202,0.925696658,0.1302436707,0.0003197521392
how about specifying greater than??,Solution Discussion,False,35,NONE,False,False,False,0.1428571429,0.03937007874,0.4193548387,0.5714285714,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
"This NPE message indicated that CODE failed at [1], ~which is odd because the line throwing NPE is a CODE method call.",Investigation and Exploration,True,118,MEMBER,True,False,False,1.0,0.2391304348,0.3,0.1572327044,0.3431647145,0.6568352855,0.001046537172,0.001139510487
We've conducted a small experiment to clean up the table during class unloading.,Testing,False,80,CONTRIBUTOR,False,False,False,0.2745098039,0.1538461538,0.8571428571,0.472027972,0.8054811495,0.1945188505,0.1631008731,0.2634355634
Having the same problem with tensor flow 1.1.,Bug Reproduction,False,45,NONE,False,False,False,1.0,0.01157742402,0.5940594059,0.5,0.1804398016,0.8195601984,0.0413883417,0.002511347281
But I could not tell where exactly with full certainty because it is tough to debug.,Investigation and Exploration,False,84,NONE,False,False,False,0.6153846154,0.2352941176,0.5447154472,0.75,0.5694868162,0.4305131838,0.005325768668,0.0007054752894
Here's how to train Word2Vec on the output using Gensim.,Solution Discussion,False,56,MEMBER,False,False,False,0.3333333333,0.2631578947,0.2773722628,0.9444444444,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
@ChengJin01 It might be worth checking what changed between sts-4.0.2.CI-B1362 & sts-4.0.2.CI-B1373 to see if there's something we should be guarding against in the VM to prevent this kind of issue in the future.,Investigation and Exploration,False,212,MEMBER,False,False,False,1.0,0.3535353535,1.0,0.8561403509,0.868283763,0.131716237,0.2306492075,0.1143762639
"The idea would be that if you want to write to any of this loaded data, you have to open it within a context manager, so that the changes are explicitly scoped, and you explicitly decide whether you want to save the changes or dump them.",Solution Discussion,False,237,MEMBER,False,False,False,1.0,0.3006535948,0.4276527331,0.9473684211,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
This was to ensure that we picked the most recent version of the class available.,Solution Discussion,False,81,MEMBER,False,False,False,1.0,0.1094890511,1.0,0.9144981413,0.06881100469,0.9311889953,0.0002285903595,0.0005002484678
"However, I wonder what would happen if the application needed to run in smaller containers, so small that the hot compilation would fail again.",Solution Discussion,False,143,CONTRIBUTOR,False,False,False,1.0,0.3,0.6,0.3823529412,0.2985071133,0.7014928867,0.0007771213165,0.005374605821
Ideally we could develop the concept of explicit _partial support_ of a new language.,Solution Discussion,False,85,CONTRIBUTOR,False,False,False,1.0,0.2333333333,0.3362068966,0.6666666667,0.1948898442,0.8051101558,0.01700768191,0.005299459514
"As an important note, the DLTRecord clean up can also suffer from the same issue.",Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.2941176471,0.1648351648,0.4285714286,0.4405594406,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"We need a log where the failure mode is not the codegen choking on a node which would be cleaned up without the debug options set, but rather the failure mode remains the same as the original problem report.",Investigation and Exploration,False,207,CONTRIBUTOR,False,False,False,1.0,0.2932330827,0.5,0.641221374,0.6945904927,0.3054095073,0.0009859498065,9.44e-05
"if you haven't tried it yet, reinstall tensorflow from the latest source.",Solution Discussion,False,73,NONE,False,False,False,0.8571428571,0.01736613603,0.198019802,0.5,0.05313233101,0.946867669,0.03037586316,0.004152670075
"Even if the desired inputs/outputs asked from the graph would be hard-coded in the exported JS ""sess.run"" equivalent function.",Expected Behaviour,False,126,NONE,False,False,False,1.0,0.2876712329,0.2909482759,1.0,0.2879663406,0.7120336594,0.1434033545,0.06129056889
"Would running with -Xjit:verbose={compilePerformance} be helpful?

Possibly, in that it may tell us why the hot recompilations are happening.",Solution Discussion,False,143,CONTRIBUTOR,False,False,False,1.0,0.2625,0.5,0.2450980392,0.1355154653,0.8644845347,0.0007191271884,0.01574975534
The first run takes even longer (approximately ~23 seconds).,Investigation and Exploration,False,60,NONE,True,False,False,1.0,0.06569343066,1.0,0.5650557621,0.02523589078,0.9747641092,2.73e-05,5.42e-05
"I vaguely remember having trouble with gdb 8 and needing to use gdb 7. There's a copy for x86-64 in /team/keithc/gdb-7, but, unfortunately, I don't know where to find gdb 7 for ppc64le.",Social Conversation,False,185,CONTRIBUTOR,False,False,False,1.0,0.7659574468,1.0,0.2346153846,0.1141703594,0.8858296406,0.01857337902,0.0002203960832
"The class (generated by XLST with OpenJ9) has a bogus entry in the constant pool (index= 68, string = CODE) as follows:
!",Investigation and Exploration,True,122,CONTRIBUTOR,False,False,False,0.7096774194,0.1654135338,0.4,0.3816793893,0.4730620837,0.5269379163,0.005002918608,4.74e-05
The easiest one is probably to use conda and make sure that you use MKL and not Accelerate.,Workarounds,False,91,MEMBER,False,False,False,1.0,0.1855670103,0.3905325444,1.0,0.8130688094,0.1869311906,2.145525001e-05,0.001310816446
"Without CODEset to None (so mean updates are done in place inside BatchNorm), I won't expect surrounding layer (e.g. conv2d) to somehow execute tf.GraphKeys.UPDATE_OPS needed for BatchNorm layer to update running mean and therefore be able to do run on test data later.",Usage,True,269,CONTRIBUTOR,False,False,False,1.0,0.1730769231,0.608137045,0.4,0.5080421357,0.4919578643,0.008986491854,0.001406808951
You collect the batch_norms updates by doing: CODE.,Usage,True,51,NONE,False,False,False,0.25,0.03076923077,0.3062098501,0.5,0.2659544384,0.7340455616,0.1426765631,0.1141986754
"If we already have the warm-start api, we should definitely ""just"" implement that for the ensemble estimators.",Solution Discussion,False,110,MEMBER,False,False,False,0.6,0.2535211268,0.2934782609,1.0,0.03947792369,0.9605220763,6.386923175e-06,3.579484417e-05
"[2] the exception almost occurs every time on the openj9-0.17.0 release build (from AdoptOpenjdk)
CODE
with the following steps:
CODE",Investigation and Exploration,True,136,CONTRIBUTOR,False,False,False,0.5454545455,0.1804511278,0.5,0.3536895674,0.4557884115,0.5442115885,0.03394128121,0.003566914598
The full individual binding wouldnt be too bad from my current starting point.,Solution Discussion,False,78,NONE,False,False,False,0.358974359,0.1917808219,0.75,0.8181818182,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
"I didn't keep the Hadoop command line but the pattern is that the master sends the jar files through the network to the slaves, and the slaves create a temporary directory and copy the jar files there (example: CODE)",Solution Discussion,True,216,CONTRIBUTOR,False,False,False,1.0,0.2671232877,0.5,0.7430167598,0.2657961135,0.7342038865,0.005993563236,0.00238876338
"This doesn't seem to fix the issue, I applied the PR patch to master, built a jdk from clean, and it still happens (it's not the same stack I reported but is similar to other stacks I've seen with this issue all related to memory allocation going haywire)

CODE",Solution Discussion,True,263,NONE,True,False,False,1.0,0.4903846154,1.0,0.270718232,0.097670012,0.902329988,0.002998466112,0.001759615203
@DanHeidinga I set the option but still no dumps.,Investigation and Exploration,False,49,NONE,True,False,False,0.2727272727,0.09090909091,0.1428571429,0.5894736842,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
"I7-6700HQ

That's very close to the i7-6820HQ that I ran on, which makes the difference in absolute times we are seeing pretty weird.",Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,1.0,0.1897810219,0.3333333333,0.4646840149,0.02082693886,0.9791730611,0.0001014576777,0.0001142951797
I think he sent then the prepossessed interpreter and they just laughed and said no.,Social Conversation,False,84,CONTRIBUTOR,False,False,False,0.75,0.1271186441,1.0,0.2545454545,0.4060559153,0.5939440847,0.026079663,0.03011392996
"Excluding it didn't fix the problem, however the jit log of the new run that failed showed another sun.misc.",Solution Discussion,False,108,NONE,True,False,False,1.0,0.2835820896,0.4,0.217877095,0.002791329837,0.9972086702,0.0006464246683,0.0001327325319
Running GridSearchCV or RandomizedSearchCV in a loop and  n_jobs > 1 would hang silently in Jupiter & IntelliJ: CODE,Investigation and Exploration,True,116,NONE,False,False,False,0.1855670103,0.1855670103,0.8224852071,0.3333333333,0.8588999674,0.1411000326,0.005718638633,2.097846668e-05
This could make things easier too.,Motivation,False,34,NONE,False,False,False,0.1935483871,0.08955223881,0.5797503467,0.8,0.4630003862,0.5369996138,0.01269843694,0.02260310577
Please let me know if you need anything else.,Social Conversation,False,45,CONTRIBUTOR,False,False,False,0.375,0.1343283582,1.0,0.4797687861,0.006148737137,0.9938512629,0.0008238462571,6.19e-06
Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR testing passed but failed,Testing,False,75,CONTRIBUTOR,True,True,False,0.8571428571,0.1034482759,0.5,0.009174311927,0.0,1.0,0.0,0.005144640352
"Whether anybody actually *wants* this ""max value""-based method, or whether we are fine with (in the future, after deprecation) only having the ""unique values""-based method.",Expected Behaviour,False,172,CONTRIBUTOR,True,False,False,1.0,0.453125,0.2169117647,0.625,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
"Repro rate with following command was 0/5:

CODE

So limiting while tracing is not able to reproduce the issue.",Bug Reproduction,True,115,CONTRIBUTOR,False,False,False,0.7,0.1578947368,0.25,0.8320610687,0.8292482315,0.1707517685,0.03159699343,0.02587954735
3) Always raise a warning but provide a keyword to silence it (eg CODE),Solution Discussion,True,71,CONTRIBUTOR,True,False,False,0.3181818182,0.21875,0.4485294118,0.6666666667,0.07430334202,0.925696658,0.1302436707,0.0003197521392
@robmsylvester  shouldn't making changes in the scopes of the cells work?,Investigation and Exploration,False,73,NONE,False,False,False,0.7058823529,0.01736613603,0.2838283828,0.2,0.06821665651,0.9317833435,0.0002230832021,5.707607458e-05
Now i just need to find a way to prove my theory.,Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,0.8571428571,0.06349206349,1.0,0.2171428571,0.3084971878,0.6915028122,0.0005070055754,0.000545910493
The choice of the data container is driven by a lot of constrains depending on its size and the execution environment.,Motivation,False,118,NONE,False,False,False,0.7,0.3134328358,0.160887656,0.6,0.04064994448,0.9593500555,0.2125437083,0.01543061897
I've been thinking for a while that context managers are the idiomatic standard for dealing with this problem.,Solution Discussion,False,110,MEMBER,False,False,False,0.4130434783,0.1241830065,0.424437299,0.8947368421,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"More generally, I have noticed wildly different results when using sklearn's TSNE (with identitical perplexity and other parameters) from the bh implementation published by Laurens van der Maaten and the MATLAB version.",Investigation and Exploration,False,219,NONE,False,False,False,1.0,0.4507042254,0.9385964912,0.875,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
"The test that exposed the problem is using CODE, but the increase in inlining and compile time could be affecting default mode as well.",Investigation and Exploration,True,135,CONTRIBUTOR,True,False,False,1.0,0.3582089552,0.6666666667,0.5433526012,0.0111863431,0.9888136569,0.001720565783,5.33e-07
(Like #4836),Expected Behaviour,False,12,CONTRIBUTOR,False,False,False,0.06666666667,0.02985074627,0.1081830791,0.3846153846,0.008365735399,0.9916342646,0.03692313957,0.0188753671
I'm going to close this issue because it's old and most of the information here is now out of date.,Action on Issue,False,99,MEMBER,False,False,False,0.8695652174,0.3333333333,0.4396551724,0.625,0.3864300618,0.6135699382,0.4682936827,0.03367017273
I have certainly seen cases where different VMs/JITs are more or less prone to deadlocks etc due to subtle timing differences.,Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,0.6666666667,0.328358209,0.6666666667,0.6592178771,0.1121434343,0.8878565657,0.001260959053,0.002111653916
"Check out on that;
2) makefile is changed such that, for example, TR_HOST_POWER is somehow undefined, so that ppcCodeSync() is empty.",Investigation and Exploration,False,134,CONTRIBUTOR,False,False,False,0.4680851064,0.1264367816,0.8571428571,0.1764705882,0.7325460239,0.2674539761,0.009169774309,7.65e-05
I agree that it's fairly generalized and it may be the basis for futurework but this has been available for quite a while and most of the fileshaven't been updated in months.,Solution Discussion,False,174,CONTRIBUTOR,False,False,False,1.0,0.4776119403,0.4646324549,1.0,0.4033929473,0.5966070527,0.0005059219333,7.838227136e-05
"We're investigating how to close the gap, and it's very likely that we'll incorporate some of the ideas from the benchmark code into the CODE implementation.",Solution Discussion,True,157,CONTRIBUTOR,True,False,False,0.5531914894,0.3880597015,0.5520110957,0.8928571429,0.4592244679,0.5407755321,0.003916059713,0.008479027653
The pip wheels seem to work fine though!,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.6153846154,0.1126760563,0.3742690058,1.0,0.4148846518,0.5851153482,0.01555461885,0.0004752100597
"If that still fails, can you add the following to the above CODE option set:   CODE and re-run?",Solution Discussion,True,95,CONTRIBUTOR,False,False,False,0.625,0.2150537634,0.8333333333,0.4401544402,0.4846584266,0.5153415734,0.02724539507,0.2051611074
CODE,Investigation and Exploration,True,4,MEMBER,False,False,False,0.04166666667,0.01408450704,0.2777777778,0.5714285714,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
-         1 on defensive.,Solution Discussion,False,25,MEMBER,False,False,False,0.2666666667,0.05633802817,0.7536231884,0.5,0.0743553691,0.9256446309,0.0001053842324,3.965507246e-06
@pwagland Thanks for providing the core file.,Social Conversation,False,45,CONTRIBUTOR,False,False,False,0.21875,0.09333333333,0.25,0.2372881356,0.003598175951,0.996401824,0.0004813876919,5.86e-05
"I'll be writing more about these vectors, and of course releasing the code. I'd like to sharpen up one or two things and run it on more data first.",Potential New Issues and Requests,False,147,MEMBER,False,False,False,1.0,0.7894736842,0.2408759124,0.6666666667,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
The number of segments to be cleared is determined the value stored into the count register.,Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,0.5517241379,0.3404255319,0.3333333333,0.5653846154,0.5039948473,0.4960051527,0.005154978519,0.01512432343
I'll give the build a try to see if it addresses my issue.,Task Progress,False,58,CONTRIBUTOR,False,False,False,0.3421052632,0.2765957447,0.375,0.2115384615,0.1107806812,0.8892193188,0.009602972199,0.01857337902
"Hi all, I created the Node.js bridging library for Tensorflow at: https://github.com/yorkie/tensorflow-nodejs without SWIG, it has supported ""predefined graph running"" and very simple ""graph construction"", I'm also planing to support more client features in the future :)",Task Progress,False,271,CONTRIBUTOR,False,False,False,1.0,0.5068493151,0.6077586207,0.5,0.6566062306,0.3433937694,0.04791701478,0.0005984425886
"We don't know if cmdline tester is returning the wrong exit code, or something is going wrong in TKG.",Investigation and Exploration,False,101,CONTRIBUTOR,True,False,False,0.8260869565,0.3275862069,0.7142857143,0.7431192661,0.9939440574,0.006055942622,0.006864019174,0.0128898379
"*         The pipelines behave poorly if you forget to call CODE: in fact, they hang indefinitely and deadlock the user program.",Motivation,True,128,CONTRIBUTOR,True,True,False,0.4468085106,0.3134328358,0.01803051318,0.4333333333,0.0,1.0,0.0,0.000766008561
"I guess as long as we have the vmaccess in hand, we can assume the globalreference's value we are reading is a valid object pointer?",Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,0.6944444444,0.1322751323,1.0,0.84,0.4505337598,0.5494662402,0.002313600952,0.0001676222515
"At cursory glance, so far you seem to be doing the right thing.",Task Progress,False,63,MEMBER,False,False,False,0.3714285714,0.1780821918,0.588362069,0.4444444444,0.6506314731,0.3493685269,0.01305197974,0.05278600034
Is this testing a collision where the sign alternates and hence the valuelands up at 0?,Potential New Issues and Requests,False,87,MEMBER,False,False,False,1.0,0.2352941176,0.3048780488,0.8571428571,0.3553526876,0.6446473124,0.003096425316,0.01032797867
my theory seemed standing ...,Social Conversation,False,29,CONTRIBUTOR,False,False,False,0.2105263158,0.06451612903,1.0,0.1856540084,0.04581586316,0.9541841368,0.0008605174189,0.001881470289
This is not what I asked.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.3333333333,0.06060606061,0.6666666667,0.6350877193,0.2090152874,0.7909847126,0.004409374785,0.007850146101
I have added core.20210316.184837.7.0246.dmp.zip to the aforementioned share that you gave.,Social Conversation,False,91,CONTRIBUTOR,False,False,False,0.4583333333,0.1466666667,0.125,0.3615819209,0.03339237467,0.9666076253,0.01898374244,2.23e-05
"]
0x3FFF805FDBC0 :  0000000000000040 0000000000000000 [ @............... ]
CODE`",Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,0.347826087,0.08791208791,1.0,0.1818181818,0.284435888,0.715564112,0.01329594867,0.3731531372
"Personally, I'm in favor of a CODE since the use-case that our current CODE serves is quite different and CODE is more explicit.",Solution Discussion,True,128,MEMBER,False,False,False,1.0,0.338028169,0.6557971014,1.0,0.06514439128,0.9348556087,3.516317045e-05,0.0003479469411
I don't have access.,Social Conversation,False,20,CONTRIBUTOR,False,False,False,1.0,0.03007518797,1.0,0.2951653944,0.2286969769,0.7713030231,0.002379441884,0.004233616147
That is very strange.,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.2,0.02919708029,0.5,0.5873605948,0.02543123804,0.974568762,1.78e-05,5.09e-05
"Howerver, the comment in the code isIf CODE doesn't have a constant value, because it is a CODE,# a CODE or CODE then is_training_value will be None and# CODE will be true.",Usage,True,172,NONE,False,False,False,1.0,0.1230769231,0.7173447537,0.5,0.6129403111,0.3870596889,0.09912504113,0.01395060179
"I wanted to make clear that think it is possible to not have a CODE keyword, not by having it magically both backwards compat and what we want in the future, but by deprecating the behaviour of the existing keywords.",Solution Discussion,True,216,CONTRIBUTOR,True,False,False,1.0,0.625,0.3125,0.5,0.0124193059,0.9875806941,0.003559988512,0.00316172217
One possibility I've considered is to create a wrapper that turns an CODE-consuming step into a Python iterator.,Solution Discussion,True,112,CONTRIBUTOR,True,False,False,0.4255319149,0.2985074627,0.5423023578,0.6428571429,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"Where are the docs for that currently, btw ;)",Solution Discussion,False,45,MEMBER,False,False,False,0.375,0.1267605634,0.3695652174,1.0,0.03956355713,0.9604364429,5.930714377e-06,6.344811593e-05
"The patterns it's looking for start like so:
CODE
(though CODE and a few other constructor signatures are also accepted)

With involuntary OSR, the trees for this bytecode contain a store to a pending push temp because the CODE result (in its original stack slot) is live across the constructor call:
CODE
When string peepholes sees the CODE and starts looking for the pattern, it searches for the constructor call using CODE starting at the tree just after the CODE.",Solution Discussion,True,473,CONTRIBUTOR,False,False,False,1.0,0.9139784946,0.3333333333,0.8185328185,0.6236466175,0.3763533825,0.04747801046,0.02028856842
"The code disables sampling, so it's not the sampling mechanism that tries to upgrade the method.",Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.3404255319,0.2,1.0,0.2156862745,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
I installed tf-nightly build and I get the following error on import of tensorflow.,Observed Bug Behaviour,False,83,NONE,True,True,False,1.0,0.1181102362,0.005865102639,0.3333333333,0.0,1.0,0.0,0.001987007177
FWIW I can not reproduce the problem on my OS X VM.,Bug Reproduction,False,51,MEMBER,False,False,False,1.0,0.1237113402,0.3727810651,0.5,0.8130607538,0.1869392462,0.00176012514,2.145525001e-05
So my questions are as follows:1)         Is it planned to deal with this issue somehow?,Task Progress,False,88,NONE,False,False,False,0.4324324324,0.2580645161,0.8546255507,0.6666666667,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
-         fit: extend CODE with CODE new instances of CODE fitted over (bootstrap copies of) the training samples.,Solution Discussion,True,114,MEMBER,False,False,False,0.6,0.2535211268,0.8297101449,0.4090909091,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"No, perf is unlikely to be impacted with the workaround.",Workarounds,False,56,MEMBER,False,False,False,0.4347826087,0.1086956522,0.2,0.9245283019,0.6394476,0.3605524,0.0002725427144,0.05549281815
Appears to be okay.,Investigation and Exploration,False,19,CONTRIBUTOR,False,False,False,0.3636363636,0.05970149254,0.6666666667,0.07514450867,0.002019093939,0.9979809061,7.29e-06,0.001425190268
Perhaps it needs to be updated.,Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.375,0.1276595745,1.0,0.2,0.1090281199,0.8909718801,0.009663080221,0.009602972199
Shared cache hints for GC heap size,Motivation,False,35,CONTRIBUTOR,True,True,False,0.1891891892,0.04794520548,0.1428571429,0.005586592179,0.0,1.0,0.0,5.94e-06
It is set to 0 for all threads.,Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.8888888889,0.1066666667,1.0,0.7118644068,0.08509509776,0.9149049022,0.0001249419873,0.0001794263215
"@sguada  Hi, sguada, I have a problem.",Social Conversation,False,38,NONE,False,False,False,0.1538461538,0.03076923077,0.8137044968,0.1666666667,0.7054086222,0.2945913778,0.4437492017,2.252355309e-05
JIT team may have a better workaround.,Contribution and Commitment,False,38,CONTRIBUTOR,False,False,False,0.2592592593,0.0752688172,0.6666666667,0.09652509653,0.08000102442,0.9199989756,0.001745734514,0.002398519856
I think the tutorial is deprecated since it uses a seq2seq model with bucketing in contrast to a dynamic seq2seq.,Investigation and Exploration,False,113,NONE,False,False,False,0.6060606061,0.02894356006,0.7425742574,0.375,0.272648067,0.727351933,0.02402499291,0.006610382458
"Fitting 3 folds for each of 54 candidates, totalling 162 fits[Parallel(n_jobs=-1)]: Done  34 tasks      | elapsed:    7.1s[Parallel(n_jobs=-1)]: Done 162 out of 162 | elapsed:   30.5s finished{'class_weight': {0: 0.51891309, 1: 13.71835531}, 'criterion': 'gini', 'min_samples_leaf': 10, 'min_samples_split': 20, 'n_estimators': 400}",Solution Discussion,False,332,NONE,False,False,False,1.0,0.412371134,0.8402366864,1.0,0.8589078439,0.1410921561,2.097846668e-05,0.1984119539
"Otherwise, remove the CODE label.",Action on Issue,True,33,MEMBER,False,False,False,0.4545454545,0.01923076923,0.9850107066,0.6666666667,0.9623796302,0.03762036985,0.1344801204,0.2238197937
"[image] URL 

in which case it can be captured by both OpenJ9 and Hotspot and it doesn't matter how to explain the error in verifier at least for the moment .",Investigation and Exploration,False,160,CONTRIBUTOR,False,False,False,1.0,0.2330827068,0.6,0.3842239186,0.4730620837,0.5269379163,0.005002918608,4.74e-05
OK it's not quite the bottom but it's low enough as far as I am concerned.,Social Conversation,False,74,MEMBER,False,False,False,0.7619047619,0.2253521127,0.7953216374,0.6666666667,0.473997047,0.526002953,0.006263805516,1.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1271551724,1.0,0.02809208206,0.9719079179,0.010635635,0.01651736955
Strange that Hotspot can work with this flag.,Solution Discussion,False,45,CONTRIBUTOR,False,False,False,0.4,0.04597701149,1.0,0.6176470588,0.7727637151,0.2272362849,0.01062274398,8.36e-05
"The Dataset API, it seems, is implemented less efficiently and though it is a welcome change regarding code clarity and simplicity as well as a more natural way of doing training and validation, it cannot (yet) substitute queues for high data rate usecases, such as computer vision.",Solution Discussion,False,282,NONE,False,False,False,1.0,0.7164179104,0.773925104,1.0,0.6088585046,0.3911414954,0.1964778875,0.0008759473312
So I  just added sudo apt-get -y install cuda-toolkit-9.0 and I'm up and running with TF1.6,Solution Discussion,False,91,NONE,False,False,False,1.0,0.1496062992,0.4692082111,1.0,0.3807312534,0.6192687466,0.001735580887,0.09812724389
"As a result, there is no Java 8 bin on the path when launching OpenJ9.zip.",Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.6,0.1515151515,0.6666666667,0.9052631579,0.9027706622,0.09722933782,0.002496484253,0.002703173696
"While TensorFlow has several methods that can be used to build complex input pipelines (such as [CODE] URL , [CODE] URL , etc.), they were designed for a particular use case (processing a static set of files repeatedly), and the average user experience with these methods is not great.",Motivation,True,285,CONTRIBUTOR,True,True,False,1.0,0.7014925373,0.005547850208,0.1333333333,0.0,1.0,0.0,0.000766008561
is there a way you know to make this work currently?,Task Progress,False,52,NONE,False,False,False,0.4782608696,0.01591895803,0.3333333333,1.0,0.07133742303,0.928662577,0.0004233834388,0.001538799449
It's also wrong to let Spark see the English instance as a shared variable.,Solution Discussion,False,75,MEMBER,False,False,False,0.3414634146,0.09150326797,0.1736334405,0.3571428571,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
-         The dataset class (and not the model) should probably the one to have batch_size passed to it.,Expected Behaviour,False,104,NONE,False,False,False,0.2950819672,0.2686567164,0.08321775312,0.7142857143,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
Anyone know why might this be?,Usage,False,30,NONE,False,False,False,0.1578947368,0.02307692308,0.295503212,0.5,0.2434240867,0.7565759133,0.01989458774,0.1426765631
"This only occurs when building on PPCLE, and with java versions 10,11.",Observed Bug Behaviour,False,70,CONTRIBUTOR,True,True,False,0.3428571429,0.09375,0.3333333333,0.01111111111,0.0,1.0,0.0,0.009802165843
It's the largest cpu time user of any thread and grows between the two dumps.,Investigation and Exploration,False,77,NONE,True,False,False,0.625,0.223880597,1.0,0.08938547486,0.001600551775,0.9983994482,0.0001732418111,0.0001922036014
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.5387931034,1.0,0.6311127971,0.3688872029,0.1465312351,0.02364180201
Could you share the code that does the printing?,Social Conversation,False,48,CONTRIBUTOR,False,False,False,1.0,0.04761904762,1.0,0.5257142857,0.4466728826,0.5533271174,0.001023944321,0.001615795728
It is likely the problem exists without  async compilation but it is harder to trigger.,Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.6153846154,0.1720430108,0.4285714286,0.2625482625,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
That could amount to several GB of data.,Solution Discussion,False,40,NONE,False,False,False,0.2105263158,0.0522875817,0.5819935691,0.6923076923,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
"You are right, it is a CODE, not a CODE!",Social Conversation,True,40,NONE,True,False,False,0.7142857143,0.1333333333,0.2857142857,0.1016949153,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
But we are checking this every time class is loaded from the shared cache.,Investigation and Exploration,False,74,CONTRIBUTOR,False,False,False,0.3888888889,0.102189781,0.6666666667,0.8810408922,0.06771827233,0.9322817277,0.0001677157529,0.000359450058
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.03448275862,1.0,0.0003293773894,0.9996706226,0.001126727522,0.0001801524656
"Just the main class isn't sufficient, other parameters such as -Xmx, -Xms and gcpolicy need to be stored as well.",Solution Discussion,False,113,CONTRIBUTOR,True,False,False,0.487804878,0.1369863014,0.25,0.2793296089,0.02874696135,0.9712530387,0.0006509267927,0.009905059007
I remember that I reininstalled miniconda the other week due to some other problems.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.4117647059,0.1971830986,0.5584795322,0.4285714286,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
@KaisJM  I'm running the same snippet here (windows) and it freezes. CODE,Observed Bug Behaviour,True,73,NONE,False,False,False,0.8666666667,0.1340206186,0.8076923077,0.5,0.8526829408,0.1473170592,0.005705487359,0.01083986775
Fixed!,Task Progress,False,6,MEMBER,False,False,False,0.3333333333,0.01612903226,0.9823788546,0.3333333333,0.7416075027,0.2583924973,0.2056416849,0.9898268541
I'd like to get this feature with adding as little API an names as possible ;),Solution Discussion,False,78,MEMBER,False,False,False,1.0,0.2394366197,0.05797101449,1.0,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
"If so, any advice as to how to?",Solution Discussion,False,31,NONE,False,False,False,0.275862069,0.06299212598,0.4633431085,0.75,0.3805901386,0.6194098614,0.001605430808,0.001735580887
We can store the main class name and GC policy.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.7142857143,0.06849315068,0.3333333333,0.1675977654,0.01369821541,0.9863017846,0.0005232437649,0.0003613942987
How to get native stack for all threads?,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.2424242424,0.1066666667,0.3333333333,0.4519774011,0.03477619422,0.9652238058,0.001877193186,1.99e-05
Unfortunately I can not reproduce your problem.,Bug Reproduction,False,47,MEMBER,False,False,False,0.5,0.0985915493,0.1286549708,0.6666666667,0.1559873107,0.8440126893,0.007793915485,0.0003311524965
How can I add another language?,Solution Discussion,False,31,NONE,True,True,False,1.0,0.1,0.01724137931,1.0,0.0,1.0,0.0,0.01391101632
I can't reproduce without your data and it would be good to reproduce in shorter time.,Social Conversation,False,86,MEMBER,False,False,False,1.0,0.1649484536,0.9674556213,1.0,0.9999756767,2.432328242e-05,1.092628473e-06,1.015151181e-05
I have looked into cores generated where CODE method isn't compiled.,Task Progress,True,68,CONTRIBUTOR,False,False,False,0.3055555556,0.1195652174,0.3333333333,0.7044025157,0.5919809991,0.4080190009,0.0005225972985,0.01338731827
"Sorry, my question wasn't clear (and you may not be able to answer it easily) - in the case when the hang occurs, are the dumps generated first (presumably you get lots of dumps from non-hang situations)?",Social Conversation,False,204,CONTRIBUTOR,False,False,False,1.0,0.4933333333,1.0,0.8079096045,0.08545555538,0.9145444446,1.77e-05,3.24e-05
**Sequence of these hooks by the GC.,Investigation and Exploration,False,36,CONTRIBUTOR,False,False,False,0.137254902,0.07692307692,0.7142857143,0.4615384615,0.8054811495,0.1945188505,0.1631008731,0.2634355634
It would be great if the new CategoricalEncoder had an option to do the same.,Expected Behaviour,False,77,NONE,False,False,False,0.5357142857,0.234375,0.7941176471,1.0,0.2567040608,0.7432959392,0.02304981706,0.003308173532
"When I first faced this issue I was using custom scorer, but while trying to simplify the example code as much as possible, I found that it is not necessarily have to contain custom scorer.",Observed Bug Behaviour,False,189,NONE,False,False,False,1.0,0.3608247423,0.3047337278,0.2,0.8123334347,0.1876665653,1.255529445e-05,3.933462502e-05
"@mpirvu - tldr: This warning is expected, all the services will have it.",Investigation and Exploration,False,72,NONE,True,False,False,0.5,0.15,0.1428571429,0.637254902,0.8720495954,0.1279504046,0.001670230889,0.034636993
"Hi rasbt,Yes I made TSNE work on Python 3.5.",Solution Discussion,False,44,NONE,False,False,False,0.5555555556,0.1408450704,0.8742690058,0.25,0.6460564675,0.3539435325,0.002055691741,0.0001352009984
"Since I haven't trained enough steps, the estimated moving mean/variance is not that stable.",Usage,False,92,CONTRIBUTOR,False,False,False,0.3846153846,0.05769230769,0.5867237687,0.2727272727,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
"@mpirvu Yes, looks like adding -Xjit:{com/ibm/ws/jaxrs20/security/LibertyAuthFilter.filter*}(disableInvariantArgumentPreexistence) fixed the regression.",Solution Discussion,False,152,NONE,True,False,False,1.0,0.175,0.5,0.2352941176,0.1354016429,0.8645983571,0.07018304397,0.0007191271884
"Because during training, the batch normalization is done using the training batch statistics only.",Solution Discussion,False,98,CONTRIBUTOR,False,False,False,0.6086956522,0.05384615385,0.5074946467,0.6666666667,0.386836239,0.613163761,0.0004945035936,0.01129830123
I am happy to look into it further in December after all the November deadlines ...,Contribution and Commitment,False,83,CONTRIBUTOR,False,False,False,0.5357142857,0.2112676056,0.514619883,0.3333333333,0.4541253359,0.5458746641,0.005172233894,9.742221376e-05
"Java -version output
--------------------

Output from CODE.
CODE

Summary of problem
------------------",Observed Bug Behaviour,True,111,NONE,True,True,False,0.5666666667,0.2266666667,0.2,0.01129943503,0.0,1.0,0.0,4.66e-05
"I've created https://github.com/eclipse/openj9/issues/8984

The test is creating and using 9000 jar files.",Potential New Issues and Requests,False,108,CONTRIBUTOR,True,False,False,0.3684210526,0.2258064516,0.5,0.6793248945,0.4907237786,0.5092762214,0.02872086273,0.1405385381
I looked at the header section dump of HS java as well.  request is set (i.e. -bnorwexec).,Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,1.0,0.1034482759,0.5,0.8235294118,0.7733450534,0.2266549466,2.84e-06,1.43e-05
What is the use-case for your interface except parallelization?,Motivation,False,63,MEMBER,False,False,False,0.5882352941,0.1408450704,0.9166666667,0.5,0.07859944544,0.9214005546,2.105579069e-06,8.878525073e-06
"I'll keep an eye out for similar failures, and maybe improve the test a bit (I've done exactly what I always complain about - hidden any useful debug information when the test fails).",Contribution and Commitment,False,183,CONTRIBUTOR,False,False,False,1.0,0.515625,1.0,0.390070922,0.7582110027,0.2417889973,0.0002861168415,0.002764994686
"You can go the server.env in src/main/liberty/config and set this, if you want it to go away.",Solution Discussion,False,93,NONE,True,False,False,0.8333333333,0.25,0.8571428571,0.6617647059,0.8720495954,0.1279504046,0.001670230889,0.034636993
"@pshipton yes, the straightforward fix is to remove that linker option (-bnorwexec).",Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.9230769231,0.06896551724,0.3333333333,0.6213235294,0.7727935619,0.2272064381,8.36e-05,8.08e-05
"of course , you can add the path manual, like:CODEthen add the path  '/usr/local/cuda-9.0/lib64' at the end.",Solution Discussion,True,108,NONE,False,False,False,0.5555555556,0.157480315,0.8211143695,0.5555555556,0.7354114739,0.2645885261,0.4152157275,0.1560011388
Later I realized they were being deleted by the test itself in various working directories and I needed to have them generated elsewhere.,Investigation and Exploration,False,137,MEMBER,False,False,False,0.575,0.25,0.3636363636,0.7798742138,0.6067408459,0.3932591541,0.03227550175,0.06952239071
"Edit: After writing this, i found it out: CODE",Usage,True,46,NONE,False,False,False,0.375,0.1343283582,0.9653259362,1.0,0.9970343733,0.002965626714,0.02821456383,0.02385162338
CODE,Workarounds,True,4,CONTRIBUTOR,False,False,False,0.1,0.01612903226,0.9779735683,1.0,0.6879251154,0.3120748846,0.02091540384,0.2056416849
"Other than that, I also tried fetching statistics through CODE within scope during training and reference to monitor the bias.",Usage,True,126,CONTRIBUTOR,False,False,False,1.0,0.07692307692,0.52248394,1.0,0.399208074,0.600791926,0.001260202941,0.5564473214
Thanks again to all of you for your continued interest in this part of TensorFlow!,Social Conversation,False,82,CONTRIBUTOR,True,False,True,15.0,0.223880597,1.0,25.0,1.0,0.0,0.02385162338,0.0
@hzongaro - I have sent the vlogs in email as some of the attachments were more than 10mb and could not be attached here.,Task Progress,False,121,CONTRIBUTOR,False,False,False,1.0,0.3582089552,0.5,0.4739884393,0.006148737137,0.9938512629,0.0008238462571,6.19e-06
"Since I fixed the new bench I have not seen the thread hang appear again, and the bench had a thread hang cause I threw an exception that was not caught and the benchmark code did not shut down the threading system upon close like it should have.",Task Progress,False,246,NONE,True,False,False,1.0,0.7164179104,0.4,0.6759776536,0.1129717723,0.8870282277,0.002111653916,4.74e-05
For a similar reason ElasticNet has a CODE constructor param instead of a CODE method and SGDClassifier both has a CODE param and a CODE method: they serve different purposes.,Solution Discussion,True,175,MEMBER,False,False,False,0.7317073171,0.4225352113,0.25,0.5714285714,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
I forgot to mention that im using CODE and pip CODE.,Solution Discussion,True,52,NONE,False,False,False,0.9230769231,0.09448818898,0.9237536657,0.5,0.9282448049,0.07175519508,0.02806508983,0.00732168145
batch_norm also works with fully_connected layers.,Solution Discussion,False,50,MEMBER,False,False,False,0.2857142857,0.02307692308,0.755888651,0.6666666667,0.6163482777,0.3836517223,6.767211672e-05,0.005602480188
"Although, at each validation step, I will reinit the validation iterator and run through the full validation dataset.",Usage,False,117,NONE,False,False,False,1.0,0.2686567164,0.7184466019,0.6666666667,0.5525622877,0.4474377123,0.001784978089,0.1924676673
"No, I cannot write to /cores.",Investigation and Exploration,False,29,NONE,True,False,False,0.3181818182,0.05263157895,0.1428571429,0.2569974555,0.2215502762,0.7784497238,0.005021721962,0.0366849359
There you also get further speedup using ZMQ -- plus it has a nice interface using Python generators.,Solution Discussion,False,101,NONE,False,False,False,1.0,0.2686567164,0.8294036061,0.5,0.7179125891,0.2820874109,0.01649590529,0.01478320176
I created a new python2 environment like the one I had before installing Gensim.,Investigation and Exploration,False,80,NONE,False,False,False,0.5833333333,0.1443298969,0.7928994083,0.3333333333,0.850540769,0.149459231,7.813286879e-05,0.005705487359
"So unfortunately, the issue **is** in fact related to OpenJ9.",Investigation and Exploration,False,61,NONE,True,False,False,0.2083333333,0.1492537313,0.8,0.687150838,0.1129717723,0.8870282277,0.002111653916,4.74e-05
"Caused by: java.lang.NullPointerException: Cannot invoke ""java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.<init(java.lang.invoke.",Investigation and Exploration,False,137,MEMBER,True,False,False,0.4090909091,0.09782608696,0.1,0.1446540881,0.3431647145,0.6568352855,0.001046537172,0.001139510487
Agreed.,Social Conversation,False,7,CONTRIBUTOR,True,False,True,0.5,0.0078125,0.5,0.9944444444,1.0,0.0,0.00485352044,0.0
"I also double check that any subscriber of ""class unloading"" and ""classes unloading"" hooks don't do this.",Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,1.0,0.1868131868,1.0,0.8706293706,0.8687461445,0.1312538555,0.001098431308,0.001217055727
"I.e it sounds like somewhere we're assuming the generated size to be an integer. 

CODE",Investigation and Exploration,True,89,CONTRIBUTOR,False,False,False,1.0,0.3404255319,1.0,0.6076923077,0.5067550661,0.4932449339,0.01512432343,0.04264807325
"Since I have specific needs, I have not gone through the task of binding to each individual python TensorFlow method, and instead just pass my data and hyper parameters to a few methods that build most of the graph.",Solution Discussion,False,215,NONE,False,False,False,1.0,0.5342465753,0.7478448276,0.7272727273,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
I really like the new Dataset/Iterator API!,Social Conversation,False,43,CONTRIBUTOR,False,False,False,0.2666666667,0.1194029851,0.5936199723,0.1666666667,0.4965705946,0.5034294054,0.06171840406,0.0130944201
No change was done for the CODE variation of the test - which is what this issue is about.,Investigation and Exploration,True,90,CONTRIBUTOR,False,False,False,0.6666666667,0.2686567164,0.5,0.09826589595,0.003349898568,0.9966501014,0.001425190268,2.44e-05
It still segfaults at CODE.,Investigation and Exploration,True,27,CONTRIBUTOR,False,False,False,0.5555555556,0.05376344086,1.0,0.528957529,0.5369859796,0.4630140204,0.0028647951,0.0003133369641
Note: I also have cuda 9.1 installed instead of cuda 9.0.,Bug Reproduction,False,57,NONE,False,False,False,0.4074074074,0.08661417323,0.08797653959,1.0,0.1360287232,0.8639712768,0.05368173129,0.001267484295
Henry wanted to look at a failing log with CODE option.,Contribution and Commitment,True,55,MEMBER,False,False,False,0.1964285714,0.1195652174,0.875,0.8679245283,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
I was concerned with that there is failing test that build cannot promote.,Social Conversation,False,74,CONTRIBUTOR,False,False,False,0.875,0.2258064516,0.5,0.582278481,0.4802647602,0.5197352398,0.003640426233,0.003806695701
Could you summarize the discussions that lead to this?,Solution Discussion,False,54,MEMBER,False,False,False,0.8181818182,0.140625,0.5625,1.0,0.122443456,0.877556544,8.136186748e-06,1.464513615e-05
"In the CODE package, all encoders have a CODE argument, similar to the CODE in the old OneHotEncoder (although it does not accept exactly the same kind of values).",Solution Discussion,True,163,CONTRIBUTOR,True,False,True,29.0,0.453125,0.9852941176,1.0,1.0,0.0,0.0009246776239,0.0
"A worker takes a few documents off the task queue, aggregates the vocabulary, and asks the vectors service for all vectors active on the batch.",Motivation,False,143,MEMBER,False,False,False,1.0,0.6578947368,0.598540146,1.0,0.004025785766,0.9959742142,7.249967297e-05,2.745084526e-05
"Checking the same jar timestamp at micro-second resolution makes little sense, particularly when walking the classpath and everything is coming from the same jar file.",Solution Discussion,False,167,CONTRIBUTOR,False,False,False,0.962962963,0.1897810219,1.0,0.8996282528,0.06811585498,0.931884145,0.0002381149578,0.0006646513169
"As for SpaCy, I hope there's a portable way to train/retrieve the word embeddings across domains (pharma, legal, finance, etc) and natural languages.",Potential New Issues and Requests,False,149,NONE,False,False,False,0.7058823529,0.6315789474,0.9051094891,0.4285714286,0.02374400586,0.9762559941,0.01990868788,0.001584253352
"Until the fix is available, the only workaround is todowngrade to CUDA 8.0.xor disable XLA:GPU.",Motivation,False,95,NONE,False,False,False,0.3902439024,0.125984252,0.4516129032,0.8888888889,0.380459606,0.619540394,0.0006322631694,0.001605430808
"Given we've branched for 0.23 already, I'd be OK with releasing that kind of code into the mainline - even if there's extra overhead - with the plan to pull it back out before 0.24",Action on Issue,False,180,MEMBER,False,False,False,1.0,0.564516129,1.0,0.2131147541,0.4447988064,0.5552011936,0.0002184327063,0.2303004492
I believe I did not miss other callers,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.2162162162,0.04597701149,1.0,0.2279411765,0.7475845162,0.2524154838,0.0006037502447,2.74e-05
"This test result above hits the same method as checked before at https://github.com/eclipse/openj9/issues/7684#issuecomment-580817864 as follows:
CODE",Testing,True,151,CONTRIBUTOR,False,False,False,1.0,0.1278195489,1.0,0.8295165394,0.8237602504,0.1762397496,0.0001144552014,0.03159699343
I run the flight service with just cold compilations.,Task Progress,False,53,CONTRIBUTOR,False,False,False,0.3333333333,0.1125,0.125,0.7009803922,0.8886091519,0.1113908481,0.05954547102,0.2271166044
I also occur the exactly same problem with kirk86.,Bug Reproduction,False,50,NONE,False,False,False,0.6428571429,0.07086614173,0.04692082111,0.3333333333,0.05657498818,0.9434250118,0.2905541361,0.02745205338
I'm not sure what you mean.,Social Conversation,False,27,CONTRIBUTOR,True,False,False,0.4,0.1034482759,1.0,0.2660550459,0.02084462621,0.9791553738,1.18e-05,4.43e-05
"Just for kicks I reran the old test again, and it failed after only 24 dumps, so it's not quite a factor of 10,000, but it's pretty close!",Task Progress,False,138,NONE,True,False,False,0.6829268293,0.3733333333,0.6666666667,0.9548022599,0.3768312766,0.6231687234,0.01360883005,0.0001899293257
"If the user wants to keep the current behaviour, it can manually specify it as CODE to silence the warning.",Solution Discussion,True,107,CONTRIBUTOR,True,False,False,0.6060606061,0.3125,0.1875,0.8888888889,0.002016098271,0.9979839017,0.0039907996,0.01559625638
-         Have you tried it on different datasets?,Investigation and Exploration,False,50,MEMBER,False,False,False,0.4444444444,0.0824742268,0.04437869822,0.8888888889,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
"As the class unloading hook is called, the JIT currently doesn't clean up the table entries whose methods belong to the unloaded class.",Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,0.8518518519,0.2527472527,0.1111111111,0.5454545455,0.8546478187,0.1453521813,0.002043575217,0.001362640241
"@rth, okay.",Social Conversation,False,11,MEMBER,False,False,False,0.1818181818,0.02941176471,0.4837398374,0.25,0.5467479566,0.4532520434,0.01188879527,0.03044075803
"Ya sorry, it's a Linux tool, not a Java tool.
https://man7.org/linux/man-pages/man1/gcore.1.html",Social Conversation,False,97,CONTRIBUTOR,False,False,False,1.0,0.16,1.0,0.5310734463,0.06941049314,0.9305895069,0.007120161589,0.002460766356
Ok I'm not that familar with Box.,Social Conversation,False,33,NONE,True,False,False,1.0,0.05263157895,0.5,0.2977099237,0.2294323002,0.7705676998,0.004233616147,0.006261517055
"There is the same stack:
CODE",Investigation and Exploration,True,30,CONTRIBUTOR,False,False,False,0.875,0.07692307692,1.0,0.1958041958,0.3545450984,0.6454549016,0.01011234657,0.0005314990198
"So I want to make clear, this issue in my benchmark code was in a new bench I added to test a service I'm developing, and the bench OpenJ9 was failing on is untouched.",Task Progress,False,167,NONE,True,False,False,0.7083333333,0.5074626866,0.2,0.6703910615,0.1129717723,0.8870282277,0.002111653916,4.74e-05
"By copying the STS4 along with the workspace out of the VM image,  I managed to reproduce the crash locally.",Bug Reproduction,False,108,CONTRIBUTOR,False,False,False,1.0,0.2121212121,0.3333333333,0.8035087719,0.7039263627,0.2960736373,0.374152472,0.3518178539
"- ^this is the output where JITServer requests to dereference CODE and received CODE and it's supposed to be CODE. 
- In this case JITServer dereferenced it right after it received the compilation request and tried to dereference CODE and it happened to have changed in values on JITClient.",Investigation and Exploration,True,291,CONTRIBUTOR,False,False,False,1.0,0.253968254,0.9411764706,0.6171428571,0.447477842,0.552522158,0.001615795728,8.48e-05
You could try to enable the mpJwt-1.2 feature and see if is invoked (I'll try it out).,Solution Discussion,False,86,NONE,True,False,False,1.0,0.2125,1.0,0.2794117647,0.1729912694,0.8270087306,0.05981079416,0.003212874696
I thought it might be worthwhile to add another optional parameter to fit() but I saw this quote on the contributing page. > fit parameters should be restricted to directly data dependent variables,Solution Discussion,False,197,CONTRIBUTOR,True,False,False,1.0,0.4507042254,0.08695652174,0.5454545455,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
Thanks for the performance data.,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.08064516129,0.08064516129,0.2,0.2827004219,0.2206084978,0.7793915022,0.01185472132,0.2853709122
Is anybody working on this?,Task Progress,False,27,NONE,False,False,False,1.0,0.06849315068,0.3857758621,1.0,0.4493122465,0.5506877535,0.2584362368,0.2040658243
"Thanks SCREEN_NAME , but I'm failing to replicate in Python 3.3.",Bug Reproduction,False,64,MEMBER,False,False,False,1.0,0.1408450704,0.05263157895,0.5,0.05288630945,0.9471136905,0.0003346120921,0.004970747043
"The more diverse they are, often the better.",Motivation,False,44,MEMBER,False,False,False,0.4444444444,0.1126760563,0.9637681159,1.0,0.07872936647,0.9212706335,8.503030139e-05,7.923995895e-05
The only.,Social Conversation,False,9,NONE,False,False,False,0.05,0.02985074627,0.6449375867,0.5416666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.8556034483,1.0,0.8186142,0.1813858,0.1167888155,0.0004092161044
@ChengJin01 did you try when Hotspot is on the path?,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,1.0,0.101010101,1.0,0.5859649123,0.2059493532,0.7940506468,0.003692040835,0.0001864257721
"Yes, the messages start after the crash because the application is not serving HTTP requests",Investigation and Exploration,False,92,NONE,True,False,False,1.0,0.1442307692,1.0,0.635359116,0.1325996675,0.8674003325,1.76e-05,0.004967523245
**The set up where TSNE works well:**,Bug Reproduction,False,37,NONE,False,False,False,0.3888888889,0.0985915493,0.8128654971,0.3333333333,0.6456610805,0.3543389195,1.0,4.677373331e-05
So I've seen the error already a couple of times today.,Investigation and Exploration,False,55,NONE,True,False,False,0.3870967742,0.1212121212,0.3636363636,0.05964912281,0.09912996542,0.9008700346,0.005467138405,0.004133788861
"Eventually we'll arrive at an index, after which we'll carry out another binary search to find the transformation index.",Investigation and Exploration,False,120,CONTRIBUTOR,False,False,False,0.5757575758,0.1428571429,0.9411764706,0.5547073791,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
Yes map merging just eliminates one of the two maps to allow one map to cover a larger range.,Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.7307692308,0.296875,0.3333333333,0.4822695035,0.7919306281,0.2080693719,0.1671307049,0.004342243829
CODE,Investigation and Exploration,True,4,NONE,False,False,False,0.1,0.01030927835,0.6863905325,1.0,0.8498870015,0.1501129985,0.0001657418063,0.0001597224167
But really I just wanted it for GBRT :),Social Conversation,False,39,CONTRIBUTOR,True,False,True,9.0,0.1267605634,0.9927536232,2.0,1.0,0.0,2.449490317e-05,0.0
There are two similar questions in [here] URL  and [here] URL SCREEN_NAME .,Usage,False,75,NONE,False,False,False,0.619047619,0.1940298507,0.9140083218,0.3333333333,0.9479523715,0.05204762849,0.2620248075,0.005625200409
Each element  can be a tuple of one or more tensors (e.g. an image and its label).,Solution Discussion,False,82,CONTRIBUTOR,True,True,False,0.3829787234,0.2686567164,0.02773925104,0.6666666667,0.0,1.0,0.0,0.000766008561
"All the executor threads seem to be stuck in this stack trace:
CODE
This is happening for both OpenJ9 releases 0.29.0 and 0.24.0, so it's not a new problem introduced by 0.29.0",Investigation and Exploration,True,178,CONTRIBUTOR,False,False,False,1.0,0.425,1.0,0.681372549,0.8775318892,0.1224681108,0.034636993,0.003956649389
Is there any update ??,Task Progress,False,22,NONE,False,False,False,1.0,0.05479452055,0.338362069,0.5,0.3832590974,0.6167409026,0.08062287604,0.1116482733
"No, it seems JIT related but the issue is seen after the JIT method executes, and we have no idea what in the JIT method is causing things to go wrong.",Investigation and Exploration,False,151,CONTRIBUTOR,False,False,False,1.0,0.2330827068,0.5,0.8015267176,0.8159998455,0.1840001545,6.58e-05,0.004064385956
"Not sure if it is related to the OS level, i,.e  my OS level is backward relative to the build machine.",Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,1.0,0.1264367816,0.6666666667,0.7573529412,0.7732083398,0.2267916602,2.23e-05,6.97e-06
| 7729.33,Testing,False,9,NONE,True,False,False,0.03703703704,0.0125,0.8333333333,0.137254902,0.09701181711,0.9029881829,0.01961071442,0.02610750661
"I'm just shooting in the dark here, but I wonder if I can get this to reproduce on a newer OS, there might be a bug with some of these older c libraries and runtimes; specially on PPC64LE.",Investigation and Exploration,False,188,CONTRIBUTOR,False,False,False,1.0,0.8085106383,1.0,0.2307692308,0.1107806812,0.8892193188,0.009602972199,0.01857337902
The lack of being able to reach anywhere in the parameter space with warm_start for ensembles and DTs makes me think that an instance method would be more appropriate.,Solution Discussion,False,167,CONTRIBUTOR,True,False,False,1.0,0.4084507042,0.7826086957,0.5,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
"I just created a new conda virtualenv and built a devp version of sklearn from the source code freshly forked from the sciki-learn master branch, the error disappeared.",Investigation and Exploration,False,168,NONE,False,False,False,1.0,0.4084507042,0.5233918129,0.5,0.4541420598,0.5458579402,9.742221376e-05,0.002465307867
@ChengJin01 so this looks like a JIT issue.,Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.3333333333,0.06015037594,0.2,0.465648855,0.5408860557,0.4591139443,0.002429720419,0.000914006537
i.e. if there is either a bug or some sort of race condition where the CODE keeps failing then it has no option but to keep trying in a tight loop that could burn CPU without advancing throughput.,Investigation and Exploration,True,196,CONTRIBUTOR,False,False,False,0.9047619048,0.475,0.5,0.8725490196,0.9558660429,0.04413395706,0.001152633296,0.002453151618
Or maybe that comment was wrong and I was just confused because your outputisn't complete: the beginning is cut off,Investigation and Exploration,False,115,MEMBER,False,False,False,1.0,0.2941176471,0.743902439,1.0,0.5910003954,0.4089996046,0.0005473217492,0.0005279841985
Please explain,Social Conversation,False,14,CONTRIBUTOR,False,False,False,0.4,0.02197802198,1.0,0.506993007,0.8537820938,0.1462179062,0.0006108387286,0.001070700924
I have modified CODE function to always return false once VM enter CODE call.,Task Progress,True,77,CONTRIBUTOR,False,False,False,0.5384615385,0.152173913,0.3333333333,0.641509434,0.5584159107,0.4415840893,0.0004086462498,0.04419068659
Have five team work! SCREEN_NAME ,Social Conversation,False,33,NONE,False,False,False,0.07462686567,0.07042253521,0.6900584795,0.5714285714,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
Pls ask the perf team for runs of Liberty.,Contribution and Commitment,False,42,CONTRIBUTOR,True,False,False,0.4285714286,0.1451612903,1.0,0.7890295359,0.5598736768,0.4401263232,0.008625593247,0.002832414962
"I expect that means I can stop loading r2, and we could likely eliminate the jitTOC entirely.",Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.5151515152,0.1328125,1.0,0.5166666667,0.0386721008,0.9613278992,0.001226532263,4.57e-05
I could probably remove the bias term because we are using batch normalization.,Usage,False,79,NONE,False,False,False,0.3714285714,0.05,0.1413276231,0.7826086957,0.2164964176,0.7835035824,0.06906725807,0.007698692487
The installation procedure I followed for setting it up is burried somewhere in the issue I linked above.,Social Conversation,False,105,NONE,True,False,False,1.0,0.1818181818,0.75,0.1087719298,0.1103553327,0.8896446673,0.02087158101,0.006411425468
"The idea of reverting CategoricalEncoder makes me quite sad, but I thinkyou're right that future users would be less mystified by option 2.",Solution Discussion,False,139,MEMBER,False,False,False,0.9583333333,0.359375,0.09926470588,0.3333333333,0.0007412302777,0.9992587697,0.002483571005,0.0001212291825
"Total compilation time on Linux is about half (AOT warm compilations take less time on average):
CODE
CODE",Investigation and Exploration,True,108,CONTRIBUTOR,False,False,False,1.0,0.3134328358,1.0,0.3815028902,0.005178391095,0.9948216089,6.8e-06,4.36e-05
So unless I missed something it doesn't look like this could be reproducible in Docker.,Potential New Issues and Requests,False,87,MEMBER,False,False,False,0.7894736842,0.2205882353,0.4634146341,0.7142857143,0.5420075121,0.4579924879,0.02112247576,0.002129547778
A down side is that you do need package the whole TF runtime wherever you need this pipeline.,Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.6428571429,0.2686567164,0.73370319,0.5,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
"After looking at the code for a while, I think this may be because the values of the variables are not restored from the shadow variables as they would be if the ExponentialMovingAverages class were used to manage the moving averages.",Solution Discussion,False,234,NONE,False,False,False,1.0,0.1576923077,0.7880085653,0.5,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
https://github.com/tngan/tensornode,Task Progress,False,35,NONE,False,False,False,0.04761904762,0.01369863014,0.5560344828,1.0,0.6333018978,0.3666981022,0.001457597222,0.003508325412
"Unfortunately, I cannot determine why that method gets compiled again at hot (after the first failure).",Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,0.5483870968,0.2125,0.5,0.2647058824,0.1635245022,0.8364754978,0.1612106274,0.05981079416
"For what it's worth, I would also be against defensive.",Solution Discussion,False,55,CONTRIBUTOR,True,False,False,0.3448275862,0.1408450704,0.7934782609,0.875,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5129310345,1.0,0.6063959261,0.3936040739,0.00617188183,0.07848406348
It might be also that fit needs to do additionalwork to turn a large batch dataset into a set of mini-batch ones.,Solution Discussion,False,113,MEMBER,False,False,False,1.0,0.323943662,0.518115942,1.0,0.04251640782,0.9574835922,1.965207131e-06,3.382963704e-05
@wraschke how long does your test take to execute?,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,1.0,0.06766917293,0.5,0.7735368957,0.7971354695,0.2028645305,0.0009716429063,4.17e-05
"Biggest benefits would come for sure from server-side applications that operate on node.js that could directly interact with Tensorflow, but also node-webkit (desktop applications) could potentially spawn dozens of interesting projects.",Motivation,False,236,NONE,False,False,False,1.0,0.4520547945,0.7801724138,1.0,0.7544761605,0.2455238395,0.005981548758,0.1170572737
"Also, if you feel like this is probably not a common / reproducible error, and something just 'broken' on my system, then I understand.",Investigation and Exploration,False,135,NONE,True,False,False,0.6388888889,0.2323232323,0.5714285714,0.5087719298,0.1973084735,0.8026915265,0.001977734278,0.003898730278
"The following runs fine, unless I insert n_jobs=-1. CODE",Observed Bug Behaviour,True,56,NONE,False,False,False,1.0,0.09278350515,0.6923076923,1.0,0.8499469706,0.1500530294,0.0001597224167,0.001154610306
CODE -> CODE,Potential New Issues and Requests,True,12,CONTRIBUTOR,False,False,False,0.08333333333,0.02105263158,0.6947368421,0.3333333333,0.1887596939,0.8112403061,4.264436363e-05,1.863208436e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2844827586,1.0,0.2781349193,0.7218650807,0.1521422983,0.03349862064
Ok. uploading to https://ibm.box.com/s/zjjc76l8o7yac05y5sqvqjywdee0qpx3 (all public open source so protection not needed including the code),Task Progress,False,140,NONE,True,False,False,1.0,0.1127819549,1.0,0.2926208651,0.2282836992,0.7717163008,0.001171121972,0.002379441884
Not quite - the throw event reports the method/pc of both the thrower and the likely catcher - I'm only testing the catcher information (ensuring the throw and catch events report the same catch point).,Solution Discussion,False,202,CONTRIBUTOR,False,False,False,1.0,0.53125,1.0,0.6737588652,0.9472438979,0.05275610206,0.001327197449,0.005275128993
"As you can see, nothing particularly useful there.",Investigation and Exploration,False,50,NONE,True,False,False,0.2666666667,0.1194029851,0.6666666667,0.2569832402,0.003039155028,0.996960845,0.0004990398439,0.0003309694301
What about supporting custom ops to create a Dataset?,Expected Behaviour,False,53,NONE,False,False,False,0.2142857143,0.1343283582,0.8515950069,0.2,0.8801745557,0.1198254443,0.88547434,0.1191105139
"I already tried this way:
CODE
and it ended up with the same results in superset.dat as VS2010:
F|invalidByteCodeIndex|invalidByteCodeIndex|I32|const I32,  which is correct in our case  (formal code review will be submitted once all issues with VS2017 get resolved)",Solution Discussion,True,268,CONTRIBUTOR,False,False,False,1.0,0.3728813559,0.5,0.5515151515,0.4198577324,0.5801422676,9.31e-05,0.02758701478
"It is your job to read the thread, and discover the solution; not simply scroll to the end.",Social Conversation,False,91,NONE,False,False,False,1.0,0.1417322835,0.5483870968,1.0,0.4119591591,0.5880408409,0.002720580351,0.001728185996
"Instead if you are missing cuda-9.0 from your system, as other have already pointed then you'll need to install it that is a prerequisite for tensorflow to work properly.",Solution Discussion,False,170,NONE,True,False,False,0.7837837838,0.2283464567,0.6979472141,0.4,0.5094864043,0.4905135957,0.02165076149,0.03664686068
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2543103448,1.0,0.1856006965,0.8143993035,0.01420703591,0.003082953128
OR we could name the new one CODEDummyEncoderCODE ;) (though that is a bit conflicting with the DummyClassifier),Solution Discussion,True,112,MEMBER,False,False,False,1.0,0.28125,0.5367647059,1.0,0.122431435,0.877568565,7.60733461e-05,7.729377411e-06
"@tomMoral if you want to play with docker, this is a good opportunity ;)",Contribution and Commitment,False,72,MEMBER,False,False,False,0.9333333333,0.2058823529,0.03658536585,1.0,0.01562830973,0.9843716903,0.01958514047,0.0006046437747
"(and once we agree on that part, there is still a lot to discuss about the actual implementation in the PR :))",Task Progress,False,110,CONTRIBUTOR,True,False,False,0.4230769231,0.34375,0.9669117647,1.0,0.8867760579,0.1132239421,0.6154659147,0.1194514257
Trying a grinder with the feature disabled.,Investigation and Exploration,False,43,CONTRIBUTOR,True,False,False,0.1044776119,0.1044776119,0.75,0.1849710983,0.004657816202,0.9953421838,0.0006332221901,0.0003635972979
"This issue thread is becoming a bit unwieldy and it's getting hard to keep track of the individual discussions, so I'm going to lock it after responding to a few of the recent comments.",Action on Issue,False,185,CONTRIBUTOR,True,False,True,34.0,0.5074626866,0.9667128988,1.0,1.0,0.0,0.02385162338,0.0
We've been using an external server for word2vec for over a year now.,Potential New Issues and Requests,False,69,NONE,False,False,False,0.7777777778,0.3684210526,0.8540145985,0.2,0.008264937696,0.9917350623,0.003893704171,0.01990868788
@zl-wang it seems we have the start of a solution,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.3333333333,0.8860294118,0.7917911829,0.2082088171,9.54e-05,0.006755954606
"I noticed that the gradient in https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/manifold/t_sne.py#L387 explodes, until it becomes CODE in one position after the 25th iteration in the https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/manifold/t_sne.py#L386 for-loop",Investigation and Exploration,True,295,CONTRIBUTOR,False,False,False,1.0,0.338028169,0.4736842105,0.25,0.4156673014,0.5843326986,0.0004713353126,0.003024101758
That was already done in [TensorPack] URL  for a while now by SCREEN_NAME .,Solution Discussion,False,75,NONE,False,False,False,0.7777777778,0.2089552239,0.8280166436,0.25,0.7179125891,0.2820874109,0.01649590529,0.01478320176
But I don't know how the value is used really.,Solution Discussion,False,46,CONTRIBUTOR,False,False,False,0.4761904762,0.05747126437,1.0,0.5551470588,0.7664930605,0.2335069395,7.18e-05,0.006331049572
@amcic don't you want to start with my much easier variant with ExitOnOutOfMemory?,Testing,False,82,NONE,False,False,False,1.0,0.1733333333,1.0,0.9039548023,0.3326295309,0.6673704691,1.25e-05,0.0005378413394
"Perhaps it's useful to mention that we use per-thread timers to invoke the signal, that is each thread is receiving a signal when its CPU time has crossed a threshold, and that means we can be executing AGCT in more than one thread by more than one core in parallel.",Investigation and Exploration,False,266,NONE,True,True,False,1.0,0.4903846154,0.75,0.04972375691,0.0,1.0,0.0,0.01118041169
"2.         lack of other science labs, like numpy",Solution Discussion,False,49,NONE,False,False,False,0.4285714286,0.1232876712,0.3793103448,0.6666666667,0.4349495154,0.5650504846,0.003115708122,0.2584362368
"Yeah, that's quite possible.",Social Conversation,False,28,CONTRIBUTOR,False,False,False,0.1739130435,0.05333333333,0.3333333333,0.6836158192,0.08501734132,0.9149826587,9.19e-06,0.0001249419873
Fix will be merged into R0.23 as well.,Action on Issue,False,38,CONTRIBUTOR,False,False,False,1.0,0.170212766,0.6666666667,0.9884615385,0.8147080379,0.1852919621,0.2393844938,1.0
"There is I started work on native nodejs Tensorflow implementation, would be great if anybody joinshttps://github.com/nodejs-tensorflow/nodejs-tensorflow",Contribution and Commitment,False,153,NONE,False,False,False,1.0,0.2739726027,0.5711206897,1.0,0.6383920017,0.3616079983,0.08742750468,0.1059320843
Is there anything else needed to reproduce?,Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.2121212121,0.05263157895,0.875,0.4961832061,0.5596707013,0.4403292987,0.1072383922,0.000211333354
I just get CODE,Investigation and Exploration,True,15,CONTRIBUTOR,False,False,False,0.5714285714,0.02298850575,0.5,0.7647058824,0.7732108271,0.2267891729,6.97e-06,4.37e-06
Somehow it looks like neither compiled code nore interpreter  is running that call.,Solution Discussion,False,83,CONTRIBUTOR,False,False,False,0.6363636364,0.1505376344,0.5555555556,0.6332046332,0.5537917672,0.4462082328,0.003696630136,0.001219776039
"If you search for CODE in OpenJ9, you'll see that the JIT transforms these calls to potentially perform the work inline.",Investigation and Exploration,True,120,CONTRIBUTOR,False,False,False,0.2258064516,0.2258064516,0.8333333333,0.4054054054,0.3937305493,0.6062694507,0.03688423691,0.3568236584
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_extended.functional_x86-64_mac_Nightly/547
cmdLineTester_locales_0
CODE",Testing,True,124,CONTRIBUTOR,True,False,False,1.0,0.08620689655,1.0,0.6697247706,0.9858262636,0.01417373637,0.3152815591,0.01346912259
"Can we dump a core file when the VerifyError occurs and get the bytecode that way?

CODE",Investigation and Exploration,True,90,CONTRIBUTOR,False,False,False,1.0,0.1353383459,1.0,0.106870229,0.0013248173,0.9986751827,0.0003249710183,0.01873100248
Why not just install cuda-9-0?,Solution Discussion,False,30,NONE,False,False,False,0.8571428571,0.04724409449,0.2140762463,0.25,0.3308235311,0.6691764689,0.5779195954,0.02958178195
The exception message states CODE can't be invoked but w/o what was CODE due to lack of details during NPE message generation.,Investigation and Exploration,True,126,MEMBER,True,False,False,1.0,0.2391304348,0.7,0.1823899371,0.3431647145,0.6568352855,0.001046537172,0.001139510487
I'm about to head out for the weekend - thanks for all the data!,Social Conversation,False,64,CONTRIBUTOR,False,False,False,0.3939393939,0.1940298507,1.0,0.530726257,0.005276343682,0.9947236563,0.000261155566,1.47e-05
"I thought in the original paper, CODE and CODE are ""learned along with the original model parameters"".",Solution Discussion,True,102,CONTRIBUTOR,False,False,False,0.8947368421,0.06538461538,0.3704496788,0.6,0.3603780918,0.6396219082,0.3882282375,0.06886363297
"Dereferncing the j9method reference stored within the entry, and using it to obtain the J9Class.",Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.5555555556,0.1648351648,0.5555555556,0.5594405594,0.8546478187,0.1453521813,0.002043575217,0.001362640241
@lesteve I can reproduce the issue.,Bug Reproduction,False,35,NONE,False,False,False,1.0,0.08450704225,0.1374269006,0.25,0.1563439049,0.8436560951,0.001746127121,0.05890874943
The convergence speed when getting closer to the optimum is just not as good as coordinate descent  but this is a different issue.,Solution Discussion,False,130,MEMBER,False,False,False,1.0,0.338028169,0.5905797101,1.0,0.04325255159,0.9567474484,0.0006227250095,0.0001494961139
"In regards to the crash on power, the following are the trees generated.
CODE

I'll be taking a second look at the generated sequence to see if there were any similar assumptions, otherwise we should be ready for a PR.",Investigation and Exploration,True,221,CONTRIBUTOR,False,False,False,1.0,0.8936170213,0.5,0.6846153846,0.6425349507,0.3574650493,0.005132080224,0.00304547315
Is there anything that I might be missing ?,Usage,False,43,NONE,False,False,False,0.347826087,0.03076923077,0.7730192719,0.5,0.6216425187,0.3783574813,0.0279240315,0.007914289561
[1]  was merged yesterday.,Action on Issue,False,26,MEMBER,True,False,False,0.5555555556,0.05434782609,0.4,0.4591194969,0.4977312427,0.5022687573,0.0002080991169,0.000454293798
"@andrewcraik @cathyzhyi if the fixes are merged, can this be closed?",Action on Issue,False,68,CONTRIBUTOR,False,False,False,1.0,0.08270676692,0.5,0.9872773537,0.994259906,0.005740093991,0.0005988459646,0.000403454585
"its class is unloaded ?
> 2. Is the following true: class can be unloaded without its **Class Loader** being unloaded or, more precisely, before Class Loader unloading JIT hook is called for its class loader?",Investigation and Exploration,False,209,CONTRIBUTOR,False,False,False,0.3846153846,0.3846153846,0.1071428571,0.6678321678,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
I think something is happening during the jit compilation of that method.,Solution Discussion,False,73,NONE,True,False,False,0.6315789474,0.1791044776,0.3333333333,0.4078212291,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
"Back and forth, via pybind?",Solution Discussion,False,27,CONTRIBUTOR,False,False,False,0.1041666667,0.07462686567,0.05686546463,0.9166666667,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
@aipeteryao  - Thank you.,Social Conversation,False,25,NONE,False,False,False,1.0,0.03149606299,0.1114369501,1.0,0.2119947534,0.7880052466,0.209218471,0.01947000817
Could you please run with 0.27 with CODE to see whether that continuous warm-->hot-->warm-->hot pattern is still present?,Investigation and Exploration,True,121,CONTRIBUTOR,False,False,False,0.75,0.225,0.8,0.387254902,0.2985071133,0.7014928867,0.0007771213165,0.005374605821
b) Stacking:,Solution Discussion,False,12,MEMBER,False,False,False,0.06666666667,0.02816901408,0.8369565217,0.5,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"The number of matches I have is up to a million, python process eats about 4 GB of ram, and there's still enough for it to grow.",Potential New Issues and Requests,False,128,CONTRIBUTOR,False,False,False,1.0,0.2842105263,0.6421052632,0.5,0.1887379296,0.8112620704,7.438390269e-06,4.080282041e-06
"Digital Reasoning wrote a paper showing this got them good results, and early examination of the vectors is looking good to me too.",Motivation,False,131,MEMBER,False,False,False,0.8214285714,0.6052631579,0.1167883212,1.0,0.003440430228,0.9965595698,0.0006606771075,0.0004625994361
"Server is asking for CODE
CODE looks strange to me
It's coming from CODE
where fieldName=""type"" and fieldSignature=""Ljava/lang/invoke/MethodType;""

The crash happens when executing
CODE
objectHederSizeInBytes is 4 for compressedrefs because this is the class pointer",Investigation and Exploration,True,273,CONTRIBUTOR,True,False,False,1.0,0.2328042328,1.0,0.08,0.1339294514,0.8660705486,0.0004416122032,0.0001924551776
"@babsingh, @pshipton, I will look at this tomorrow.",Contribution and Commitment,False,51,NONE,True,False,False,0.2962962963,0.1066666667,0.2,0.2768361582,0.00489293646,0.9951070635,0.002021828306,0.009446358204
After the java command above has finished running.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.3076923077,0.1379310345,0.75,0.2935779817,0.02085230113,0.9791476989,4.43e-05,0.0001834423374
In the whole stack it doesn't look like we ever call CODE.,Investigation and Exploration,True,58,CONTRIBUTOR,False,False,False,0.5,0.1318681319,0.3333333333,0.3251748252,0.6163591305,0.3836408695,0.03226044993,0.02856229515
"I'm intrigued by the 30% or so benefit that noTimestampChecks gives on Linux at the moment

On Linux, using Liberty start-up, CODE gives me less than 1% which is noise.",Investigation and Exploration,True,170,CONTRIBUTOR,False,False,False,1.0,0.2335766423,1.0,0.843866171,0.06442381925,0.9355761807,0.002372867318,0.001221633262
Or what kind of more low-level unit tests might help us hone in on it?,Investigation and Exploration,False,70,MEMBER,False,False,False,0.5925925926,0.2352941176,0.5975609756,1.0,0.5763800548,0.4236199452,0.006827881986,0.01015048758
But I got the same error:,Bug Reproduction,False,25,NONE,False,False,False,0.1578947368,0.008683068017,0.1716171617,0.4,0.04574248984,0.9542575102,0.0977297843,0.03037586316
Said future could then be passed through the graph until the Tensor it represents requires evaluation.,Expected Behaviour,False,102,CONTRIBUTOR,False,False,False,0.6153846154,0.2388059701,0.3952843273,0.5,0.3322165772,0.6677834228,0.03860581352,0.04548767515
Since we have narrowed it down to the usage of CODE perhaps that detail can help guide whether this should still be a blocker or not.,Investigation and Exploration,True,133,CONTRIBUTOR,False,False,False,0.8387096774,0.2795698925,1.0,0.6138996139,0.5529165945,0.4470834055,0.002801381667,0.003696630136
"Repro rate with following command was 3/5 (killed early to make progress):

CODE

Console:

CODE",Bug Reproduction,True,102,CONTRIBUTOR,False,False,False,1.0,0.1428571429,1.0,0.7913486005,0.7979114035,0.2020885965,0.0003049413581,0.1031699186
"https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/72/
Rebuild without the OMR changes in https://github.com/eclipse/openj9/issues/5074#issuecomment-540073636 and also
#6584
#6694

As previously mentioned #7034 was already reverted.",Solution Discussion,False,258,CONTRIBUTOR,False,False,False,1.0,0.132183908,1.0,0.4338235294,0.7657307443,0.2342692557,2.35e-05,0.0003407981718
This is a ClassFormatError.,Observed Bug Behaviour,False,27,MEMBER,False,False,False,0.25,0.03007518797,0.5,0.1628498728,0.01361800008,0.9863819999,0.0002252314856,0.002938228528
Or a '(mean) target encoder'?,Motivation,False,29,CONTRIBUTOR,True,False,False,0.2083333333,0.078125,0.6470588235,1.0,0.1225709705,0.8774290295,0.0001733007777,7.770058345e-05
"However, I was able to run the code after installing Spyder, both in Spyder and in Jupyter.",Solution Discussion,False,91,NONE,False,False,False,0.7083333333,0.175257732,0.5532544379,0.5,0.848593974,0.151406026,0.0001585701904,6.418695628e-05
But without the bane of GIL -- maybe via easy C++/Eigen hooks and thread control on the native side?,Solution Discussion,False,100,CONTRIBUTOR,False,False,False,0.3958333333,0.2835820896,0.05547850208,0.8333333333,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
"Sounds great, thanks a lot !",Social Conversation,False,28,MEMBER,False,False,False,0.1282051282,0.07042253521,0.5292397661,0.25,0.4545652645,0.5454347355,0.002465307867,7.597272067e-05
Can you please try adding CODE to the (most conservative) options for the flight service and see if the livelock is avoided at least ?,Investigation and Exploration,True,134,CONTRIBUTOR,False,False,False,1.0,0.3,1.0,0.8088235294,0.9470188736,0.05298112636,0.04955018304,0.0226844032
"@larsmans , you are completely right.",Social Conversation,False,37,NONE,True,False,False,0.2777777778,0.05154639175,0.1420118343,0.25,0.009500960535,0.9904990395,1.797870487e-05,0.006789037082
"After upgrading CODE to 1.11.2, I can no longer reproduce the error in either conda virtual environment.",Investigation and Exploration,True,104,NONE,False,False,False,0.5151515152,0.2394366197,0.7397660819,0.6666666667,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
The current pickling implementation was only supposed to be an exploratory kludge.,Task Progress,False,82,MEMBER,False,False,False,0.2608695652,0.07843137255,0.3762057878,0.1052631579,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
"After applying your suggestions, I finally made it to work!",Social Conversation,False,59,NONE,False,False,False,1.0,0.03846153846,0.6788008565,1.0,0.5715498119,0.4284501881,0.003906111685,0.005970364889
"For me it would be brilliant, because I have 100+ [Celery] URL  workers and the 100M for each instance to load the vector model makes it hard to scale across docker containers.",Motivation,False,176,NONE,True,False,False,1.0,0.8947368421,0.6131386861,0.4,0.004047128885,0.9959528711,2.745084526e-05,4.078315706e-05
it sounds like somewhere we're assuming the generated size to be an integer.,Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.7647058824,0.2765957447,0.3333333333,0.6192307692,0.5851663836,0.4148336164,0.3869983485,0.2686456518
"Thus, for java, it is a wrong reason (you have to write and execute from the same memory).",Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.7826086957,0.1034482759,0.3333333333,0.6507352941,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
That's tf 1.8 wheel for cuda 9.2.,Solution Discussion,False,33,NONE,True,False,False,0.6363636364,0.05511811024,0.9120234604,0.5,0.9259629187,0.07403708125,0.001998099513,0.02806508983
"However, with the new setup below (where I have to use Tensorflow), this does not work any more.",Solution Discussion,False,96,NONE,False,False,False,1.0,0.2535211268,0.8245614035,0.6,0.6456610805,0.3543389195,1.0,4.677373331e-05
"However, doesn't look like we need the second invocation; we didn't do any AOT compilations in that vlog...",Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,0.6428571429,0.1313868613,0.6666666667,0.08921933086,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
I'll re-open and assign to the next milestone.,Action on Issue,False,46,CONTRIBUTOR,False,False,False,1.0,0.06766917293,1.0,0.2391857506,0.2148327567,0.7851672433,0.005956575697,0.0009205468343
+1!,Social Conversation,False,3,NONE,False,False,False,1.0,0.01369863014,0.006465517241,1.0,2.582966196e-05,0.9999741703,0.0004647668033,0.0009160332375
That was my motivation.,Social Conversation,False,23,CONTRIBUTOR,True,False,False,0.125,0.05633802817,0.07971014493,0.3636363636,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
So What I am doing is: setting CODE to False while training while CODE to True.,Usage,True,79,NONE,False,False,False,0.8,0.06153846154,0.9164882227,0.7,0.7489109604,0.2510890396,0.04599776246,0.3206669123
"I went back all the way to the first nightly of ppc64le JDK15 on adoptopenjdk, and they all hang similarly.",Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,1.0,0.4255319149,1.0,0.2615384615,0.1152004789,0.8847995211,0.005424033477,0.1326211964
"Where we're stuck is that to optimally follow recommendations, we end up in an awkward situation, one of:",Motivation,False,105,CONTRIBUTOR,False,False,False,0.45,0.2686567164,0.2510402219,0.5,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
I would like to request that this issue is dropped off the required list.,Action on Issue,False,73,CONTRIBUTOR,True,False,False,0.875,0.109375,0.6,0.8333333333,0.2165690907,0.7834309093,0.01920965971,0.0002757120844
"@kdvolder ,  Did you mean it can be directly executed on the command line ?",Investigation and Exploration,False,75,CONTRIBUTOR,False,False,False,0.875,0.1414141414,0.3333333333,0.6701754386,0.2140035771,0.7859964229,0.004786279063,0.001641357342
I apologize  for the confusion.,Social Conversation,False,31,CONTRIBUTOR,False,False,False,0.75,0.04109589041,1.0,0.6703910615,0.2548612619,0.7451387381,0.0009966013216,0.02486675089
I managed to find a way to reproduce I think by installing the numpy wheel and then scikit-learn via conda on top of it (got the hint from the CODE output in https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-262800762 where two CODE are listed).,Bug Reproduction,True,265,MEMBER,False,False,False,0.829787234,0.5492957746,0.7631578947,0.1428571429,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
@vsebe maybe you can try to build JDK 13 with xlC 13 with the older source?,Contribution and Commitment,False,75,CONTRIBUTOR,False,False,False,1.0,0.09195402299,0.6666666667,0.2720588235,0.7583585823,0.2416414177,0.0006493475044,0.001068346158
@fengxue-IS another NPE,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,1.0,0.04347826087,1.0,0.05031446541,0.01520178886,0.9847982111,0.0002248813038,0.5034978273
"I think tensorflow need 2 hyper methods that change the model state, something like torch.",Potential New Issues and Requests,False,90,NONE,False,False,False,1.0,0.05769230769,0.05995717345,0.3333333333,0.1739067199,0.8260932801,0.0001378806696,0.1811646483
[1] https://github.com/eclipse/openj9/issues/9416#issuecomment-743283919,Testing,False,72,CONTRIBUTOR,False,False,False,0.04081632653,0.03225806452,1.0,0.6557377049,0.8310912867,0.1689087133,0.008832756273,0.001165656648
"Overall, I felt xlclang++ build is fine perf-wise.",Testing,False,50,CONTRIBUTOR,False,False,False,0.45,0.05172413793,0.5,0.9632352941,0.798102097,0.201897903,3.05e-05,0.0002166460475
Or did anyone experience the bug not using conda?,Investigation and Exploration,False,49,MEMBER,False,False,False,1.0,0.1267605634,0.7602339181,1.0,0.4708772814,0.5291227186,0.06102214722,0.0008236605345
Will the new CategoricalEncoder be able to do something similar?,Expected Behaviour,False,64,NONE,False,False,False,0.5,0.15625,0.8198529412,1.0,0.2596531697,0.7403468303,0.009666196666,0.01199680736
@0dvictor,Contribution and Commitment,False,9,CONTRIBUTOR,False,False,False,0.0625,0.015625,0.75,0.2765957447,0.4503871241,0.5496128759,1.0,0.0283808672
"Here're the results from  j9gc29.pdb and j9thr29.pdb:

CODE
I didn't find any file containing ""_FNV_prime"" in the build compiled via VS2010 while there are a bunch of .pdb files containing _FNV_prime (including j9thr29.pdb, j9thr29.pdb) in the build compiled by VS2017.",Investigation and Exploration,True,272,CONTRIBUTOR,False,False,False,1.0,0.3644067797,0.5,0.3818181818,0.4163107368,0.5836892632,0.001350389027,0.006630634685
@andrewcraik @fjeremic What's the next step here?,Task Progress,False,49,MEMBER,False,False,False,1.0,0.05263157895,1.0,0.6386768448,0.6944192462,0.3055807538,0.4902296135,0.0009859498065
"Not saying it's perfect, but at least works much better than current TF queue API in my case.",Solution Discussion,False,93,NONE,False,False,False,1.0,0.2686567164,0.8252427184,0.8,0.7158615465,0.2841384535,0.6886518758,0.01649590529
"Missed a step to set the VENDOR_REPO and BRANCH, try again
https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/67/
CODE",Solution Discussion,True,141,CONTRIBUTOR,False,False,False,1.0,0.08620689655,1.0,0.3492647059,0.7629915407,0.2370084593,0.000382851603,0.00180747065
"@rasbt Hmm, that's really interesting.",Social Conversation,False,38,NONE,False,False,False,0.3571428571,0.07042253521,0.6637426901,0.1666666667,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
it's been awhile tho.,Task Progress,False,21,NONE,False,False,False,0.3636363636,0.06666666667,0.7327586207,0.6666666667,0.4484783114,0.5515216886,0.0001265968096,0.003118709101
"Similarly, CODE transformer expects to find the constructor call in the next tree after the CODE (possibly skipping an CODE, and possibly skipping some other nodes in post-execution OSR, which again is voluntary)",Solution Discussion,True,212,CONTRIBUTOR,False,False,False,1.0,0.3655913978,1.0,0.8378378378,0.6284499112,0.3715500888,0.02028856842,0.008046045613
@fabiofumarola Thank you for the function.,Social Conversation,False,42,NONE,False,False,False,0.3529411765,0.008683068017,0.7623762376,0.125,0.2742562411,0.7257437589,0.006610382458,0.005351860947
The existence of a higher-level abstraction doesn't preclude the lower-level API from also existing.,Solution Discussion,False,100,CONTRIBUTOR,False,False,False,0.2388059701,0.2388059701,0.3717059639,0.75,0.2991231524,0.7008768476,0.01002173327,0.1413171275
"and telling people ""if you want to one hotencode strings, go to CategoricalEncoder instead"" is awkward, because OHEis already intended for categoricals...",Motivation,False,154,MEMBER,False,False,False,1.0,0.34375,0.7279411765,1.0,0.1237414412,0.8762585588,0.004649423917,0.002792339292
That would be the safest way to address the issue.,Solution Discussion,False,50,CONTRIBUTOR,False,False,False,1.0,0.2127659574,1.0,0.9769230769,0.7350858598,0.2649141402,0.01440588944,0.1968967087
"For some reason openJ9 doesn't seem to want to produce traces for it, considering only 1 run in 10 actually produced any trace despite all runs compiling it.",Investigation and Exploration,False,157,NONE,True,False,False,1.0,0.4179104478,1.0,0.5083798883,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
The new input pipelines are great!,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.1071428571,0.08955223881,0.879334258,0.07692307692,0.8997769167,0.1002230833,0.0385452454,0.125435556
"The evaluator should support both long, or int length values.",Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.2631578947,0.2127659574,0.8333333333,0.9230769231,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"They can be either Long, or Int.",Solution Discussion,False,32,CONTRIBUTOR,False,False,False,0.2333333333,0.1489361702,0.4,0.9461538462,0.7315269328,0.2684730672,0.001396795956,0.005094870496
"If one of you can reproduce the problem, please try to find a numpy random seed that trigger the issue (using CODE instead of CODE in the above snippet) and communicate the value here (along with the version of OSX and you python packages).",Investigation and Exploration,True,240,MEMBER,False,False,False,1.0,0.6197183099,0.2046783626,1.0,0.1684104767,0.8315895233,0.000240649474,0.05891636054
"FWIW, this issue still happens on 32bit debian stretch with 0.19.1CODE",Observed Bug Behaviour,True,70,MEMBER,True,False,False,1.0,0.1617647059,0.9756097561,1.0,0.9918209935,0.008179006543,1.0,0.0008629382027
"I've noticed 3 different kind of crashes, but i think they will lead to the same problem.",Investigation and Exploration,False,89,CONTRIBUTOR,False,False,False,0.4736842105,0.09523809524,0.5,0.3828571429,0.4100880548,0.5899119452,0.0008687385329,0.003375208545
"1.         if you install the CUDA manual,  then after install, you should add the  path of cuda/lib64 to /etc/ld.so.conf fileCODEthenCODE",Solution Discussion,True,138,NONE,False,False,False,0.6944444444,0.1968503937,0.8181818182,0.4444444444,0.7354114739,0.2645885261,0.4152157275,0.1560011388
use staging area you can even hide all preprocessing and input time.,Usage,False,68,CONTRIBUTOR,False,False,False,0.3870967742,0.1791044776,0.9251040222,1.0,0.9486517891,0.05134821091,0.005625200409,0.06755432044
"To clarify what I mean by this:

> Running STS with JDK 8 that was installed on my windows VM.",Social Conversation,False,96,NONE,True,False,False,0.5555555556,0.202020202,0.125,0.4421052632,0.1964587946,0.8035412054,0.004535009544,0.001033447215
**Although to be honest...I'm starting to doubt my own idea in terms of if the speed tradeoff is even worth it.**,Solution Discussion,False,113,NONE,True,False,False,0.6111111111,0.5789473684,0.5255474453,0.375,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
"I can shuffle e.g. the list of filenames before creating a dataset, but once I start a session to my knowledge I can only shuffle the data from the dataset that I have in memory using dataset.shuffle(buffer_size).",Workarounds,False,213,NONE,False,False,False,1.0,0.552238806,0.7822468793,0.375,0.6090011473,0.3909988527,0.000271284095,0.000261613555
it makes sense to me.,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.1315789474,0.08064516129,0.625,0.1603375527,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
"If there is any interest, I would be glad to improve the service to enable communication with spaCy.",Potential New Issues and Requests,False,100,NONE,False,False,False,1.0,0.4736842105,0.8832116788,1.0,0.008264937696,0.9917350623,0.003893704171,0.01990868788
"-         We have data that comes from a large number of imbalanced segments, and in training we use some custom stratified sampling logic to ensure we present examples from each segment evenly.",Motivation,False,194,CONTRIBUTOR,False,False,False,0.6808510638,0.4776119403,0.2635228849,0.8333333333,0.05010423233,0.9498957677,0.0003781690105,0.199242644
"@honnibal When you say ""writing out all the state"", can you clarify what is involved here?",Solution Discussion,False,90,CONTRIBUTOR,False,False,False,1.0,0.1045751634,0.08360128617,0.5,0.003550731773,0.9964492682,0.004147527693,5.522493104e-05
"-         constructor: CODE (optional), CODE (>=0), a list CODE of fitted estimators (optional).",Solution Discussion,True,96,MEMBER,False,False,False,0.4333333333,0.1830985915,0.8260869565,0.3636363636,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
The restoration idea would look like this: CODE,Solution Discussion,True,47,MEMBER,False,False,False,0.25,0.1290322581,0.9074889868,0.2,0.6578010252,0.3421989748,0.0002101432121,0.0002159883295
I didn't mean that.,Social Conversation,False,19,NONE,True,False,False,0.09523809524,0.0404040404,0.25,0.6842105263,0.2144667264,0.7855332736,0.001641357342,0.00438505838
I could try your last version of JMeter though.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,1.0,0.1125,1.0,0.6176470588,0.8283667974,0.1716332026,0.0014034579,0.2743165754
"Windows results on a Windows Server 2012 R2 with 8CPUs
HotSpot:
CODE

CODE

18.59s,16.844s,16.313

OpenJ9:
CODE

CODE

11.985s,14.252s,12.188s

OpenJ9 with CODE:
CODE

Cold run 22.058s",Investigation and Exploration,True,202,CONTRIBUTOR,False,False,False,1.0,0.2627737226,0.5,0.4014869888,0.02049630879,0.9795036912,0.0002559218155,0.0001064270333
"That repo looks like it's targeted at tf 1.0, not intermediate releases.",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.01736613603,0.08250825083,1.0,0.00155433543,0.9984456646,0.000477730304,0.0008163895906
-- Eric,Social Conversation,False,7,NONE,True,False,False,0.09090909091,0.03225806452,0.8281938326,1.0,0.6128462627,0.3871537373,0.09855593002,0.1714850105
"I find a smaller deficit when running without shareclasses, and an improvement when running with.",Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.1094890511,0.1094890511,0.5,0.3605947955,0.02016926055,0.9798307394,6.54e-05,5.3e-05
Still facing this problem with the same sample  code.,Bug Reproduction,False,53,NONE,False,False,False,0.5,0.1030927835,0.8579881657,0.5,0.9544498763,0.04555012373,0.05592088416,0.0005450428142
"If the aforementioned CODE really caused this issue, the remaining question would be how to deal with that in scikit-learn.",Solution Discussion,True,123,CONTRIBUTOR,False,False,False,0.7777777778,0.2957746479,0.7134502924,0.625,0.459007429,0.540992571,0.001079117078,0.0009613524417
"Core 2

Native stack
CODE",Investigation and Exploration,True,28,CONTRIBUTOR,False,False,False,1.0,0.06730769231,1.0,0.09944751381,0.008193198807,0.9918068012,3.16e-05,0.0001986857803
"Yes, wondering if the SIGQUIT thread was attached, got exlusive via external, and ended before releasing.",Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,1.0,0.2133333333,0.5,0.7457627119,0.08540925558,0.9145907444,0.0002577612278,2.19e-06
-         Go here: https://developer.nvidia.com/cuda-90-download-archive,Solution Discussion,False,72,NONE,False,False,False,0.5714285714,0.03149606299,0.2170087977,0.5,0.3308235311,0.6691764689,0.5779195954,0.02958178195
pinging SCREEN_NAME ,Contribution and Commitment,False,20,NONE,False,False,False,0.1428571429,0.0157480315,0.1730205279,1.0,0.244487942,0.755512058,0.1948879119,0.2449173066
"Interestingly enough, it takes a zillion years to get the model restored after training with batch_norm as well.",Solution Discussion,False,112,NONE,False,False,False,0.6666666667,0.06923076923,0.7430406852,0.8333333333,0.6158890256,0.3841109744,0.00136237059,0.002840605583
@Concomitant can you reproduce the error on the stand-alone example given in https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-218365487?,Bug Reproduction,False,157,MEMBER,False,False,False,1.0,0.1971830986,0.1315789474,1.0,0.1559873107,0.8440126893,0.007793915485,0.0003311524965
Thanks for sharing your analysis SCREEN_NAME !,Social Conversation,False,46,NONE,False,False,False,0.4285714286,0.02307692308,0.4411134904,0.4,0.3802491548,0.6197508452,0.003984639748,0.00101193657
I'll open up the JIT issues for us to tackle against this Epic.,Task Progress,False,63,CONTRIBUTOR,True,False,False,0.5416666667,0.203125,0.6666666667,0.05673758865,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
"It occurs to me that this would have been avoided if we had some kind of 'compiler' to check uses like that, along the lines of the error you get in Java passing a long to a function that expects an int (e.g. CODE).",Solution Discussion,True,215,CONTRIBUTOR,False,False,False,1.0,0.9361702128,0.5,0.7115384615,0.644040952,0.355959048,0.002369973467,0.007376113072
"Not sure if this was mentioned above and I missed it, but I would appreciate a much easier way to switch between train and validation data sets.",Expected Behaviour,False,144,NONE,False,False,False,0.54,0.4029850746,0.4257975035,0.2,0.4000653979,0.5999346021,0.1106294504,0.0001180823828
3. CODE kills the process and creates four files.,Observed Bug Behaviour,True,49,NONE,True,False,False,0.4090909091,0.12,0.75,0.1468926554,0.002090300149,0.9979096999,0.0002669513564,0.000160608439
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2823275862,1.0,0.2696795303,0.7303204697,0.3442040813,0.1521422983
We're working on a new tutorial but it's still a few weeks off and will require a nightly version of TensorFlow (or TF 1.1 or 1.2) to work.,Task Progress,False,139,CONTRIBUTOR,False,False,False,1.0,0.04052098408,0.3465346535,1.0,0.07171178222,0.9282882178,0.001538799449,8.78093455e-06
how many threads are currently active?,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.1463414634,0.09677419355,0.6,0.08860759494,0.003956069835,0.9960439302,0.01118964345,0.000481306353
I'm surprised no-one else has found yet - perhaps we just do more rat checks than some.,Investigation and Exploration,False,87,NONE,True,False,False,0.6071428571,0.1278195489,0.5,0.3282442748,0.4052567842,0.5947432158,5.07e-05,0.1962918967
"but to be on the safe side, check the /etc/ld.so.conf and see if the path add to it .",Solution Discussion,False,85,NONE,False,False,False,0.5277777778,0.1496062992,0.8328445748,1.0,0.7354114739,0.2645885261,0.4152157275,0.1560011388
Can you use Estimator to write your model?,Usage,False,42,MEMBER,False,False,False,0.32,0.1194029851,0.4147018031,1.0,0.3388995843,0.6611004157,0.0001124836492,0.3801876085
[1] https://github.com/ibmruntimes/openj9-openjdk-jdk/blob/6bf156ad9ad45ecbce48f67039a2f1aafdce3348/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java#L1310,Investigation and Exploration,False,172,MEMBER,True,False,False,0.09090909091,0.02173913043,1.0,0.2012578616,0.3431647145,0.6568352855,0.001046537172,0.001139510487
output of CODE numpy                     1.12.0                    <pip>numpy                     1.12.0                   py27_0numpy                     1.13.1                    <pip>numpydoc                  0.7.0                     <pip>,Investigation and Exploration,True,243,NONE,False,False,False,1.0,0.2268041237,0.5266272189,1.0,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
It seems a better solution.,Social Conversation,False,27,CONTRIBUTOR,True,False,False,0.1612903226,0.08064516129,0.2857142857,0.552742616,0.4797361547,0.5202638453,0.003593754102,0.003640426233
![captura de pantalla de 2018-05-25 17-53-11] URL ,Observed Bug Behaviour,False,50,NONE,False,False,False,0.2619047619,0.1134020619,0.9378698225,0.7142857143,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
"It's only ever called during:
CODE
CODE

I suspect then it's missing that mutex.",Investigation and Exploration,True,84,CONTRIBUTOR,False,False,False,0.7083333333,0.1868131868,0.6666666667,0.3286713287,0.6163591305,0.3836408695,0.03226044993,0.02856229515
"I'd be happy to try to take a crack at it, but things like the use of CODE in CODE make it pretty involved...",Contribution and Commitment,True,109,CONTRIBUTOR,False,False,False,1.0,0.4032258065,0.7224669604,0.25,0.2945657166,0.7054342834,0.000146521357,8.318051723e-06
"Dears,Is this issue resolved with the release of spacy 2.0.",Task Progress,False,59,NONE,False,False,False,1.0,0.07189542484,0.9871382637,0.3333333333,0.8195353595,0.1804646405,0.5841431139,0.5123188737
"I've actually been thinking for a while that I'd like to switch the direct calls in the helper wrappers to indirect calls, which would have the side-effect of loading r12.",Solution Discussion,False,171,CONTRIBUTOR,False,False,False,1.0,0.2578125,0.5,0.5111111111,0.0386721008,0.9613278992,0.001226532263,4.57e-05
"Yes, it got started.",Social Conversation,False,20,NONE,True,False,False,0.2222222222,0.0404040404,0.125,0.1894736842,0.1140182149,0.8859817851,0.003967626759,0.002853124861
@pwagland I suspect it's part of the gdb package (it invokes gdb to create the cores).,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,1.0,0.2133333333,1.0,0.5254237288,0.06497932918,0.9350206708,0.003794429075,0.007120161589
"@keithc-ca,  I suspect the current script in openjdk11 didn't or failed to copy these dll files from /vm to the right place after improving these setting (e.g. OpenJ9.gmk).",Investigation and Exploration,False,172,CONTRIBUTOR,False,False,False,0.2608695652,0.2542372881,0.6666666667,0.9212121212,0.6453809646,0.3546190354,0.01790509819,0.0003116104286
@priidukull is your test failure reproducible?,Bug Reproduction,False,46,MEMBER,False,False,False,0.6,0.08823529412,0.5243902439,0.3333333333,0.5676858537,0.4323141463,0.000437512086,0.005325768668
"For example, a way to monitor the number of examples in the buffers along the input pipeline would be helpful.",Expected Behaviour,False,110,NONE,False,False,False,0.5263157895,0.2985074627,0.6199722607,0.2857142857,0.5016859242,0.4983140758,0.003761840049,0.03050902669
Could someone please summarize where this currently stands?,Task Progress,False,59,NONE,False,False,False,0.4210526316,0.06299212598,0.366568915,0.25,0.3797254726,0.6202745274,0.2554187912,0.006558528713
SED enforcement doesn't depend on that XCOFF header flag at all (thus deprecated).,Solution Discussion,False,82,CONTRIBUTOR,False,False,False,0.5652173913,0.07471264368,0.4444444444,0.6544117647,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
"I would be very accurate with table walks in hooks handlers

>Could we get rid of the mutex?",Investigation and Exploration,False,94,CONTRIBUTOR,False,False,False,0.2087912088,0.2087912088,0.8928571429,0.7447552448,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
The extra information to print can be the result of CODE from CODE,Investigation and Exploration,True,66,CONTRIBUTOR,False,False,False,0.3023255814,0.2096774194,1.0,0.393442623,0.6389467947,0.3610532053,0.00359446461,0.01517828221
@andrewcraik @mpirvu fyi the preceding two comments.,Contribution and Commitment,False,52,CONTRIBUTOR,True,False,False,0.35,0.1044776119,0.5,0.9479768786,0.02013836648,0.9798616335,0.0005708426721,2.11e-05
"I followed the guidelines of dataset README.md, with pseudo code like following: def _parse_function(example_proto):features = {""image"": tf.FixedLenFeature((), tf.string, default_value=""""),""label"": tf.FixedLenFeature((), tf.int32, default_value=0)}parsed_features = tf.parse_single_example(example_proto, features)return parsed_features[""image""], parsed_features[""label""] BATCH_SIZE = 256filenames = [""/var/data/file1.tfrecord"", ""/var/data/file2.tfrecord""]dataset = tf.contrib.data.TFRecordDataset(filenames)dataset = dataset.map(_parse_function)dataset = dataset.batch(BATCH_SIZE)dataset = dataset.filter(lambda imgs, lbls: tf.shape(imgs)[0] == BATCH_SIZE)iterator = dataset.make_initializable_iterator()next_element = iterator.get_next()images, labels = next_element # Training cycles for 100 epochs.for _ in range(100):sess.run(iterator.initializer)while True:try:images_r, labels_r = sess.run([images, labels])print(images_r.shape)except tf.errors.OutOfRangeError:break",Usage,False,973,NONE,False,False,False,1.0,0.9104477612,0.7420249653,0.375,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"2. I'm told the defining class is the class of the method we're compiling and so we would've already remembered it at the start of the compile...though even if it wasn't, the fact that CODE returned true means that we succeeded in remembering the class. CODE also does create an instance field validation record, but it must've succeeded nonetheless.",Solution Discussion,True,350,CONTRIBUTOR,False,False,False,1.0,1.0,0.5,0.4644808743,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"""we can restore the original string store every N documents without causing any problems"" - sorry, did not catch that, how is it restored every N documents?",Solution Discussion,False,156,NONE,False,False,False,1.0,0.4193548387,0.9030837004,1.0,0.6577461677,0.3422538323,0.0002666834826,0.0002101432121
is that not correct?,Usage,False,20,NONE,False,False,False,0.1666666667,0.01538461538,0.1691648822,1.0,0.2177649084,0.7822350916,0.0001955084991,2.921974455e-05
Just my 2Â¢...,Social Conversation,False,14,NONE,False,False,False,0.1153846154,0.01960784314,0.5241157556,1.0,0.1448670515,0.8551329485,0.02443361297,0.06319984844
"https://ci.eclipse.org/openj9/job/Test_openjdk15_j9_sanity.openjdk_ppc64le_linux_Nightly/55
CODE",Testing,True,97,CONTRIBUTOR,False,False,False,1.0,0.06382978723,1.0,0.4884615385,0.4090723649,0.5909276351,0.2098027598,0.003809703725
"Are the community organizers /admin of this thread not able to simply delete the posts of the those people that intensionally trolling with all the ""+1'sâ maybe even ban them?",Social Conversation,False,175,NONE,False,False,False,1.0,0.4109589041,0.7823275862,0.5,0.7609816807,0.2390183193,0.1170572737,0.4412746119
"""That exception code is Entry point not found - something is trying to load a DLL and the DLL cannot find all the DLLs it needs"" https://stackoverflow.com/questions/1649384/c-debugging-exception-c0000139",Investigation and Exploration,False,203,CONTRIBUTOR,False,False,False,1.0,0.2727272727,1.0,0.03157894737,0.002479278356,0.9975207216,0.002233056532,0.3212156581
"However, running with CODE will allow the test to fail with certainty on almost any Power machine.",Bug Reproduction,True,98,CONTRIBUTOR,False,False,False,0.5666666667,0.3617021277,0.4444444444,0.3038461538,0.3215728023,0.6784271977,0.9710937657,0.01822418003
Did you check the location of Eclipse?,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.5833333333,0.07070707071,0.5,0.08771929825,0.1002964156,0.8997035844,0.004133788861,0.001150976506
The bench ran perfectly.,Investigation and Exploration,False,24,NONE,True,False,False,0.1428571429,0.05970149254,0.3333333333,0.4860335196,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
I see now that the bug title references Node.js directly.,Social Conversation,False,57,MEMBER,False,False,False,1.0,0.1369863014,0.6487068966,1.0,0.6920733085,0.3079266915,0.000200513678,0.0871107993
Maybe it's revealing other bugs?,Investigation and Exploration,False,32,NONE,True,False,False,0.1388888889,0.07462686567,0.7142857143,0.7932960894,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
"In order to test this assumption, I took one million tweets and performed a rudimentary analysis using the resources module in python to get the maximum memory used by the program at regular intervals during processing.",Observed Bug Behaviour,False,219,NONE,True,True,False,0.6315789474,0.5806451613,0.02202643172,0.2941176471,0.0,1.0,0.0,0.0008157310994
"You can find the install directions and a basic sample at https://github.com/dfoody/headless-glAnd, of course https://deeplearnjs.org for more details.",Potential New Issues and Requests,False,151,NONE,False,False,False,0.45,0.2465753425,0.8685344828,0.5,0.8361159731,0.1638840269,0.08097676277,0.003132528254
"In the short term, can one of the interested parties send me a PR documenting the fact that CODE might have to be significantly lowered when experiencing poor eval performance?",Action on Issue,True,176,MEMBER,False,False,False,1.0,0.1153846154,0.4582441113,0.75,0.3808921239,0.6191078761,0.003059753667,0.001631435738
My primary request is that however you build the new input pipeline system that it should be completely separate from the rest of the graph.,Expected Behaviour,False,140,NONE,False,False,False,0.625,0.3731343284,0.4049930652,0.1666666667,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
"Anyway, I find memapped NumPy arrays via [joblib.cache.Memory] URL  and feed_dict to be quite performant (GPU load over 90% throughout a training session), despite the extra copy.",Solution Discussion,False,179,CONTRIBUTOR,False,False,False,1.0,0.4179104478,0.3287101248,1.0,0.2826429201,0.7173570799,0.0005756516163,0.0003837677442
or Do we need to live debug to acquire native stack for all threads (CODE)?,Investigation and Exploration,True,75,CONTRIBUTOR,False,False,False,0.625,0.2,0.875,0.395480226,0.03339237467,0.9666076253,0.01898374244,2.23e-05
We await further expertise now to make progress.,Contribution and Commitment,False,48,CONTRIBUTOR,False,False,False,0.25,0.06015037594,1.0,0.9083969466,0.859885377,0.140114623,0.0001189516558,0.06424166071
JDK13 with xlc 13 would use xlc as compiler not xlclang.,Investigation and Exploration,False,56,CONTRIBUTOR,False,False,False,0.1803278689,0.0632183908,0.6666666667,0.2830882353,0.7587398458,0.2412601542,0.001068346158,0.0004175811221
"This means the trampolines for C helper calls need not contain any loading of r2 or r12, though I suppose as they're doing an indirect branch anyway, they may as well use r12 on LE.",Solution Discussion,False,181,CONTRIBUTOR,False,False,False,0.3153153153,0.2734375,0.9230769231,0.7277777778,0.08012656297,0.919873437,0.0570348239,0.002818533349
That looks pretty good.,Social Conversation,False,23,CONTRIBUTOR,False,False,False,0.2857142857,0.02919708029,0.5,0.4089219331,0.02056711873,0.9794328813,0.0001064270333,7.91e-05
You might know better which commits were xlclang++ and which JDK 13 specific?,Contribution and Commitment,False,77,CONTRIBUTOR,False,False,False,0.8125,0.07471264368,1.0,0.2757352941,0.7583585823,0.2416414177,0.0006493475044,0.001068346158
"Have you answered this one, I can't find your answer ...",Social Conversation,False,56,MEMBER,False,False,False,1.0,0.1030927835,0.3402366864,1.0,0.8123772704,0.1876227296,5.608163961e-05,2.165390973e-06
"unless there is good reason to maintain current behaviour, weshould just have a legacy_mode to slowly bring us to the future.",Solution Discussion,False,125,MEMBER,False,False,False,1.0,0.328125,0.2941176471,1.0,0.008700948629,0.9912990514,0.001164695133,5.98009726e-05
I'm working on some parts of that.,Contribution and Commitment,False,34,MEMBER,False,False,False,1.0,0.02692307692,0.008565310493,1.0,5.863816139e-05,0.9999413618,0.0003713342537,1.0
Sometimes it may get all the way through (supposition - since I originally only noticed this on a nightly).,Observed Bug Behaviour,False,107,NONE,True,False,False,0.8571428571,0.1353383459,0.5,0.06870229008,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
My dataset size is less that 20k examples with dimensionality < 100..,Observed Bug Behaviour,False,69,NONE,False,False,False,0.2790697674,0.1237113402,0.4319526627,0.9166666667,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
@zl-wang would one of the above be acceptable?,Social Conversation,False,46,CONTRIBUTOR,True,False,False,0.6,0.1451612903,0.5,0.3502109705,0.2943155004,0.7056844996,0.005090179308,6.42e-05
"@zl-wang note that build isn't a ""final"" build, the classes aren't in the correct format for fast loading, which would affect startup time, but not throughput.",Solution Discussion,False,159,CONTRIBUTOR,False,False,False,1.0,0.1551724138,0.3333333333,0.5992647059,0.7689727487,0.2310272513,0.0003819065821,0.01062274398
This was from a recent change from Mesbah @Mesbah-Alam to kill the run after ten minutes if it hasn't completed.,Investigation and Exploration,False,112,MEMBER,False,False,False,0.512195122,0.3134328358,0.4,0.7514450867,0.01724097253,0.9827590275,1.59e-05,1.18e-05
It'll help us to understand what's causing the crash,Social Conversation,False,52,MEMBER,False,False,False,0.5625,0.09090909091,1.0,0.02807017544,0.00184916656,0.9981508334,0.006553271164,0.002233056532
"I've run the full pipeline on over ten times that much data, and I don't use Spark --- just simple multiprocessing, on a node with lots of cores.",Solution Discussion,False,145,MEMBER,False,False,False,1.0,0.1895424837,0.6077170418,0.8,0.1671397646,0.8328602354,3.922323826e-06,4.685962093e-06
I'm creating the compilation log now.,Task Progress,False,37,NONE,True,False,False,0.3157894737,0.08955223881,1.0,0.2346368715,0.002791329837,0.9972086702,0.0006464246683,0.0001327325319
Then you can investigate what's going on.,Potential New Issues and Requests,False,41,MEMBER,False,False,False,0.3888888889,0.07368421053,0.6210526316,1.0,0.1887344648,0.8112655352,8.377216225e-06,7.438390269e-06
"Previously i used jvm**0317 from espresso, but this is espresso 0327.",Investigation and Exploration,False,69,NONE,False,False,False,0.7333333333,0.1774193548,0.5,0.8902953586,0.7701023622,0.2298976378,0.1778324879,1.0
"Knowing this, serializing the English instance is of little interest.",Solution Discussion,False,69,NONE,False,False,False,0.1666666667,0.06535947712,0.4405144695,0.75,0.1131980914,0.8868019086,0.0007474630201,1.624466859e-05
"Spacy is still far superior to anything else out there in my opinion, but it would be nice if I could use it with the expectation of roughly constant space complexity.",Expected Behaviour,False,167,NONE,True,False,False,0.756097561,0.5,0.1497797357,0.9,0.01937624511,0.9806237549,0.02003548886,0.01526654747
Steps to reproduce: CODE,Bug Reproduction,True,24,CONTRIBUTOR,False,False,False,0.2857142857,0.04210526316,0.2526315789,0.4,0.1100086119,0.8899913881,0.04915356896,0.07593267665
"With the vlog file containing the unfinished JITed method CODE at 
[vlog_jitfile_limit.txt] URL  (totally 8894 lines), I specified each of the following options to run for 5 times (pretty slow) automatically with a shell script till the CODE exception was captured:
CODE
If there is no exception eventually captured in CODE and CODE, I will keep narrowing down the range in CODE to see how it goes.",Investigation and Exploration,True,401,CONTRIBUTOR,False,False,False,1.0,0.5338345865,1.0,0.4427480916,0.4918751284,0.5081248716,0.05500471719,0.1422289823
It's quite odd that we didn't crash during the clean-up of the DLTRecord table since that is done first.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.3921568627,0.2197802198,0.4761904762,0.4440559441,0.8054811495,0.1945188505,0.1631008731,0.2634355634
We are not aware of any known OSR problems from any of these other JIT optimizations.,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.6153846154,0.1720430108,0.8888888889,0.8764478764,0.8399273015,0.1600726985,0.8852104953,0.004353145679
*         [iter_shuffle_batch_range] URL ,Expected Behaviour,False,41,NONE,False,False,False,0.1,0.0447761194,0.1747572816,0.8857142857,0.04064994448,0.9593500555,0.2125437083,0.01543061897
A sign extension was introduced on some flags.,Solution Discussion,False,46,CONTRIBUTOR,False,False,False,1.0,0.04597701149,0.5,0.4264705882,0.7657223552,0.2342776448,4.25e-06,2.35e-05
Because the latter seem to work on the same machine.,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.7692307692,0.1408450704,0.4678362573,0.6666666667,0.4155863901,0.5844136099,0.0001185949392,0.0004713353126
I've been working with @ChengJin01 offline on this one in the background.,Task Progress,False,73,CONTRIBUTOR,False,False,False,0.325,0.0977443609,0.07692307692,0.6463104326,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"No matter how much we optimize it, feed_dict will never be the fastest way to feed data into a training job.",Potential New Issues and Requests,False,108,MEMBER,False,False,False,1.0,0.3134328358,0.2149791956,1.0,0.04880070327,0.9511992967,0.043809073,0.001787522968
"This issue has never been reported on any sanity, or by any other user of OpenJ9.",Action on Issue,False,81,CONTRIBUTOR,True,False,False,1.0,0.125,0.8,0.8388888889,0.2165690907,0.7834309093,0.01920965971,0.0002757120844
When I try to plot a very small sample (< 200 points) I sometimes still run into this error.,Solution Discussion,False,92,NONE,False,False,False,1.0,0.2535211268,0.2192982456,0.8333333333,0.1785242968,0.8214757032,0.05891636054,0.0003516333028
Happy to answer any questions.,Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.3125,0.03267973856,0.7073954984,1.0,0.1684338854,0.8315661146,0.003166981448,0.08051496432
"Or is it 17 specific?

I believe @tajila (apologies if it was someone else) mentioned on the community call that this was not seen with JDK 8 or 11.",Investigation and Exploration,False,150,CONTRIBUTOR,False,False,False,1.0,0.3225806452,1.0,0.3552123552,0.3847792375,0.6152207625,0.0045844182,0.0009250900844
Thanks so much for helping dig into this issue!,Social Conversation,False,47,CONTRIBUTOR,False,False,False,0.4285714286,0.06569343066,1.0,0.4832713755,0.02090298377,0.9790970162,0.0001142951797,1.41e-05
"To be clear, the **wrong** way to do this is to batch the texts into jobs yourself, and then map over the jobs, right?",Solution Discussion,False,118,MEMBER,False,False,False,0.5853658537,0.1568627451,0.1672025723,0.2142857143,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
I've created a fork of headless-gl that works with deeplearnjs (which in turn works with tensorflow) - this allows models to be run natively on the GPU from node.js (note that it's only been tested on OSX so far).,Potential New Issues and Requests,False,213,NONE,False,False,False,1.0,0.5479452055,0.8663793103,0.25,0.8361159731,0.1638840269,0.08097676277,0.003132528254
Then I don't know.,Social Conversation,False,18,MEMBER,False,False,False,0.1212121212,0.0412371134,0.5887573964,0.5,0.849068871,0.150931129,0.0005769674315,0.0001106335994
@andrewcraik @gita-omr Failures with logs provided in the interlock slack.,Investigation and Exploration,False,74,CONTRIBUTOR,False,False,False,0.2682926829,0.171875,0.2,0.7304964539,0.9534244256,0.04657557439,0.02679880937,0.0005193381324
*         [ ] CODE (not listed above): [mips] URL .,Potential New Issues and Requests,True,51,MEMBER,False,False,False,0.3684210526,0.1029411765,0.4146341463,0.7777777778,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
"We are building out the C++ API, and it will grow over time.",Solution Discussion,False,60,MEMBER,False,False,False,0.619047619,0.1780821918,0.2586206897,0.4,0.1857720333,0.8142279667,0.003082953128,0.02229862595
"Are you able to try this out in the current development version, to see ifit's still an issue?",Investigation and Exploration,False,94,MEMBER,False,False,False,0.8571428571,0.1855670103,0.09467455621,1.0,0.0003221026152,0.9996778974,8.580113407e-05,9.25754306e-06
From the point of correctness it is not safe to use any data related with this classloader after **exiting** from this hook handler.,Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,0.2527472527,0.2527472527,0.3928571429,0.6958041958,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
@burui11087 I completely forgot about symlinking.,Social Conversation,False,49,NONE,True,False,False,1.0,0.04724409449,0.03225806452,0.5,0.0224189665,0.9775810335,0.08816336793,0.1295333454
"Being a newer tf user, I found that my test error was crazy and then had to spend a fair amount of time debugging my graph until I realized that batch normalization was the problem.",Usage,False,181,NONE,False,False,False,1.0,0.1346153846,0.6830835118,0.4,0.5724926046,0.4275073954,0.005970364889,0.0005567984656
"We expect to get OpenJDK changes Tues afternoon (Oct 15), and as long as these don't cause any problem the 0.17 release will be finalized.",Task Progress,False,138,CONTRIBUTOR,True,False,False,1.0,0.3731343284,0.8333333333,0.8323699422,0.01914830704,0.980851693,0.001167361543,2.78e-05
(EDIT: this is assuming you are using a build with the workaround).,Workarounds,False,67,CONTRIBUTOR,False,False,False,0.375,0.1290322581,0.6666666667,0.4362934363,0.4846584266,0.5153415734,0.02724539507,0.2051611074
"The flight service was active another 20-30 seconds after JMeter finished, consuming 150-200% CPU.",Investigation and Exploration,False,98,CONTRIBUTOR,False,False,False,0.5925925926,0.2,0.375,0.7107843137,0.8886091519,0.1113908481,0.05954547102,0.2271166044
"Once it traps in ntdll.dll,  CODEwill show what happens to the stack",Investigation and Exploration,True,68,CONTRIBUTOR,False,False,False,0.8125,0.1313131313,1.0,0.6771929825,0.2140035771,0.7859964229,0.004786279063,0.001641357342
"FYI, there is an outstanding OMR Issue about the inaccuracy of a node's bytecode info: https://github.com/eclipse/omr/issues/3153",Social Conversation,False,129,CONTRIBUTOR,False,False,False,1.0,0.25,1.0,0.6170212766,0.9070198934,0.09298010658,0.171061806,0.002108608991
"whelp to add to it all,, After a major amount of hassle I got the Nvidia updated to the newest release see above, as the TF doc indicated that there were bugs in an earlier release..",Bug Reproduction,False,182,NONE,False,False,False,1.0,0.2913385827,0.3870967742,0.3636363636,0.3802587264,0.6197412736,0.006558528713,0.00183836987
I'm assuming what it's trying to do is simply storing the methodHandle object pointer inside the address location returned by CODE.,Investigation and Exploration,True,131,CONTRIBUTOR,False,False,False,0.3559322034,0.1111111111,0.2222222222,0.4685714286,0.4461627725,0.5538372275,0.06246846736,0.001023944321
Additional asserts are being added to help provide more data points to understand this unusual situation.,Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,0.6666666667,0.2580645161,0.4,0.5683060109,0.6994168402,0.3005831598,0.04797128298,0.008864014105
@syllog1sm Out of curiosity: Has there been an update to the German model which fixed this?,Task Progress,False,91,NONE,False,False,False,0.9411764706,0.1684210526,0.1684210526,0.75,0.07664535565,0.9233546443,0.1559472602,0.02247209918
"A minor issue for which I offer no solution is that while the scheduling(how long to train for before validate) is done perhaps by some method of a model class that I would like to be dataset-independent, whether it makes sense to talk in terms of iter or epoch is determined by the dataset--ruining some of the independence.",Motivation,False,325,NONE,False,False,False,1.0,0.9104477612,0.08044382802,0.5714285714,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
My build of Liberty_21.0.0.3/AcmeAir does no run with CODE.,Investigation and Exploration,True,59,CONTRIBUTOR,False,False,False,0.5263157895,0.125,0.3333333333,0.2941176471,0.2319737749,0.7680262251,0.3694370945,0.004429301533
"Do we know what the current failure rate of this problem is without any debug or diagnostic options?

iirc, last time I run with the OpenJ9 nightly build against CODE and I got 2/100 failures.",Investigation and Exploration,True,194,CONTRIBUTOR,False,False,False,1.0,0.3913043478,1.0,0.7169811321,0.5919809991,0.4080190009,0.0005225972985,0.01338731827
Indeed growing a boosted ensemble on changing data is weird and probably useless (unless if it's a way to inject some randomization for some meta-meta-ensemble estimator that does bagging on boosted models maybe?).,Solution Discussion,False,214,MEMBER,False,False,False,1.0,0.4929577465,0.4239130435,0.3333333333,0.0398253388,0.9601746612,2.382813646e-05,3.790042324e-06
We could also have: CODE,Solution Discussion,True,24,MEMBER,False,False,False,0.1219512195,0.07042253521,0.2572463768,0.8571428571,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
"This seems to be under identical circumstances, literally I just keep hitting the 'run' button repeatedly and sometimes it works fine and then once in a while it gets the segfault.",Bug Reproduction,False,180,NONE,True,False,False,1.0,0.3131313131,0.5454545455,0.06666666667,0.09912996542,0.9008700346,0.005467138405,0.004133788861
"Long story short: With a slightly out-of-the-ordinary use case, we've been hit by pretty much all of the problems you have mentioned above, and our workarounds have not been pretty.",Motivation,False,181,CONTRIBUTOR,False,False,False,0.7083333333,0.5074626866,0.04854368932,0.4166666667,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_x86-64_mac_Release/5
jdk_util_1
-Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:-UseCompressedOops
java/util/stream/test/org/openjdk/tests/java/util/stream/CountLargeTest.java
CODE",Testing,True,303,CONTRIBUTOR,False,False,False,1.0,0.3152173913,1.0,0.09433962264,0.328270175,0.671729825,0.0002148119917,0.01518116622
"The If I plant a ""return"" statement at the beginning of the signal handler, the crash still happens, and If I comment-out the entire signal handler, the crash disappears.",Solution Discussion,False,170,NONE,True,False,False,0.652173913,0.2884615385,0.6666666667,0.817679558,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
"To name a few:
CODE
It can be reproduced with simply 

CODE

This fails with the following options:
CODE

Running through this in gdb, during the transition from execution within the jit compiled method, and CODE the TOC register r2 is attempted to be populated by register r12.",Bug Reproduction,True,287,CONTRIBUTOR,True,False,False,1.0,0.421875,0.2857142857,0.04444444444,0.006753802741,0.9932461973,0.009802165843,0.02838288421
do I need to set the reuse flag?,Usage,False,32,NONE,False,False,False,0.3636363636,0.03076923077,0.5310492505,0.8,0.4870778235,0.5129221765,0.5564473214,0.0300603195
"If you think its a good idea, I can probably make it happen somehow.",Social Conversation,False,68,NONE,True,False,False,0.3111111111,0.1414141414,1.0,0.4175438596,0.1209219988,0.8790780012,0.003294872886,0.07075263326
"20 iterations
https://ci.adoptopenjdk.net/job/Grinder/3856/

But it failed.",Testing,False,78,CONTRIBUTOR,False,False,False,0.4,0.170212766,0.5,0.05,0.003497287056,0.9965027129,0.005864825644,0.0004608281741
"I maintain the Python port of FlatBuffers, which is a serialization formatoptimized for minimal memory usage.",Solution Discussion,False,109,CONTRIBUTOR,False,False,False,1.0,0.1045751634,0.7041800643,0.8,0.1684338854,0.8315661146,0.003166981448,0.08051496432
JTReg VM Failure: java/nio/charset/coders/BashStreams.java,Observed Bug Behaviour,False,58,NONE,True,True,False,0.2222222222,0.08791208791,0.3333333333,0.003496503497,0.0,1.0,0.0,0.003603409297
"In the above trees, that's the store to the pending push temp.",Solution Discussion,False,62,CONTRIBUTOR,False,False,False,0.1411764706,0.1290322581,0.5,0.8223938224,0.6236466175,0.3763533825,0.04747801046,0.02028856842
I read the top post.,Social Conversation,False,20,MEMBER,False,False,False,0.3125,0.078125,0.5735294118,0.3333333333,0.1224653711,0.8775346289,4.637626447e-05,0.0002168293768
"The idea would be that if you fit the class with string data, you get the new behaviour, and if you fit the class with integer data, you get a deprecation warning indicating the default behaviour will change (and indicating which keyword to specify to get rid of the warning).",Solution Discussion,False,276,CONTRIBUTOR,True,True,False,1.0,0.78125,0.08455882353,0.9583333333,0.0,1.0,0.0,0.0007774126438
Class unloading will also cause all compilation requests of unloaded classes to be removed from the queue.,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.3269230769,0.1868131868,0.2307692308,0.7832167832,0.86612727,0.13387273,0.03684751755,0.005897328255
I'm not clear on what was done to prevent that.,Social Conversation,False,47,CONTRIBUTOR,False,False,False,0.625,0.15625,1.0,0.4042553191,0.7587102376,0.2412897624,0.002764994686,0.005380920094
"To do this the CODE argument might help, but I'm not sure because I use my own version of bn layer.",Usage,True,99,CONTRIBUTOR,False,False,False,0.84,0.08076923077,0.04496788009,1.0,0.1735438522,0.8264561478,0.0001056172017,5.01199785e-05
I did not switch between them on every run.,Investigation and Exploration,False,43,NONE,True,False,False,0.1836734694,0.09090909091,0.4444444444,0.3614035088,0.1194799462,0.8805200538,0.004838964607,0.001815624911
"@tongda , I am using the Release Version of Tensorflow 1.0, working on MacOS in cpu mode.",Bug Reproduction,False,89,NONE,True,False,False,0.8888888889,0.02315484805,0.08580858086,0.5,0.001752946722,0.9982470533,0.0008163895906,0.0002569016662
It would be great to have GPU resident queues.,Expected Behaviour,False,46,NONE,False,False,False,1.0,0.1343283582,0.8377253814,1.0,0.7390781978,0.2609218022,0.1554452775,0.008995129102
"I started another plinux grinder using CUSTOMIZED_SDK_URL instead of UPSTREAM_JOB_NAME
https://ci.adoptopenjdk.net/job/Grinder/3861/",Testing,False,133,CONTRIBUTOR,False,False,False,1.0,0.2553191489,1.0,0.07692307692,0.004262563462,0.9957374365,0.001399658243,0.005529938089
"They're large, come in several different languages (Dutch, English, French, German, Spanish, Swedish), and are tokenized pretty well.",Solution Discussion,False,133,NONE,False,False,False,1.0,0.3,0.3879310345,0.6666666667,0.2903576062,0.7096423938,0.409548798,0.4682936827
the above worked for installing on Ubuntu Server 17.,Solution Discussion,False,52,NONE,False,False,False,0.36,0.07086614173,0.7565982405,0.3333333333,0.5693151486,0.4306848514,0.09867224734,0.1256221876
It would be nice to have an official batch norm layer given its importance in training DNNs.,Motivation,False,92,CONTRIBUTOR,True,True,False,1.0,0.06538461538,0.006423982869,1.0,0.0,1.0,0.0,0.0003713342537
"@kratzert, that's precisely what SCREEN_NAME  means by",Social Conversation,False,54,CONTRIBUTOR,False,False,False,0.4705882353,0.1194029851,0.3162274619,0.5,0.2825173008,0.7174826992,0.002163656075,0.000434665323
"Specifically when the GC invokes the CODE, and CODE, since this is where the JIT does the cleaning up of the CODE table.",Investigation and Exploration,True,120,CONTRIBUTOR,False,False,False,0.4509803922,0.2527472527,0.5714285714,0.451048951,0.8054811495,0.1945188505,0.1631008731,0.2634355634
Redefining VM structures like this from under the JIT's nose seems rather dangerous.,Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.2954545455,0.2096774194,0.8,0.9344262295,0.9845135933,0.01548640667,0.001320457339,0.001947660621
Terminal:CODE,Bug Reproduction,True,13,NONE,False,False,False,0.1111111111,0.02816901408,0.8157894737,0.4,0.6456610805,0.3543389195,1.0,4.677373331e-05
*         SCREEN_NAME : Adding CODE and CODE iterators shouldn't be too hard.,Solution Discussion,True,77,CONTRIBUTOR,True,False,False,0.2340425532,0.1641791045,0.520110957,0.07142857143,0.4592244679,0.5407755321,0.003916059713,0.008479027653
For example:,Motivation,False,12,CONTRIBUTOR,True,True,False,0.04255319149,0.02985074627,0.00693481276,0.1666666667,0.0,1.0,0.0,0.000766008561
Download deb (network) from:,Workarounds,False,28,NONE,False,False,False,0.6666666667,0.03149606299,0.2727272727,0.3333333333,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
I profiled the flight service when it consumes the CPU on the entire machine.,Investigation and Exploration,False,77,CONTRIBUTOR,False,False,False,0.6363636364,0.175,0.3333333333,0.7401960784,0.9245568441,0.07544315591,0.2271166044,0.02415455435
"However because the nio test suites runs many of these tests sequentially, I've been able to get the nio test suite to fail in about 1/20 iterations in one of the above listed test cases.",Testing,False,187,CONTRIBUTOR,False,False,False,0.4285714286,0.3956043956,0.5,0.2447552448,0.5985521651,0.4014478349,1.0,0.01222678832
I done nothing since.,Investigation and Exploration,False,21,NONE,False,False,False,0.1481481481,0.0412371134,0.4556213018,0.4,0.8484794361,0.1515205639,1.184011945e-05,2.737530974e-05
"For anyone affected by this, this should fix it: CODE",Solution Discussion,True,53,MEMBER,False,False,False,1.0,0.1408450704,0.783625731,0.5,0.4715875003,0.5284124997,0.003313600722,0.007772604375
I'm running on Linux with an ext4 filesystem on SSD.,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.3846153846,0.07299270073,1.0,0.4721189591,0.02082693886,0.9791730611,0.0001014576777,0.0001142951797
"If the catcher isn't the first inline, then we're returning the wrong method to the callback.",Solution Discussion,False,93,MEMBER,False,False,False,0.8888888889,0.25,1.0,0.9361702128,0.983201832,0.01679816803,0.0008896069861,0.000151473622
Adding another release to update 0.17 later is open for discussion.,Action on Issue,False,67,CONTRIBUTOR,True,False,False,0.44,0.1641791045,0.5,0.8208092486,0.01914830704,0.980851693,0.001167361543,2.78e-05
Can you report the lengths of the CODE class in your two benchmark cases?,Investigation and Exploration,True,73,MEMBER,False,False,False,0.6086956522,0.2258064516,0.1894273128,0.8888888889,0.02336154952,0.9766384505,0.01526654747,0.6482365618
The direct explanation is j9method->extra out of order with respect to codegen output.,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.2765957447,0.07471264368,0.5714285714,0.1691176471,0.7325460239,0.2674539761,0.009169774309,7.65e-05
"jdk11 CODE
CODE",Investigation and Exploration,True,16,CONTRIBUTOR,True,False,False,1.0,0.06451612903,1.0,0.8270042194,0.661786102,0.338213898,0.007715486688,0.001286400616
"A similar failure in https://ci.eclipse.org/openj9/job/Build_JDK15_x86-64_mac_Personal/64:
CODE",Testing,True,96,CONTRIBUTOR,False,False,False,1.0,0.1129032258,1.0,0.3224043716,0.6259846027,0.3740153973,0.02471061853,0.056196
@dongzhuoyao So what's the problem?,Solution Discussion,False,35,NONE,True,False,False,0.3846153846,0.03937007874,0.8826979472,0.5,0.9139530137,0.08604698634,0.05498545055,0.1457126271
-- Eric,Social Conversation,False,7,NONE,True,False,False,0.03225806452,0.03225806452,0.7841409692,1.0,0.3260702381,0.6739297619,0.1206599722,1.0
"It can be as low as 0.4% ([500x Grinder] URL 
- The exit code is 255 in TKG
- Reran only the java program (without cmdlinetester) 1200x ([500x] URL  / [500x] URL  / [200x] URL  in 3 Grinder jobs) cannot reproduce the failure",Investigation and Exploration,False,226,CONTRIBUTOR,False,False,False,1.0,0.775862069,1.0,0.5779816514,0.7640233261,0.2359766739,0.06662049161,0.7024860106
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR_testList_0/127
cmdLineTester_CryptoTest_0",Testing,False,126,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.6330275229,0.9310674868,0.06893251321,0.1102578859,0.0007046806361
"I would be very unhappy if I tried to pack an array myself in the obvious way, and I found that the library's version of this was quietly writing to global state, and without this write my method failed, but only on OOV words, so not on my test data!",Workarounds,False,250,MEMBER,False,False,False,1.0,0.8064516129,0.577092511,1.0,0.2188215168,0.7811784832,0.0010422294,0.002309046196
I think I got carried away...,Social Conversation,False,29,MEMBER,False,False,False,0.5,0.09677419355,0.7488986784,0.5,0.2945721721,0.7054278279,1.641129124e-05,0.1206599722
"We're talking about calling the C code directly from the compiled code, not going via the helper (which does all the TOC work).",Social Conversation,False,127,CONTRIBUTOR,False,False,False,1.0,0.1796875,1.0,0.3666666667,0.03696060679,0.9630393932,1.33e-05,4.77e-05
"Both of those symbols are there in runtime/j9vm/java11vmi.c and runtime/redirector/forwarders.m4

Are you linking to the wrong version of jvm.dll somehow?",Investigation and Exploration,False,156,CONTRIBUTOR,True,False,False,1.0,0.2118644068,1.0,0.6848484848,0.5513116129,0.4486883871,0.0005236722062,5.32e-05
"I have 8.0, 9.0, 9.1 installed + cudnn versions which seem specific to each.",Bug Reproduction,False,76,NONE,False,False,False,0.2363636364,0.1023622047,0.06744868035,0.2,0.1316640267,0.8683359733,0.562496811,0.05368173129
"Each run took about ~7 hours or so:

CODE

I've also ran it dozens of times with other non-limiting settings, on several different VMs.",Investigation and Exploration,True,139,CONTRIBUTOR,False,False,False,0.7,0.2105263158,0.3846153846,0.6564885496,0.6946068931,0.3053931069,9.44e-05,0.004019012644
I am trying to make a QnA system.,Potential New Issues and Requests,False,33,NONE,False,False,False,0.5714285714,0.2105263158,0.9708029197,0.6,0.2224968185,0.7775031815,0.2540453279,1.0
"That way, we can deserialize a Doc with only the standard vocab.",Usage,False,64,CONTRIBUTOR,False,False,False,0.4285714286,0.1935483871,0.718061674,1.0,0.2945274675,0.7054725325,0.02221386295,0.000146521357
"If it helps, here's some more dumps from last night's https://ci.adoptopenjdk.net/view/Test_openjdk/job/Test_openjdk8_j9_sanity.openjdk_ppc64le_linux/194/console run
https://ibm.box.com/shared/static/ttcnd9cp0y1wvp0n8snoiydymdlgo4oh.gz",Investigation and Exploration,False,236,NONE,True,False,False,1.0,0.1538461538,1.0,0.8951048951,0.8751118439,0.1248881561,0.03308234769,0.01532565869
I do have core dumps/JVM downloaded.,Social Conversation,False,36,CONTRIBUTOR,False,False,False,0.7777777778,0.07692307692,1.0,0.06993006993,0.004843776376,0.9951562236,0.0001840989358,0.001428885046
"The debug image can be added by Babneet before running gdb on the core, to make additional debug symbols available in gdb.",Social Conversation,False,122,CONTRIBUTOR,False,False,False,0.7586206897,0.2933333333,1.0,0.3163841808,0.01077178648,0.9892282135,0.009446358204,0.007066552505
"They are undergoing some changes in management, so they might be slow to respond.",Social Conversation,False,81,NONE,False,False,False,1.0,0.2333333333,0.5086206897,0.375,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
This should be working even for tensorflow 1.7.,Solution Discussion,False,47,NONE,True,False,False,0.2162162162,0.06299212598,0.7038123167,0.6,0.5094864043,0.4905135957,0.02165076149,0.03664686068
@Mesbah-Alam I don't think the reboot helped.,Social Conversation,False,45,CONTRIBUTOR,True,False,False,0.380952381,0.1194029851,0.25,0.1213872832,0.003372681321,0.9966273187,2.44e-05,4.75e-06
I am also not very happy with the name CODE in case of ensembles.,Solution Discussion,True,65,MEMBER,False,False,False,0.5384615385,0.1971830986,0.6594202899,0.09090909091,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
"I tried both with Python 2.7.12 and 3.5.2 installed with conda along with numpy 1.11.1, scipy 0.17.1 and scikit-learn 0.17.1.",Bug Reproduction,False,125,MEMBER,False,False,False,0.4772727273,0.2957746479,0.1988304094,0.5,0.1684104767,0.8315895233,0.000240649474,0.05891636054
"There's 200 failures out of ~2900 methods, but that doesn't explain why methods like CODE aren't AOT compiled.",Investigation and Exploration,True,110,CONTRIBUTOR,False,False,False,1.0,0.1313868613,1.0,0.1301115242,0.001276507577,0.9987234924,0.0001896637403,5.3e-05
So 2234 was also killed after just over ten minutes - not after ten minutes precisely.,Investigation and Exploration,False,86,MEMBER,False,False,False,0.3658536585,0.223880597,0.8,0.7630057803,0.01724097253,0.9827590275,1.59e-05,1.18e-05
He'll try other values between 500 and 5000 and we will adjust the test.,Testing,False,72,CONTRIBUTOR,True,False,False,0.3684210526,0.2258064516,1.0,0.6877637131,0.4907237786,0.5092762214,0.02872086273,0.1405385381
"I don't know what they do internally, it's very possible that's the issue.",Investigation and Exploration,False,74,MEMBER,False,False,False,1.0,0.1340206186,0.9556213018,0.5,0.9999752665,2.473351871e-05,0.00109431708,1.092628473e-06
Box should work in this case.,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.3333333333,0.04511278195,1.0,0.2900763359,0.2280802907,0.7719197093,0.0007382360491,0.001171121972
"Hi SCREEN_NAME  , how did you keep track of the moving mean and variance?",Usage,False,73,NONE,False,False,False,1.0,0.05384615385,0.5160599572,0.5,0.3990090727,0.6009909273,0.06578784903,0.001260202941
maybe the first nop as well:  to save the TOC before call.,Social Conversation,False,58,CONTRIBUTOR,False,False,False,0.7647058824,0.1015625,0.6666666667,0.4277777778,0.03721019966,0.9627898003,0.0001129474738,4.44e-05
I also tried launching it using the plain Java launcher (instead of the one specific for boot apps) and not adding any strange options like '-noverify'.,Investigation and Exploration,False,152,NONE,True,False,False,1.0,0.2626262626,0.4,0.6526315789,0.2124151465,0.7875848535,0.004198632607,0.0008429687088
CODEis defined in OMR without much description of the expected input parameters [1].,Solution Discussion,True,84,CONTRIBUTOR,False,False,False,0.4642857143,0.2765957447,0.5,0.8461538462,0.7208851506,0.2791148494,0.1217072968,0.03144222045
You can add Node to [workspace.bzl] URL  just like TensorBoard did in [js.bzl](https://github.com/tensorflow/tensorboard/blob/99a7437/third_party/js.bzl#L25).,Solution Discussion,False,158,MEMBER,False,False,False,0.4242424242,0.1917808219,0.9051724138,0.1666666667,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"Hence, they should be only loosely coupled.",Solution Discussion,False,43,NONE,False,False,False,0.2258064516,0.1044776119,0.3578363384,0.3636363636,0.2978770854,0.7021229146,0.001143668596,0.01002173327
So let's consider our next assumption: https://github.com/eclipse/openj9/issues/8652#issuecomment-624327598,Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,0.4375,0.07692307692,0.6,0.7657342657,0.8593869021,0.1406130979,0.0008804396806,0.03684751755
"For example, let's say I have a Python function which returns a new batch on each call (a generator).",Motivation,False,101,NONE,False,False,False,0.4523809524,0.2835820896,0.8529819695,0.4,0.8801745557,0.1198254443,0.88547434,0.1191105139
"If pages are large, that isn't likely to be practical.",Solution Discussion,False,54,CONTRIBUTOR,False,False,False,0.9090909091,0.05747126437,1.0,0.6875,0.7729156893,0.2270843107,1.18e-05,7.3e-05
"1. I said ""involuntary OSR"" because that disassembly was of an AOT body, and AOT only supports involuntary OSR right now.",Solution Discussion,False,121,CONTRIBUTOR,False,False,False,0.9545454545,0.2258064516,1.0,0.6486486486,0.5537917672,0.4462082328,0.003696630136,0.001219776039
@brando90 you're right.,Social Conversation,False,23,NONE,False,False,False,1.0,0.01153846154,0.1927194861,1.0,0.22234841,0.77765159,0.002721595999,0.0068527403
This is a correct analysis.,Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.1923076923,0.06666666667,0.25,0.615819209,0.08461003919,0.9153899608,0.0006255851869,1.66e-05
"I know is a big dataset so I expected it would take some time to get results but then after 2 days running, it just stopped working (the script keeps executing but is not using any resource apart from RAM and swap).",Observed Bug Behaviour,False,215,NONE,False,False,False,1.0,0.4329896907,0.9349112426,0.5714285714,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
As an experiment I've added a post-removal verification routine which runs after onClassUnloading.,Testing,False,98,CONTRIBUTOR,False,False,False,0.652173913,0.1648351648,0.125,0.8986013986,0.8779153049,0.1220846951,0.01532565869,0.003869158807
Would greatly appreciate:,Expected Behaviour,False,25,NONE,False,False,False,0.2,0.0447761194,0.8404993065,0.1428571429,0.7617931948,0.2382068052,0.1736946043,0.06663052939
Please track tensorflow/tfjs and tensorflow/tfjs-node for further updates.,Action on Issue,False,74,MEMBER,False,False,False,1.0,0.1506849315,0.9525862069,1.0,0.9554745335,0.04452546649,0.0005732123907,0.2254964429
Probably the best thing is to contact the [TST-centrale] URL .,Solution Discussion,False,62,NONE,False,False,False,0.7857142857,0.1833333333,0.5,0.25,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
Might be the same issue as https://github.com/eclipse/openj9/issues/5918.,Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,1.0,0.04794520548,0.5,0.938547486,0.9683929542,0.03160704581,0.0001153317802,2.94e-05
Hi SCREEN_NAME ,Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.1428571429,0.02985074627,0.5644937587,0.5,0.4603564334,0.5396435666,0.0006250222677,0.008566062512
"Do we have -Xmn, -Xmo on balanced GC ?",Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,1.0,0.05479452055,0.5,0.06703910615,0.009791359579,0.9902086404,0.00113422951,0.0003485618336
Primarily I am interested in using it to switch between training and validation datasets in the same process.,Motivation,False,109,NONE,False,False,False,0.5,0.2686567164,0.6976421637,0.2222222222,0.551539804,0.448460196,0.1827564093,0.002095453319
"First use of cell was with scope 'embedding_attention_seq2seq/embedding_attention_decoder/attention_decoder/multi_rnn_cell/cell_0/gru_cell', this attempt is with scope 'embedding_attention_seq2seq/rnn/multi_rnn_cell/cell_0/gru_cell'.",Bug Reproduction,False,233,NONE,False,False,False,0.5526315789,0.03039073806,0.1782178218,0.6,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"*         it is more susceptible to numerical imprecision than we would like, but perhaps we should (seek contributions that) investigate stability improvements",Investigation and Exploration,False,160,MEMBER,False,False,False,0.6111111111,0.3235294118,0.8333333333,0.4615384615,0.6243074007,0.3756925993,0.05176800464,0.02547446062
[output2.txt.zip] URL ,Investigation and Exploration,False,22,NONE,False,False,False,0.6666666667,0.02941176471,0.8089430894,1.0,0.6068015265,0.3931984735,0.008826555982,0.05176800464
I had to use the .tgz file and manually copy files according to nVidia's directions in order to get a working installation.,Solution Discussion,False,123,NONE,False,False,False,1.0,0.1732283465,0.211143695,1.0,0.2838346655,0.7161653345,3.697445435e-05,0.5779195954
"He's worked on memory-based POS tagging for Dutch, among other things.",Solution Discussion,False,70,NONE,False,False,False,0.3243243243,0.2,0.6724137931,1.0,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"I used javac helloWorld as the test case:  -Xint and -Xjit:count=0,optLevel=hot -Xnoaot (to exercise JIT-compiler).",Testing,False,115,CONTRIBUTOR,False,False,False,0.8636363636,0.1091954023,0.6666666667,0.9558823529,0.7980912206,0.2019087794,0.004816889792,3.05e-05
"If those J9Class/J9Method pointers were to stop being valid before we reached that check point, we could do an invalid access and seg fault.",Investigation and Exploration,False,140,CONTRIBUTOR,False,False,False,0.4807692308,0.2747252747,0.9230769231,0.8146853147,0.86612727,0.13387273,0.03684751755,0.005897328255
- The segfault does not happen with SCC disabled (CODE).,Investigation and Exploration,True,56,CONTRIBUTOR,False,False,False,0.2093023256,0.09677419355,0.6923076923,0.2200772201,0.3402178482,0.6597821518,0.06293969756,0.0116494207
The only workaround I found was pre-shuffling the filelist I read from the text file before creating the dataset.,Workarounds,False,113,NONE,False,False,False,0.5,0.2985074627,0.6588072122,0.9583333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Short version: I added Webassembly as an XLA compilation target.,Potential New Issues and Requests,False,64,CONTRIBUTOR,False,False,False,0.9090909091,0.1369863014,0.9655172414,0.6666666667,0.9680492001,0.03195079986,0.000479816395,0.007495803266
@vijaysun-omr      @piyush  could you do a footprint size comparison on AIX running Liberty/DT7 with these three environment variable settings below?,Investigation and Exploration,False,149,CONTRIBUTOR,False,False,False,1.0,0.3870967742,0.5,0.7974683544,0.5605437521,0.4394562479,0.00178229201,0.002861585044
"With respect to 3. What _is_ interesting, is that this causes two thread dumps to be created, the one that it was hung on, and a new one for shutting down.

CODE

There is not javacore CODE, and 245 is the (I suspect anyway) the one that it was trying to generate when it hung.",Investigation and Exploration,True,281,NONE,True,False,False,1.0,0.76,0.1428571429,0.1581920904,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
"CODE

@hangshao0 @DanHeidinga
@mpirvu fyi in case it's the Port j9methodserver change
**IGNORE THIS, IT IS INCORRECT**",Solution Discussion,True,122,CONTRIBUTOR,True,False,False,1.0,0.2985074627,1.0,0.2080924855,0.004997333654,0.9950026663,0.0003635972979,1.94e-05
Thanks :),Social Conversation,False,9,NONE,False,False,False,0.09523809524,0.002894356006,0.7326732673,1.0,0.2668032658,0.7331967342,0.00251122862,0.02402499291
@0dvictor when I do CODE the hanging problem disappears entirely.,Solution Discussion,True,65,NONE,True,False,False,0.5263157895,0.1492537313,0.1666666667,0.4022346369,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
If there are real life problems we may limit the number of updates or remove them altogether (just create the hint on first start and never update).,Solution Discussion,False,148,CONTRIBUTOR,False,False,False,0.3552631579,0.1849315068,0.4444444444,0.4860335196,0.238226106,0.761773894,0.0005830751334,0.0001494982185
ð,Social Conversation,False,1,NONE,False,False,False,1.0,0.01369863014,0.5323275862,1.0,0.6137878342,0.3862121658,0.03009940477,0.1177654897
"My understanding is,  if all steps are allowed and logically correct to launch the project (specifically, there is no way to remove the java 8 bin from the path in STS4/Eclipse according to the windbg results), we might need to look at our code with library loading to see where should be modified to accommodate STS4/Eclipse (to stop loading java.dll from Java 8 even when the Java 8 bin is added to the path)",Solution Discussion,False,410,CONTRIBUTOR,False,False,False,1.0,0.7777777778,1.0,0.8842105263,0.9005578376,0.09944216237,0.1143762639,0.00534555638
"A must-have for one of our use cases is ad-hoc creation of data elements via a callback function (which creates tensors on the fly, e.g. using py_func() or through some other means).",Motivation,False,182,CONTRIBUTOR,False,False,False,0.7083333333,0.5074626866,0.04299583911,0.08333333333,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
"We're only talking about the case where n_values is unset, right?",Solution Discussion,False,65,MEMBER,False,False,False,0.5238095238,0.171875,0.4963235294,0.25,0.07583037256,0.9241696274,0.006398297259,0.0001680122564
Many thanks for helping us fix this problem.,Social Conversation,False,44,CONTRIBUTOR,False,False,False,0.3333333333,0.1194029851,1.0,0.9888268156,0.990322308,0.009677692014,0.1542127927,0.02467101294
"Howerver, the patch on the JCL side to detect such info was removed, making the JVM doing timestamp checking on every class loaded from the shared cache.",Solution Discussion,False,153,CONTRIBUTOR,False,False,False,1.0,0.197080292,0.875,0.7955390335,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
Thanks,Social Conversation,False,6,NONE,True,True,False,0.04347826087,0.01030927835,0.02071005917,1.0,0.0,1.0,0.0,5.796890697e-05
"To do this you can specify the following command:

CODE

It will output a file (JIT trace log) that begins with CODE in your present working directory.",Investigation and Exploration,True,155,CONTRIBUTOR,False,False,False,1.0,0.2180451128,0.625,0.6030534351,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
Why so?,Social Conversation,False,7,MEMBER,False,False,False,0.1333333333,0.02816901408,0.3731884058,0.5,0.03962200382,0.9603779962,6.344811593e-05,7.05368988e-06
There is a tentative design being considered but it needs more discussion in particular input from @hangshao0 is needed.,Task Progress,False,120,MEMBER,False,False,False,1.0,0.1386861314,0.6666666667,0.9665427509,0.1862210471,0.8137789529,0.170274971,0.002992794434
"I don't think setting rss to unlimited made any difference, but I can re-run multiheap:20 with this setting.",Investigation and Exploration,False,108,CONTRIBUTOR,True,False,False,1.0,0.3064516129,1.0,0.4135021097,0.2975409256,0.7024590744,0.006977483614,0.001055956968
Looks like you have used the new api.,Solution Discussion,False,37,NONE,False,False,False,0.4705882353,0.01157742402,0.7755775578,0.625,0.2742562411,0.7257437589,0.006610382458,0.005351860947
You may need to run it multiple times because unfortunately the seed is not set appropriately (you need to use CODE rather than CODE).,Investigation and Exploration,True,134,MEMBER,False,False,False,1.0,0.338028169,0.2748538012,0.4285714286,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
@cathyzhyi is working on further reducing the overhead of the inlining to improve performance in the next release.,Task Progress,False,114,CONTRIBUTOR,False,False,False,0.6923076923,0.2686567164,0.5,0.2832369942,0.005049779156,0.9949502208,1.72e-05,1.44e-05
Is the test running single threaded or are there multiple things running on the machine?,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.652173913,0.3191489362,0.8,0.3807692308,0.3601897468,0.6398102532,0.1462886158,0.02184783511
"I have included CODE as well, but to the best of my knowledge, this is just https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9_openj9-0.24.0/OpenJDK11U-jdk_x64_linux_openj9_11.0.10_9_openj9-0.24.0.tar.gz",Social Conversation,True,237,NONE,True,False,False,1.0,0.2266666667,1.0,0.2316384181,0.003298588959,0.996701411,0.00112141451,0.0004813876919
I've experienced a similar problem multiple times on my machine when using CODE or CODE as an argument for CODE but using the default scorer argument.,Observed Bug Behaviour,True,150,NONE,False,False,False,0.6428571429,0.2783505155,0.926035503,0.1428571429,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
Would running with -Xjit:verbose={compilePerformance} be helpful?,Solution Discussion,False,65,NONE,True,False,False,0.5,0.0875,1.0,0.2401960784,0.1354016429,0.8645983571,0.07018304397,0.0007191271884
"I'd be seeing bad performance during training *and* testing if it hadn't converged, right?",Usage,False,90,NONE,False,False,False,0.5769230769,0.05769230769,0.4989293362,0.7777777778,0.386758151,0.613241849,0.0004998808382,0.0004945035936
And then I debugged through the code on both of my environments and the best I could tell was that the divergence happened in C-code.,Investigation and Exploration,False,133,NONE,False,False,False,1.0,0.3823529412,0.5406504065,0.5,0.5694868162,0.4305131838,0.005325768668,0.0007054752894
"@DylanDmitri  1.5 expects Cuda 9.0, not 9.1",Solution Discussion,False,43,NONE,False,False,False,1.0,0.06299212598,0.1964809384,0.5,0.2838316592,0.7161683408,0.001119586478,3.697445435e-05
Please give a reproducible code snippet.,Bug Reproduction,False,40,MEMBER,False,False,False,1.0,0.0618556701,0.2899408284,1.0,0.8108380116,0.1891619884,0.002231981712,0.003762853532
"The message I'm getting is this: 

CODE

Some more details may be found here: https://github.com/spring-projects/sts4/issues/138

It is possible I didn't install it right, though, if I follow the exact same installation procedure to install hotspot openjdk the JVM works just fine.",Observed Bug Behaviour,True,287,NONE,True,True,False,0.4444444444,0.4444444444,0.8,0.01403508772,0.0,1.0,0.0,0.006553271164
"But, I'm pasting a modified function that works.",Solution Discussion,False,48,NONE,False,False,False,0.2424242424,0.01157742402,0.7458745875,0.5,0.272648067,0.727351933,0.02402499291,0.006610382458
I can not understand why this issue is closed without investigation.,Social Conversation,False,68,CONTRIBUTOR,False,False,False,0.7333333333,0.1208791209,0.25,0.1538461538,0.2820037137,0.7179962863,0.002857770092,0.01329594867
"No worries, I'll keep looking :)",Social Conversation,False,32,CONTRIBUTOR,False,False,False,1.0,0.08955223881,1.0,0.6983240223,0.1129903676,0.8870096324,4.74e-05,0.0002870125527
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.6788793103,1.0,0.7051202151,0.2948797849,6.19689071e-06,8.432197716e-05
"Just occurred again in a jdk14-j9-plinux run the other night ([test-osuosl-centos74-ppc64le-1] URL 
https://ci.adoptopenjdk.net/view/Test_openjdk/job/Test_openjdk14_j9_sanity.openjdk_ppc64le_linux/39/console

Diagnostic files: https://ibm.box.com/s/e0tvq7etp9o5rhp5dpul72qas8qil3tr

~Will try and run a few grinders on CODE.",Bug Reproduction,True,329,NONE,True,False,False,1.0,0.3626373626,0.5,0.1853146853,0.3526952876,0.6473047124,0.3731531372,0.01011234657
Might take a while longer but you can define the minor versions this way.,Solution Discussion,False,73,NONE,False,False,False,1.0,0.1102362205,0.5219941349,1.0,0.4059717933,0.5940282067,0.001371752256,0.0230868493
I think this issue should still be open.,Action on Issue,False,40,NONE,False,False,False,0.5714285714,0.06299212598,0.1612903226,0.2,0.244487942,0.755512058,0.1948879119,0.2449173066
"-         New CODE method on CODE, controlling whether to start handling new strings as OOV",Workarounds,True,91,MEMBER,False,False,False,0.4545454545,0.2419354839,0.6563876652,0.375,0.288728579,0.711271421,0.1151253204,0.02221386295
"This is the expected failure behaviour?
>>>[info] # Run progress: 0.00% complete, ETA 00:37:00
[info] # Fork: 1 of 3
[info] # Warmup Iteration   1: <failure>",Expected Behaviour,False,160,CONTRIBUTOR,False,False,False,1.0,0.4029850746,0.5,0.7597765363,0.1145354715,0.8854645285,0.0003094219412,0.0001922036014
It works for me now.,Usage,False,20,NONE,False,False,False,0.8333333333,0.01923076923,0.4518201285,1.0,0.3804089518,0.6195910482,0.00101193657,0.003059753667
The instruction seems to be well formed.,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.5833333333,0.04022988506,0.6666666667,0.09926470588,0.7187874877,0.2812125123,0.001423319644,0.0002320026376
"**java/math/BigInteger/PrimeTest.java**
20/20 passed s390_linux CODE

Closing this issue (re-open if failure seen again)",Action on Issue,True,123,CONTRIBUTOR,False,False,False,0.6551724138,0.2065217391,1.0,0.06918238994,0.2684988468,0.7315011532,0.2801321228,0.116554805
"As the originator of all of this work (reported on egeria wrt apache rat), I just wanted to confirm that I've not seen the issue recently, since updating to later jdk.",Investigation and Exploration,False,167,NONE,True,False,False,1.0,0.2406015038,0.5,0.6997455471,0.7368179436,0.2631820564,0.004337443365,0.2412282351
"Yes, it should be statically linked.",Solution Discussion,False,36,CONTRIBUTOR,False,False,False,0.5454545455,0.03448275862,1.0,0.8933823529,0.7917911829,0.2082088171,9.54e-05,0.006755954606
Here's what I'm thinking:,Solution Discussion,False,25,NONE,False,False,False,0.09302325581,0.02614379085,0.2250803859,0.3684210526,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.006535947712,0.9196141479,1.0,0.199033492,0.800966508,0.0001526929426,0.0007126827681
"Problem happened again on win2012r2-x86-2, please take a look at the machine to see if there is anything left running.
https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/144",Investigation and Exploration,False,214,CONTRIBUTOR,True,False,False,1.0,0.3582089552,1.0,0.04624277457,0.001369605962,0.998630394,0.001446574697,0.0006854428644
"I'm trying to nail down what exactly is going on here, but I don't know how to write a minimized test-case for you guys that you can reproduce.",Investigation and Exploration,False,143,NONE,True,True,False,0.6041666667,0.4328358209,0.5714285714,0.02234636872,0.0,1.0,0.0,0.00144281986
"I found the dataset (after batch, prior to filter) was in this form:",Usage,False,68,NONE,False,False,False,0.2131147541,0.1940298507,0.7447988904,0.625,0.5810660853,0.4189339147,0.03325240618,0.00639731668
@zl-wang is somebody working on a better fix like https://github.com/eclipse/openj9/pull/7034?,Task Progress,False,94,CONTRIBUTOR,False,False,False,0.4230769231,0.0632183908,0.3333333333,0.8676470588,0.7909652104,0.2090347896,0.02121193973,4.02e-05
"I followed the current install instructions for TF 1.5 (GPU, ubuntu, virtualenv) and it breaks as described above.",Bug Reproduction,False,114,NONE,False,False,False,1.0,0.1417322835,0.1290322581,0.75,0.2151249515,0.7848750485,0.01902853319,0.002231038575
"OK thanks a lot for this, at least we have a deterministic snippet now.",Social Conversation,False,71,MEMBER,False,False,False,0.3414634146,0.1971830986,0.4210526316,0.2,0.4154346398,0.5845653602,0.001838152366,0.0002081292748
So when I did: CODE,Usage,True,19,NONE,False,False,False,0.1923076923,0.01923076923,0.2119914347,0.5625,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"I get the same problem with Python 3.5.2, scikit-learn 0.17.1, scipy 0.17.1, numpy 1.11.1 on Mac OS X El Capitan 10.11.3.",Bug Reproduction,False,121,NONE,False,False,False,1.0,0.3098591549,0.2543859649,0.5,0.2386385813,0.7613614187,0.08372802707,0.1743374667
pipe(): ValueError Error parsing doc,Observed Bug Behaviour,False,36,NONE,True,True,False,0.25,0.05263157895,0.01052631579,0.1,0.0,1.0,0.0,0.008598273629
"@liqunl 
This issue only happens for JITServer and it's an intermittent bug.",Investigation and Exploration,False,77,CONTRIBUTOR,False,False,False,0.2708333333,0.06878306878,0.05882352941,0.5314285714,0.447477842,0.552522158,0.001615795728,8.48e-05
@dmitripivkine you mentioned xlinux jdmpview couldn't find the java context in the core file from the Adopt build?,Investigation and Exploration,False,114,CONTRIBUTOR,False,False,False,0.8571428571,0.1978021978,0.25,0.1013986014,0.1031456929,0.8968543071,0.01551514965,0.04744206468
"I've done some basic testing to confirm everything is order, and there are no races with first GC.",Testing,False,98,CONTRIBUTOR,False,False,False,1.0,0.1301369863,1.0,0.8212290503,0.9641858447,0.03581415527,0.0007577570648,0.0003211324394
The following is a great and reliable hack to do currently do that:CODE Where you can asynchronously feed the queue from python.,Expected Behaviour,True,128,CONTRIBUTOR,False,False,False,0.92,0.3432835821,0.09570041609,0.8333333333,0.003166427653,0.9968335723,0.02236439613,0.004893293226
Is TKG itself running in Java?,Investigation and Exploration,False,30,CONTRIBUTOR,True,False,False,0.2608695652,0.1034482759,1.0,0.7614678899,0.9939440574,0.006055942622,0.006864019174,0.0128898379
"Repro rate with following command was 10/10:

CODE

Console:

CODE",Bug Reproduction,True,72,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.7938931298,0.815830658,0.184169342,0.1031699186,0.000908283777
This allows CODE objects to own their OOV lexemes.,Solution Discussion,True,50,MEMBER,False,False,False,0.3461538462,0.1451612903,0.4889867841,0.4705882353,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"(we don't want to consider the scenario of non-synchronized iCache anymore, since we tested to confirm the PPCCodeSync routine executed on the memory in question)

Enlightening answer:  SIGILL     i.e.  somehow the JIT codecache is not executable (pages not marked executable) in Java13 build.",Investigation and Exploration,False,295,CONTRIBUTOR,False,False,False,1.0,0.275862069,0.2,0.4926470588,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
"CODE

Do you mean we should be able to pass nodes with the length child being both Int and Long type?",Solution Discussion,True,103,CONTRIBUTOR,False,False,False,1.0,0.4680851064,1.0,0.9384615385,0.7312720148,0.2687279852,0.00748487997,0.001396795956
"If I understand correctly the system test change will put an upper bound on the testing time, but the number of classes loaded will not be a criteria for failure.",Solution Discussion,False,162,CONTRIBUTOR,False,False,False,1.0,0.447761194,0.25,0.9595375723,0.02015809145,0.9798419085,2.11e-05,0.0001604948466
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.03663793103,1.0,0.0003393894584,0.9996606105,0.0001801524656,0.000502169465
"-         for now CODE, and we infer the default based on the data",Solution Discussion,True,66,CONTRIBUTOR,True,False,False,0.3939393939,0.203125,0.1764705882,0.7222222222,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"|  
0.26.0 | 6597.67 | 99.1%



</body>

</html>",Testing,False,55,NONE,True,False,False,0.8,0.1,1.0,0.08823529412,0.04138087714,0.9586191229,0.03316104244,0.3318641488
"-         We want to add more encoding options (eg binary encoding, mean target encoding, unary encoding, ...).",Motivation,False,111,CONTRIBUTOR,True,True,False,0.32,0.25,0.02573529412,0.2916666667,0.0,1.0,0.0,0.0007774126438
"For completeness, can you post the output of CODE (in your MKL conda environment)?",Investigation and Exploration,True,82,MEMBER,False,False,False,0.4375,0.1971830986,0.6111111111,0.4,0.4572983615,0.5427016385,0.001200894845,0.004204377413
@ebrevdo  It's [this ] URL  tutorial.,Investigation and Exploration,False,37,NONE,False,False,False,0.2258064516,0.01013024602,0.3564356436,0.3333333333,0.07179521051,0.9282047895,0.000334150158,3.547972203e-05
Trying a grinder https://ci.eclipse.org/openj9/view/Test/job/Grinder/1202/,Testing,False,74,CONTRIBUTOR,True,False,False,0.3076923077,0.06896551724,1.0,0.8623853211,0.9975840581,0.002415941924,0.004205153524,0.0006064079553
"Assuming that's accurate, then the plan to move this out of the 0.29.1 release's list of blockers makes sense to me.",Social Conversation,False,116,MEMBER,False,False,False,0.75,0.2258064516,0.7142857143,0.9227799228,0.8498306174,0.1501693826,0.005725859998,0.01048932789
"https://github.com/eclipse/openj9/compare/a1ed808...c209fa5
https://github.com/eclipse/openj9-omr/compare/b03105e...79f6485
https://github.com/ibmruntimes/openj9-openjdk-jdk11/compare/b1d6957...7d1badb

https://github.com/AdoptOpenJDK/openjdk-tests/compare/8737892...e459da2",Testing,False,278,CONTRIBUTOR,True,True,False,0.1320754717,0.1129032258,1.0,0.02109704641,0.0,1.0,0.0,0.003027854511
"@amueller Ok, I will run it again with 500k rows and will post the results.",Bug Reproduction,False,75,NONE,False,False,False,1.0,0.1546391753,0.9704142012,0.5,0.9999794882,2.051181437e-05,1.015151181e-05,4.823458058e-05
My assumption is that this loop is actively clearing memory allocated.,Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.3793103448,0.2340425532,0.1666666667,0.5576923077,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"CODE will disable AOT, but will leave the sharing of classes.",Investigation and Exploration,True,61,CONTRIBUTOR,False,False,False,1.0,0.0802919708,1.0,0.5501858736,0.02517913261,0.9748208674,1.9e-05,5.8e-05
"@shanchao95  maybe you need to change your test cases to increase the thread number to 24 and 32, and test against multiheap:24/28/30/32 to see whether there are significant differences.",Testing,False,186,CONTRIBUTOR,False,False,False,0.9375,0.4838709677,1.0,0.3459915612,0.2935763846,0.7064236154,0.01326071928,0.005090179308
"This is why tools like tf.estimator.Estimator were developed, to allow foreasier separation of concerns between training and inference and to allowfor swapping of input pipelines.",Usage,False,179,MEMBER,False,False,False,1.0,0.3731343284,0.4133148405,0.5,0.3388995843,0.6611004157,0.0001124836492,0.3801876085
Maybe another platform will have similar slowdown.,Investigation and Exploration,False,50,CONTRIBUTOR,True,False,False,0.1666666667,0.1044776119,1.0,0.225433526,0.005015413916,0.9949845861,1.94e-05,4.91e-06
It not sure if CODE overrides that.,Investigation and Exploration,True,35,CONTRIBUTOR,True,False,False,0.6363636364,0.1129032258,0.6666666667,0.8101265823,0.5609592665,0.4390407335,0.002861585044,0.6866637302
"The OpenJ9 implementation is assuming it's an out parameter, which means we are unable to get the trace for anything but the current thread (which makes sense to me in the context of a signal handler).",Investigation and Exploration,False,201,CONTRIBUTOR,False,False,False,0.972972973,0.3461538462,0.5,0.7679558011,0.3138477417,0.6861522583,0.01340473801,0.0004107031265
Next steps would be to implement cleanup of the MethodHT in the two Hooks above where the class is separately unloaded from it's class-loader.,Investigation and Exploration,False,142,CONTRIBUTOR,False,False,False,1.0,0.2747252747,0.8888888889,0.3986013986,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
As I have lots of them (nested in many layers) - what is the most efficient way of adding them to the list of values to be saved?,Usage,False,129,NONE,False,False,False,0.75,0.1038461538,0.5417558887,0.8,0.4918247108,0.5081752892,0.0300603195,0.001170108729
GC thread and compilation thread count reduced to 2 and 1 respectively.,Task Progress,False,71,CONTRIBUTOR,False,False,False,0.2105263158,0.08219178082,0.3333333333,0.8994413408,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"Edit: Things we still need of course, include multi-threaded data generation, and multi-threaded random shuffle producer-consumer queues.",Expected Behaviour,False,137,CONTRIBUTOR,False,False,False,0.4166666667,0.2985074627,0.05409153953,0.75,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
Will try again.,Bug Reproduction,False,15,MEMBER,False,False,False,0.1428571429,0.04225352113,0.1812865497,1.0,0.1683523944,0.8316476056,8.164645755e-06,9.769898141e-05
Microsoft Visual C++ Compiler for Python is [free ] URL for eveyone and it supports openmp.,Solution Discussion,False,91,CONTRIBUTOR,False,False,False,1.0,0.09803921569,0.9485530547,1.0,0.2018523698,0.7981476302,0.00137409764,1.089920072e-05
@BruceHem not really sure how being a js dev correlates with blindly pushing unnecessary spam to the feed...,Social Conversation,False,108,NONE,False,False,False,0.4864864865,0.2465753425,0.6982758621,0.1666666667,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4461206897,1.0,0.5356075236,0.4643924764,0.2086234161,0.0186825189
Would be great if some other people who had this issue could maybe also try updating/reinstalling conda and check if that solves the problem for them.,Contribution and Commitment,False,150,CONTRIBUTOR,False,False,False,0.7941176471,0.3802816901,0.5643274854,0.7142857143,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
"Here's a link for core1 with jpackcore -x:
https://drive.google.com/file/d/1g5oDs5zuxeqV7LFYu9nGnixPc0WjswkF/view?usp=sharing",Investigation and Exploration,False,126,NONE,True,False,False,1.0,0.09615384615,1.0,0.08839779006,0.007989735861,0.9920102641,0.001461775901,0.0002905675384
Although it makes no sense that GDB doesn't work.,Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,0.2368421053,0.1914893617,0.625,0.2192307692,0.1107806812,0.8892193188,0.009602972199,0.01857337902
There is a possibility in this case that we could be removing an object from the HT while another thread is adding an entry.,Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,1.0,0.2637362637,0.6,0.6433566434,0.8573774451,0.1426225549,0.001731608401,0.0007841536263
"As this is most likely not an issue with any of your implementations and mostly JITServer related things, it may be a little difficult to explain and give you the whole picture but I'll try my best.",Social Conversation,False,198,CONTRIBUTOR,False,False,False,0.7708333333,0.1957671958,0.1176470588,0.5371428571,0.447477842,0.552522158,0.001615795728,8.48e-05
Debugging would go more quickly too :+1:,Solution Discussion,False,40,NONE,False,False,False,0.1842105263,0.04575163399,0.5691318328,0.3846153846,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
@ishaybee Thanks for you help.,Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.1282051282,0.01923076923,0.5824411135,0.09090909091,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
"See:

https://github.com/eclipse/openj9/blob/master/runtime/oti/phelpers.m4#L269

Sorry, I missed where that CALL_INDIRECT macro is used.",Social Conversation,False,141,CONTRIBUTOR,False,False,False,0.65,0.1015625,0.3333333333,0.1777777778,0.02864858699,0.971351413,0.0003038415884,5.3e-05
i had wondered iffinding and data close to 0 would help here.,Potential New Issues and Requests,False,61,MEMBER,False,False,False,1.0,0.1764705882,0.3414634146,1.0,0.3593097139,0.6406902861,0.001373656731,0.0004426917871
The most surprising thing on the 2 hour runs is that the compilation time does not account for the increase in runtime so something odd seems to be happening either precipitated by the inlining changes or possibly related to how the workload is being run in the cloud.,Investigation and Exploration,False,268,CONTRIBUTOR,False,False,False,1.0,0.7164179104,1.0,0.6705202312,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
2) The exception only occurred when this method was still in compilation and got cancelled by JIT when the VM was shutting down.,Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,0.3382352941,0.1729323308,0.8333333333,0.4249363868,0.480594089,0.519405911,0.009466671463,0.009122488321
I'll get back to this if I'll be able to reproduce it with specific steps.,Bug Reproduction,False,74,CONTRIBUTOR,False,False,False,0.5769230769,0.1578947368,0.5263157895,0.75,0.1887229939,0.8112770061,0.02657364924,1.151867231e-05
@andrewcraik @fjeremic,Contribution and Commitment,False,22,CONTRIBUTOR,True,False,False,0.1818181818,0.02985074627,1.0,0.2543352601,0.005026440444,0.9949735596,6.9e-06,3.68e-06
CODE,Observed Bug Behaviour,True,4,NONE,True,True,False,0.07692307692,0.01408450704,0.005847953216,0.4,0.0,1.0,0.0,0.0002726161379
"Yes, with that option, I see the issue with the customer services (but not the booking).

CODE",Investigation and Exploration,True,96,NONE,True,False,False,1.0,0.225,1.0,0.3970588235,0.2993577983,0.7006422017,0.005374605821,0.667871978
"Yes, but only if we want to warn every time someone uses it without passingcategories.",Solution Discussion,False,86,MEMBER,False,False,False,0.6,0.234375,0.5257352941,0.5,0.07603380402,0.923966196,0.000726968286,0.2040466138
"Haven't updated the second mac to macOS Sierra yet, which is running on the former machine that has this problem.",Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,0.2985074627,0.2816901408,0.4473684211,0.7142857143,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
"now, @shanchao95 performance comparison is the critical factor for fix decision.",Solution Discussion,False,80,CONTRIBUTOR,False,False,False,1.0,0.1774193548,1.0,0.835443038,0.6619728929,0.3380271071,0.001286400616,0.004063392422
@mkaze I used Cuda9.1,Solution Discussion,False,21,NONE,False,False,False,1.0,0.03149606299,0.3020527859,1.0,0.3429017389,0.6570982611,0.0004045005306,0.0006411370384
Do you have another system you're comparing against?,Investigation and Exploration,False,52,MEMBER,False,False,False,0.2962962963,0.1176470588,0.5894308943,0.6,0.5763800548,0.4236199452,0.006827881986,0.01015048758
Trying this next.,Task Progress,False,17,CONTRIBUTOR,False,False,False,1.0,0.02255639098,1.0,0.8218829517,0.8230083846,0.1769916154,3.68e-06,0.004196826975
I am willing to contribute.,Contribution and Commitment,False,27,NONE,False,False,False,1.0,0.06849315068,0.09698275862,0.5,0.001622840762,0.9983771592,7.325610089e-05,0.001375709738
The method was called with classloader 0x3FFF80098CC8 CODE.,Investigation and Exploration,True,59,CONTRIBUTOR,False,False,False,0.347826087,0.08791208791,0.4,0.1713286713,0.284435888,0.715564112,0.01329594867,0.3731531372
"@EdeMeijer Thank you very much, it works in my case :-)",Social Conversation,False,55,NONE,False,False,False,1.0,0.1641791045,0.7572815534,1.0,0.5830180248,0.4169819752,0.009301532526,0.004980837062
The main API question is about the format of the input data.,Solution Discussion,False,60,CONTRIBUTOR,True,False,False,0.3636363636,0.1875,0.1397058824,0.1666666667,0.002016098271,0.9979839017,0.0039907996,0.01559625638
There's nothing like that in it.,Investigation and Exploration,False,32,NONE,True,False,False,0.3,0.06060606061,1.0,0.6456140351,0.2112303991,0.7887696009,0.007850146101,0.004198632607
"The test run results with CODE (CODE is the default setting in CODE)<img width=""784"" alt=""screen shot 2016-11-16 at 2 03 58 pm"" src=""https://cloud.githubusercontent.com/assets/6901075/20361605/31729f5e-ac06-11e6-9736-eb9ad2f15de1.png"">",Usage,True,235,CONTRIBUTOR,False,False,False,0.725,0.1115384615,0.4346895075,0.8333333333,0.3796199321,0.6203800679,0.003216099592,0.003984639748
ð,Social Conversation,False,1,NONE,False,False,False,1.0,0.01369863014,0.4331896552,1.0,0.5128465238,0.4871534762,0.063150964,0.003100215895
"In my book this is never a good idea to mix pip and conda for a given package but I guess this can happen without realizing it quite easily (for example you install a project that depends on numpy via pip, and then scikit-learn via conda).",Solution Discussion,False,239,MEMBER,False,False,False,1.0,0.661971831,0.7748538012,0.7142857143,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
"If this test is consistently timing out on Windows, we need to reduce the load on it.",Solution Discussion,False,85,CONTRIBUTOR,False,False,False,0.6296296296,0.2537313433,0.6666666667,0.1040462428,0.003349898568,0.9966501014,0.001425190268,2.44e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5732758621,1.0,0.6442792336,0.3557207664,0.1059320843,0.0269339002
"I'm still actively attempting to open the core file, and analyzing the failure.",Task Progress,False,79,CONTRIBUTOR,False,False,False,0.7647058824,0.2765957447,1.0,0.1230769231,0.05156448094,0.9484355191,0.01613471067,0.05286071254
If we fail some hot methods it would be similar.,Investigation and Exploration,False,48,CONTRIBUTOR,False,False,False,0.6666666667,0.07299270073,1.0,0.1672862454,0.001587299838,0.9984127002,3.35e-05,0.0002737286732
@Foorack please add me to what ever you can!,Social Conversation,False,44,NONE,False,False,False,0.3913043478,0.1232876712,0.1939655172,0.6666666667,0.07780844961,0.9221915504,0.1385345903,0.004404440072
"The server is executing this piece of code:
CODE",Investigation and Exploration,True,49,CONTRIBUTOR,True,False,False,1.0,0.05291005291,1.0,0.1085714286,0.1341698671,0.8658301329,7.12e-05,0.01391637181
Issue is still there guys.,Observed Bug Behaviour,False,26,NONE,False,False,False,0.2777777778,0.05154639175,0.8431952663,0.3333333333,0.9334032331,0.06659676688,0.1984119539,0.0001350091473
"Failure output (captured from console output)
---------------------------------------------
CODE",Testing,True,98,CONTRIBUTOR,True,True,False,0.2777777778,0.2127659574,1.0,0.01538461538,0.0,1.0,0.0,0.002175337965
"An error report file with more information is saved as:
/# /home/zlwang/jdk-13+33/hs_err_pid8978666.log
/#
/#",Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.4864864865,0.1034482759,0.8333333333,0.7279411765,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
I don't want to upgrade OS yet b/z I thought I read somewhere that TensorFlow doesn't support Sierra yet (could be mistaken or no longer be true anymore since I don't remember where or how long ago I read it)?,Investigation and Exploration,False,209,NONE,False,False,False,1.0,0.5774647887,0.6374269006,0.6666666667,0.458708442,0.541291558,7.541918537e-05,3.099797711e-05
"-         you can use any library for preprocessing (opencv, nltk, ...)",Solution Discussion,False,71,NONE,False,False,False,0.3225806452,0.1492537313,0.3619972261,0.6363636364,0.2978770854,0.7021229146,0.001143668596,0.01002173327
"In that perspective, I see ""extending an estimator"" as ""combining"" it with more base estimators.",Expected Behaviour,False,96,MEMBER,False,False,False,1.0,0.2112676056,0.9311594203,1.0,0.07860762409,0.9213923759,8.878525073e-06,1.133503399e-05
"I think so, but in a build without the patch applied.",Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.5,0.1182795699,0.5,0.7876447876,0.6108952372,0.3891047628,0.001283189472,0.002338836625
"We're about out of time for making more changes for the 0.17 release, unless the release is delayed.",Task Progress,False,100,CONTRIBUTOR,True,False,False,0.72,0.2686567164,0.1666666667,0.8092485549,0.01914830704,0.980851693,0.001167361543,2.78e-05
This is table of Classloaders in the system.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.5714285714,0.08791208791,0.5,0.05594405594,0.004762332847,0.9952376672,0.005236420778,0.0002611277793
it looks like the setting in make/lib/CoreLibraries.gmk sticks to jvm.lib.,Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.375,0.1016949153,0.3333333333,0.696969697,0.5516150872,0.4483849128,0.0008889926047,0.00606228134
Maybe some toy example (ignoring labels and only working with image paths) to make my point clearer.,Solution Discussion,False,100,NONE,False,False,False,0.425,0.2537313433,0.6463245492,0.5833333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2284482759,1.0,0.1076246493,0.8923753507,0.07059453633,0.0331659804
"Diagnostic files
----------------

There is no crash, nor is there any output.",Investigation and Exploration,False,81,NONE,True,True,False,0.4666666667,0.1866666667,0.9,0.05084745763,0.0,1.0,0.0,4.66e-05
fyi @mpirvu because we were discussing this today.,Contribution and Commitment,False,50,CONTRIBUTOR,False,False,False,0.3636363636,0.05479452055,1.0,0.6815642458,0.2630952118,0.7369047882,0.02486675089,0.0001740403081
@andrewcraik - can you please comment on the new field in the jitConfig?,Contribution and Commitment,False,72,CONTRIBUTOR,False,False,False,0.75,0.1875,0.25,0.2624113475,0.4503871241,0.5496128759,1.0,0.0283808672
Also switching between e.g. training and validation dataset within one session works quite effortless.,Usage,False,102,NONE,False,False,False,0.35,0.2089552239,0.6296809986,0.08333333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
"Source code for j9jni_createGlobalRef
CODE",Investigation and Exploration,True,43,CONTRIBUTOR,False,False,False,1.0,0.03174603175,1.0,0.3714285714,0.4096552654,0.5903447346,0.02642430283,0.0008687385329
I attach my CPU usage here. It's clear the single threads play some role in the time it takes to finish the job.,Solution Discussion,False,112,CONTRIBUTOR,False,False,False,0.8518518519,0.1503267974,0.9099678457,0.9090909091,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"- application (main class name)
- gc policy
- Xmx",Solution Discussion,False,51,CONTRIBUTOR,True,False,False,0.6,0.06164383562,1.0,0.1396648045,0.01031718851,0.9896828115,0.0001215876069,0.003457386912
"With the new improvements in loading time (down to 15s from about 100s), and the addition of multi-threading, I'm not nearly as keen on supporting in-memory pickling as I was before.",Solution Discussion,False,182,MEMBER,False,False,False,0.7333333333,0.2156862745,0.4951768489,0.2,0.1362602962,0.8637397038,0.0654089151,0.02443361297
jdk11_openj9_0_17_0/bin/java  -cp .,Investigation and Exploration,False,35,MEMBER,False,False,False,0.3125,0.03759398496,0.3333333333,0.3715012723,0.4721931427,0.5278068573,0.08907149035,0.005002918608
My current theory is that maybe somehow the returned memory did not have that property satisfied.,Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,1.0,0.09195402299,0.5,0.2316176471,0.7475942965,0.2524057035,2.74e-05,0.0003712750967
This results in garbage results and/orCUDA_ERROR_ILLEGAL_ADDRESS failures.,Motivation,False,74,NONE,False,False,False,0.1951219512,0.06299212598,0.4428152493,0.5555555556,0.380459606,0.619540394,0.0006322631694,0.001605430808
"However, I'm leaning towards storing the entire command line.",Solution Discussion,False,61,CONTRIBUTOR,True,False,False,0.3461538462,0.06164383562,0.3636363636,0.2122905028,0.01440399469,0.9855960053,0.001770078156,0.04266521959
Anyone has experienced benefits from GPUs with this batch norm implementation?,Solution Discussion,False,78,NONE,False,False,False,0.6111111111,0.04230769231,0.3468950749,1.0,0.2951481359,0.7048518641,0.07063994994,7.578871243e-05
Same problem.,Bug Reproduction,False,13,NONE,False,False,False,0.08333333333,0.02816901408,0.1023391813,0.5,0.154639826,0.845360174,0.1585619872,5.56302982e-05
it just hates Mondays.,Social Conversation,False,22,NONE,False,False,False,0.09302325581,0.0412371134,0.4289940828,0.8333333333,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"These two tables only have records removed during class unloading, and the fact that we didn't crash in the DLTRecord clean up routine means that the method most likely was not DLT compiled.
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/HookedByTheJit.cpp#L2001-L2005
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationThread.cpp#L3020

**Class/Loader Unloading**
As we know, this issue occurs during class unloading.",Investigation and Exploration,False,546,CONTRIBUTOR,False,False,False,1.0,0.5604395604,0.5238095238,0.4475524476,0.8054811495,0.1945188505,0.1631008731,0.2634355634
Adding an assert if CODE does not remove an entry has not triggered.,Investigation and Exploration,True,68,CONTRIBUTOR,False,False,False,0.7222222222,0.1428571429,0.1428571429,0.2937062937,0.6101453274,0.3898546726,0.05114946292,0.001708499748
"However, I don't think that this is a leak.",Investigation and Exploration,False,43,NONE,True,False,False,0.2195121951,0.1451612903,0.1233480176,0.3,0.01937624511,0.9806237549,0.02003548886,0.01526654747
@fjeremic,Social Conversation,False,9,CONTRIBUTOR,False,False,False,0.01818181818,0.007518796992,1.0,0.4580152672,0.5404334453,0.4595665547,0.06758416136,0.0001761792565
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.536637931,1.0,0.6229692458,0.3770307542,0.04744051815,0.1465312351
Are you able to detail what steps to use to specify custom JVM options to the test as well?,Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,0.7916666667,0.1428571429,0.8,0.4732824427,0.5408860557,0.4591139443,0.002429720419,0.000914006537
ð,Social Conversation,False,1,NONE,False,False,False,0.02702702703,0.01369863014,0.7004310345,0.3333333333,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
I now have:CODE,Solution Discussion,True,15,NONE,False,False,False,0.1538461538,0.005788712012,0.501650165,0.875,0.08979967049,0.9102003295,0.01683649271,0.03567836101
So that is related to the current discussion we are having in https://github.com/scikit-learn/scikit-learn/pull/10523 about deprecating CODE or not.,Potential New Issues and Requests,True,148,CONTRIBUTOR,True,False,True,18.0,0.28125,0.9926470588,3.0,1.0,0.0,0.0009246776239,0.0
How can I use spacy in Spark?,Usage,False,29,NONE,False,False,False,0.6363636364,0.04575163399,0.9903536977,0.6666666667,0.8195353595,0.1804646405,0.5841431139,0.5123188737
It is quite demoralizing when the first tensorflow program you ever run spits out a bunch of errors.,Social Conversation,False,100,NONE,False,False,False,0.5294117647,0.02604920405,0.5379537954,0.6666666667,0.1352070615,0.8647929385,0.03407322991,0.00125745356
"I hit it as well and also managed to get past it with the nomkl trick, but feels like an active bug vs. a closed one, no?",Action on Issue,False,121,NONE,False,False,False,1.0,0.3802816901,0.5,0.6666666667,0.4524825225,0.5475174775,0.2109192312,0.004397699618
Please read https://stackoverflow.com/help/mcve for more details.,Solution Discussion,False,65,MEMBER,False,False,False,0.5454545455,0.0618556701,0.8550295858,1.0,0.9334539234,0.06654607659,0.0001350091473,0.05592088416
"Some output on JITServer
CODE




JITServer:
CODE

JITClient:
CODE",Observed Bug Behaviour,True,76,CONTRIBUTOR,False,False,False,0.6363636364,0.07407407407,1.0,0.3314285714,0.3939701035,0.6060298965,0.03439401659,0.005060536466
Also look around on [Maarten van Gompel] URL 's GitHub [here] URL .,Solution Discussion,False,67,NONE,False,False,False,0.2972972973,0.1833333333,0.6637931034,0.9166666667,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
Otherwise I don't think there's a fix for that yet.,Solution Discussion,False,51,MEMBER,False,False,False,0.7692307692,0.1030927835,0.9615384615,1.0,0.9999752665,2.473351871e-05,0.00109431708,1.092628473e-06
This is a lot more stress on the jvm than the old one since I use dummy methods that take around CODE instead of CODE,Solution Discussion,True,117,NONE,True,False,False,0.6944444444,0.3731343284,0.8571428571,0.7988826816,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
"ah, ok. Looked straight past that.",Social Conversation,False,34,CONTRIBUTOR,False,False,False,1.0,0.04379562044,0.5,0.1486988848,0.001460558313,0.9985394417,1.86e-05,0.0001569488156
The huge memory allocation attempt is the stack walker cache used by CODE.,Investigation and Exploration,True,74,CONTRIBUTOR,False,False,False,0.5,0.125,0.125,0.1270718232,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
"@hangshao0 Yep, I can confirm the same behavior on my setup!",Investigation and Exploration,False,60,NONE,True,False,False,0.44,0.0802919708,0.3333333333,0.8178438662,0.05816692079,0.9418330792,0.01947449064,0.007031224118
I worry that adding this pickling capability will lead users down the wrong track.,Solution Discussion,False,82,MEMBER,False,False,False,0.3414634146,0.09150326797,0.1961414791,0.8571428571,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
@amicic has the concern about always writing to the cache been addressed?,Solution Discussion,False,73,CONTRIBUTOR,True,False,False,0.4,0.08219178082,0.3333333333,0.8268156425,0.964292179,0.03570782098,0.0003211324394,0.0001268809988
"Update: use a small decay (say, 0.9 or 0.95) does help a lot.",Usage,False,61,CONTRIBUTOR,False,False,False,0.40625,0.05,0.6209850107,0.5,0.5082642878,0.4917357122,0.001406808951,0.377195146
"Also, serialization might have to be updated if the English object gets updated.",Solution Discussion,False,80,NONE,False,False,False,0.4642857143,0.08496732026,0.1350482315,0.5333333333,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
I've been trying to do NLP with Spark with NLTK and Stanford and etc.,Motivation,False,69,CONTRIBUTOR,False,False,False,0.8333333333,0.09803921569,0.8231511254,0.25,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
"sure, I will look into this.",Contribution and Commitment,False,28,CONTRIBUTOR,False,False,False,1.0,0.1034482759,1.0,0.5596330275,0.7524783404,0.2475216596,0.001356949176,0.06662049161
@SAGGSOC why are you installing cuda 7.0?,Solution Discussion,False,41,NONE,False,False,False,1.0,0.05511811024,0.6656891496,0.5,0.5066956151,0.4933043849,0.001849462207,0.01267336397
Then PR builds and pipeline builds will have to find them there.,Solution Discussion,False,64,CONTRIBUTOR,True,False,False,1.0,0.1016949153,1.0,0.9454545455,0.6455976468,0.3544023532,0.0003611532457,9.63e-05
https://github.com/spacy-io/spaCy/blob/master/spacy/strings.pyx#L147,Observed Bug Behaviour,False,68,MEMBER,False,False,False,0.025,0.01612903226,0.3392070485,0.4444444444,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"@hzongaro has reported that in these tests we are spawning 5 instances of the tests all running forceAOT,count=1 on a 4 core machine.",Testing,False,133,CONTRIBUTOR,False,False,False,0.5,0.3582089552,0.3333333333,0.6358381503,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"Then JMeter would try to access the booking/customer services without a JWT, which would fail/trigger an exception).",Investigation and Exploration,False,116,NONE,True,False,False,1.0,0.2375,0.6,0.5882352941,0.6496013347,0.3503986653,0.3672811628,1.0
"I also reinstalled spaCy and the German model yesterday, but this din't fix the problem in my case.",Investigation and Exploration,False,99,NONE,False,False,False,0.6,0.1894736842,0.2105263158,0.6,0.08711286573,0.9128871343,0.02247209918,0.04915356896
We need to see the bytecodes to see why the check in the verifier is failing.,Investigation and Exploration,False,77,MEMBER,False,False,False,1.0,0.1203007519,1.0,0.02544529262,3.12e-05,0.999968832,0.0001794494051,0.0004950187461
"would it be possible to also measure how often this test fails with default options ?

**0 failures are seen in 100 runs** when the test is run without CODE.",Solution Discussion,True,159,CONTRIBUTOR,False,False,False,1.0,0.3225806452,1.0,0.5637065637,0.5498910229,0.4501089771,0.00255891854,0.001391365329
I don't know what the notebook makes of the CODE.,Social Conversation,True,49,MEMBER,False,False,False,0.5555555556,0.1030927835,0.2396449704,0.5,0.2588472304,0.7411527696,0.001083708651,1.0
The Hotspot AIX build needed to run on the AdoptOpenJDK build machine in order to produce the published build.,Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.1091954023,1.0,0.75,0.7732003723,0.2267996277,1.31e-05,2.23e-05
@amicic Thanks!,Social Conversation,False,15,NONE,True,False,False,0.09090909091,0.02666666667,0.3333333333,0.9830508475,0.3776596346,0.6223403654,0.001141107642,1.0
"could you launch explicit 32 and 32,buckets build/tests?",Testing,False,56,CONTRIBUTOR,False,False,False,1.0,0.1451612903,1.0,0.1223628692,0.03782155245,0.9621784476,0.005069760251,0.001350574796
"SGD will never find the optimum, so the places you'll end up will probably depend as much on the scaling of the learning rate as on the actual regularization.",Solution Discussion,False,158,MEMBER,False,False,False,1.0,0.4084507042,0.5797101449,1.0,0.04267891418,0.9573210858,8.738153135e-06,0.0006227250095
Hi,Social Conversation,False,2,NONE,False,False,False,0.05555555556,0.01408450704,0.8011695906,0.06666666667,0.6456610805,0.3543389195,1.0,4.677373331e-05
"You can also use tf.model_variables() which contains the variables of the model, i.e. moving_mean",Usage,False,97,MEMBER,False,False,False,1.0,0.05384615385,0.5610278373,1.0,0.4934650893,0.5065349107,0.003858020855,0.08224171039
"Java versions compared, both downloaded from AdoptOpenJDK a week or so ago:

Hotspot: 
openjdk version ""1.8.0_212""
OpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_212-b03)
OpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.212-b03, mixed mode)

OpenJ9:
openjdk version ""1.8.0_212""
OpenJDK Runtime Environment (build 1.8.0_212-b03)
Eclipse OpenJ9 VM (build openj9-0.14.0, JRE 1.8.0 Linux amd64-64-Bit Compressed References 20190417_286 (JIT enabled, AOT enabled)
OpenJ9   - bad1d4d06
OMR      - 4a4278e6
JCL      - 5590c4f818 based on jdk8u212-b03)

Startup times (three runs, mx1G) :

Hotspot:
3.777, 3.799, 3.749

OpenJ9, without SCC:
4.594, 4.606, 4.747

OpenJ9, with SCC:
3.103, 3.367, 2.928

A fixed heap brings things down a little more:
OpenJ9, with SCC and fixed 1G heap
2.772, 2.692, 2.688",Investigation and Exploration,False,830,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.3680297398,0.02016926055,0.9798307394,6.54e-05,5.3e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1443965517,1.0,0.03778856176,0.9622114382,0.1562320249,0.006959329585
"Not sure about a fix, one hope would be if we can change our cython code to work-around problem once we have isolated it.",Solution Discussion,False,121,MEMBER,False,False,False,0.641025641,0.3521126761,0.5321637427,0.5,0.4545652645,0.5454347355,0.002465307867,7.597272067e-05
"@amueller Oh, ok.",Social Conversation,False,17,NONE,False,False,True,3.0,0.03092783505,0.9940828402,1.0,1.0,0.0,5.045956947e-06,0.0
"@dfoody thank you for sharing this with the community but the statement ""which in turn works with tensorflow"" is incorrect.",Social Conversation,False,123,NONE,False,False,False,0.8695652174,0.2739726027,0.875,0.2,0.836290065,0.163709935,0.003132528254,1.0
from https://gist.github.com/zhanwenchen/e520767a409325d9961072f666815bb8,Solution Discussion,False,73,NONE,False,False,False,1.0,0.0157480315,0.8475073314,1.0,0.8322044655,0.1677955345,0.7490188829,0.1779957627
Please create a new instance of the cell if you would like it to use a different set of weights.,Observed Bug Behaviour,False,96,NONE,True,True,False,0.253164557,0.02894356006,0.0198019802,0.5454545455,0.0,1.0,0.0,0.0005278053632
"The verbose log has the same number of compilation starts as it does compilation ends, so it's not stuck in a compilation as far as I can see.",Investigation and Exploration,False,142,CONTRIBUTOR,False,False,False,1.0,0.4179104478,0.6666666667,0.1117318436,0.001697923746,0.9983020763,5.6e-05,0.0001611752173
"It's back.
https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR/381
cmdLineTester_CryptoTest_0",Task Progress,False,127,CONTRIBUTOR,True,False,False,1.0,0.1034482759,1.0,0.4587155963,0.3081147828,0.6918852172,1.0,0.2951562313
"Same here, I have experienced some unexpected behavior with is_training=False.",Solution Discussion,False,78,NONE,False,False,False,0.7857142857,0.04230769231,0.02569593148,0.3333333333,0.1735156386,0.8264843614,0.02257012206,4.717771256e-05
Global GC STW does not stop compilation threads really but triggers CODE and takes CODE - see https://github.com/eclipse/openj9/blob/d493108cc5cc229002810c55b0ac86df1ca1fbc2/runtime/gc_base/ClassLoaderManager.cpp#L645,Investigation and Exploration,True,217,CONTRIBUTOR,False,False,False,1.0,0.1868131868,1.0,0.3216783217,0.6104578564,0.3895421436,0.001708499748,0.03226044993
"We are actually working on a out-of-band data plane for TF, but it is still a great deal of ongoing work.",Task Progress,False,105,CONTRIBUTOR,False,False,False,0.8214285714,0.3432835821,0.7350901526,0.6666666667,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
"Also since GC can happen at any point, and instead of holding onto the vmaccess for the entire operation like regular JIT but a series of hold/release/hold/release, we potentially need to check for GC for all the client operations in between.",Investigation and Exploration,False,242,CONTRIBUTOR,False,False,False,1.0,0.2328042328,1.0,0.7885714286,0.4490401313,0.5509598687,0.0003004784063,0.0005637074234
Is it self contained?,Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.4444444444,0.03007518797,1.0,0.7760814249,0.7971354695,0.2028645305,0.0009716429063,4.17e-05
"In CODE, ""partial"" stands for partial access to the data: you expect that the data does not fit in memory at once so you fit with one chunk at a time and update the model incrementally while scanning through the data.",Solution Discussion,True,217,MEMBER,False,False,False,1.0,0.5774647887,0.2427536232,0.2857142857,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR_testList_0/47
cmdLineTester_CryptoTest_0",Testing,False,125,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.5137614679,0.7287290752,0.2712709248,0.2838986371,0.1023406456
Did you wild card the end of CODE ?,Solution Discussion,True,35,CONTRIBUTOR,False,False,False,1.0,0.1194029851,1.0,0.1843575419,0.002399137176,0.9976008628,5.77e-05,0.0001387658288
"After a discussion in Slack, this has been determined not a stop ship issue for the 0.22 release.",Action on Issue,False,97,CONTRIBUTOR,False,False,False,0.8181818182,0.3829787234,0.3333333333,0.4230769231,0.3690988178,0.6309011822,0.01937481932,0.007316005049
Some good news for the weekend.,Social Conversation,False,31,NONE,True,False,False,0.2142857143,0.08,0.25,0.9265536723,0.3683619523,0.6316380477,0.005131592796,0.01360883005
"Another problem I see, is that like shuffling currently is implemented, there is no true shuffling of the entire dataset possible.",Solution Discussion,False,130,NONE,False,False,False,0.525,0.3134328358,0.6574202497,0.9166666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
"However when a network has many batch_norm layers it is more efficient to collect all the update ops and run them together, so each layer don't need to wait for the update to finish.",Usage,False,182,MEMBER,False,False,False,1.0,0.1307692308,0.2869379015,0.6666666667,0.2263105393,0.7736894607,3.074160625e-05,0.0884793142
How about r2 on AIX and BE Linux64 for TR_CHelper?,Solution Discussion,False,50,CONTRIBUTOR,False,False,False,1.0,0.078125,1.0,0.6277777778,0.04046274845,0.9595372516,0.0003594564091,0.0002600368647
"If the assert is removed (implying it is invalid), will the subsequent code work as expected assuming that CODE is NULL?

https://github.com/eclipse/openj9/blob/a9838e74bba0f5935103bedcda6fc84c881804ca/runtime/compiler/compile/J9SymbolReferenceTable.cpp#L940",Solution Discussion,True,260,CONTRIBUTOR,False,False,False,1.0,0.3709677419,1.0,0.8907103825,0.9842619908,0.0157380092,0.07716070228,0.001320457339
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4978448276,1.0,0.5950041227,0.4049958773,0.001516025049,0.005853627228
That means many/most(?) Windows users won't be able to install spaCy anymore from source for free.,Solution Discussion,False,98,CONTRIBUTOR,False,False,False,0.7391304348,0.1111111111,0.9389067524,0.5,0.201368343,0.798631657,0.00591569739,0.00137409764
"Interesting - the catch hook is not walking inlines, as you say, which would seem to be a bug, thought it passes the test.",Social Conversation,False,122,CONTRIBUTOR,False,False,False,1.0,0.359375,0.5,0.9645390071,0.983412813,0.01658718703,0.0005409772213,0.02022533505
"New plan â let's at least get a good workaround in place, where the user will do some manual management of when the strings will be freed.",Workarounds,False,138,MEMBER,False,False,False,0.8181818182,0.435483871,0.6343612335,0.0625,0.288728579,0.711271421,0.1151253204,0.02221386295
Thanks for all the work on this,Social Conversation,False,31,NONE,True,False,True,1.0,0.07692307692,1.0,1.0,1.0,0.0,0.1515981559,0.0
"I had the same problem, and I did CODE to install a specific version (I had also downloaded from the archive).",Solution Discussion,True,110,NONE,False,False,False,0.65625,0.1653543307,0.5278592375,0.4,0.407848914,0.592151086,0.0230868493,0.04783163312
@bwesen's [comment](https://github.com/tensorflow/tensorflow/issues/15604#issuecomment-362637994) is correct.,Social Conversation,False,109,NONE,False,False,False,0.5,0.05511811024,0.1642228739,0.4,0.244487942,0.755512058,0.1948879119,0.2449173066
"In this way, you don't need to switch dynamically between train and evaluation.",Usage,False,79,NONE,False,False,False,0.4482758621,0.05,0.9464668094,0.6470588235,0.7995481369,0.2004518631,0.3206669123,0.722664447
I'm so happy to hear you're giving this a shot SCREEN_NAME .,Social Conversation,False,60,MEMBER,False,False,False,0.3142857143,0.1506849315,0.5818965517,0.1111111111,0.6506314731,0.3493685269,0.01305197974,0.05278600034
hum I didn't look to much into the warm start api that we have currently.,Social Conversation,False,73,MEMBER,False,False,False,1.0,0.2112676056,0.2644927536,0.25,0.03947204023,0.9605279598,6.73785302e-06,6.386923175e-06
"On the client, before we read the globalreference's value we do acquire vmaccess.",Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.2096774194,0.06878306878,0.25,0.68,0.4485135262,0.5514864738,0.0006369645556,0.0001183702813
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3297413793,1.0,0.3610954763,0.6389045237,0.1714133005,0.1014656753
The crash stops happening once CODE is removed.,Solution Discussion,True,47,CONTRIBUTOR,False,False,False,0.347826087,0.08602150538,0.6666666667,0.07722007722,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"If it's a pure map operation, then it is better to let Spark handle the map, if only because it can then handle distributing the work and providing some fault tolerance.",Solution Discussion,False,169,NONE,False,False,False,0.7209302326,0.2026143791,0.2057877814,0.05263157895,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
Could you tell me when the new seq2seq tutorial will be released?,Task Progress,False,65,NONE,False,False,False,0.8,0.01736613603,0.5610561056,1.0,0.1440568111,0.8559431889,0.03511934773,0.004494533216
Should be CODE,Solution Discussion,True,14,CONTRIBUTOR,False,False,False,1.0,0.03296703297,1.0,0.9475524476,0.8792939269,0.1207060731,0.0006146901707,5.93e-05
"Saving the string on the document isn't a huge waste of memory, and it only impacts the API in a few places (e.g., CODE, deserialisation, etc).",Solution Discussion,True,143,MEMBER,False,False,False,1.0,0.4193548387,0.4669603524,0.1764705882,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
-XX:+PortableSharedCache,Testing,False,24,NONE,True,False,False,0.03703703704,0.0125,0.6666666667,0.1323529412,0.09701181711,0.9029881829,0.01961071442,0.02610750661
The different methods and inits produce different trustworthiness scores on all platforms.,Investigation and Exploration,False,90,MEMBER,False,False,False,1.0,0.1764705882,0.5609756098,1.0,0.5697253798,0.4302746202,0.0007054752894,0.001821873532
But then global entry would override that.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.35,0.0546875,1.0,0.1888888889,0.02864858699,0.971351413,0.0003038415884,5.3e-05
@ogrisel SCREEN_NAME  SCREEN_NAME  SCREEN_NAME  what is your opinion on the usage pattern I posted above?,Contribution and Commitment,False,105,MEMBER,False,False,False,1.0,0.2535211268,0.6268115942,0.8,0.06495783385,0.9350421661,0.02110253454,0.000167358443
export PATH=${PATH}:/usr/local/cuda-9.0/binexport CUDA_HOME=${CUDA_HOME}:/usr/local/cuda:/usr/local/cuda-9.0export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64,Solution Discussion,False,249,NONE,False,False,False,1.0,0.1417322835,0.8739002933,0.5,0.8876696556,0.1123303444,0.3262189553,0.2682755484
https://github.com/eclipse-openj9/openj9/pull/14007 might address the remaining malloc issues.,Solution Discussion,False,94,CONTRIBUTOR,False,False,False,1.0,0.06730769231,1.0,0.2928176796,0.1039458847,0.8960541153,0.006003143523,0.007726096919
Maybe this immutability can help parallelizing other parts of the pipeline too.,Solution Discussion,False,79,CONTRIBUTOR,False,False,False,0.4444444444,0.1935483871,0.5462555066,1.0,0.2185494447,0.7814505553,0.008439281707,0.0010422294
"It could be a +1 - 1 = 0or a +3 - 2 = 1 (instead of 3+2=5) as long the value in the hash bucketis lower than the sum of the absolute value of hashed terms, it issufficient to determine whether CODE is used or not duringthe hash collisions, I think..",Potential New Issues and Requests,True,249,MEMBER,False,False,False,1.0,0.7352941176,0.3495934959,1.0,0.3594594146,0.6405405854,0.0004426917871,0.001263501754
"10/10 passed on s390-linux for entire jdk_util_1 suite (CODE), this seem hard to reproduce individually on grinder, is there any setup differences between grinder vs sanity.openjdk target?",Testing,True,188,CONTRIBUTOR,False,False,False,1.0,0.3043478261,1.0,0.2201257862,0.3435577268,0.6564422732,7.64e-05,0.0001805763305
The question is: what would be the best way to implement it (in terms of API)?,Solution Discussion,False,78,MEMBER,False,False,False,0.9411764706,0.2253521127,0.03260869565,0.2222222222,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
-         Disadvantage of this is introducing a keyword that will not be needed anymore in a few releases when the deprecations are cleaned up.,Solution Discussion,False,143,CONTRIBUTOR,True,False,False,0.5454545455,0.375,0.4558823529,0.7619047619,0.07430334202,0.925696658,0.1302436707,0.0003197521392
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.5064655172,1.0,0.6038479038,0.3961520962,0.1324784575,0.02541389144
Thanks for the hard work @JamesKingdon 👍,Social Conversation,False,40,NONE,True,False,True,0.4375,0.1044776119,1.0,1.0,1.0,0.0,0.02467101294,0.0
I'll run more grinders when the 0.15 release is done.,Task Progress,False,53,CONTRIBUTOR,True,False,False,1.0,0.1724137931,1.0,0.4128440367,0.02302291813,0.9769770819,0.003900901305,0.002548931278
It's great to see new efforts to solve the pain points in TF dataset API.,Social Conversation,False,73,NONE,False,False,False,0.75,0.223880597,0.241331484,0.7142857143,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
I misunderstood how the current OneHotEncoder is actually working.,Social Conversation,False,66,CONTRIBUTOR,True,False,False,0.2045454545,0.140625,0.2426470588,0.1428571429,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"Also, for anyone having trouble installing requirements, I suggest double checking your cuDNN installation.",Solution Discussion,False,107,NONE,False,False,False,0.6363636364,0.1102362205,0.2052785924,0.5,0.2838346655,0.7161653345,3.697445435e-05,0.5779195954
"### Different SCC options

From the above scenarios, I feel that the JIT is storing some data in the SCC which is either corrupted or not being read correctly from the SCC.",Investigation and Exploration,False,174,CONTRIBUTOR,False,False,False,0.7441860465,0.3440860215,0.7692307692,0.2239382239,0.3402178482,0.6597821518,0.06293969756,0.0116494207
I tried to mimic as close as possible SCREEN_NAME 's versions: CODE,Bug Reproduction,True,67,MEMBER,False,False,False,0.9166666667,0.1134020619,0.375739645,1.0,0.8130607538,0.1869392462,0.00176012514,2.145525001e-05
"Progress so far:
1) Was able to build JDK 13 with xlclang++ and reproduce the problem with my build
2) applied the suggestion from @zl-wang above and rebuilt from scratch since incremental build does not seem to be working.",Task Progress,False,225,CONTRIBUTOR,False,False,False,0.6774193548,0.2413793103,0.25,0.1360294118,0.7262039141,0.2737960859,0.01330093329,0.008601580477
-         if this is not the case: raise deprecation warning that they have to set categories explicitly to keep this behaviour (and internally use legacy mode),Solution Discussion,False,160,CONTRIBUTOR,True,False,False,0.6046511628,0.40625,0.3602941176,0.6666666667,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
"Are there any specific operations that you perform at the end of a ""data set"" or can your training loop handle the concatenation of records from different ""data sets""?",Motivation,False,167,CONTRIBUTOR,True,False,False,0.6304347826,0.4328358209,0.06380027739,0.5,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
Or I'm blind.,Social Conversation,False,13,MEMBER,False,False,False,0.2307692308,0.04411764706,0.4349593496,1.0,0.5348493196,0.4651506804,0.0520553054,4.558136965e-05
"@abred : Yes, I used CODE, same problem.",Usage,True,40,NONE,False,False,False,1.0,0.02692307692,0.8115631692,1.0,0.6353352663,0.3646647337,0.0001878991907,0.4437492017
Thanks.,Social Conversation,False,7,NONE,False,False,False,0.05,0.01492537313,0.2441054092,1.0,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
"@ppwwyyxx I believe a custom pipeline could be designed using TF server with distributed runtime, i.e. IPC send/recv ops.",Solution Discussion,False,121,CONTRIBUTOR,False,False,False,0.7142857143,0.2985074627,0.7309292649,0.1666666667,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
Or is it 17 specific?,Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.2380952381,0.05376344086,1.0,0.3436293436,0.3835437516,0.6164562484,0.006214516454,0.000634134332
ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory,Bug Reproduction,False,88,NONE,False,False,False,0.3513513514,0.1023622047,0.3929618768,0.5454545455,0.3802587264,0.6197412736,0.006558528713,0.00183836987
"I've recently been trying to make the switch from CODE, but this has been (at least in my limited experience) a major difficulty.",Motivation,True,129,NONE,False,False,False,0.48,0.3582089552,0.4285714286,0.6,0.4000653979,0.5999346021,0.1106294504,0.0001180823828
It would be good to know if the synchronous compilation that is important or the super low count and does it also fail with CODE?,Investigation and Exploration,True,129,CONTRIBUTOR,False,False,False,1.0,0.5319148936,1.0,0.3346153846,0.3248987511,0.6751012489,0.01822418003,0.04520695765
"Then I did what you guys said above, all of them does not work.",Solution Discussion,False,63,NONE,False,False,False,1.0,0.1102362205,0.05278592375,1.0,0.05657498818,0.9434250118,0.2905541361,0.02745205338
"I do have a translator that works pretty similar to this one but creates cells through a separate class that allows for inserting bidirectional layers where you want, residuals where you want, merging inputs with concat vs. sum, and a few other things.",Potential New Issues and Requests,False,252,NONE,False,False,False,1.0,0.06222865412,0.3201320132,0.5,0.07123442229,0.9287655777,0.0001133215202,0.0004233834388
Perhaps comparing outputs at verbose=20 will be more informative.,Investigation and Exploration,False,65,MEMBER,False,False,False,0.5294117647,0.1323529412,0.6382113821,0.8888888889,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
"@lesteve Since it does look like a lot of ppl has hit this problem, and it does look like it's related to (some version of ?) conda not extracting full MKL libraries (my understanding of the situation so far), even though it's not a scikit-learn bug, I do think either add some kind of remark or warning or error messages to (OS X) users would be nice?",Solution Discussion,False,352,NONE,False,False,False,1.0,0.9436619718,0.6959064327,0.8571428571,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
"-         Change the state of some binary data, e.g. modify the lexicon",Solution Discussion,False,71,MEMBER,False,False,False,0.3870967742,0.07843137255,0.038585209,0.3333333333,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"This way, if you keep a CODE object in memory, you know that the string lookup will always be well behaved â but if you're letting the CODE objects pass out of scope, your memory won't be growing.",Solution Discussion,True,196,MEMBER,False,False,False,0.95,0.6129032258,0.40969163,0.8888888889,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
Thanks.,Social Conversation,False,7,MEMBER,False,False,False,0.07692307692,0.006535947712,0.07717041801,0.5,0.002089762575,0.9979102374,1.030911661e-05,0.004147527693
"@robmsylvester I reinstall tensorflow from the latest source, still the same error.",Solution Discussion,False,83,NONE,False,False,False,1.0,0.01736613603,0.2079207921,0.3333333333,0.05414259275,0.9458574073,0.004152670075,0.04899488558
It has been 14 days with no activity and the CODE label was assigned.,Action on Issue,True,69,MEMBER,False,False,False,1.0,0.02026049204,0.9702970297,0.5,0.7205827521,0.2794172479,0.2555781183,0.1484095414
@loriadi Lori - just making sure you saw this,Social Conversation,False,45,NONE,False,False,False,1.0,0.06015037594,1.0,0.9974554707,0.9998578626,0.0001421374188,0.03182672137,0.0008183546901
lukasz; it's hard for me to identify from the various comments which part of the tutorial is faulty in TF 1.0.,Social Conversation,False,110,CONTRIBUTOR,False,False,False,1.0,0.03039073806,0.3498349835,0.5,0.07171391845,0.9282860816,8.78093455e-06,0.000334150158
[1] https://github.com/eclipse/omr/blob/0b9653c23ba22247f66c11ad6df8a3b46c2c4738/compiler/p/codegen/OMRTreeEvaluator.cpp#L4159-L4160,Solution Discussion,False,132,CONTRIBUTOR,False,False,False,0.07142857143,0.04255319149,1.0,0.8576923077,0.7208851506,0.2791148494,0.1217072968,0.03144222045
"Trying limiting to just compiling one method
CODE
Can no longer reproduce it limiting to one method
So the issue is probably not due to this specific method.",Investigation and Exploration,True,160,CONTRIBUTOR,False,False,False,1.0,0.164021164,1.0,0.1314285714,0.2738272315,0.7261727685,0.03555330036,0.0006121316294
AYBE YOU NEED READ THIS,Social Conversation,False,23,NONE,False,False,False,0.1724137931,0.01923076923,0.9250535332,0.05882352941,0.7995481369,0.2004518631,0.3206669123,0.722664447
"I updated the PR https://github.com/scikit-learn/scikit-learn/pull/10523, ready for review",Task Progress,False,90,CONTRIBUTOR,True,False,False,1.0,0.125,0.9705882353,1.0,0.9139276855,0.08607231452,0.1194514257,0.07049110837
"There are many possible reasons why the JIT throws ILGenFailure 
@jsimomaa  To get a better understanding of the failures could you please do a run with CODE.",Investigation and Exploration,True,159,CONTRIBUTOR,False,False,False,1.0,0.2116788321,0.5,0.1338289963,0.001311774784,0.9986882252,5.3e-05,0.0001602617194
"2)         As integer, already encoded data (how it is done in the current CODE) -> infer categories from the maximum value in the training data",Solution Discussion,True,144,CONTRIBUTOR,True,False,False,0.7575757576,0.390625,0.1507352941,0.3333333333,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"I ended up uninstalling the latest version and installing 1.4, in my virtualenv.",Solution Discussion,False,80,NONE,False,False,False,0.9285714286,0.1023622047,0.137829912,0.3333333333,0.2153063504,0.7846936496,0.002231038575,0.01329083736
"Also you are passing UPDATE_OPS_COLLECTION variables_collections, which changes which collections are the variables added to.",Usage,False,125,MEMBER,False,False,False,0.7142857143,0.05769230769,0.7494646681,0.6666666667,0.6163375915,0.3836624085,0.002840605583,6.767211672e-05
"3.         If we choose to integrate into the existing OneHotEncoder, are we OK with the following consequences: we deprecate a bunch of the keywords/attributes of OneHotEncoder, and a specific usecase (automatically ignoring unseen values within the *range* of seen values) will not be possible anymore after deprecation period.",Solution Discussion,False,329,CONTRIBUTOR,True,False,False,1.0,0.78125,0.7058823529,0.8,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
"Got this on https://ci.adoptopenjdk.net/view/Failing%20Builds/job/build-scripts/job/jobs/job/jdk11u/job/jdk11u-mac-x64-openj9/573 (CODE)
CODE
Access to the machine can be granted by opening an issue at https://github.com/AdoptOpenJDK/openjdk-infrastructure/issues",Action on Issue,True,265,NONE,True,True,False,1.0,0.3387096774,1.0,0.01092896175,0.0,1.0,0.0,0.003289514691
"I agree that giving motivation would be helpful, for instance in this case: ""This is useful to efficiently compute a regularization path of ElasticNet models as done by the :func:CODE function"".",Solution Discussion,True,194,MEMBER,False,False,False,1.0,0.4507042254,0.3876811594,1.0,0.03962850149,0.9603714985,7.05368988e-06,8.078405027e-05
To fix inliner properly to be able to handle different calls with the same bytecode info needs more consideration.,Solution Discussion,False,114,CONTRIBUTOR,False,False,False,0.4222222222,0.1428571429,1.0,0.9567430025,0.9208021236,0.07919787637,0.02945136717,0.001354250294
The register convention we agreed on stays the same.,Social Conversation,False,52,CONTRIBUTOR,False,False,False,0.45,0.0703125,1.0,0.8722222222,0.2191842677,0.7808157323,0.003365233479,0.1283873506
Can you share the code of the scorer?,Observed Bug Behaviour,False,37,MEMBER,False,False,False,1.0,0.0824742268,0.1804733728,0.5,0.2578278976,0.7421721024,0.008572782863,8.343708337e-07
I am ok with this change.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.2,0.08955223881,0.5,0.9653179191,0.02015809145,0.9798419085,2.11e-05,0.0001604948466
So the only way for involuntary OSR<sup>1</sup> to occur would be via the call to CODE.,Solution Discussion,True,87,CONTRIBUTOR,False,False,False,0.7727272727,0.1827956989,0.2222222222,0.6216216216,0.5537917672,0.4462082328,0.003696630136,0.001219776039
"It was fast, but wasn't quite happy with the result until I found [Percy Liang's] URL  word clustering tool.",Solution Discussion,False,108,NONE,False,False,False,1.0,0.3333333333,0.2844827586,0.6666666667,0.08236964625,0.9176303537,0.3353511726,0.426740286
Is the CODE pass because we run less allocations total or do we do the same allocation with the JIT it just isn't satisfied or something?,Investigation and Exploration,True,137,CONTRIBUTOR,False,False,False,1.0,0.5531914894,1.0,0.5230769231,0.4603652118,0.5396347882,0.01461769866,0.2185584951
"These inputs are in a HDF5 file or a Numpy array either on disk or in memory, so I typically feed with CODEfeed_dictCODE, potentially asynchronously into a queue.",Motivation,True,162,NONE,False,False,False,0.8484848485,0.4179104478,0.3758668516,0.3333333333,0.3166940255,0.6833059745,0.1413171275,0.04972082678
CODE,Solution Discussion,True,4,NONE,False,False,True,1.0,0.001447178003,0.99669967,2.0,1.0,0.0,1.0,0.0
"|  
0.24.0 | 6655.00",Testing,False,21,NONE,True,False,False,0.3,0.0375,0.8333333333,0.08333333333,0.04138087714,0.9586191229,0.03316104244,0.3318641488
"I'm on CentOS and K80 GPU, cuda 9.2 and cudnn v7.1",Solution Discussion,False,50,NONE,False,False,False,0.7857142857,0.08661417323,0.935483871,1.0,0.9288401083,0.07115989167,0.00732168145,0.001770336874
Thanks SCREEN_NAME ,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.1052631579,0.02985074627,0.4979195562,1.0,0.4357408203,0.5642591797,0.0001445491238,0.02256391463
"I'm not sure if step 3 could happen.





CODE",Investigation and Exploration,True,52,CONTRIBUTOR,False,False,False,0.2272727273,0.05291005291,1.0,0.2285714286,0.3087691503,0.6912308497,0.000545910493,0.007901423216
Then you CODE and bam you've got your NodeJS project all bundled and ready for distribution to places like NPM.,Solution Discussion,True,111,MEMBER,False,False,False,0.6363636364,0.2876712329,0.9245689655,0.6666666667,0.9204563137,0.0795436863,0.01198832771,0.1095689952
I may not understand the distributed settings that TF data input pipeline API is targeting to solve.,Social Conversation,False,100,NONE,False,False,False,0.85,0.2537313433,0.2357836338,0.1428571429,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
Please read https://stackoverflow.com/help/mcve for more details.,Solution Discussion,False,65,CONTRIBUTOR,False,False,False,0.5454545455,0.0618556701,0.8668639053,1.0,0.954654517,0.04534548295,0.0005450428142,0.001193905199
You have to somehow help Spark schedule the work in larger increments.,Solution Discussion,False,70,MEMBER,False,False,False,0.3,0.07843137255,0.7942122186,0.6315789474,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"I had the chance myself to test this on a fresh Windows 10 machine and here are the results:

1. First with [jdk8u212-b03 (HotSpot)] URL 
CODE

CODE

2. Second with [jdk8u212-b04_openj9-0.14.2] URL 

CODE

CODE

CODE",Testing,True,229,NONE,True,False,False,1.0,0.3284671533,0.5,0.687732342,0.03588162782,0.9641183722,0.01430180553,0.007829219811
Ok sorry for the comment.,Social Conversation,False,25,NONE,False,False,False,1.0,0.06849315068,0.8534482759,1.0,0.8121235996,0.1878764004,0.001164130183,0.1167888155
What platform are you on? (e.g. CODE),Investigation and Exploration,True,37,MEMBER,False,False,False,0.3888888889,0.07216494845,0.04142011834,0.7777777778,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
*         https://github.com/PAIR-code/deeplearnjs/issues/407,Potential New Issues and Requests,False,61,NONE,False,False,False,0.3333333333,0.02739726027,0.8448275862,0.8333333333,0.81202295,0.18797705,0.0001068963647,0.0006469111266
It still segfaults at CODE:,Investigation and Exploration,True,27,CONTRIBUTOR,False,False,False,0.5555555556,0.05376344086,0.4,0.5173745174,0.5369859796,0.4630140204,0.0028647951,0.0003133369641
So still double-checking all settings to see what triggered the crash.,Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.5714285714,0.1212121212,1.0,0.8105263158,0.7039263627,0.2960736373,0.374152472,0.3518178539
~I'll chase up that issue and see what the situation is and post back here once it's resolved~ Looks like it's something we'll be awaiting apple to fix.,Task Progress,False,152,NONE,True,False,False,1.0,0.4516129032,0.6666666667,0.1912568306,0.3860581428,0.6139418572,0.01216692501,0.3080636089
Is there any update on this?,Task Progress,False,28,NONE,False,False,False,0.3333333333,0.08450704225,0.06432748538,0.3333333333,0.0967678968,0.9032321032,0.247501826,0.008713891162
CODE,Solution Discussion,True,4,NONE,False,False,False,0.03846153846,0.001447178003,0.495049505,0.625,0.08979967049,0.9102003295,0.01683649271,0.03567836101
"Looked at all recent core dumps, all failed compilation are AOT compiles during start up, so no-SVM AOT is used.",Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.488372093,0.3387096774,0.1,0.3442622951,0.6389467947,0.3610532053,0.00359446461,0.01517828221
So imho we should either do CODE ( + maybe defensive programming ) or add another method that we can generally use to fit along a parameter path.,Solution Discussion,True,145,MEMBER,False,False,False,1.0,0.3521126761,0.7463768116,1.0,0.07424730092,0.9257526991,0.00947335116,1.193161472e-05
As the actual CODE calls would be called much later and no use to us.,Investigation and Exploration,True,69,CONTRIBUTOR,False,False,False,0.2542372881,0.07936507937,0.6666666667,0.3085714286,0.3768356435,0.6231643565,0.0999392835,0.03439401659
Hopefully I'll be able to get back to this within a week or so.,Task Progress,False,63,NONE,True,False,False,0.6363636364,0.1346153846,0.8,0.2541436464,0.08429996571,0.9157000343,0.002473459958,0.0181710758
"Just friendly reminder that ""classes unloading"" and ""anonymous classes unloading"" hooks passed list of classes to be unloaded attached to the hook as parameter (""classes"" list included ""anonymous classes"" as well).",Investigation and Exploration,False,214,CONTRIBUTOR,False,False,False,0.8157894737,0.3406593407,0.2,0.8216783217,0.8672060445,0.1327939555,0.005897328255,0.0001401924951
"i.e.,
CODE",Solution Discussion,True,11,CONTRIBUTOR,False,False,False,0.1875,0.03225806452,1.0,0.4903474903,0.5355668046,0.4644331954,0.003498929432,0.003129639439
I'll see if Shelley or somebody else can run sedmgr for us.,Contribution and Commitment,False,59,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.8602941176,0.7733892756,0.2266107244,1.04e-05,0.02803794401
It is explicit.,Solution Discussion,False,15,MEMBER,False,False,False,0.1153846154,0.04225352113,0.6847826087,0.7272727273,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
Because JavaScript is Awesome,Motivation,False,29,NONE,True,True,False,1.0,0.05479452055,0.004310344828,1.0,0.0,1.0,0.0,0.0004647668033
But yes this only applies for working with CPU + GPU and has no effect if you use CPU only.,Solution Discussion,False,91,NONE,False,False,False,0.5135135135,0.2835820896,0.3384188627,0.7777777778,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
Hmm.,Social Conversation,False,4,MEMBER,False,False,False,0.03703703704,0.01612903226,0.6167400881,0.25,0.2586753238,0.7413246762,0.002179048536,0.1151253204
The common piece of code was delivered in #3598.,Action on Issue,False,48,CONTRIBUTOR,True,False,False,0.5294117647,0.140625,1.0,0.3829787234,0.7581593427,0.2418406573,0.0006996638728,0.0002861168415
"so, multiheap:24/28/30/32 kind of meaningless.",Testing,False,46,CONTRIBUTOR,False,False,False,0.2,0.08064516129,1.0,0.5063291139,0.4402101884,0.5597898116,0.00359667111,0.001910640371
The only Windows machines I have access to with Windows 10 are virtualized instances so that may be why I can not reproduce.,Bug Reproduction,False,124,CONTRIBUTOR,False,False,False,1.0,0.1678832117,1.0,0.717472119,0.04154780057,0.9584521994,6.34e-05,0.001395974822
Now it starts training.,Solution Discussion,False,23,NONE,False,False,False,0.2,0.005788712012,0.8943894389,0.8,0.3445264171,0.6554735829,0.04382956016,0.06892677638
"Hi SCREEN_NAME , I have had similar issues in my streaming application.",Observed Bug Behaviour,False,71,NONE,False,False,False,0.44,0.1774193548,0.2202643172,0.1111111111,0.2016154368,0.7983845632,0.03459730626,0.03432994834
@bhack I haven't been able to make it work with more than one parameter in return from the function given to py_func.,Usage,False,117,NONE,False,False,False,1.0,0.328358209,0.9334257975,0.3333333333,0.9701640056,0.02983599443,0.02053157431,0.0001913748963
I am glad to see this initiative.,Social Conversation,False,33,NONE,False,False,False,0.2333333333,0.1044776119,0.133148405,0.02857142857,0.04064994448,0.9593500555,0.2125437083,0.01543061897
So it seems both demo2 and OpenJ9 remain running in the meantime without anything abnormal.,Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,0.2307692308,0.1515151515,0.9666666667,0.3157894737,0.1148232942,0.8851767058,0.002853124861,0.002074999899
There is an issue open on the extension JCL repo to add this patch back.,Solution Discussion,False,72,CONTRIBUTOR,False,False,False,0.5555555556,0.1094890511,1.0,0.7992565056,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
"In the case of linear models, the estimator will converge to the same result, even when the warm start gets different data than the original fit.",Solution Discussion,False,145,MEMBER,False,False,False,1.0,0.3661971831,0.3333333333,0.2222222222,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
It might be the case.,Social Conversation,False,21,MEMBER,False,False,False,0.2173913043,0.07042253521,0.5144927536,0.5,0.04251640782,0.9574835922,1.965207131e-06,3.382963704e-05
I will of course report if I do.,Social Conversation,False,32,NONE,True,False,False,0.25,0.06015037594,1.0,0.7022900763,0.7368179436,0.2631820564,0.004337443365,0.2412282351
"Repro rate with the following command was 3/10:

CODE

Console:

CODE

Going to continue limiting.",Bug Reproduction,True,106,CONTRIBUTOR,False,False,False,1.0,0.1428571429,0.5,0.7430025445,0.7851113681,0.2148886319,0.02856760951,0.00173440507
"Looking at the source at CODE:
CODE
It seems the method aims to insert a bunch of method related data to the constant pool, which also explains why the constant pool was unexpectedly messed up after compiled by JIT.",Investigation and Exploration,True,217,CONTRIBUTOR,False,False,False,0.7454545455,0.3082706767,0.75,0.4554707379,0.5404334453,0.4595665547,0.06758416136,0.0001761792565
*         SCREEN_NAME : Thanks for kicking the tires!,Social Conversation,False,53,CONTRIBUTOR,True,False,False,0.1489361702,0.1044776119,0.5270457698,0.25,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"This method is downstream in the linkage generation, and is an appropriate location to add CHelper specific code.",Solution Discussion,False,113,CONTRIBUTOR,True,False,False,0.140625,0.140625,0.6315789474,0.9388888889,0.3076445993,0.6923554007,0.1283873506,1.0
@aep did you use the function of https://github.com/tensorflow/models/blob/master/tutorials/rnn/ptb/ptb_word_lm.py#L112 I mention at the end of my post (now edited to be more clear),Solution Discussion,False,181,NONE,False,False,False,1.0,0.03183791606,0.5181518152,1.0,0.1022314094,0.8977685906,0.01542216894,0.09927558477
"Hmm, maybe you're right. I was immediately thinking of how the C-level API would look.",Solution Discussion,False,86,MEMBER,False,False,False,0.64,0.4210526316,0.5693430657,0.2,0.004025785766,0.9959742142,7.249967297e-05,2.745084526e-05
The CODE passed with unlimited.,Testing,True,31,CONTRIBUTOR,True,False,False,0.625,0.08064516129,0.5,0.4388185654,0.2993669018,0.7006330982,0.01034662808,0.0008955215173
we don't usually raise warnings until fit in any case so don't worry aboutthat.,Solution Discussion,False,79,MEMBER,False,False,False,0.6666666667,0.21875,0.3786764706,0.1666666667,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
So the solution we want to get to is one where a limited number of somewhat common strings are interned in the common vocab.,Solution Discussion,False,124,MEMBER,False,False,False,0.6,0.3870967742,0.3215859031,0.3333333333,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
The important thing is to have a workflow for users that want to use spaCy with a map/reduce framework like Spark.,Solution Discussion,False,114,MEMBER,False,False,False,0.4888888889,0.1437908497,0.501607717,0.6,0.1362602962,0.8637397038,0.0654089151,0.02443361297
I think we need to find out  which opcode (or some recognized method?),Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.8235294118,0.2978723404,0.6666666667,0.6230769231,0.5851663836,0.4148336164,0.3869983485,0.2686456518
"Can you clarify to which aspect this ""no"" refers?",Solution Discussion,False,49,CONTRIBUTOR,True,False,False,0.8181818182,0.140625,0.2977941176,0.5,0.008714541549,0.9912854585,5.98009726e-05,0.01273882759
@amicic We've branched for CODE.,Social Conversation,True,32,MEMBER,False,False,False,1.0,0.04109589041,0.5,0.9832402235,0.9959782054,0.0040217946,0.08308572023,0.01208850295
The goal of CODE is to be abuilding block usable in an out-of-core framework.,Solution Discussion,True,77,MEMBER,False,False,False,1.0,0.2253521127,0.4855072464,0.75,0.04250515813,0.9574948419,1.056298833e-05,4.807738873e-06
:),Social Conversation,False,2,NONE,False,False,False,0.5,0.001447178003,0.8514851485,1.0,0.2925249869,0.7074750131,0.0003439990441,0.0001064391661
Taking logs won't help here.,Potential New Issues and Requests,False,28,NONE,False,False,False,0.2380952381,0.078125,0.8823529412,0.8,0.2637770953,0.7362229047,7.119163405e-05,0.0001159406612
"I could try to go back to 11.0.4 and ensure the issue doesn't happen there, again.",Bug Reproduction,False,82,NONE,True,False,False,0.5161290323,0.1203007519,0.8571428571,0.1933842239,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
"https://www.eclipse.org/openj9/docs/tool_jextract/

Also note the debug image is available, containing additional debug symbols.",Social Conversation,False,130,CONTRIBUTOR,False,False,False,0.619047619,0.1733333333,0.6666666667,0.2655367232,0.003634671094,0.9963653289,5.86e-05,0.002021828306
Seems this was fixed so closing.,Action on Issue,False,32,CONTRIBUTOR,False,False,True,1.0,0.08,1.0,1.0,1.0,0.0,1.0,0.0
@ebrevdo Thanks for getting back to this issue.,Social Conversation,False,47,NONE,False,False,False,0.4705882353,0.01157742402,0.1221122112,0.3333333333,0.01809836732,0.9819016327,0.0007664331927,0.005198313254
I need to try it out with this version before deciding whether to move forward.,Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.375,0.1515151515,1.0,0.5438596491,0.1984085961,0.8015914039,0.003898730278,0.003371874835
I tried symbolic links from all the 9.0 filenames to all the 9.1 filenames and it didn't work.,Solution Discussion,False,94,NONE,False,False,False,0.75,0.1417322835,0.2609970674,0.3333333333,0.3379076477,0.6620923523,0.001120325967,0.0004436934522
*         closing the queue in the background thread such that a CODE is raised when the queue is exhausted (but then we can't reopen it again #4535),Workarounds,True,149,CONTRIBUTOR,False,False,False,0.4821428571,0.4029850746,0.8890429958,0.6153846154,0.8997769167,0.1002230833,0.0385452454,0.125435556
I will try on a real mac hardware later.,Bug Reproduction,False,40,MEMBER,False,False,False,0.3333333333,0.1267605634,0.1520467836,1.0,0.1664564184,0.8335435816,0.05890874943,8.593635617e-05
Not quite satisfying as we don'tunderstand what's going on...,Social Conversation,False,61,MEMBER,False,False,False,0.5625,0.1323529412,0.3008130081,0.7142857143,0.3553526876,0.6446473124,0.003096425316,0.01032797867
"No sign of a filename of the form core.20191106.* (especially on linux, from / )",Investigation and Exploration,False,80,NONE,True,False,False,1.0,0.0977443609,1.0,0.2010178117,0.01668787013,0.9833121299,0.01328334366,0.01296082525
Confirmed with Cheng the Oracle JVM was on the path.,Task Progress,False,52,CONTRIBUTOR,False,False,False,1.0,0.101010101,1.0,0.6666666667,0.2126530108,0.7873469892,0.0008429687088,0.004786279063
"When I use 'javaw.exe'... looks like perhaps it does launch, but I can't see the output anywhere so its kind of impossible to see what's going on.",Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,1.0,0.2727272727,0.25,0.7473684211,0.2164794247,0.7835205753,0.001471142506,0.02954037942
-         Multiprocessing has platform-specific issues.,Investigation and Exploration,False,55,MEMBER,False,False,False,0.3333333333,0.0618556701,0.03846153846,0.6666666667,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
"Consideration 2 is very useful, but it's only really a saving if strings occur multiple times.",Investigation and Exploration,False,94,MEMBER,False,False,False,0.4,0.2580645161,0.3083700441,0.25,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"E.g. if this lexeme hasn't been accessed for the last _n_ seconds, delete it from the StringStore.",Expected Behaviour,False,98,NONE,True,True,False,0.298245614,0.2741935484,0.05726872247,0.7647058824,0.0,1.0,0.0,0.0008157310994
Good.,Social Conversation,False,5,NONE,False,False,False,0.5,0.01369863014,0.5431034483,0.5,0.6324320163,0.3675679837,9.560917096e-05,0.001398505443
filenames wereCODEand CODE (version 7.0.5),Bug Reproduction,True,42,NONE,False,False,False,0.2380952381,0.03937007874,0.3255131965,0.4545454545,0.3566928644,0.6433071356,0.1351135301,0.002261357628
Ideally this would have the lastOpt index set at the point where the failure mode changes but a log is a good start.,Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,0.5897435897,0.1729323308,1.0,0.6437659033,0.6945904927,0.3054095073,0.0009859498065,9.44e-05
**Edit,Investigation and Exploration,False,6,MEMBER,True,False,False,0.04545454545,0.01086956522,0.5,0.1698113208,0.3431647145,0.6568352855,0.001046537172,0.001139510487
I understand J9 may not be in total sync with package support (i.e javafx).,Investigation and Exploration,False,75,CONTRIBUTOR,False,False,False,0.2978723404,0.2978723404,0.75,0.1,0.04838270716,0.9516172928,0.234046329,0.001299478205
@IBMJimmyk is a tree problem or a codegen problem just to be clear on the width issue at play here?,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,1.0,0.4255319149,0.5,0.6538461538,0.6396702573,0.3603297427,0.01862203789,0.008463782054
Thanks @jdmpapin I agree it would be better to more explicitly avoid those kinds of transformations that change the program in ways that involuntary OSR may not be able to handle.,Social Conversation,False,179,CONTRIBUTOR,False,False,False,1.0,0.3333333333,0.5,0.8416988417,0.6303548026,0.3696451974,0.008046045613,0.8852104953
@shanchao95  please fix it as indicated.,Social Conversation,False,40,CONTRIBUTOR,False,False,False,0.1129032258,0.1129032258,1.0,0.2995780591,0.2206084978,0.7793915022,0.01185472132,0.2853709122
Looks like the VM defaults to a native stack size of 256k.,Solution Discussion,False,58,CONTRIBUTOR,False,False,False,0.2608695652,0.1153846154,0.3,0.8508287293,0.3185054309,0.6814945691,0.006311966217,1.18e-05
"If you're going to generate a bctrl instead of a bl, r12 may as well be used to load CTR for complete safety.",Solution Discussion,False,109,CONTRIBUTOR,False,False,False,0.6571428571,0.1796875,1.0,0.4611111111,0.03751764127,0.9624823587,0.0001713537721,0.0003858680808
"how to understand the discrepancy:  modules + GC look like more than 4GB already, but JRE is 3.2GB?",Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,1.0,0.3225806452,1.0,0.6708860759,0.4865533864,0.5134466136,0.0288492111,0.02872086273
"So it is only the case where you pass an integer to CODE (like CODE for categories=[0, 1, 2, 3, 4, 5] in the above case) to specify the number of categories that will actually be an API change (deprecated / removed).",Solution Discussion,True,216,CONTRIBUTOR,True,False,False,0.9318181818,0.640625,0.2573529412,0.4285714286,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
Please open a new issue for related bugs.,Action on Issue,False,41,NONE,False,False,True,8.0,0.1290322581,1.0,2.0,1.0,0.0,0.9898268541,0.0
It is not so clear to me but maybe I'm overlooking something obvious.,Social Conversation,False,69,MEMBER,False,False,False,0.7222222222,0.1830985915,0.9420289855,1.0,0.07861806562,0.9213819344,1.133503399e-05,1.645860972e-05
Great.,Social Conversation,False,6,MEMBER,False,False,False,0.05882352941,0.01470588235,0.6097560976,0.1111111111,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
We need to be careful either way.,Solution Discussion,False,33,CONTRIBUTOR,False,False,False,0.875,0.04022988506,1.0,0.4301470588,0.7657223552,0.2342776448,4.25e-06,2.35e-05
"Once the above changes are made on all platforms, I will commit the change to J9Options.cpp to prevent ExceptionCatch forcing FSD (and another related change to initialize a required function pointer in the jitConfig).",Task Progress,False,218,CONTRIBUTOR,False,False,False,0.53125,0.53125,1.0,0.1489361702,0.000716727624,0.9992832724,0.003714710253,0.00734286415
It's possible that the hashtable gets big because the issue happens after some time.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.6363636364,0.175,0.3333333333,0.9852941176,0.9721353064,0.02786469359,0.008707818333,0.1760484251
"The situation around this is much improved in spaCy 2, because the string-to-integer mapping no longer depends on the CODE state --- it's just a hash value.",Task Progress,True,156,MEMBER,False,False,False,1.0,0.4677419355,0.8766519824,0.5,0.6576765505,0.3423234495,0.0002468438052,0.0002666834826
Ah okay so maybe a misunderstanding.,Social Conversation,False,36,NONE,False,False,False,0.1621621622,0.08955223881,0.3300970874,0.1111111111,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
So to be concrete: a non-default value of CODE can be deprecated and has to be replaced by CODE specification.,Solution Discussion,True,110,CONTRIBUTOR,True,False,False,0.525,0.328125,0.3161764706,0.75,0.0124193059,0.9875806941,0.003559988512,0.00316172217
"[A.offset, B.offset]

- then on JITClient
CODE",Solution Discussion,True,49,CONTRIBUTOR,False,False,False,0.1095890411,0.04232804233,1.0,0.9942857143,0.5018185814,0.4981814186,0.001953523523,1.0
"Unfortunately, the suggested change leaves matters as they are, with the aforementioned error.",Solution Discussion,False,94,NONE,False,False,False,0.7647058824,0.01881331404,0.1254125413,0.6666666667,0.01809836732,0.9819016327,0.0007664331927,0.005198313254
"Purging the queue requires setting the flag to interrupt the compilation, which is only checked by the comp thread at specific points.",Investigation and Exploration,False,134,CONTRIBUTOR,False,False,False,0.4230769231,0.2417582418,0.8461538462,0.8111888112,0.86612727,0.13387273,0.03684751755,0.005897328255
That way the user doesn't need to know all the details of the algorithm.,Solution Discussion,False,72,MEMBER,False,False,False,0.56,0.1971830986,0.3985507246,0.6,0.03970291757,0.9602970824,8.078405027e-05,0.0001056298833
My email is 370846270@qq.com,Bug Reproduction,False,28,NONE,False,False,False,0.2105263158,0.05633802817,0.02631578947,0.5,0.003878707231,0.9961212928,8.510605321e-05,0.007997893245
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2327586207,1.0,0.1172860007,0.8827139993,0.1406758373,0.255129089
-- Eric,Social Conversation,False,7,NONE,True,True,False,0.0350877193,0.03225806452,0.07488986784,1.0,0.0,1.0,0.0,0.0008157310994
And what if someone wants to add a 'binary encoding'?,Motivation,False,53,CONTRIBUTOR,True,False,False,0.4166666667,0.15625,0.6433823529,0.875,0.1225709705,0.8774290295,0.0001733007777,7.770058345e-05
@markehammons and @JamesKingdon just wanted to say thanks for helping to continue investigation on this issue.,Social Conversation,False,110,CONTRIBUTOR,False,False,False,0.4848484848,0.2388059701,0.3333333333,0.6536312849,0.1121434343,0.8878565657,0.001260959053,0.002111653916
"Then you are free to switch the placeholder to True during train and False during evaluation, with CODE.",Usage,True,104,NONE,False,False,False,0.6206896552,0.06923076923,0.9571734475,0.9411764706,0.7995481369,0.2004518631,0.3206669123,0.722664447
Let me explain a particular example of where treating numeric values as different from strings has been useful for me.,Social Conversation,False,118,NONE,False,False,False,0.6896551724,0.3125,0.8382352941,0.375,0.262961705,0.737038295,0.002558830732,0.003516053103
I should have come to this on my own!,Social Conversation,False,37,NONE,False,False,False,0.5,0.1343283582,0.8099861304,0.6,0.6149282872,0.3850717128,0.001498933696,0.123123279
@urisimchoni Is it possible that an ASGCT is interrupted and another ASGCT takes place on the same thread?,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.6923076923,0.1730769231,0.875,0.1602209945,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
"I noticed that the TF 1.0  works fine with the newest version of translation tutorial if compiled from the source on branch remotes/origin/r1.0CODEthen build and install TensorFlow, it works fine.",Bug Reproduction,True,196,NONE,False,False,False,0.6470588235,0.0477568741,0.3762376238,0.3333333333,0.0726530785,0.9273469215,0.003490777468,0.02085163436
I just feel it is quite awkward to have a different interface for GBRT and random forest.,Solution Discussion,False,89,MEMBER,False,False,False,0.7391304348,0.2394366197,0.8913043478,0.4285714286,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
If you install a released scikit-learn with pip you will be using OpenBLAS.,Investigation and Exploration,False,75,MEMBER,False,False,False,0.6363636364,0.1443298969,0.7159763314,1.0,0.8504146176,0.1495853824,1.730326181e-05,2.268694029e-05
"These natives were introduced recently since JDK11:
JVM_BeforeHalt
JVM_GetNestHost
JVM_GetNestMembers
JVM_AreNestMates

That means we need to copy the corresponding static library to vm/lib in such case.",Solution Discussion,False,209,CONTRIBUTOR,False,False,False,1.0,0.2711864407,1.0,0.7333333333,0.5538082296,0.4461917704,0.0002629936456,0.0004921870515
"Eventually, I was able to get a compilation log of a failing run.",Task Progress,False,65,MEMBER,False,False,False,0.325,0.1413043478,0.4545454545,0.786163522,0.6067408459,0.3932591541,0.03227550175,0.06952239071
"*         if you are using conda, stick to conda to manage packages that are available through conda.",Solution Discussion,False,101,MEMBER,False,False,False,0.53125,0.175257732,0.4970414201,0.7,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
"So, I'd say it's more of a design thing.",Potential New Issues and Requests,False,40,MEMBER,False,False,False,0.4166666667,0.2631578947,0.8248175182,0.8571428571,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
"JITClient
CODE
- It has to be some other thread that changed the address
- As this thread is in the CODE loop, there's no way for it to do anything else.",Investigation and Exploration,True,156,CONTRIBUTOR,False,False,False,1.0,0.1746031746,0.5,0.4514285714,0.4150421428,0.5849578572,0.001985392445,0.06246846736
"The problem with compilationIlGenFailures is that compilations are not retried, so the methods subject to these failures will run interpreted for the entire duration of the JVM.",Investigation and Exploration,False,177,CONTRIBUTOR,False,False,False,1.0,0.197080292,0.5,0.156133829,0.001564982309,0.9984350177,0.0001569488156,3.35e-05
Additional perf improvement is open as https://github.com/eclipse/openj9/pull/7785,Task Progress,False,82,CONTRIBUTOR,False,False,False,1.0,0.1044776119,1.0,0.9942196532,0.06622669353,0.9337733065,0.0491754647,1.0
But it also seems single-threaded parts of the pipeline take almost the same time as the multi-threaded parts.,Solution Discussion,False,110,CONTRIBUTOR,False,False,False,0.7407407407,0.1307189542,0.9035369775,0.7272727273,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"O my windows VirtualBox VM, I have installed Oracle JDK 8 as the 'main' VM.",Investigation and Exploration,False,75,NONE,True,False,False,0.4166666667,0.1515151515,0.25,0.4456140351,0.1964587946,0.8035412054,0.004535009544,0.001033447215
"As for a ""const"" variable definition,   e.g. const uint32_t categoryCode;
It shows in superdat:
F|categoryCode|categoryCode|U32|const",Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,1.0,0.1525423729,0.25,0.4666666667,0.4195028092,0.5804971908,6.41e-05,0.0004100015372
I think I can get an access to a Windows Server 2012/2016 as well to run my benchmark there.,Task Progress,False,92,NONE,True,False,False,0.9047619048,0.1386861314,1.0,0.4349442379,0.02062277479,0.9793772252,4.56e-06,6.05e-05
"Of course it could also be related to some JCL code that was inlined into that Liberty code, which would bring that question back into the JDK realm.",Investigation and Exploration,False,149,CONTRIBUTOR,False,False,False,0.5283018868,0.35,0.75,0.4411764706,0.4977950347,0.5022049653,0.5109021712,0.08681141034
a taste of things to come...,Social Conversation,False,28,NONE,False,False,False,0.1666666667,0.08219178082,0.6637931034,0.875,0.6969145374,0.3030854626,0.0871107993,0.1143443634
"It's possible for the class of the method we're compiling to get redefined and the compilation wouldn't be interrupted till we explicitly checked, which would not happen between the two queries.",Solution Discussion,False,194,CONTRIBUTOR,False,False,False,0.6739130435,0.5,0.9166666667,0.7540983607,0.9240498584,0.07595014165,0.1265062135,0.2372754111
I have since been able to collect runtime OSR logs for a failing run.,Investigation and Exploration,False,69,MEMBER,False,False,False,0.25,0.152173913,0.125,0.8301886792,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
"Hmm, actually there was a problem with my benchmark code that was triggering an issue that I mistook as the same.",Investigation and Exploration,False,113,NONE,True,False,False,1.0,0.3134328358,0.5,0.6424581006,0.1116487982,0.8883512018,6.55e-05,0.001260959053
But I think there are some problems.,Solution Discussion,False,36,NONE,False,False,False,0.3333333333,0.09589041096,0.375,0.3333333333,0.4349495154,0.5650504846,0.003115708122,0.2584362368
"I already tried it briefly a few days ago and while it seemed to work most of the time, it seemed like it would intermittently CODE hints.",Task Progress,True,138,CONTRIBUTOR,False,False,False,0.3461538462,0.1849315068,0.5,0.7932960894,0.8996448583,0.1003551417,0.0001470921313,0.0005171483439
"ok, nothing is working!!",Observed Bug Behaviour,False,24,NONE,False,False,False,0.2857142857,0.0412371134,0.5621301775,0.3333333333,0.8486180736,0.1513819264,6.418695628e-05,0.0003438203814
"I have many different models that use different batch_norm layers, this wouldn't work right?: CODE",Usage,True,98,NONE,False,False,False,0.46875,0.05769230769,0.3083511777,0.6666666667,0.2659544384,0.7340455616,0.1426765631,0.1141986754
"Not sure if related, does seem to be.",Social Conversation,False,37,NONE,False,False,False,0.5714285714,0.0824742268,0.1597633136,0.1428571429,0.2546091762,0.7453908238,0.1079292843,0.008572782863
"oh -- I have managed to miss your message SCREEN_NAME  and 0.13.0 came out without the fix, my bad.",Task Progress,False,99,MEMBER,True,False,False,0.9090909091,0.2941176471,0.08943089431,0.5,0.2611568478,0.7388431522,0.4013025222,0.0002403381309
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1163793103,1.0,0.02469422692,0.9753057731,0.0276474279,0.03100791321
"It'd be nice to have the multi-threading sorted out for spaCy, but for now multi-processing is okay, especially for the tagger, which is fast and low-memory.",Solution Discussion,False,157,MEMBER,False,False,False,1.0,0.7894736842,0.2627737226,0.8333333333,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"If this is addressed, I suggest we enable the feature by default just after branching for the 0.15 release, to give time to identify any problems before the next release.",Action on Issue,False,170,CONTRIBUTOR,True,False,False,1.0,0.2054794521,1.0,0.8379888268,0.964292179,0.03570782098,0.0003211324394,0.0001268809988
"Are you seeing any output like this when the segfault occurs ...

No, I pasted the output in its entirety.",Investigation and Exploration,False,108,NONE,True,False,False,1.0,0.202020202,0.5,0.6421052632,0.2112303991,0.7887696009,0.007850146101,0.004198632607
"If we are having -XX options, presumably this requires documentation?",Solution Discussion,False,69,CONTRIBUTOR,False,False,False,1.0,0.06849315068,0.5,0.5586592179,0.2525005556,0.7474994444,0.04295972467,0.002218893623
I just tried this again and it seems to work now (reinstalled spaCy and the german model).,Bug Reproduction,False,90,NONE,False,False,False,1.0,0.1789473684,0.1473684211,0.25,0.07664535565,0.9233546443,0.1559472602,0.02247209918
Not sure if printing to stderr will cause a problem in the JVM build.,Investigation and Exploration,False,69,CONTRIBUTOR,True,False,False,0.3181818182,0.2413793103,1.0,0.8440366972,0.9968553268,0.003144673225,0.003909680331,0.004205153524
"Instead, this should be replaced by CODE which shifts a double word, and supports a segment size of long[7].",Solution Discussion,True,108,CONTRIBUTOR,False,False,False,0.6129032258,0.4042553191,0.962962963,0.8307692308,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"On Linux, this is supported natively.",Solution Discussion,False,37,NONE,False,False,False,0.2727272727,0.03921568627,0.6848874598,0.8333333333,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3685344828,1.0,0.4326046495,0.5673953505,0.06064343644,0.03907670755
"Also, I couldn't recreate the hang using a simple CODE micro-test, which was sent CODE 1000 times in 0.5 second intervals.

CODE",Bug Reproduction,True,130,CONTRIBUTOR,False,False,False,1.0,0.32,1.0,0.4011299435,0.03339237467,0.9666076253,0.01898374244,2.23e-05
This doesn't make much sense - the answers should be consistent.,Solution Discussion,False,64,CONTRIBUTOR,False,False,False,0.4,0.1612903226,0.5,0.2786885246,0.4942847726,0.5057152274,0.01863655198,0.01288492485
"The check suggested above is a bit hacky, I agree, though I'm not sure there's any real scenario where throwToGoto would be disabled other than the hooks being active.",Solution Discussion,False,167,CONTRIBUTOR,False,False,False,1.0,0.453125,1.0,0.2269503546,0.1192437677,0.8807562323,0.004712512683,0.1929437336
"Some interesting findings, on the same machine:

JDK 13 built with xlclang++ : fails
JDK 13 built with xlC 13 : fails (the same way)",Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,1.0,0.1436781609,0.5,0.1507352941,0.7292735826,0.2707264174,0.008601580477,0.009169774309
"@sguada Sorry for trouble you, but is it possible to make an example on how to use slim.batch_norm when combined with slim.conv2d/slim.fully_connect in readme.md?",Usage,False,162,CONTRIBUTOR,False,False,False,0.7741935484,0.09230769231,0.5631691649,0.125,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
"I agree with both things you said, you could indeed tokenize all texts in one process before sending them out, but if you need to use Spark (and I mean need not want to because it's cool), chances are that this would still be blocking as all the data would have to go through a single node.",Solution Discussion,False,290,NONE,False,False,False,1.0,0.3725490196,0.4662379421,0.1428571429,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
What resources do you recommend for working with v8 modules?,Solution Discussion,False,60,NONE,False,False,False,0.5263157895,0.1369863014,0.3254310345,0.6666666667,0.3515690911,0.6484309089,0.003344771761,0.1714133005
I cannot reproduce either with python 2.7.12 from conda on OSX 10.11.3 either.,Bug Reproduction,False,78,MEMBER,False,False,False,0.6086956522,0.1971830986,0.1842105263,0.25,0.1683691658,0.8316308342,9.769898141e-05,0.000240649474
Is this what you meant? CODE,Usage,True,28,NONE,False,False,False,0.5,0.08955223881,0.7156726768,1.0,0.5523403498,0.4476596502,0.004343090399,0.001784978089
Was not the idea to enable it without FSD?,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.8181818182,0.140625,0.5,0.5177304965,0.7949455725,0.2050544275,0.01235591973,0.01296902725
"Yes, we'll have to work out all the relevant environment options that need to match.",Solution Discussion,False,84,CONTRIBUTOR,True,False,False,1.0,0.102739726,0.3333333333,0.1284916201,0.01031718851,0.9896828115,0.0001215876069,0.003457386912
The runs which passed are printing CODE but the failures don't print anything.,Testing,True,78,CONTRIBUTOR,True,False,False,0.619047619,0.224137931,0.5,0.871559633,0.9976891454,0.00231085457,0.0006064079553,0.003302748254
"If not too difficult from your end, having the language models pickleable would provide a better out of box experience for Apache Spark users.",Motivation,False,142,NONE,True,True,False,0.6666666667,0.1568627451,0.02572347267,1.0,0.0,1.0,0.0,0.0054583822
"https://ci.eclipse.org/openj9/job/Build_JDK11_ppc64_aix_Nightly/595
CODE",Testing,True,73,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.5901639344,0.7011058068,0.2988941932,0.008864014105,0.03246777048
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5754310345,1.0,0.6457760994,0.3542239006,0.0269339002,0.05654463587
"to destroy the cache, do java -Xshareclasses:destroyAll

I destroyed the cache by invoking:

CODE
but this outputted an empty vlog file.",Investigation and Exploration,True,141,NONE,True,False,False,1.0,0.1824817518,0.5,0.06691449814,0.0005686837121,0.9994313163,0.0002882226271,0.0003971343382
"If we OSR incorrectly here, then we would expect this method to pick up with a bad state immediately after the CODE call, i.e. at the CODE, which is exactly what has been seen in the analysis above

Edit: This also explains why CODE wasn't called",Solution Discussion,True,248,CONTRIBUTOR,False,False,False,1.0,0.5053763441,1.0,0.8030888031,0.6114489539,0.3885510461,0.002338836625,0.001335412299
During production I expect the command lines don't change.,Solution Discussion,False,58,CONTRIBUTOR,True,False,False,0.3461538462,0.06164383562,0.8181818182,0.2402234637,0.01440399469,0.9855960053,0.001770078156,0.04266521959
This issue should be gone once JCL add the missing patch back that detects jar file open.,Solution Discussion,False,89,CONTRIBUTOR,False,False,False,0.4594594595,0.1240875912,0.75,0.8104089219,0.04520980406,0.9547901959,0.0006439456684,0.01947449064
I'm heavily in favor of not going the CODE route.,Solution Discussion,True,49,CONTRIBUTOR,True,False,False,0.7142857143,0.15625,0.3333333333,0.2978723404,0.5284483563,0.4715516437,0.4039585107,0.04023187486
You are adding CODE in the wrong place.,Investigation and Exploration,True,39,CONTRIBUTOR,True,False,False,0.347826087,0.1379310345,0.1428571429,0.7064220183,0.9939440574,0.006055942622,0.006864019174,0.0128898379
or I did something wrong?,Usage,False,25,NONE,False,False,False,0.08196721311,0.07462686567,0.7489597781,1.0,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"Now, when I say ""a little bit tricky""...If this is a requirement, we can do it.",Solution Discussion,False,79,MEMBER,False,False,False,0.5483870968,0.1111111111,0.04501607717,0.5,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"maybe for hobbyists but not for commercial use, where one would need clusters of machines to aim the computing process.",Potential New Issues and Requests,False,119,NONE,False,False,False,0.5555555556,0.2739726027,0.6594827586,0.625,0.6969145374,0.3030854626,0.0871107993,0.1143443634
Hard to scope both functionality and feature set...,Usage,False,51,CONTRIBUTOR,False,False,False,0.32,0.1194029851,0.6823855756,1.0,0.5120684655,0.4879315345,0.0002672122887,0.0005771785436
It is an issue which helper target you call.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.3333333333,0.0703125,0.5,0.2111111111,0.0287329189,0.9712670811,6.94e-05,0.003185934733
This change was reverted.,Task Progress,False,25,CONTRIBUTOR,False,False,False,0.1538461538,0.02298850575,0.6666666667,0.8713235294,0.7909652104,0.2090347896,0.02121193973,4.02e-05
As I understand @AlenBadel managed to make it fail consistently that way.,Social Conversation,False,73,CONTRIBUTOR,False,False,False,0.2608695652,0.2553191489,0.6666666667,0.3576923077,0.3332060485,0.6667939515,0.0003119892607,0.001565670877
"I think for both solutions, we should use the hash of the string as the integer representation for OOV strings.",Solution Discussion,False,111,MEMBER,False,False,False,0.5,0.3225806452,0.4140969163,0.9166666667,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"Sorry for the spam, but the documentation doesn't really explain how to use this BN with convolution (maybe should be provided somewhere?).",Usage,False,139,NONE,False,False,False,1.0,0.08461538462,0.3511777302,0.3333333333,0.2984391787,0.7015608213,0.02076519409,0.004008482248
"It follows the nomenclature of pandas, but it also resembles Spark's pipeline, as SCREEN_NAME  mentioned, and has many of the features he described in the original post.",Solution Discussion,False,169,NONE,False,False,False,1.0,0.4179104478,0.4632454924,1.0,0.4033300428,0.5966699572,0.0004494256208,0.0005059219333
"(Chances are I was looking in the wrong place, given your latest news!)",Social Conversation,False,71,CONTRIBUTOR,False,False,False,0.619047619,0.1940298507,1.0,0.6368715084,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
I afraid that modifying code without understanding of the problem source can make situation worse.,Social Conversation,False,98,CONTRIBUTOR,False,False,False,0.1648351648,0.1648351648,0.7142857143,0.7272727273,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
I'll start work on adding the swig interfaces for the graph running stuff.,Task Progress,False,74,NONE,False,False,False,0.5652173913,0.1780821918,0.2715517241,1.0,0.1870112913,0.8129887087,0.02229862595,0.708526811
We might end up with use-cases where the vectors data is many gigabytes.,Motivation,False,72,MEMBER,False,False,False,0.56,0.3684210526,0.5766423358,0.4,0.004025785766,0.9959742142,7.249967297e-05,2.745084526e-05
"*         Preprocessing and post processing can be serialized with the inference in a single model and then used from another language (no CODE, but able to provide implementation at runtime)",Expected Behaviour,True,191,NONE,False,False,False,0.6818181818,0.447761194,0.4188626907,0.5,0.3861707704,0.6138292296,0.3801876085,0.001120764685
"The signature for CODE suggests four arguments (Object,  long, long, bytes).",Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,0.3870967742,0.2553191489,0.7407407407,0.8076923077,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"One thing is that currently the queue operations are ""baked in"" the computation graph, so it's hard to modify anything on the go.",Solution Discussion,False,129,CONTRIBUTOR,False,False,False,1.0,0.3432835821,0.09986130374,0.6666666667,0.003774842471,0.9962251575,0.004893293226,0.03692313957
The mode seems to be metronomegc plus FSD.,Observed Bug Behaviour,False,42,CONTRIBUTOR,True,True,False,0.170212766,0.04232804233,1.0,0.01714285714,0.0,1.0,0.0,7.04e-06
Meh,Social Conversation,False,3,NONE,False,False,False,0.1,0.007874015748,0.2580645161,1.0,0.3378165574,0.6621834426,0.0002203677479,0.001120325967
"JITServer
CODE",Investigation and Exploration,True,15,CONTRIBUTOR,False,False,False,0.09090909091,0.01587301587,1.0,0.4571428571,0.4150421428,0.5849578572,0.001985392445,0.06246846736
Is there a critical blocker preventing this from making the 0.10.0 release?,Social Conversation,False,75,MEMBER,False,False,False,0.6,0.1016949153,0.6666666667,0.9818181818,0.9091990739,0.09080092608,0.0003067487503,0.000301424055
+1 this to approach.,Social Conversation,False,20,MEMBER,False,False,False,0.3076923077,0.02739726027,0.5,0.3631284916,0.03211184158,0.9678881584,3.75e-05,1.07e-05
"As discussed on the OpenJ9 call today, we're waiting for more information about this problem before releasing Java 17 GA, so it's effectively a blocker at this point.",Task Progress,False,166,CONTRIBUTOR,False,False,False,1.0,0.3010752688,0.5,0.3474903475,0.3836938821,0.6163061179,0.000634134332,0.0045844182
We're hoping for this coming week!,Task Progress,False,34,CONTRIBUTOR,False,False,False,1.0,0.008683068017,0.8745874587,1.0,0.2925815969,0.7074184031,7.23833794e-05,0.1696890683
"the interface would be: push_data, end_of_data (for signaling the end of an epoch), and a dequeue_batch function that feeds the model.",Solution Discussion,False,134,NONE,False,False,False,0.6,0.3134328358,0.2108183079,0.875,0.04335363766,0.9566463623,0.005164577321,0.043809073
I met the same issue.,Bug Reproduction,False,21,NONE,False,False,False,0.1351351351,0.007235890014,0.04290429043,0.1111111111,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
"Perhaps it would be good to attempt themodifications to the OneHotEncoder docstring according to that proposedchange, so we can see if it looks sane.",Solution Discussion,False,149,MEMBER,False,False,False,1.0,0.375,0.1066176471,1.0,0.0007412302777,0.9992587697,0.002483571005,0.0001212291825
"The problem before was that you were not updating the CODE and CODE after each step, when updates_collections is None it forces the updates as part of the computation.",Usage,True,167,MEMBER,False,False,False,0.8529411765,0.1115384615,0.2847965739,0.3333333333,0.2263105393,0.7736894607,3.074160625e-05,0.0884793142
I think this implementation is unclear,Solution Discussion,False,38,NONE,False,False,False,0.2142857143,0.02307692308,0.02355460385,1.0,0.1699515439,0.8300484561,0.07587028422,0.02257012206
"For example we use the presence of ""com.ibm.GetOSThreadID"" extension to determine the JVM is J9.",Solution Discussion,False,96,NONE,True,False,False,0.347826087,0.1538461538,0.2222222222,0.7955801105,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
-         Still not found libcublas.so.9.0,Solution Discussion,False,42,NONE,False,False,False,0.2173913043,0.03937007874,0.504398827,0.6666666667,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
(i.e. just to track the train error),Usage,False,36,NONE,False,False,False,0.35,0.02692307692,0.1905781585,1.0,0.2219186371,0.7780813629,0.02579900529,0.002721595999
In this case the JIT is calling the compiled method.,Investigation and Exploration,False,52,CONTRIBUTOR,True,False,False,0.078125,0.078125,0.1578947368,0.8888888889,0.3076445993,0.6923554007,0.1283873506,1.0
"I did a little looking around, and it looks like https://github.com/tensorflow/tensorflow/commits?author=alextp&since=2017-03-01T06:00:00Z&until=2017-04-01T05:00:00Z are the relevant commits.",Potential New Issues and Requests,False,191,NONE,False,False,False,0.9375,0.223880597,0.3911234397,0.6666666667,0.3274164665,0.6725835335,0.02224733169,0.03860581352
This result is for a single JVM process which runs as part of the test.,Testing,False,71,CONTRIBUTOR,True,False,False,0.5357142857,0.2419354839,0.6,0.7341772152,0.5560450992,0.4439549008,0.2648672615,0.0167902992
ð¯ ð,Social Conversation,False,4,NONE,False,False,False,1.0,0.02739726027,0.3577586207,1.0,0.4153103378,0.5846896622,0.2128875408,0.1129128817
Does the app run without that?,Investigation and Exploration,False,30,MEMBER,False,False,False,0.3,0.06060606061,0.75,0.6245614035,0.2077710739,0.7922289261,0.002877441266,0.004409374785
"Unfortunately, I can't quite follow the conversation.",Social Conversation,False,53,CONTRIBUTOR,False,False,False,0.2692307692,0.04575163399,0.5466237942,0.7777777778,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
I think the problem is that numpy is using OpenBlas.,Investigation and Exploration,False,52,NONE,False,False,False,1.0,0.1030927835,0.6804733728,0.3333333333,0.8498870015,0.1501129985,0.0001657418063,0.0001597224167
So in both case I would calculate CODE (even if it would be a bit more work),Solution Discussion,True,76,CONTRIBUTOR,True,False,False,0.3863636364,0.265625,0.4080882353,0.1428571429,0.07430334202,0.925696658,0.1302436707,0.0003197521392
I've tentatively assigned this to the 0.29.1 release as we need to determine if this is a stop-ship / blocker issue for that release as info so far indicates it's present in the release branch.,Action on Issue,False,193,MEMBER,False,False,False,1.0,0.3870967742,1.0,0.03088803089,0.008064658568,0.9919353414,0.03406420424,0.00204415067
If it's reproducible on an OpenJ9 or internal jenkins machine we can get that.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.6666666667,0.2978723404,0.6666666667,0.1423076923,0.07022468829,0.9297753117,0.04938589637,0.1311728793
"It proceeds to say :

CODE

and then CODE gets set.",Investigation and Exploration,True,55,CONTRIBUTOR,False,False,False,0.4615384615,0.2068965517,0.5,0.2844036697,0.02085230113,0.9791476989,4.43e-05,0.0001834423374
there might be performance implication when the application has many threads.,Investigation and Exploration,False,77,CONTRIBUTOR,False,False,False,1.0,0.1774193548,0.5,0.4599156118,0.3026672975,0.6973327025,0.001607271518,0.007592972344
but I'm having weirdly poor performance with our Spring Boot based application in comparison to OpenJDK and HotSpot.,Task Progress,False,116,NONE,True,True,False,0.4864864865,0.1313868613,0.4,0.01486988848,0.0,1.0,0.0,5.34e-05
*         See #7902 and numerous Stack Overflow questions for examples of processing different datasets in the same program.,Motivation,False,124,CONTRIBUTOR,True,True,False,0.3829787234,0.2686567164,0.01248266297,0.3,0.0,1.0,0.0,0.000766008561
I have seen it take ~2800 kills to trigger the hang.,Bug Reproduction,False,52,NONE,True,False,False,0.7857142857,0.1466666667,0.7142857143,0.1186440678,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
"@gita-omr I do not have permissions to launch a build on https://ci.eclipse.org/openj9/.
To launch an AIX build using xlc 13 modify CODE in [defaults.yml] URL  at L246:
replace 
CODE 
with 
CODE
then launch a [personal build] URL  where VENDOR_REPO is your openj9 fork and VENDOR_BRANCH is the branch containing the above change.",Investigation and Exploration,True,335,CONTRIBUTOR,False,False,False,1.0,0.3505747126,1.0,0.2867647059,0.7587398458,0.2412601542,0.001068346158,0.0004175811221
It was later deleted after the compilation.,Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.1346153846,0.03703703704,0.5,0.3485714286,0.3964911687,0.6035088313,0.005060536466,0.02642430283
"On the other hand, CODE could be used to find the bestCODE.",Solution Discussion,True,59,MEMBER,False,False,False,0.8,0.1690140845,0.4637681159,0.4,0.04249542779,0.9575045722,0.0028917672,1.056298833e-05
"We also want the string-to-int table to be consistent, even for rare strings.",Solution Discussion,False,77,MEMBER,False,False,False,0.375,0.2419354839,0.3303964758,0.3888888889,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
CODE in case of integer data should be set explicitly by the user to choose either full ignoring or full erroring instead of current mix (and otherwise deprecation warning is raised).,Solution Discussion,True,183,CONTRIBUTOR,True,False,False,0.775,0.484375,0.3198529412,1.0,0.0124193059,0.9875806941,0.003559988512,0.00316172217
I like the tf record and queue runner thing now that I'm used to it; the issue is the tight binding to the graph....,Motivation,False,116,NONE,False,False,False,0.625,0.3731343284,0.4119278779,1.0,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
"This is surprising, so we'll have to work out what the problem is and make sure it works!",Social Conversation,False,89,MEMBER,False,False,False,1.0,0.1855670103,0.02366863905,0.1111111111,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
As I stated before non of memory accessible from j9class/j9classloader is released before hooks are triggered.,Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.1868131868,0.5,0.8671328671,0.8687461445,0.1312538555,0.001098431308,0.001217055727
"|  
0.26.0 | 5849.67 | 91.2%
  |   |",Testing,False,38,NONE,True,False,False,0.6,0.075,0.5,0.07352941176,0.04138087714,0.9586191229,0.03316104244,0.3318641488
i.e. CODE,Solution Discussion,True,9,CONTRIBUTOR,False,False,False,0.125,0.02150537634,1.0,0.6988416988,0.558010435,0.441989565,0.01376817541,0.001749464716
-tune the following tests on jdk11+.,Testing,False,36,CONTRIBUTOR,True,False,False,0.2857142857,0.09677419355,0.4,0.6202531646,0.4809708382,0.5190291618,0.001055956968,0.005901107588
There can be different hints stored for different command lines.,Solution Discussion,False,64,CONTRIBUTOR,True,False,False,0.3846153846,0.06849315068,0.5454545455,0.2234636872,0.01440399469,0.9855960053,0.001770078156,0.04266521959
Maybe balanced GC too ?,Solution Discussion,False,23,CONTRIBUTOR,False,False,False,0.09523809524,0.02739726027,0.5,0.05586592179,0.00941579025,0.9905842098,0.0003297943533,0.00113422951
@mpirvu we might need your help to figure out if the inliner changes are affecting AOT or not.,Contribution and Commitment,False,94,CONTRIBUTOR,False,False,False,0.6428571429,0.2686567164,0.6666666667,0.323699422,0.005067697264,0.9949323027,4.84e-06,5.36e-06
The runtime OSR tracing log were supposed to have been output to stdout.,Investigation and Exploration,False,72,MEMBER,False,False,False,0.325,0.1413043478,0.8181818182,0.8113207547,0.6067408459,0.3932591541,0.03227550175,0.06952239071
Gensim recommends the CODE library.,Workarounds,True,35,MEMBER,False,False,False,0.2272727273,0.1315789474,0.6934306569,0.8888888889,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
Thank you SCREEN_NAME  !,Social Conversation,False,24,NONE,False,False,False,0.4,0.01538461538,0.6766595289,0.5,0.5715498119,0.4284501881,0.003906111685,0.005970364889
I don't recall why the call is surrounded by the NOPs.,Social Conversation,False,54,CONTRIBUTOR,False,False,False,0.4782608696,0.0859375,1.0,0.3777777778,0.03699345185,0.9630065482,4.77e-05,6.66e-06
https://github.com/explosion/spaCy/commits/master/spacy/strings.pyx,Task Progress,False,67,NONE,True,False,False,0.04545454545,0.01612903226,0.8193832599,0.6,0.6128462627,0.3871537373,0.09855593002,0.1714850105
may be it could just be relaxed a little? ;),Investigation and Exploration,False,44,MEMBER,True,False,False,0.2631578947,0.1470588235,0.2032520325,1.0,0.2809523721,0.7190476279,0.0006692173817,5.939390591e-05
"@vincentvanhoucke You wrote in another post in this thread: > The slim batch_norm wrapper normalizes over the last dimension of your input tensor. So if it's a 2D input tensor coming from a fully connected layer, it normalizes over batch, and thus performs per-activation normalization. If it's a 4D tensor coming from a convolution, it will normalize over the three first dimensions (batch, width, depth), and thus perform per-feature normalization. SCREEN_NAME  maybe forth being a bit more descriptive about this.",Solution Discussion,False,516,NONE,False,False,False,1.0,0.3153846154,0.965738758,0.2,0.9175683472,0.08243165278,0.02471483102,0.01105297712
"This also seems like it would be important for checkpointing iterators, which might be useful for fault tolerance.",Solution Discussion,False,114,CONTRIBUTOR,True,False,False,0.3829787234,0.2686567164,0.5353675451,0.4642857143,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"Not sure which is preferable, but doing it the global entry way probably makes the code easier to understand for observers.",Solution Discussion,False,123,MEMBER,False,False,False,0.488372093,0.1640625,0.8,0.5833333333,0.040055736,0.959944264,0.001397241848,3.37e-05
Five core files with about 10-15s between them.,Task Progress,False,47,NONE,True,False,False,0.6,0.12,0.5,0.5423728814,0.07094192738,0.9290580726,0.002460766356,0.02133685301
"I'm not sure why it's not compiling, but excluding that method stops the hang from happening...

here's the jit log where I found compareAndSwapObject being jitted: 
[unsafe.20171013.211151.13867.log] URL ",Investigation and Exploration,False,208,NONE,True,False,False,1.0,0.447761194,1.0,0.2625698324,0.003039155028,0.996960845,0.0004990398439,0.0003309694301
Is this a new test?,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.15625,0.05376344086,0.25,0.2857142857,0.3809305973,0.6190694027,0.003566073067,0.004767198096
@kratzert You are right.,Social Conversation,False,24,CONTRIBUTOR,False,False,False,0.1290322581,0.05970149254,0.7753120666,0.3333333333,0.6089674168,0.3910325832,0.0008759473312,0.000271284095
"There are SED-related XCOFF header flags:  system, request, and exempt.",Solution Discussion,False,71,CONTRIBUTOR,False,False,False,0.5217391304,0.06896551724,0.5555555556,0.6580882353,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
"The output above was my own debugging messages, I can provide you with my repo later if you need it.",Social Conversation,False,100,CONTRIBUTOR,False,False,False,0.4166666667,0.1058201058,0.1764705882,0.5428571429,0.447477842,0.552522158,0.001615795728,8.48e-05
+1 :+1:,Social Conversation,False,7,NONE,False,False,False,1.0,0.02739726027,0.2306034483,1.0,0.1094678663,0.8905321337,0.0331659804,0.1406758373
"Because jdk10 builds fine

I don't think there were any new APIs added between Java 8 and Java 10, only parameter changes to existing APIs.",Solution Discussion,False,141,CONTRIBUTOR,True,False,False,1.0,0.2203389831,1.0,0.7393939394,0.553966752,0.446033248,0.0004921870515,0.001135549147
Those tests pass with 32 bit python and numpy 1.13.1 on our wheel building travis:,Bug Reproduction,False,82,MEMBER,False,False,False,1.0,0.2205882353,0.02845528455,0.5,0.01562830973,0.9843716903,0.01958514047,0.0006046437747
Works on the JDK14 equivalent.,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.25,0.1063829787,0.6666666667,0.2576923077,0.1152004789,0.8847995211,0.005424033477,0.1326211964
"Core1

Native stack
CODE

Java Stack
CODE",Investigation and Exploration,True,47,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.09392265193,0.008173249584,0.9918267504,0.0002905675384,3.16e-05
If you have cuda-9.0 installed on you system and tensorflow is complaining about CODE again as others have said expose that during runtime through your  CODE environment variable in your CODE make it point to CODE.,Solution Discussion,True,214,NONE,True,False,False,1.0,0.2913385827,0.7008797654,0.5,0.5094864043,0.4905135957,0.02165076149,0.03664686068
https://github.com/eclipse/openj9/issues/9291 seems very similar.,Investigation and Exploration,False,65,MEMBER,False,False,False,0.5714285714,0.06451612903,0.5,0.08743169399,0.103219821,0.896780179,0.003777918314,0.007925534914
Using such an api one could implement not only early stopping but also custom reporting (e.g. interactive plotting the training vs. testing score) and snapshoting (all X iterations dump the estimator object and copy it to some location; this is great if you are running on EC2 spot instances or some other unreliable hardware ;-),Solution Discussion,False,329,MEMBER,False,False,False,0.7746478873,0.7746478873,0.2101449275,0.75,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
"CODE

The address in r12 before these two instructions is not obvious to me, but it is a valid address.",Investigation and Exploration,True,105,CONTRIBUTOR,True,False,False,0.3888888889,0.1640625,0.4285714286,0.05,0.006753802741,0.9932461973,0.009802165843,0.02838288421
"Anyway, the symptoms looks similar.",Investigation and Exploration,False,35,NONE,False,False,False,0.1428571429,0.05154639175,0.3136094675,0.8,0.8123334347,0.1876665653,1.255529445e-05,3.933462502e-05
Is it possible table just not walkable some short periods of time (like list under modification for example).,Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.7826086957,0.1978021978,0.6666666667,0.8881118881,0.8690602234,0.1309397766,0.0003289131615,0.03308234769
^^,Social Conversation,False,2,NONE,False,False,False,0.07692307692,0.01369863014,0.1056034483,1.0,0.001699296561,0.9983007034,0.001375709738,0.0006469111266
"If I comment out the entire ASGCT function, the VM still crashes, so I'm a little lost.",Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,1.0,0.1634615385,1.0,0.6685082873,0.2769726302,0.7230273698,0.215915693,0.0001452837692
Is there one more argument to the function?,Solution Discussion,False,43,NONE,False,False,False,0.7272727273,0.01157742402,0.8184818482,1.0,0.2900238703,0.7099761297,4.604057575e-05,0.0009023003557
ð Guys please before commenting +1 or +whatever - Please take a look at SCREEN_NAME 1sul1 's comment,Social Conversation,False,100,NONE,False,False,False,1.0,0.2191780822,0.6875,0.6666666667,0.7051734119,0.2948265881,6.462471741e-05,2.810732572e-05
"Disabling scorching or even hot compilations, does not make the problem go away.",Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.8125,0.1625,0.5,0.6911764706,0.8791843797,0.1208156203,0.006483743521,0.05954547102
"The use case that affects me the most is [do n times: train for k iter/epoch, validate model, repeat].",Motivation,False,102,NONE,False,False,False,0.3278688525,0.2985074627,0.07766990291,0.4285714286,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"The artifact I found only has 1 javacore, although there are 5 core files from different processes.",Investigation and Exploration,False,99,CONTRIBUTOR,True,False,False,0.5151515152,0.2741935484,0.6666666667,0.6540084388,0.4821513057,0.5178486943,0.002228594265,0.0007234180335
For me it is mainly a question of scalability in adding more features to a single class.,Motivation,False,88,CONTRIBUTOR,True,False,False,0.4722222222,0.265625,0.5919117647,0.4285714286,0.122514657,0.877485343,0.0002168293768,7.444610875e-05
+1 to what Joel said,Social Conversation,False,20,MEMBER,False,False,False,1.0,0.078125,0.1102941176,0.3333333333,0.0007687859941,0.999231214,0.0001212291825,0.001496651552
I kluged up an implementation for gradient boosting that appears to work through my limited testing.,Expected Behaviour,False,100,CONTRIBUTOR,True,True,False,0.5,0.2253521127,0.01086956522,0.4285714286,0.0,1.0,0.0,0.02323685476
"@cathyzhyi if you comment in this issue, I can assign it to you

@DanHeidinga  please assign to me thanks!",Contribution and Commitment,False,108,CONTRIBUTOR,False,False,False,1.0,0.1578947368,1.0,0.9236641221,0.8725182129,0.1274817871,0.001833735834,0.1686297096
"If does pass, it will  show up in a nightly build at https://adoptopenjdk.net/. I can let you know when, but of course, the safest is to wait for the next release.",Social Conversation,False,163,CONTRIBUTOR,False,False,False,1.0,0.4266666667,1.0,0.9774011299,0.3769494772,0.6230505228,0.0001899293257,0.001141107642
"Also, if I were to downgrade to cuda 9.0, would I have to first remove cuda 9.2 or just install 9.0 straight away?",Solution Discussion,False,114,NONE,False,False,False,1.0,0.1811023622,0.9032258065,0.8571428571,0.9258004594,0.07419954058,0.1457126271,0.001998099513
"A much better improvement will be gained if you can manage to reuse the same CODE object across more text, i.e. if you can increase the size of your batches of documents.",Solution Discussion,True,170,MEMBER,False,False,False,0.8,0.2091503268,0.7781350482,0.3684210526,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
How much perf would it cost to flush the compilation queue and any active compilations on class unload (marking anything queued for immediate compilation on the next invocation)?,Investigation and Exploration,False,178,CONTRIBUTOR,False,False,False,1.0,0.3076923077,1.0,0.6573426573,0.8575208872,0.1424791128,0.0007841536263,0.009320490058
Would I have conflicting installations?,Solution Discussion,False,39,NONE,False,False,False,0.2173913043,0.03937007874,0.9061583578,1.0,0.9258004594,0.07419954058,0.1457126271,0.001998099513
Does cbException use GC maps as well?,Solution Discussion,False,37,CONTRIBUTOR,False,False,False,0.5384615385,0.109375,1.0,0.829787234,0.9556814013,0.04431859867,0.01198084219,0.01558254832
@nmduc SCREEN_NAME 44  I wrote some code to track the moving mean and moving variance computed in CODE during training and testing.,Usage,True,131,CONTRIBUTOR,False,False,False,0.575,0.08846153846,0.426124197,0.1666666667,0.3796199321,0.6203800679,0.003216099592,0.003984639748
I think you can close this now.,Action on Issue,False,31,NONE,False,False,False,0.3888888889,0.05263157895,0.5,0.6921119593,0.7360645869,0.2639354131,0.2346732222,0.004337443365
"@kdvolder , What version of Eclipse IDE are you using?",Investigation and Exploration,False,54,CONTRIBUTOR,False,False,False,1.0,0.09090909091,1.0,0.09824561404,0.1044659031,0.8955340969,0.0136252923,0.02087158101
Suppose there is such a load ...,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.1333333333,0.046875,0.8,0.15,0.02828196509,0.9717180349,0.0001303405259,0.0002282569671
The best example is to compare xlclang++ build against xlC build (on same code base).,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.4411764706,0.08620689655,0.8888888889,0.5919117647,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
That way at least they can check if MKL lib is fully extracted in their platform and then fix it if it's not?,Solution Discussion,False,109,NONE,False,False,False,0.3432835821,0.323943662,0.6988304094,1.0,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
Could you rerun for these?,Testing,False,26,CONTRIBUTOR,False,False,False,0.2,0.08064516129,0.7142857143,0.4978902954,0.4402101884,0.5597898116,0.00359667111,0.001910640371
"I thought the current OneHotEncoder would have categories [0, 1, 2, 3, 4, 5] (while current CategoricalEncoder would have categories [2, 3, 5]).",Investigation and Exploration,False,144,CONTRIBUTOR,True,False,False,0.5227272727,0.359375,0.25,0.2857142857,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"I understand these functions were initially thought for simple use cases, but it would be nice to have more control of the pipeline without the burden of managing _everything_ (e.g. using CODE but being forced to feed queues and manage threads kind of manually).",Motivation,True,262,CONTRIBUTOR,False,False,False,0.9565217391,0.6567164179,0.1927877947,0.4545454545,0.04271149234,0.9572885077,0.001149776305,0.005164577321
"2.         if you install the CUDA by command such as 'dpkg -i cuda-repo-ubuntu1604_9.0.176-1_amd64.deb' or others, it may add the cuda lib path to the /etc/ld.so.conf  automatically .",Solution Discussion,False,184,NONE,False,False,False,0.8888888889,0.2519685039,0.8299120235,0.8888888889,0.7354114739,0.2645885261,0.4152157275,0.1560011388
"|  
-- | -- | --
-XX:-PortableSharedCache | 7854.33 | 101.6%

I'll look into what acmeair monolithic looks like later today.",Testing,False,128,NONE,True,False,False,0.7037037037,0.2375,1.0,0.1421568627,0.09701181711,0.9029881829,0.01961071442,0.02610750661
It appears the C stack is being randomly corrupted.,Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,1.0,0.08653846154,1.0,0.6740331492,0.2770643871,0.7229356129,0.0001452837692,0.01909072661
"the call to CODE:
https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/compiler/env/J9SharedCache.cpp#L1135-L1150",Solution Discussion,True,149,CONTRIBUTOR,False,False,False,0.2,0.09677419355,0.4444444444,0.7978142077,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"I'm guessing one of the asserts is failing, but the trace engine is already shut down so there are no messages.",Investigation and Exploration,False,111,CONTRIBUTOR,True,False,False,1.0,0.3620689655,0.8,0.9357798165,0.9986823435,0.001317656456,0.002428514487,0.005742138251
"The global reference is always created on JITClient, and JITServer uses that reference remotely as well.",Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.3333333333,0.08465608466,0.3529411765,0.56,0.447477842,0.552522158,0.001615795728,8.48e-05
"In my experience, it is best defined by CODE and CODE.",Solution Discussion,True,54,NONE,False,False,False,0.3666666667,0.1641791045,0.1664355062,0.7142857143,0.04064994448,0.9593500555,0.2125437083,0.01543061897
The change  URL  has been merged.,Action on Issue,False,33,CONTRIBUTOR,False,False,False,0.25,0.1066666667,0.3333333333,0.9661016949,0.3769494772,0.6230505228,0.0001899293257,0.001141107642
and because the session manager init doesn't initialise them properly: sess.run(tf.variables_initializer([x for x in tf.global_variables() if 'Adam' in x.name])) (Using tf.train.AdamOptimizer),Usage,False,192,NONE,False,False,False,0.6774193548,0.08076923077,0.5588865096,1.0,0.4928558613,0.5071441387,0.00210016914,0.003858020855
"(as receiverHandle was dereferenced at the client and didn't crash client I'd assume it's valid.)
CODE

CODE

CODE",Investigation and Exploration,True,119,CONTRIBUTOR,False,False,False,1.0,0.1164021164,1.0,0.1257142857,0.2561152379,0.7438847621,0.2308646783,0.03555330036
Thanks in advance for any hints.,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.24,0.03921568627,0.3376205788,1.0,0.01820665371,0.9817933463,0.01064935216,0.001404504327
"I wonder if there is some prereq that needs to be installed, to use timer_create you need to link with CODE.",Solution Discussion,True,108,CONTRIBUTOR,False,False,False,1.0,0.2019230769,1.0,0.3591160221,0.1323326733,0.8676673267,2.2e-05,3.48e-05
"JDK8 runs don't seem affected, only JDK11+",Investigation and Exploration,False,42,CONTRIBUTOR,True,False,False,1.0,0.1044776119,1.0,0.2601156069,0.005029880443,0.9949701196,3.68e-06,4.08e-06
"If we can reproduce, only then can we investigate and try to understand what is happening.",Social Conversation,False,90,MEMBER,False,False,False,0.3902439024,0.1649484536,0.7041420118,0.6,0.850408121,0.149591879,7.362329309e-05,1.730326181e-05
"By no means I want to defend TFs input queues, but as I read the post of SCREEN_NAME  he states that the additional time comes (only) from passing memory between native Python and TF ( + GPU).",Solution Discussion,False,192,NONE,False,False,False,1.0,0.5373134328,0.3203883495,0.4,0.2825713456,0.7174286544,0.000434665323,0.0005756516163
For spaCy to work out of the box with [Apache Spark] URL  the language modles need to be pickled so that they can be initialised on the master node and then sent to the workers.,Motivation,False,177,NONE,True,True,False,1.0,0.2352941176,0.003215434084,0.125,0.0,1.0,0.0,0.0054583822
"@EdeMeijer That could be -- it's really hard to tell, as the documentation is quite sparse, with no examples.",Usage,False,109,CONTRIBUTOR,False,False,False,0.76,0.2835820896,0.6768377254,0.2,0.5120684655,0.4879315345,0.0002672122887,0.0005771785436
I haven't seen the ClassFormatError using the 0.18.0 JDK release.,Task Progress,False,65,NONE,False,False,False,0.5555555556,0.07518796992,0.25,0.68956743,0.7360645869,0.2639354131,0.2346732222,0.004337443365
"At the moment, I don't see how estimators fit (nicely) with the dataframes and transforms.",Solution Discussion,False,90,NONE,False,False,False,0.5,0.223880597,0.452149792,0.5555555556,0.402192445,0.597807555,0.001827732055,0.008699923145
I don't see a reason why it wouldn't fail on plinux given they share the same code.,Investigation and Exploration,False,83,CONTRIBUTOR,True,False,False,1.0,0.265625,0.5,0.3687943262,0.7581593427,0.2418406573,0.0006996638728,0.0002861168415
"Opened #11431 to ""gracefully avoid this problem"" in 0.24.",Action on Issue,False,57,CONTRIBUTOR,False,False,False,1.0,0.1451612903,1.0,0.5519125683,0.6871578731,0.3128421269,0.01660963043,0.01636607982
@Pazitos10 can you reproduce with synthetic data and/or smaller data?,Bug Reproduction,False,69,MEMBER,False,False,False,0.625,0.1030927835,0.9644970414,0.5,0.9999756767,2.432328242e-05,1.092628473e-06,1.015151181e-05
"Hence, the proposed solution of cleaning up the table after each class unloading hook is still valid.",Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.4594594595,0.1868131868,0.8,0.4965034965,0.8536703555,0.1463296445,0.2634355634,0.0006108387286
Is there a way I can define another score method without losing the parallel execution possibility?,Expected Behaviour,False,99,NONE,True,True,False,0.6956521739,0.1649484536,0.01775147929,0.8571428571,0.0,1.0,0.0,5.796890697e-05
"Test passed with latest JDK17 Nightly build
**java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java**
20/20 passed x86-64_linux CODE
20/20 passed x86-64_windows CODE",Testing,True,189,CONTRIBUTOR,False,False,False,1.0,0.3152173913,0.5,0.06289308176,0.2684988468,0.7315011532,0.2801321228,0.116554805
should do the trick.,Usage,False,20,NONE,False,False,False,0.3076923077,0.05970149254,0.7295423024,1.0,0.5768840719,0.4231159281,0.003144961394,0.0003822408168
Many thanks!,Social Conversation,False,12,NONE,False,False,False,0.25,0.01503759398,1.0,0.9669211196,0.9504186061,0.04958139394,0.1687874943,0.001789180059
How low a repro rate do we think we would need to shift this one to nonblocker status @DanHeidinga @pshipton ?,Solution Discussion,False,110,CONTRIBUTOR,False,False,False,1.0,0.2150537634,1.0,0.5598455598,0.5492852021,0.4507147979,0.01613685365,0.00255891854
"Given that we _can_ reproduce this 100%, we can test and/or retrieve information that might help to diagnose the issue.",Investigation and Exploration,False,119,NONE,True,True,False,0.6666666667,0.2666666667,1.0,0.05649717514,0.0,1.0,0.0,4.66e-05
Per the CUDNN guide at: http://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html You need to copy the unpacked files (from the directory you ran CODE or similar) into CODE subdirectories: CODECODECODECODE,Solution Discussion,True,212,NONE,False,False,False,1.0,0.1968503937,0.3460410557,1.0,0.3568767284,0.6431232716,0.002261357628,0.02559963321
@andrewcraik FYI.,Contribution and Commitment,False,17,CONTRIBUTOR,False,False,False,0.06896551724,0.01503759398,0.375,0.5979643766,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
"Please note that all the questions above are from GC prospective, eg. seen by GC and not by some other thread.",Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.6328671329,0.857060689,0.142939311,0.0001609902828,0.001731608401
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.4762931034,1.0,0.5695769853,0.4304230147,0.07703399105,0.01001196221
"Step 3. getReferenceFieldAt(walk(B,1), A.offset) Step 9. returns 3
Step 4. vector.push_back(B.offset) 
Step 5. getReferenceFieldAt(walk(C,1), B.offset) Step 8. returns 2
Step 6. walk(C,1)",Solution Discussion,False,190,CONTRIBUTOR,False,False,False,0.3424657534,0.1322751323,0.8,0.9828571429,0.5018185814,0.4981814186,0.001953523523,1.0
"However, since we're still at 30s, I'm wondering if the CODE and CODE compilations in addition to the load failures all play into this.",Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,0.7272727273,0.1751824818,0.6666666667,0.2713754647,0.002547780177,0.9974522198,0.000373115786,0.006822511181
@henningpeters I managed to compile and run pipe with OpenMP support.,Solution Discussion,False,69,CONTRIBUTOR,False,False,False,0.4074074074,0.07189542484,0.8810289389,0.09090909091,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"What do you think does the scenario / code look like, where a user wants CODE?",Motivation,True,78,MEMBER,False,False,False,0.8823529412,0.2112676056,0.04347826087,0.5555555556,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
"Looking at the object:
CODE
CODE should be J9Class in which case we should find the eye catcher 99669966:
CODE
There is no eye catcher which means that our object was bogus.",Investigation and Exploration,True,177,CONTRIBUTOR,True,False,False,1.0,0.1904761905,1.0,0.08571428571,0.134025329,0.865974671,0.0001924551776,0.0001651389588
"The object heap has only expanded to 155MB, so I'm not sure if a -Xmx512MB will help, but seems we should try that before changing the number of processes.
CODE",Solution Discussion,True,161,CONTRIBUTOR,True,False,False,1.0,0.5322580645,1.0,0.6582278481,0.4821513057,0.5178486943,0.002228594265,0.0007234180335
@dmitripivkine please see above.,Contribution and Commitment,False,32,CONTRIBUTOR,False,False,False,1.0,0.02298850575,1.0,0.2169117647,0.7473690543,0.2526309457,0.0004931827962,0.0006037502447
"[openj9-launch-conf-vmargs] URL 

Our launcher also adds a few arguments of its own, so this ends up being the 'full' commandline on launch (according to Eclipse debug properties).

CODE",Investigation and Exploration,True,190,NONE,True,False,False,1.0,0.3333333333,0.5714285714,0.6,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
"It's more than just the JIT which is linking to libc++ now, see https://github.com/eclipse/openj9/pull/7499#issuecomment-543867064, plus I don't think the JIT is statically linking properly yet, see https://github.com/eclipse/openj9/pull/7499#issuecomment-543864380",Solution Discussion,False,265,CONTRIBUTOR,False,False,False,1.0,0.1551724138,1.0,0.9926470588,0.7987405152,0.2012594848,0.0006807694502,0.0242227764
Just paste it into a Jupyter cell and run it.,Investigation and Exploration,False,45,NONE,False,False,False,0.5882352941,0.1030927835,0.7692307692,0.2857142857,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
But I think it's worth pursuing.,Social Conversation,False,32,NONE,False,False,False,0.3,0.04724409449,0.6832844575,0.8333333333,0.5077260474,0.4922739526,0.01267336397,0.02165076149
I'll cautiously say I'm back ;),Social Conversation,False,31,MEMBER,False,False,False,1.0,0.09375,0.9742647059,1.0,0.9299505024,0.07004949765,0.07049110837,0.3072525155
@priidukull thanks for that.,Social Conversation,False,28,MEMBER,False,False,False,0.2,0.05882352941,0.7276422764,0.25,0.590815313,0.409184687,0.001873670543,0.0005473217492
That would make it a lot faster if those single threads also support multithreaded.,Solution Discussion,False,83,CONTRIBUTOR,False,False,False,0.5185185185,0.09150326797,0.9067524116,0.8181818182,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
The threads are daemons so shuts down when the main process does.,Solution Discussion,False,65,NONE,False,False,False,0.75,0.1791044776,0.9056865465,0.7,0.9153731312,0.08462686876,0.125435556,0.2620248075
I was confused after all these comments on how to properly use Batch Norm: So here is what I have.,Social Conversation,False,98,NONE,False,False,False,1.0,0.07692307692,0.903640257,0.1,0.7489109604,0.2510890396,0.04599776246,0.3206669123
with external.py CODEResults running on 8 cores,Solution Discussion,True,47,NONE,False,False,False,0.175,0.07216494845,0.8372781065,0.75,0.8589078439,0.1410921561,2.097846668e-05,0.1984119539
TF 1.6 Cuda 9.1 ??,Solution Discussion,False,18,NONE,False,False,False,0.1081081081,0.03149606299,0.4076246334,1.0,0.3802587264,0.6197412736,0.006558528713,0.00183836987
"In Java 11+, we can get the jar file open information from the class loader rather than using the JCL zip_hook.",Solution Discussion,False,111,CONTRIBUTOR,False,False,False,0.6363636364,0.1532846715,0.4,0.9776951673,0.1882122667,0.8117877333,0.002992794434,1.0
Another observation.,Social Conversation,False,20,NONE,True,False,False,0.09523809524,0.01503759398,0.1666666667,0.06361323155,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
it passes just fine when I have /dev/shm mounted and joblib does not complaint.,Potential New Issues and Requests,False,79,MEMBER,True,False,False,0.4166666667,0.2205882353,0.174796748,0.6,0.2807260694,0.7192739306,0.007023674687,0.0006692173817
I looked at the core files.,Investigation and Exploration,False,27,CONTRIBUTOR,False,False,False,0.1333333333,0.08,0.1,0.5593220339,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
Also with Java 11 support installed from Eclipse marketplace.,Investigation and Exploration,False,61,NONE,True,False,False,0.5,0.09090909091,0.5,0.1052631579,0.1103553327,0.8896446673,0.02087158101,0.006411425468
"Between the following builds, SharedClasses.SCM23.MultiCL_0 on pccle went from 13min to 55min.",Investigation and Exploration,False,94,CONTRIBUTOR,True,False,False,0.52,0.1940298507,0.3333333333,0.2312138728,0.005020000581,0.9949799994,4.91e-06,6.9e-06
"I use tf.contrib.layers.batch_norm(input, scale=False)  in Tensorflow, and now I am convering the batchnorm of Tensorflow to Caffe.",Usage,False,131,NONE,False,False,False,1.0,0.07307692308,0.8308351178,0.5,0.7056210173,0.2943789827,0.001322497813,0.09017334918
We'll have to put the test libraries into images/test I expect.,Solution Discussion,False,63,CONTRIBUTOR,True,False,False,1.0,0.1016949153,0.5,0.9393939394,0.6455976468,0.3544023532,0.0003611532457,9.63e-05
No sign of a core.,Investigation and Exploration,False,18,NONE,True,False,False,0.15625,0.03759398496,0.5,0.1501272265,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
"First use of cell was with scope 'rnn/multi_rnn_cell/cell_0/basic_lstm_cell', this attempt is with scope 'rnn/multi_rnn_cell/cell_1/basic_lstm_cell'.",Observed Bug Behaviour,False,149,NONE,True,True,False,0.2278481013,0.02604920405,0.01650165017,0.4545454545,0.0,1.0,0.0,0.0005278053632
but I think @hzongaro (with some help from me when needed) should continue treating it as a priority to see if there is anything simple and safe we can do to reign in any true excesses to reduce the changes of any field impact.,Contribution and Commitment,False,227,CONTRIBUTOR,False,False,False,1.0,0.6567164179,1.0,0.5780346821,0.01124208961,0.9887579104,5.92e-05,5.28e-05
I'll tag jit since indications are looking more like a jit problem.,Action on Issue,False,67,CONTRIBUTOR,False,False,False,1.0,0.1304347826,1.0,0.213836478,0.3435330448,0.6564669552,0.001139510487,7.64e-05
CODE,Bug Reproduction,True,4,NONE,False,False,False,0.1666666667,0.01408450704,0.1403508772,0.5,0.1563439049,0.8436560951,0.001746127121,0.05890874943
"By the way in testing when I use is_training=False, I get zero acc.",Solution Discussion,False,67,NONE,False,False,False,0.5,0.05384615385,0.01927194861,0.6666666667,0.1699515439,0.8300484561,0.07587028422,0.02257012206
"This is not really related to GridSearchCV, but some interesting interaction between windows multiprocessing, IPython notebook and joblib.",Investigation and Exploration,False,138,MEMBER,False,False,False,1.0,0.1855670103,0.2485207101,1.0,0.2588472304,0.7411527696,0.001083708651,1.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5,1.0,0.5953294412,0.4046705588,0.005853627228,0.009641476675
I want TF to use it. How to?,Solution Discussion,False,28,NONE,False,False,False,1.0,0.06299212598,0.2521994135,1.0,0.33779864,0.66220136,0.03156952861,0.0002203677479
"On Windows, the maximum compile-time method was sometimes one of the CODE methods, sometimes CODE and sometimes CODE.",Investigation and Exploration,True,117,MEMBER,False,False,False,0.4222222222,0.2835820896,0.7142857143,0.5202312139,0.009579724698,0.9904202753,0.003668136449,0.001720565783
"If the -Xdump command triggers, there are messages printed to stderr like the following.
CODE",Investigation and Exploration,True,94,CONTRIBUTOR,False,False,False,1.0,0.1203007519,1.0,0.1781170483,0.01412833163,0.9858716684,0.002938228528,0.0009773656664
"3)         Reddit talks about food a lot, and those regions of the vector space seem very well defined: CODE",Potential New Issues and Requests,True,108,MEMBER,False,False,False,0.8695652174,0.5263157895,0.4671532847,0.7142857143,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"@fjeremic,   here's the latest results with CODE:
CODE
It looks like the exception still occurred even when CODE was reduced to 1.",Bug Reproduction,True,132,CONTRIBUTOR,False,False,False,1.0,0.1879699248,1.0,0.5648854962,0.5801962817,0.4198037183,0.04854126846,0.02434789149
"Also, just for the sake of sanity, can you make sure you can reproduce the problem in a fresh conda environment.",Investigation and Exploration,False,112,MEMBER,False,False,False,0.512195122,0.2957746479,0.4269005848,0.6,0.4154346398,0.5845653602,0.001838152366,0.0002081292748
"Right now you can use CODE and CODE to select a sub-dataset from the files, but it is not very efficient, because they materialize the skipped-over inputs before discarding them.",Workarounds,True,178,CONTRIBUTOR,True,False,False,0.6808510638,0.4776119403,0.53259362,0.3928571429,0.4592244679,0.5407755321,0.003916059713,0.008479027653
The generated code treating it like an int value is wrong.,Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.6470588235,0.2340425532,1.0,0.6384615385,0.6341947438,0.3658052562,0.2686456518,0.0113804523
I could not find reasons which would prevent CODE from being invoked.,Investigation and Exploration,True,69,CONTRIBUTOR,False,False,False,0.6315789474,0.1290322581,0.8333333333,0.5868725869,0.55101082,0.44898918,0.003338530748,0.005248394148
"Implementation

There are several different types (Written in C/C++) of helpers used in the JIT, the only category we're interested in are the CHelpers used in the PPC Codgen, which are listed below.",Solution Discussion,False,201,CONTRIBUTOR,True,False,False,0.2734375,0.2734375,0.5263157895,0.9277777778,0.3076445993,0.6923554007,0.1283873506,1.0
"@piyush note the latest OpenJ9 JVMs already set ""MALLOCOPTIONS=multiheap"".",Investigation and Exploration,False,74,CONTRIBUTOR,True,False,False,0.9090909091,0.1612903226,0.3333333333,0.805907173,0.5609592665,0.4390407335,0.002861585044,0.6866637302
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_extended.functional_x86-64_mac_Release_testList_0/10
cmdLineTester_EnableAssertionStatusTest_0
CODE",Testing,True,152,CONTRIBUTOR,True,False,False,1.0,0.08620689655,1.0,0.623853211,0.9119603669,0.0880396331,0.07858840073,0.1102578859
"2,4 GHz Intel Core i58 GB 1600 MHz DDR3",Bug Reproduction,False,39,NONE,False,False,False,0.4090909091,0.1323529412,0.3699186992,0.75,0.4607405818,0.5392594182,0.2982430454,0.003789469322
"In normal Word2Vec these two share a key, so there's no way to look at the two different ""senses"" separately.",Motivation,False,109,MEMBER,False,False,False,0.6666666667,0.5263157895,0.1824817518,0.2222222222,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"Perhaps, something is wrong with the memory allocated for the code cache.",Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.1029411765,0.7187874877,0.2812125123,0.001423319644,0.0002320026376
"If the native stack is the issue, then adding CODE to the command line should also fix it.",Solution Discussion,True,90,CONTRIBUTOR,False,False,False,0.3913043478,0.1730769231,0.4,0.8563535912,0.3185054309,0.6814945691,0.006311966217,1.18e-05
"Also how did you install scikit-learn, with pip, with conda, with one of the OSX package managers (brew, etc ...) ?",Investigation and Exploration,False,115,MEMBER,False,False,False,1.0,0.206185567,0.3313609467,1.0,0.8123502768,0.1876497232,5.52274028e-06,1.58133139e-05
We need to continue to trim this down.,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.1176470588,0.06015037594,0.8333333333,0.8524173028,0.8337431676,0.1662568324,0.02587954735,0.00358081273
Are there unforseen roadblocks?,Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.3076923077,0.05970149254,1.0,0.8612716763,0.01918396952,0.9808160305,1.04e-05,1.3e-06
That way the dereferencing and the operations after that will all be done at the client with the vmaccess in hand.,Solution Discussion,False,114,CONTRIBUTOR,False,False,False,0.512195122,0.1111111111,0.625,0.9085714286,0.4989698829,0.5010301171,0.001840119827,0.003764671603
I'll update the code to load the TOC from r12 on LE and add the directive to allow the optimized call.,Solution Discussion,False,102,CONTRIBUTOR,False,False,False,0.1891891892,0.1640625,0.3846153846,0.6888888889,0.08012656297,0.919873437,0.0570348239,0.002818533349
The 0.22 release has been finalized and this issue is moved to the 0.23 release for which we've already branched.,Action on Issue,False,113,CONTRIBUTOR,False,False,False,0.9545454545,0.4468085106,0.6666666667,0.4269230769,0.3690988178,0.6309011822,0.01937481932,0.007316005049
"These tables are not cleaned upon class unloading, or classes unloading.",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.3793103448,0.1208791209,0.6,0.5174825175,0.8539779528,0.1460220472,0.001070700924,0.001618376001
@jdekonin @AdamBrousseau,Contribution and Commitment,False,24,CONTRIBUTOR,True,False,False,1.0,0.02985074627,1.0,0.0289017341,8.11e-08,0.9999999189,8.68e-08,4.08e-06
"1.         JavaScript have only 1 thread ,trainning  can block the whole process unless using callbacks or  other tricks.",Solution Discussion,False,121,NONE,False,False,False,1.0,0.2876712329,0.3771551724,0.5,0.4349495154,0.5650504846,0.003115708122,0.2584362368
"The most similar words to CODE might be things like CODE, while the most similar words to CODE might be CODE or CODE.",Motivation,True,117,MEMBER,False,False,False,0.7666666667,0.6052631579,0.1751824818,0.1666666667,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
Probably it is worth trying with CODE-Xshareclasses:noTimestampChecksCODE   @jsimomaa,Investigation and Exploration,True,85,CONTRIBUTOR,False,False,False,0.55,0.0802919708,1.0,0.7434944238,0.04433446097,0.955665539,0.002371624979,9.23e-05
I really need to fix this issue.,Contribution and Commitment,False,32,MEMBER,False,False,False,1.0,0.1129032258,0.07929515419,0.5,0.0002129451177,0.9997870549,0.0008157310994,0.02381581855
O_o;;,Social Conversation,False,5,NONE,False,False,False,0.05263157895,0.01408450704,0.1111111111,0.2,0.1546493757,0.8453506243,5.56302982e-05,0.007793915485
I will double-check all my changes so far in jdk11/OpeJ9/omr and submit them for review soon.,Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,0.1711711712,0.1610169492,0.75,0.8909090909,0.6347909793,0.3652090207,0.02864940725,0.006974193286
"I've now made that dir writeable, and a simple maven build resulted in an immediate core (just running maven).",Task Progress,False,110,NONE,True,False,False,0.9090909091,0.1503759398,0.4285714286,0.262086514,0.2215502762,0.7784497238,0.005021721962,0.0366849359
Importing the scorer also didn't help in my case.,Investigation and Exploration,False,49,NONE,False,False,False,0.2571428571,0.09278350515,0.3106508876,0.6,0.8123334347,0.1876665653,1.255529445e-05,3.933462502e-05
"perhaps 13167 fixes the problem, not causes it.",Solution Discussion,False,47,MEMBER,True,False,False,0.5333333333,0.08695652174,0.5,0.5031446541,0.4981911402,0.5018088598,0.0008332355771,0.009822949607
"However, there's no reason why we can't maintain the table even if we're not going to make use of it.",Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.3333333333,0.3225806452,0.7777777778,0.9836065574,0.9848847044,0.01511529561,0.001947660621,0.07932791196
"Measured average time to complete the tests as reported by Linux time command, in seconds.",Testing,False,90,CONTRIBUTOR,False,False,False,0.2631578947,0.102739726,0.4444444444,0.905027933,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
@pwagland Are the requested dumps generated before the hang?,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,1.0,0.12,1.0,0.7853107345,0.08542913726,0.9145708627,2.98e-05,2.47e-05
Wouldn't that require a mechanism to monitor the FS and pro-actively unload jitted code?,Solution Discussion,False,88,CONTRIBUTOR,False,False,False,1.0,0.1094890511,1.0,0.907063197,0.06865891486,0.9313410851,0.000151565347,0.0002285903595
"is there a count=0 or disableAsyncCompilation in play 

SharedClasses.",Solution Discussion,False,72,CONTRIBUTOR,False,False,False,1.0,0.1492537313,0.5,0.3063583815,0.005063180094,0.9949368199,1.44e-05,4.84e-06
I noticed after plotting accuracies in training and test mode that the testing accuracies start climbing after the training accuracies.,Usage,False,135,NONE,False,False,False,0.5714285714,0.07692307692,0.1456102784,0.8695652174,0.2164964176,0.7835035824,0.06906725807,0.007698692487
@yaroslavvb correct me if I'm wrong but this isn't entirely right.,Social Conversation,False,66,NONE,False,False,False,0.3333333333,0.1641791045,0.3092926491,0.2,0.2822482794,0.7177517206,0.03560947306,0.002163656075
I've also verified the ulimit values to be acceptable to produce a core file.,Investigation and Exploration,False,77,CONTRIBUTOR,False,False,False,0.5,0.3191489362,0.7777777778,0.3153846154,0.3215728023,0.6784271977,0.9710937657,0.01822418003
JDK 8 built with xlC 13: works,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.28,0.04022988506,1.0,0.1544117647,0.7292735826,0.2707264174,0.008601580477,0.009169774309
Expect to see much higher latency and worse startup with that option.,Solution Discussion,False,69,MEMBER,False,False,False,0.4444444444,0.1290322581,0.75,0.111969112,0.08056887105,0.9194311289,0.002398519856,0.002025499661
OpenJ9 Java 11 on Windows 10 won't start crashes with segmentation error,Observed Bug Behaviour,False,72,NONE,True,True,False,0.1212121212,0.1212121212,0.2,0.00350877193,0.0,1.0,0.0,0.006553271164
Sucks that I've trained models for days expecting things to work before seeing that everyone trying to use this feature going crazy.,Social Conversation,False,132,NONE,False,False,False,0.8518518519,0.08846153846,0.7408993576,0.6666666667,0.6158890256,0.3841109744,0.00136237059,0.002840605583
"Re-GetEnv, I think it's possible to make the agent behavior dependent on JVM type.",Solution Discussion,False,82,NONE,True,False,False,0.3260869565,0.1442307692,0.1111111111,0.7900552486,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
This approach has the limitations i discussed [here](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-303909270).,Solution Discussion,False,130,NONE,False,False,False,0.6470588235,0.1641791045,0.7115117892,1.0,0.5518003453,0.4481996547,0.002095453319,0.004343090399
"When decoding an integer, we can search for it in all the OOV stores.",Solution Discussion,False,69,MEMBER,False,False,False,0.5384615385,0.2258064516,0.5242290749,0.9411764706,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
But we should not prevent the user to use different data if he makes an informed guess that warm starting on the new data will help him solve his problem (e.g. solving on the new data faster if he makes the assumption that the new data is distributed reasonably similarly to the first data and hence starting the optimizer from the previous position should speeds things up).,Solution Discussion,False,375,MEMBER,False,False,False,1.0,0.9436619718,0.4130434783,1.0,0.03980022095,0.960199779,0.0001056298833,3.439112479e-06
That was not what I tried to suggest.,Social Conversation,False,37,CONTRIBUTOR,True,False,False,0.2,0.125,0.3088235294,0.25,0.0124193059,0.9875806941,0.003559988512,0.00316172217
"SED (Stack Execution Disable), if enabled, can cause writable-memory to be non-executable.",Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.2916666667,0.08045977011,0.3,0.4963235294,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
"since its unclear if the implementation will change, I wanted to give a suggestion (note its easy to extend to convolutions and stuff I just didn't paste that code).",Social Conversation,False,165,NONE,False,False,False,1.0,0.1115384615,0.0835117773,1.0,0.202765491,0.797234509,0.001533935132,0.0002544552755
"However, if you're holding an integer ID for an OOV string, and you flush the OOVs and try to decode the integer, you'll get an CODE.",Workarounds,True,133,MEMBER,False,False,False,0.7878787879,0.4193548387,0.6872246696,0.8125,0.288728579,0.711271421,0.1151253204,0.02221386295
But that's certainly the gist of it.,Usage,False,36,NONE,False,False,False,0.3888888889,0.1044776119,0.7198335645,1.0,0.5525622877,0.4474377123,0.001784978089,0.1924676673
"The prex argue info is created for the  CODE callsites  but mixed up with the callNode from CODE because the bytecode info are the same, resulting in CODE corrupting temps slots of CODE which explains the string appearing in wrong constant pool entry.",Investigation and Exploration,True,251,CONTRIBUTOR,False,False,False,1.0,0.3383458647,0.6666666667,0.951653944,0.9208021236,0.07919787637,0.02945136717,0.001354250294
"Should be easy to do from the commits listed above, if you're interested.",Contribution and Commitment,False,73,MEMBER,False,False,False,0.3513513514,0.1940298507,0.4022191401,1.0,0.3378723543,0.6621276457,0.04548767515,1.170644312e-05
We can take a look from the JIT side and narrow down where the problem happens and forward to an expert in the area.,Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,1.0,0.1804511278,1.0,0.475826972,0.5408860557,0.4591139443,0.002429720419,0.000914006537
"*         [x] CODE [arm64] URL ,  [ppc64] URL , [ppc64el] URL , [s390x] URL .",Potential New Issues and Requests,True,77,MEMBER,False,False,False,0.6315789474,0.1764705882,0.4024390244,0.4444444444,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
Please forgive typos and briefness.â,Social Conversation,False,36,MEMBER,False,False,False,1.0,0.078125,0.1176470588,1.0,0.0007687859941,0.999231214,0.0001212291825,0.001496651552
I think it is very straightforward.,Social Conversation,False,35,NONE,False,False,False,0.4,0.02307692308,0.06423982869,1.0,0.1739067199,0.8260932801,0.0001378806696,0.1811646483
I made an initial stab at it here: https://github.com/tensorflow/tensorflow/pull/2206 - this is just a proof of concept that gets the version string into nodejs.,Task Progress,False,161,NONE,False,False,False,1.0,0.3150684932,0.2693965517,0.6666666667,0.1870112913,0.8129887087,0.02229862595,0.708526811
"destroyAll -Xjit:verbose={compilePerformance},vlog=vlog
>but this outputted an empty vlog file.",Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.4285714286,0.08759124088,0.3333333333,0.08178438662,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
I think it has nothing to do with tensorflow; my guess is that [GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] vs [GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] is the culprit!?,Investigation and Exploration,False,192,CONTRIBUTOR,False,False,False,1.0,0.4366197183,0.8479532164,1.0,0.6456691099,0.3543308901,4.677373331e-05,3.473434042e-05
Here is a complete working code snippet for anybody interested: CODE,Workarounds,True,68,NONE,False,False,False,0.6111111111,0.1641791045,0.8113730929,0.8,0.6149282872,0.3850717128,0.001498933696,0.123123279
"@nmhkahn Regarding your code snippet, may I ask why is CODE set to be CODE when CODE?",Usage,True,85,CONTRIBUTOR,False,False,False,0.8947368421,0.06538461538,0.3661670236,0.2,0.3603780918,0.6396219082,0.3882282375,0.06886363297
"[1] https://github.com/eclipse/omr/blob/0b9653c23ba22247f66c11ad6df8a3b46c2c4738/compiler/p/codegen/OMRTreeEvaluator.cpp#L4276-L4277
[2] https://github.com/eclipse/openj9/blob/9369e4e005a130411ae2606a25d08588a0920c7a/runtime/compiler/p/codegen/J9TreeEvaluator.cpp#L12842
[3] https://github.com/eclipse/openj9/blob/9369e4e005a130411ae2606a25d08588a0920c7a/runtime/compiler/p/codegen/J9TreeEvaluator.cpp#L12890-L12891",Solution Discussion,False,417,CONTRIBUTOR,False,False,False,0.2105263158,0.170212766,1.0,0.9346153846,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"If anything, this seems like a CODE or CODE issue given

CODE",Investigation and Exploration,True,63,CONTRIBUTOR,False,False,False,1.0,0.224137931,1.0,0.1559633028,0.0207995758,0.9792004242,3.3e-05,8.67e-05
Thank you for your post :),Social Conversation,False,26,NONE,False,False,False,0.5,0.04724409449,0.7360703812,1.0,0.5315705314,0.4684294686,0.234967481,0.1028511002
@zl-wang I think you're missing the point.,Social Conversation,False,42,CONTRIBUTOR,False,False,False,0.347826087,0.0625,0.5,0.3611111111,0.03696060679,0.9630393932,1.33e-05,4.77e-05
We got quite some comments on that in the survey :-/,Social Conversation,False,52,MEMBER,False,False,False,0.7333333333,0.1549295775,0.2753623188,1.0,0.03947204023,0.9605279598,6.73785302e-06,6.386923175e-06
I have published my starting point -- https://github.com/nikhilk/node-tensorflow that will be published to npm later.,Task Progress,False,117,NONE,False,False,False,0.8823529412,0.2054794521,0.1293103448,0.25,0.02901004364,0.9709899564,0.01651736955,0.001724506158
"For example, one could simply pass such a list of fitted estimators to the constructor of the meta-ensemble.",Solution Discussion,False,108,MEMBER,False,False,False,0.6333333333,0.2676056338,0.8152173913,0.2272727273,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
This is a [well-known feature](http://docs.python.org/2/library/multiprocessing.html#windows) of Python multiprocessing on Windows: you have to run everything that uses CODE in an CODE block or you'll get freezes/crashes.,Investigation and Exploration,True,221,MEMBER,False,False,False,1.0,0.2989690722,0.1035502959,0.6666666667,0.009477465184,0.9905225348,0.02437524994,2.548804237e-05
"We can't do without 1 entirely â it's too fundamental to how spaCy is working, and we definitely don't want to be making lots of string comparisons.",Investigation and Exploration,False,148,MEMBER,False,False,False,0.675,0.435483871,0.2995594714,0.1944444444,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"We also used two separate queues, one handling input data_files as string names and the other one the resulting input data with preprocessing being done in between those two.",Motivation,False,174,NONE,False,False,False,0.4754098361,0.4328358209,0.6061026352,0.2,0.5012181902,0.4987818098,0.02428476177,0.003761840049
I'll probably get back to it week after next.,Task Progress,False,45,MEMBER,False,False,False,0.3333333333,0.1451612903,0.6299559471,1.0,0.2586753238,0.7413246762,0.002179048536,0.1151253204
"Could you destroy the cache and run your program again, collecting the vlog both times?",Investigation and Exploration,False,87,NONE,True,False,False,0.6,0.1094890511,0.25,0.06319702602,0.0005686837121,0.9994313163,0.0002882226271,0.0003971343382
"If this occurs, the architecture you had in mind would make a lot of sense to me.",Motivation,False,81,MEMBER,False,False,False,0.68,0.4473684211,0.5912408759,0.8,0.004025785766,0.9959742142,7.249967297e-05,2.745084526e-05
Hence the size of the segment is always specified as a long.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.3870967742,0.2553191489,0.7777777778,0.8115384615,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"The definition of contrib.layers.batch_norm in tensorflow:def batch_norm(inputs,decay=0.999,center=True,scale=False,epsilon=0.001,activation_fn=None,param_initializers=None,param_regularizers=None,updates_collections=ops.GraphKeys.UPDATE_OPS,is_training=True,reuse=None,variables_collections=None,outputs_collections=None,trainable=True,batch_weights=None,fused=False,data_format=DATA_FORMAT_NHWC,zero_debias_moving_mean=False,scope=None,renorm=False,renorm_clipping=None,renorm_decay=0.99):scale: If True, multiply by gamma.",Solution Discussion,False,525,NONE,False,False,False,1.0,0.2,0.8158458244,0.3333333333,0.7054086222,0.2945913778,0.4437492017,2.252355309e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4870689655,1.0,0.5896770009,0.4103229991,0.1275751677,0.01978932785
Just before entering the loop the count register is set to CODE.,Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,0.4137931034,0.2553191489,0.5,0.5730769231,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"But from what I understand, compilation thread is blocked during class unloading.",Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.75,0.1318681319,0.8,0.7692307692,0.8593869021,0.1406130979,0.0008804396806,0.03684751755
<1> directly launch SpringToolSuite4.exe (will gets Java 8 started at the same time),Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.2363636364,0.1313131313,0.4166666667,0.8280701754,0.803200419,0.196799581,0.3518178539,0.2306492075
"If so, the field must be a static if it returns LocIsConstant (Correct me if wrong).",Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.8888888889,0.1355932203,0.75,0.4787878788,0.4195028092,0.5804971908,6.41e-05,0.0004100015372
I launch it from Eclipse.,Investigation and Exploration,False,25,NONE,True,False,False,0.119047619,0.05050505051,0.5,0.6912280702,0.2144667264,0.7855332736,0.001641357342,0.00438505838
If this a case hook handlers should be fixed.,Solution Discussion,False,45,CONTRIBUTOR,False,False,False,0.2432432432,0.0989010989,1.0,0.5909090909,0.854897081,0.145102919,0.001362640241,0.002579695967
"But would like to keep this one focused on the original issue, i.e. the *naming* and organisation in different classes of the CategoricalEncoder/OneHotEncoder.",Social Conversation,False,159,CONTRIBUTOR,True,False,False,1.0,0.375,0.9117647059,0.5,0.2716685717,0.7283314283,0.03415611878,0.7749660924
I am experimenting with this workaround with the 1.x version.,Workarounds,False,61,CONTRIBUTOR,False,False,False,1.0,0.1612903226,0.9691629956,0.3333333333,0.6879251154,0.3120748846,0.02091540384,0.2056416849
"Thank you SCREEN_NAME 1 , but addingCODEdid not help.",Observed Bug Behaviour,True,53,NONE,False,False,False,1.0,0.0824742268,0.9082840237,0.5,0.9830658712,0.01693412879,0.004293692176,0.03509089576
I need to double-check later on the original VM image to see whether it still works.,Task Progress,False,84,CONTRIBUTOR,False,False,False,0.6296296296,0.1717171717,1.0,0.9789473684,0.9103914698,0.08960853018,0.006460058278,0.07945790628
"There is a call to CODE, which is
CODE
where the CODE is CODE which gets set in CODE or CODE; I suppose the latter is more likely here.",Investigation and Exploration,True,137,CONTRIBUTOR,False,False,False,0.3333333333,0.3333333333,0.75,0.4015444015,0.3937305493,0.6062694507,0.03688423691,0.3568236584
Please don't close this yet.,Action on Issue,False,28,NONE,False,False,False,0.25,0.03759398496,0.75,0.6844783715,0.6953049426,0.3046950574,0.004019012644,0.2346732222
"Trying again

fast
https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/140
OpenJ9: c9d84df
OMR: 54fb162
OpenJDK: 8bf2a81

slow
https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/142/
OpenJ9: 535e903
OMR: 640f1df
OpenJDK: 8bf2a81

https://github.com/eclipse/openj9/compare/c9d84df...535e903
https://github.com/eclipse/openj9-omr/compare/54fb162...640f1df

There was a build in between, but it failed.",Task Progress,False,495,CONTRIBUTOR,True,False,False,1.0,0.6268656716,0.6666666667,0.2196531792,0.005015413916,0.9949845861,1.94e-05,4.91e-06
Also there is a work-around if you are using Python 3 suggested for example in https://github.com/scikit-learn/scikit-learn/issues/5115#issuecomment-187683383.,Workarounds,False,159,MEMBER,False,False,False,0.5151515152,0.175257732,0.3224852071,0.6666666667,0.8123482033,0.1876517967,3.933462502e-05,5.52274028e-06
but I am pretty sure it's the change in omrvmem.c in eclipse/omr#4087,Solution Discussion,False,69,CONTRIBUTOR,False,False,False,1.0,0.07471264368,1.0,0.4154411765,0.7657175072,0.2342824928,0.0001692768735,9.33e-06
Example: CODE,Potential New Issues and Requests,True,13,MEMBER,False,False,False,0.06666666667,0.05263157895,0.2189781022,0.5,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
In this case triggering event content might be irrelevant,Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.3913043478,0.0989010989,1.0,0.8916083916,0.8690602234,0.1309397766,0.0003289131615,0.03308234769
"When an exception occurs it should be printed to stderr, and we're not seeing that.",Investigation and Exploration,False,83,CONTRIBUTOR,True,False,False,0.3409090909,0.2586206897,0.5714285714,0.8165137615,0.9968553268,0.003144673225,0.003909680331,0.004205153524
So I'll try a run with CODE then?,Solution Discussion,True,33,CONTRIBUTOR,True,False,False,0.32,0.1290322581,1.0,0.2278481013,0.04705605294,0.9529439471,0.001592686477,0.003690015373
It will stop automatically once the exception occurs.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.5,0.06015037594,1.0,0.5139949109,0.5597441839,0.4402558161,0.0002117421226,0.03847288965
"The second time CODE is called:
CODE
notice that the last value is CODE even though we're passing in the *same* romClass CODE.",Solution Discussion,True,128,CONTRIBUTOR,False,False,False,0.8333333333,0.4032258065,0.5555555556,0.8032786885,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
I ran the code fine after upgrading to 0.19.,Investigation and Exploration,False,44,NONE,False,False,False,0.3333333333,0.09278350515,0.4615384615,0.8,0.8484794361,0.1515205639,1.184011945e-05,2.737530974e-05
... or it could be that the thread that acquired exclusive (for GC or not) terminated before releasing it?,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,1.0,0.24,0.5,0.7344632768,0.08524884036,0.9147511596,3.85e-05,0.0002577612278
Thank you very much for the detailed writeup @gacholio.,Social Conversation,False,55,CONTRIBUTOR,True,False,False,1.0,0.140625,0.3333333333,0.1560283688,0.002042521787,0.9979574782,0.00734286415,0.06695374525
"Since we can only change tensors or placeholders with CODE, I changed CODE intentionally before running the graph.",Usage,True,114,NONE,False,False,False,0.9,0.06923076923,0.9207708779,0.9,0.7489109604,0.2510890396,0.04599776246,0.3206669123
"I change it to use ""customized"" and point SDK_URL at the required github binary",Task Progress,False,79,CONTRIBUTOR,True,False,False,0.4827586207,0.2978723404,1.0,0.07307692308,0.004007123078,0.9959928769,0.0003892710042,0.001399658243
@vrv SCREEN_NAME  is the ability to swap between train and validation datasets already there or is that still coming?,Task Progress,False,117,NONE,False,False,False,0.625,0.2985074627,0.560332871,0.6,0.4602787203,0.5397212797,0.008479027653,0.0006250222677
-         The keyword argument CODE specifies *how* to encode those data,Motivation,True,72,CONTRIBUTOR,True,True,False,0.22,0.171875,0.01838235294,0.2083333333,0.0,1.0,0.0,0.0007774126438
It also owns VM Access.,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,0.1111111111,0.06666666667,0.7,0.593220339,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
@Leonardo2718,Social Conversation,False,13,CONTRIBUTOR,False,False,False,0.02857142857,0.01612903226,0.8333333333,0.5245901639,0.6631878845,0.3368121155,0.0184875191,0.1091893746
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4202586207,1.0,0.5020267121,0.4979732879,0.1182638968,0.1156266772
"Certainly, for strings that occur once, there's no advantage.",Investigation and Exploration,False,61,MEMBER,False,False,False,0.225,0.1451612903,0.3127753304,0.2777777778,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
@martinwicke thanks for the encouragement.,Social Conversation,False,42,NONE,False,False,False,0.2173913043,0.06849315068,0.2672413793,0.3333333333,0.1870112913,0.8129887087,0.02229862595,0.708526811
Is there another reference?,Social Conversation,False,27,NONE,False,False,False,0.3333333333,0.05970149254,0.4368932039,1.0,0.4011607218,0.5988392782,0.0005491848753,0.00137881541
"Then as soon as you're done, you get this error (it is looking for cublas 9.0, which, from what I can read here, would not have worked either, as CUDA 9.1 is the default you get from NVIDIA).",Bug Reproduction,False,191,NONE,False,False,False,1.0,0.2992125984,0.1173020528,0.6666666667,0.2135778,0.7864222,0.01947000817,0.01902853319
Do you have a link for that?,Potential New Issues and Requests,False,28,CONTRIBUTOR,True,False,False,0.875,0.109375,0.6544117647,0.5,0.122597879,0.877402121,4.068093374e-05,2.684941627e-05
It seems tricky to square this with a fully tensor-based API.,Motivation,False,61,CONTRIBUTOR,False,False,False,0.2553191489,0.1791044776,0.2621359223,0.6666666667,0.05010423233,0.9498957677,0.0003781690105,0.199242644
So CODE somehow becomes CODE?,Investigation and Exploration,True,29,MEMBER,True,False,False,0.1111111111,0.05434782609,0.8333333333,0.427672956,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
(see attached image)![screen shot 2017-04-03 at 19 54 54] URL ,Usage,False,62,NONE,False,False,False,0.375,0.04615384615,0.6616702355,1.0,0.5706347361,0.4293652639,0.0008277913049,5.184475509e-05
"Apache Spark ships with a package called [cloudpickle] URL  which is meant to support a wider set of Python constructs, but serialisation with cloudpickle also fails resulting in a segmentation fault: CODE",Motivation,True,205,NONE,True,True,False,0.9166666667,0.2156862745,0.009646302251,0.375,0.0,1.0,0.0,0.0054583822
@pawni SCREEN_NAME  did you guys decide if you had to use reuse to true to solve the scoping issue?,Usage,False,99,NONE,False,False,False,1.0,0.07692307692,0.08565310493,1.0,0.2028056726,0.7971943274,0.0002544552755,0.000172984946
"But it's more important that both libraries stay internally consistent, and they have fairly different API norms.",Potential New Issues and Requests,False,113,MEMBER,False,False,False,0.7083333333,0.4473684211,0.795620438,0.2857142857,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
The OMR change has promoted.,Task Progress,False,28,CONTRIBUTOR,False,False,False,0.4545454545,0.03759398496,1.0,0.989821883,0.994259906,0.005740093991,0.0005988459646,0.000403454585
"Repro rate with following command was 2/3:

CODE

Console:

CODE",Bug Reproduction,True,70,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.8117048346,0.8177676175,0.1822323825,0.002753056363,0.02271240842
"(JRE is JDK8) via the boot dashboard
2) then started OpenJ9.zip (JRE is JDK11) via boot dashboard
then stopped both applications and restarted OpenJ9.zip and then demo2

I tried this way a couple of times no matter which application goes first but nothing happened.",Investigation and Exploration,False,269,CONTRIBUTOR,False,False,False,1.0,0.4747474747,1.0,0.3929824561,0.1199922694,0.8800077306,0.001815624911,0.003294872886
I tested the code in thomberg1's https://github.com/scikit-learn/scikit-learn/issues/2889#issuecomment-337985212.,Bug Reproduction,False,113,NONE,False,False,False,0.6363636364,0.07216494845,0.875739645,0.3333333333,0.9706052871,0.02939471292,0.04128957575,0.0165742005
I had moved my organization to use OpenJDK 11.0.6+10 Openj9 0.18.1.,Social Conversation,False,67,NONE,False,False,False,0.5714285714,0.09022556391,0.2,0.7048346056,0.7787161072,0.2212838928,0.2412282351,0.0001541057533
"So basically the docstring should say ""use warm_start with the same data unless you know exactly what you are doing"".",Solution Discussion,False,117,MEMBER,False,False,False,1.0,0.2816901408,0.4384057971,0.5,0.03982883009,0.9601711699,3.790042324e-06,1.859928177e-06
It sounds like you are considering a perf/footprint comparison between CODE and CODE.,Solution Discussion,True,85,CONTRIBUTOR,True,False,False,0.6363636364,0.2258064516,0.75,0.94092827,0.9195088035,0.08049119647,0.01893430022,0.008255133205
Can you see something that I'm doing wrong?,Solution Discussion,False,43,CONTRIBUTOR,False,False,False,0.4210526316,0.0522875817,0.6430868167,0.5714285714,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
This was on ubuntu.,Bug Reproduction,False,19,NONE,True,False,False,0.125,0.03007518797,0.6666666667,0.1526717557,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
"Ah, that's good to know - thanks.",Social Conversation,False,33,CONTRIBUTOR,False,False,False,0.2857142857,0.08955223881,0.1428571429,0.6033519553,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
"@eamartin there have been a number of changes since the beginning of March by SCREEN_NAME  to speed up feed_dict; when the memory is aligned with 16 bytes, I think we share buffers with numpy, so nightly releases may be faster for you.",Potential New Issues and Requests,False,235,CONTRIBUTOR,False,False,False,1.0,0.6417910448,0.3828016644,0.3333333333,0.3228761377,0.6771238623,0.04972082678,0.01426913622
"I can see in your subsequent comment that the GC thread owns VM exclusive access during the event, so I suspect this was reserved much earlier on in the path.",Investigation and Exploration,False,158,CONTRIBUTOR,False,False,False,1.0,0.3296703297,1.0,0.3706293706,0.7687454681,0.2312545319,0.8023255008,0.03674198804
"How about CODE for that method in question while still keeping the opt level at cold, i.e. the rest of your command line unchanged ?",Investigation and Exploration,True,132,CONTRIBUTOR,False,False,False,1.0,0.3,1.0,0.8382352941,0.951632583,0.04836741695,0.006464895429,0.005950197542
and I know another WebAssemble research on TensorFlow at here:https://medium.com/@tomasreimers/compiling-tensorflow-for-the-browser-f3387b8e1e1c,Potential New Issues and Requests,False,144,NONE,False,False,False,1.0,0.2328767123,0.9719827586,1.0,0.9684657834,0.03153421661,0.007495803266,0.5674118797
What are these additional things on AIX?,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.875,0.0546875,0.5,0.85,0.2167590594,0.7832409406,0.0002757120844,0.0001546049072
It doesn't seem they can be related.,Investigation and Exploration,False,36,MEMBER,True,False,False,0.7777777778,0.07608695652,0.8,0.4716981132,0.4977312427,0.5022687573,0.0002080991169,0.000454293798
"I don't expect this is going to make the 0.17 release, so moving it out.",Action on Issue,False,72,CONTRIBUTOR,False,False,False,1.0,0.08620689655,1.0,0.07720588235,0.7144226447,0.2855773553,0.0103669977,0.0106775552
Any advice to get that lib is appreciated,Social Conversation,False,41,NONE,False,False,False,0.4210526316,0.06299212598,0.3636363636,1.0,0.3589581559,0.6410418441,0.02559963321,0.2554187912
"Another possibility would be to change the Python API for iterators to use two ops: CODE and CODE (e.g. like the C++ CODE protocol), but that would introduce an additional CODE call, and make it harder to share the iterator between threads.",Solution Discussion,True,240,CONTRIBUTOR,True,False,False,0.8936170213,0.6268656716,0.5409153953,0.6071428571,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Tricky,Social Conversation,False,6,NONE,False,False,False,1.0,0.006535947712,0.9163987138,0.5,0.199033492,0.800966508,0.0001526929426,0.0007126827681
Obviously this is because moving_mean (and I suppose moving_variance) hasn't been saved for any of the layers.,Usage,False,110,NONE,False,False,False,0.4722222222,0.06538461538,0.539614561,0.6,0.4918247108,0.5081752892,0.0300603195,0.001170108729
I tried with a locally compiled build (with the latest changes) on the same failing Window machine with everything unmodified and nothing wrong happened when repeatedly launching many times.,Solution Discussion,False,190,CONTRIBUTOR,False,False,False,1.0,0.2929292929,0.5,0.9368421053,0.9075428156,0.09245718442,0.008713378481,0.001248242127
"I did not install 9.1, at least not intentionally.",Bug Reproduction,False,50,NONE,False,False,False,0.4285714286,0.07086614173,0.3343108504,0.7272727273,0.3566928644,0.6433071356,0.1351135301,0.002261357628
Or add a CODE function?,Solution Discussion,True,23,MEMBER,False,False,False,0.2173913043,0.07042253521,0.7210144928,0.875,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
This would require further investigation to get to the root cause.,Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.4583333333,0.1182795699,1.0,0.3359073359,0.3820724724,0.6179275276,5.6e-05,0.006214516454
It's just a question of finding alittle be of time to do it.,Social Conversation,False,60,MEMBER,False,False,False,1.0,0.1340206186,0.1390532544,1.0,0.009494210283,0.9905057897,4.98635903e-06,1.797870487e-05
I will add a new tracepoint to log the stack slot value during decompile to print value as it is copied from the OSR frame.,Task Progress,False,123,CONTRIBUTOR,False,False,False,0.3048780488,0.2717391304,0.6666666667,0.6666666667,0.5726999115,0.4273000885,0.04419068659,0.007881921876
"So if globalreference's value just magically changed, it doens't necessarily mean the new value is bad, it's just that the GC has moved the object to a new location, and new object pointer is still valid?",Investigation and Exploration,False,204,CONTRIBUTOR,False,False,False,1.0,0.1904761905,0.5,0.8285714286,0.4505337598,0.5494662402,0.002313600952,0.0001676222515
There exists some (currently inactive) infrastructure to cache the validation result of a class chain for each J9Class - this is only used in the AOT load run.,Solution Discussion,False,159,CONTRIBUTOR,False,False,False,0.45,0.435483871,0.3333333333,0.9617486339,0.9848847044,0.01511529561,0.001947660621,0.07932791196
-         I suggest using CODE as a way of selecting the appropriate child oov store.,Solution Discussion,True,85,MEMBER,False,False,False,0.5769230769,0.2419354839,0.5022026432,0.6470588235,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"Mac OX Sierra, TensorFlow 1.1.0-rc1, Python 2.7.10 & Python 3.6.1.",Bug Reproduction,False,66,CONTRIBUTOR,False,False,False,1.0,0.01302460203,0.4092409241,1.0,0.08287024378,0.9171297562,0.002776317914,5.446552647e-05
Of course the code clarity and simplicity of working with the new dataset class is a huge step forward and very welcome.,Social Conversation,False,120,NONE,False,False,False,0.5945945946,0.328358209,0.7877947295,0.875,0.6090011473,0.3909988527,0.000271284095,0.000261613555
"The script ends correctly, showing the results as follows (sorry, I meant 50k not 500k): ![captura de pantalla de 2018-05-26 13-09-00] URL  ![captura de pantalla de 2018-05-26 13-09-51] URL ",Bug Reproduction,False,190,NONE,False,False,False,1.0,0.3917525773,0.9792899408,0.5,0.9999975983,2.401746992e-06,4.823458058e-05,1.350886112e-06
Because from the post here it doesn't get clear to me if or if not.,Solution Discussion,False,67,NONE,False,False,False,0.375,0.223880597,0.6338418863,0.2083333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3900862069,1.0,0.4705760852,0.5294239148,0.1785457004,0.02051170825
Similar corrupt stack failure without AsyncGetCallTrace() https://github.com/eclipse-openj9/openj9/issues/13910,Bug Reproduction,False,111,CONTRIBUTOR,False,False,False,1.0,0.06730769231,1.0,0.2154696133,0.04937643367,0.9506235663,0.03981237336,0.0528229212
Anything you need is downgrade your cuda 9.1 -> cuda 9.0.,Solution Discussion,False,57,NONE,False,False,False,0.3846153846,0.07874015748,0.5953079179,0.5,0.4583755089,0.5416244911,0.04654492211,0.008440528439
I thought the failures were in both runs.,Social Conversation,False,41,CONTRIBUTOR,True,False,False,0.2857142857,0.1379310345,1.0,0.3944954128,0.02121810867,0.9787818913,4.7e-05,0.00651377534
System info: CODE,Bug Reproduction,True,17,CONTRIBUTOR,False,False,False,0.1153846154,0.04225352113,0.1608187135,1.0,0.1665130991,0.8334869009,0.0002442474535,0.008272861908
If XLC 16.1 is installed then xlclang/xlclang++ is provided and used when building OpenJ9/OMR.,Investigation and Exploration,False,94,CONTRIBUTOR,True,True,False,0.5925925926,0.09195402299,0.6,0.01102941176,0.0,1.0,0.0,0.2685593546
"Although, it has the glitch that I have to copy libc++.a and related to where I ran (and set LIBPATH).",Solution Discussion,False,102,CONTRIBUTOR,False,False,False,1.0,0.1149425287,1.0,0.9669117647,0.798102097,0.201897903,3.05e-05,0.0002166460475
@zhongyuk Thanks a lot for sharing .,Social Conversation,False,36,NONE,False,False,False,1.0,0.02307692308,0.4496788009,0.5,0.3804089518,0.6195910482,0.00101193657,0.003059753667
I need to be able to strip pieces out of ASGCT to see what's causing the issue.,Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.9444444444,0.1634615385,1.0,0.1988950276,0.0241690347,0.9758309653,0.01268066734,9.99e-05
"And since this is done in parallel, we are effectively reducing the computational time by the amount of loading data from disk (since this takes usually less time then one forward + backward pass through the networks graph).",Solution Discussion,False,224,NONE,False,False,False,1.0,0.552238806,0.3370319001,0.6666666667,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
"Basically, Power codegen's assumption is that a register containing an Int can have an undefined value in its upper half.",Solution Discussion,False,121,CONTRIBUTOR,False,False,False,1.0,0.4255319149,0.5,0.7230769231,0.6453871071,0.3546128929,0.007376113072,0.2919761514
Perhaps update it if 1) it differs by some margin (>10%) or 2) with low probability (10%) even if within the margin.,Solution Discussion,False,116,CONTRIBUTOR,False,False,False,1.0,0.1506849315,0.8333333333,0.8659217877,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
"I'm not sure that this is quite sufficient to say that there is nothing fundamentally broken in the implementation (e.g. accessing randomly initialised memory), but that:",Investigation and Exploration,False,170,MEMBER,False,False,False,0.7222222222,0.3823529412,0.8292682927,0.3846153846,0.6243074007,0.3756925993,0.05176800464,0.02547446062
Note that the length information is conveyed via creating an arrayset node that normally takes Int length.,Solution Discussion,False,106,CONTRIBUTOR,False,False,False,0.4473684211,0.3617021277,0.1666666667,0.8769230769,0.7299060094,0.2700939906,0.01554507959,0.00748487997
Advice?,Social Conversation,False,7,NONE,False,False,False,0.05263157895,0.007874015748,0.3753665689,1.0,0.3797254726,0.6202745274,0.2554187912,0.006558528713
If so we can close this issue.,Action on Issue,False,30,MEMBER,False,False,False,0.4666666667,0.0985915493,0.230994152,1.0,0.1785846596,0.8214153404,0.0003516333028,0.0009277251719
This effectively creates a new feature for when the value is missing but leaves the numerical values unchanged otherwise.,Expected Behaviour,False,121,NONE,False,False,False,0.95,0.296875,0.8125,0.6666666667,0.2596531697,0.7403468303,0.009666196666,0.01199680736
Fix should be out soon.,Task Progress,False,23,MEMBER,False,False,False,0.3333333333,0.05263157895,0.8,1.0,0.1888985047,0.8111014953,3.85279729e-05,7.189240303e-05
I'm just wondering about what things users will come up with (w.r.t. data generation and usage) that would otherwise require (specific) additions to the API...,Motivation,False,159,CONTRIBUTOR,False,False,False,0.9615384615,0.3731343284,0.4452149792,1.0,0.4019651913,0.5980348087,0.005091284808,0.001827732055
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4849137931,1.0,0.5825869432,0.4174130568,0.1112315324,0.1275751677
After increasing the sample size I pass into tsne.fit_transform() it always works.,Solution Discussion,False,82,NONE,False,False,False,0.6666666667,0.1690140845,0.2222222222,1.0,0.1785242968,0.8214757032,0.05891636054,0.0003516333028
Note that this happens even before we get to the first method instruction (between bctr and the first method instruction),Task Progress,False,121,CONTRIBUTOR,False,False,False,0.3333333333,0.1149425287,1.0,0.1985294118,0.7340627309,0.2659372691,0.004173448668,0.03667212771
"A fatal error has been detected by the Java Runtime Environment:
/#
/#  Internal Error (threadCritical_aix.cpp:45), pid=8978666, tid=258
/#  guarantee(ret == 0) failed: fatal error with pthread_mutex_lock()
/#
/# JRE version:  (13.0+33) (build )
/",Investigation and Exploration,False,253,CONTRIBUTOR,False,False,False,1.0,0.2126436782,0.3333333333,0.7169117647,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
This solution is working very well for me (though admittedly getting the initial js => C++ => python flow working was kind of a pain).,Solution Discussion,False,134,NONE,False,False,False,0.5897435897,0.3150684932,0.7456896552,0.6363636364,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
As opposed to training a large number of sub-estimators and waiting a long time (several hours for me).,Motivation,False,103,CONTRIBUTOR,True,False,False,0.59375,0.2676056338,0.07608695652,0.2727272727,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
The solution is to move to a newer version of TF.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,1.0,0.01591895803,0.9834983498,0.3333333333,0.7567199611,0.2432800389,0.0001320700021,1.0
"If the global policy is ""all"" (SED enforced for all programs), we need to get java exempted (exempt flag) in order to run.",Solution Discussion,False,122,CONTRIBUTOR,False,False,False,1.0,0.132183908,0.7777777778,0.6654411765,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
Will CODE (CODE) create a core file with native stack for all threads?,Investigation and Exploration,True,70,CONTRIBUTOR,False,False,False,0.5416666667,0.1733333333,0.75,0.3898305085,0.03339237467,0.9666076253,0.01898374244,2.23e-05
@nbhuiyan  any perf concerns with the workaround in place?,Workarounds,False,58,NONE,False,False,False,1.0,0.1086956522,1.0,0.9182389937,0.6393595045,0.3606404955,0.01374259717,0.0002725427144
I have a similar problem.,Observed Bug Behaviour,False,25,NONE,False,False,False,0.2173913043,0.05154639175,0.8136094675,0.3333333333,0.8567528578,0.1432471422,0.01083986775,0.005718638633
"Under such circumstance, the only solution to this issue suggested by Microsoft at https://msdn.microsoft.com/en-us/library/bb531344.aspx#BK_CRT is to compile the whole project with VS2015/2017 or modify the code involved to create a new DLL to encapsulate the usage of the library if technically possible.

CODE",Solution Discussion,True,314,CONTRIBUTOR,False,False,False,1.0,0.3728813559,1.0,0.1878787879,0.3931478188,0.6068521812,0.00221507324,0.007845128228
"if we can limit good & bad drivers to be without/with that PR, then we can experiment further with settings:
MALLOCOPTIONS=multiheap:4
MALLOCOPTIONS=multiheap:8
MALLOCOPTIONS=multiheap:16
(dropping ,buckets  which I didn't see in the manual anyway)",Investigation and Exploration,False,252,CONTRIBUTOR,False,False,False,1.0,0.6612903226,1.0,0.0970464135,0.003956069835,0.9960439302,0.01118964345,0.000481306353
"So the investigation above indicates:
1) JIT finished the compilation of CODE when the project was built successfully.",Investigation and Exploration,True,119,CONTRIBUTOR,False,False,False,0.2794117647,0.1428571429,0.6666666667,0.4223918575,0.480594089,0.519405911,0.009466671463,0.009122488321
2.         (theoretically) doesn't require an extra python thread in the training process.,Motivation,False,90,CONTRIBUTOR,False,False,False,0.4333333333,0.1940298507,0.1123439667,0.6153846154,0.008365735399,0.9916342646,0.03692313957,0.0188753671
So it's 'integrated' to my windows environment rather than just a folder on the side somewhere.,Investigation and Exploration,False,95,NONE,True,False,False,0.4102564103,0.1616161616,0.75,0.3333333333,0.117111595,0.882888405,0.00603452119,0.003554247873
"Disable with -Xjit:disableGuardedCountingRecompilation
2. OSR and inlined method redefinition.",Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.3666666667,0.1375,0.5,0.3333333333,0.2368541409,0.7631458591,0.02640472652,0.01413316902
At least the problem on Power was a codegen issue.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.3125,0.2127659574,0.2,0.6615384615,0.6412149142,0.3587850858,0.008463782054,0.002100918508
"Given that the current theory is that the generated code was clearing memory that should have been left alone, it's reasonable that some of the data examined by CODE was corrupted and so a second fault should not be unexpected.",Solution Discussion,True,227,CONTRIBUTOR,False,False,False,1.0,0.8510638298,1.0,0.9653846154,0.7324567567,0.2675432433,0.005094870496,0.01440588944
Am I interpreting this correctly and is this the intended behavior?,Solution Discussion,False,67,NONE,False,False,False,0.2682926829,0.04230769231,0.7922912206,0.8333333333,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
"I think the CODE could be improved, if shuffling is not done only on the _n_ ( = buffer_size) samples in memory, but somehow on the whole list of inputs.",Solution Discussion,True,153,NONE,False,False,False,0.7,0.4179104478,0.6393897365,0.375,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Unless you haven't implemented some input pipeline using Pythons Queue library or something similar it will be additionally the time of loading data from disk into memory and eventually preprocess them.,Solution Discussion,False,202,NONE,False,False,False,0.9393939394,0.4626865672,0.3106796117,0.4,0.2822482794,0.7177517206,0.03560947306,0.002163656075
"If it passes with those removed, we will help with the binary search.",Solution Discussion,False,69,CONTRIBUTOR,False,False,False,1.0,0.07471264368,1.0,0.4044117647,0.7655597575,0.2344402425,4.26e-05,0.000272756665
I looked for the coredumps anywhere I could think of.,Investigation and Exploration,False,53,NONE,True,False,False,0.3225806452,0.101010101,0.7272727273,0.07368421053,0.09912996542,0.9008700346,0.005467138405,0.004133788861
We have a tomcat instance that randomly hangs.,Observed Bug Behaviour,False,46,NONE,True,True,False,0.2666666667,0.1066666667,0.3,0.01694915254,0.0,1.0,0.0,4.66e-05
"I then did the same thing again after removing all URLs, hashtags, and twitter mentions from the data , and then filtering all empty strings (this resulted in a 1.4% data loss in terms of total tweets processed but that's fairly minor).",Observed Bug Behaviour,False,236,NONE,True,True,False,0.7192982456,0.6612903226,0.03083700441,0.4117647059,0.0,1.0,0.0,0.0008157310994
"I've attached the jit log from a run that exhibited the hang, as well as two core dumps (one possibly before the problem manifested, one definitely after)

[bench.zip] URL 

I hope this is helpful cause I'm not sure I can make a minimal test case for you guys, and unfortunately, this code is accessing parts of my job's infrastructure",Investigation and Exploration,False,339,NONE,True,False,False,1.0,0.9253731343,0.75,0.06703910615,0.001478498714,0.9985215013,0.002326266906,0.0001379039292
I have seen it occur after only 6 occurrences.,Bug Reproduction,False,46,NONE,True,False,False,0.6428571429,0.12,0.5714285714,0.1129943503,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
"@mpirvu - I built the liberty images myself, but did it the same way as the official builds so it should be the same.",Usage,False,117,NONE,True,False,False,0.7666666667,0.2875,0.5,0.04901960784,0.01889658797,0.981103412,0.08811482837,0.1088941245
Happy for this decision.,Social Conversation,False,24,NONE,False,False,False,0.1,0.05970149254,0.2857142857,0.5,0.2323183319,0.7676816681,1.0,0.07410076703
"when I run my code on the linux environment directly, everything is OK.",Bug Reproduction,False,71,NONE,False,False,False,0.7647058824,0.1023622047,0.8680351906,0.5,0.8611457952,0.1388542048,0.06974861068,0.3262189553
Maybe because of inlining?,Investigation and Exploration,False,26,MEMBER,True,False,False,0.08888888889,0.04347826087,0.5,0.4150943396,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
However it's the most current available build given the OS I'm using is ubuntu 16.04.,Task Progress,False,85,CONTRIBUTOR,False,False,False,0.3947368421,0.3191489362,0.875,0.2269230769,0.1107806812,0.8892193188,0.009602972199,0.01857337902
Given that I saw a livelock scenario for HotSpot as well (on the customer service),Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,0.2941176471,0.1875,0.75,0.9460784314,0.9704325596,0.02956744036,0.02395737432,0.001040994599
In Tensorboard there is no additional information added with the new API about the status of any queue (how many objects are currently queued).,Solution Discussion,False,143,NONE,False,False,False,0.6,0.3582089552,0.6352288488,0.25,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Nobody seems to ever set r12.,Investigation and Exploration,False,29,CONTRIBUTOR,False,False,False,0.2608695652,0.046875,1.0,0.3,0.03657460334,0.9634253967,0.0001058614156,4.42e-05
"https://ci.eclipse.org/openj9/job/Build_JDK16_ppc64_aix_OpenJDK16/5
CODE",Testing,True,73,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6120218579,0.7739401824,0.2260598176,0.03792151791,0.1713865063
"That's a pretty heavy hammer to use to avoid the issue as that will make all compilations synchronous, not just those needed to address guard failures.",Solution Discussion,False,151,MEMBER,False,False,False,0.962962963,0.2795698925,0.5,0.1081081081,0.08056887105,0.9194311289,0.002398519856,0.002025499661
Wouldn't it be easier if CODE also was an init parameter?,Solution Discussion,True,57,MEMBER,False,False,False,0.7333333333,0.1549295775,0.4746376812,1.0,0.04249542779,0.9575045722,0.0028917672,1.056298833e-05
"Additionally, would be great to get some clarity from the tensorflow team on what API's would be good to initially cover as I'm sure their roadmap has many changes on the way, and I wouldn't want to conflict.",Expected Behaviour,False,208,NONE,False,False,False,1.0,0.5205479452,0.224137931,0.8,0.1037013205,0.8962986795,0.265083066,0.07059453633
I like this suggestion.,Social Conversation,False,23,MEMBER,False,False,False,0.8,0.05633802817,0.1594202899,0.5,0.03731979275,0.9626802072,0.0007677994074,0.001972331007
Is there any setting for Dataset APIs to drop the final smaller batch if any?,Usage,False,77,NONE,False,False,False,0.6818181818,0.223880597,0.7253814147,1.0,0.5764930385,0.4235069615,0.1924676673,0.003144961394
The last is the most confusing to me tbh.,Social Conversation,False,41,MEMBER,False,False,False,1.0,0.1323529412,0.1138211382,1.0,0.2711929838,0.7288070162,0.002183761982,0.004772231277
This is coming out of the open-tracing implementation (Jaeger).,Investigation and Exploration,False,63,NONE,True,False,False,0.4166666667,0.125,0.4285714286,0.6470588235,0.8720495954,0.1279504046,0.001670230889,0.034636993
"If you parse a document using CODE you can get a ValueError, while if i use CODE everything is fine.",Observed Bug Behaviour,True,100,NONE,True,True,False,1.0,0.2105263158,0.03157894737,0.3,0.0,1.0,0.0,0.008598273629
"If you're doing an order of magnitude less than that, then either the problem is outside of spaCy, or the work isn't being scheduled effectively.",Solution Discussion,False,145,MEMBER,False,False,False,0.625,0.1633986928,0.8167202572,1.0,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"Right now it's just collecting dust, so if someone wants to jump in and help with this I'd gladly accept PRs.",Contribution and Commitment,False,109,NONE,False,False,True,22.0,0.301369863,1.0,13.0,1.0,0.0,0.5674118797,0.0
All in all we don't think this is a stop ship issue.,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.2727272727,0.1791044776,0.1666666667,0.8959537572,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
Please note there are examples of where we already generate language bindings.,Motivation,False,78,MEMBER,False,False,False,0.3636363636,0.1643835616,0.9353448276,0.9444444444,0.9204563137,0.0795436863,0.01198832771,0.1095689952
can one install multiple revisions of Cuda since  TF seems to search for specific Rev's?,Solution Discussion,False,88,NONE,False,False,False,0.5517241379,0.125984252,0.4604105572,0.5,0.3805901386,0.6194098614,0.001605430808,0.001735580887
"Yes, as I've mentioned I've only been able to reproduce this bug under normal conditions on a system with very constrained resources.",Bug Reproduction,False,133,CONTRIBUTOR,False,False,False,1.0,0.5106382979,0.2857142857,0.3923076923,0.3641770197,0.6358229803,0.02184783511,0.004874474413
If they change then the hint is invalidated.,Solution Discussion,False,44,CONTRIBUTOR,True,False,False,0.1951219512,0.05479452055,0.5,0.2849162011,0.02874696135,0.9712530387,0.0006509267927,0.009905059007
Using CODE can workaround this issue.,Workarounds,True,37,CONTRIBUTOR,False,False,False,0.8571428571,0.04109589041,1.0,0.9441340782,0.9683929542,0.03160704581,0.0001153317802,2.94e-05
Hmm actually I can reproduce but your snippet was not a complete reproducer.,Bug Reproduction,False,76,MEMBER,False,False,False,0.7222222222,0.1340206186,0.3786982249,0.2,0.8130688094,0.1869311906,2.145525001e-05,0.001310816446
I am working on setting up grinder to accept a jitlog file in order to limit the methods to compile.,Task Progress,False,100,CONTRIBUTOR,False,False,False,0.7692307692,0.2173913043,1.0,0.6540880503,0.5584159107,0.4415840893,0.0004086462498,0.04419068659
Note only one jextract is required per machine/JVM.,Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,0.375,0.12,0.5,0.4971751412,0.0375592212,0.9624407788,0.001119226384,1.62e-05
"We would need to remove the exclude/dontInline options and replace with:
CODE",Solution Discussion,True,78,CONTRIBUTOR,False,False,False,0.2089552239,0.2089552239,1.0,0.2067039106,0.002537756996,0.997462243,0.0002146129899,0.0006464246683
"However, if the issue involves AOT loaded methods, past experience suggests the investigation may take some time to narrow down with an AOT loaded method limitfile approach.",Investigation and Exploration,False,173,CONTRIBUTOR,False,False,False,1.0,0.2903225806,0.6666666667,0.3629343629,0.3849982514,0.6150017486,0.0009250900844,0.03688423691
:),Social Conversation,False,2,NONE,False,False,False,0.03333333333,0.003846153846,0.2698072805,1.0,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
"I think if you're a researcher yourself, and you don't contribute to SpaCy for money I think it should be OK.",Solution Discussion,False,109,NONE,False,False,False,0.5675675676,0.35,0.5775862069,0.08333333333,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
Here you go: https://drive.google.com/open?id=1dvNNXXmYQZqvlQRzkST4DRGMrm5nsfhh,Investigation and Exploration,False,79,NONE,True,False,False,1.0,0.02919708029,1.0,0.6542750929,0.02593765309,0.9740623469,8.65e-05,0.0005470432334
"@mpirvu if you agree, I think we should look at the JIT trace log for the method in question and see if we can understand what the EDO related exception is, and then reason about whether that can be justified or not.",Investigation and Exploration,False,216,CONTRIBUTOR,False,False,False,0.7924528302,0.525,1.0,0.4460784314,0.4977950347,0.5022049653,0.5109021712,0.08681141034
"Yes, since the two maps are merged only if they have identical bytecode info and GC info.",Solution Discussion,False,89,CONTRIBUTOR,False,False,False,1.0,0.265625,1.0,0.475177305,0.7617542679,0.2382457321,0.01003572854,0.1671307049
"This API is very new though, so if you have any feedback, please let us know!",Social Conversation,False,77,CONTRIBUTOR,True,False,True,16.0,0.2388059701,0.9930651872,20.0,1.0,0.0,0.02385162338,0.0
"Second, the file format it self must be seekable(aka. splitable).",Solution Discussion,False,65,CONTRIBUTOR,False,False,False,0.4545454545,0.1492537313,0.4882108183,0.7142857143,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
@jnothman I suppose you acknowledge there *can* be a difference in practice?,Motivation,False,76,CONTRIBUTOR,True,False,False,0.4137931034,0.1875,0.2022058824,0.125,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
"The problem is around the fact that in Java9 the sun.misc.Unsafe implementation was moved to the jdk.internal.misc package, with a set of wrappers remaining in sun.misc.Unsafe for compatibility.",Investigation and Exploration,False,194,CONTRIBUTOR,False,False,False,0.9375,0.447761194,0.3333333333,0.8938547486,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"If you have a better idea, let me know.",Social Conversation,False,39,NONE,True,False,False,0.25,0.09090909091,0.5,0.5052631579,0.1973084735,0.8026915265,0.001977734278,0.003898730278
@iamgroot42 do you want to make a PR with the needed changes?,Contribution and Commitment,False,61,MEMBER,False,False,False,0.8571428571,0.01736613603,0.3663366337,0.3333333333,0.07180384202,0.928196158,3.547972203e-05,0.003490777468
@DylanDmitri SCREEN_NAME  You need Cuda 9.0.,Solution Discussion,False,44,NONE,False,False,False,0.3181818182,0.05511811024,0.2023460411,0.25,0.2838346655,0.7161653345,3.697445435e-05,0.5779195954
"Also, I noticed you said it was a placeholder and I didn't need to do it manually.",Usage,False,82,NONE,False,False,False,0.5666666667,0.06538461538,0.26124197,0.6363636364,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
Make sure Oracle is on the OS path when you try running with OpenJ9.,Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.7777777778,0.1414141414,1.0,0.6385964912,0.2090152874,0.7909847126,0.004409374785,0.007850146101
I should have been more specific.,Social Conversation,False,33,NONE,False,False,False,0.3157894737,0.04724409449,0.3519061584,0.3333333333,0.3589581559,0.6410418441,0.02559963321,0.2554187912
I am currently using a CODE because it does not take CODE by itself.,Usage,True,68,NONE,False,False,False,1.0,0.05384615385,0.02997858672,1.0,0.1735156386,0.8264843614,0.02257012206,4.717771256e-05
fyi @fengxue-IS,Contribution and Commitment,False,15,MEMBER,True,False,False,0.03614457831,0.03260869565,1.0,0.08176100629,0.3061735033,0.6938264967,0.116554805,0.06814608357
"@oxwsds As you said, I change input args cell of tf.contrib.legacy_seq2seq.embedding_attention_seq2seq to two different cell {encoder_cells, decoder_cells}.",Solution Discussion,False,156,NONE,False,False,False,0.8095238095,0.02460202605,0.6699669967,0.1666666667,0.226528822,0.773471178,0.005343317335,0.08527687651
@jnothman how could we discover? ;),Investigation and Exploration,False,35,MEMBER,True,False,False,1.0,0.08823529412,0.2154471545,1.0,0.3165024357,0.6834975643,0.09406233598,0.03928665156
Fixed for the 0.15 release via https://github.com/eclipse/openj9/pull/6401,Action on Issue,False,74,CONTRIBUTOR,False,False,True,1.0,0.05109489051,1.0,1.0,1.0,0.0,0.03410013252,0.0
I also assume that the dataframes and transforms are intended to be closely integrated with estimators?,Solution Discussion,False,103,NONE,False,False,False,0.5333333333,0.2388059701,0.4507628294,0.4444444444,0.402192445,0.597807555,0.001827732055,0.008699923145
So as a summary of the actual questions we need to answer (in this order!):,Solution Discussion,False,75,CONTRIBUTOR,True,False,False,0.3,0.234375,0.6801470588,0.1,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
Hence we could be removing a entry other than the one we were intending.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.5833333333,0.1538461538,0.8,0.6468531469,0.8573774451,0.1426225549,0.001731608401,0.0007841536263
"Java -version output
--------------------

CODE

Summary of problem
------------------",Observed Bug Behaviour,True,92,NONE,True,True,False,0.3513513514,0.09489051095,0.2,0.007434944238,0.0,1.0,0.0,5.34e-05
"Anyhow... yes, I can upload the copy of OpenJRE.",Social Conversation,False,48,NONE,True,False,False,0.3461538462,0.09090909091,0.8571428571,0.5649122807,0.1993600534,0.8006399466,0.003371874835,0.005835937215
"I still have to run this on a big dataset and check if there's any performance improvement, but at least it seems to execute correctly.",Usage,False,135,NONE,False,False,False,0.4901960784,0.3731343284,0.9570041609,0.75,0.9935262739,0.006473726055,0.0468741252,0.02821456383
Is the compiled code loading r2 before calling the helper?,Solution Discussion,False,58,CONTRIBUTOR,False,False,False,0.7142857143,0.078125,0.5,0.2777777778,0.03650166363,0.9634983364,0.006548591463,0.0001058614156
"Unlikely that the difference would be the inliner change if it is platform specific, but I've been proven wrong before.",Investigation and Exploration,False,119,CONTRIBUTOR,False,False,False,1.0,0.3134328358,1.0,0.3988439306,0.005219068791,0.9947809312,4.36e-05,5.27e-05
"However, this segment fault is only triggered by the STS4 (sts-4.0.2.CI-B1362) from the VM image instead of sts-4.0.2.CI-B1373.",Investigation and Exploration,False,127,CONTRIBUTOR,False,False,False,0.3636363636,0.202020202,0.9166666667,0.849122807,0.803200419,0.196799581,0.3518178539,0.2306492075
So I would really appreciate if you could let me to feed the data **freely** in terms of **when** and **how**.,Expected Behaviour,False,110,NONE,False,False,False,1.0,0.3134328358,0.9167822469,0.5555555556,0.9479523715,0.05204762849,0.2620248075,0.005625200409
one environment my Mac desktop and another one that I had set up with docker running on my Mac.,Investigation and Exploration,False,95,NONE,False,False,False,0.9047619048,0.2794117647,0.6056910569,1.0,0.5798125448,0.4201874552,0.01015048758,0.0002044255366
I don't think safe point is involved here.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,1.0,0.1066666667,1.0,0.6553672316,0.08465484106,0.9153451589,2.54e-05,0.0003606031438
Something to do with JMX connection issues.,Investigation and Exploration,False,43,NONE,True,False,False,0.2692307692,0.07070707071,0.4285714286,0.5543859649,0.1993600534,0.8006399466,0.003371874835,0.005835937215
To elaborate: VP transforms direct calls to CODE or CODE with a fixed-type object into a CODE followed by calls to CODE.,Solution Discussion,True,120,CONTRIBUTOR,False,False,False,0.323943662,0.247311828,0.3333333333,0.7065637066,0.5586206714,0.4413793286,0.0008281048336,0.009049469938
"If I cancel out the scoring=... line, the parallel execution works.",Investigation and Exploration,False,67,NONE,True,True,False,0.4782608696,0.1134020619,0.01183431953,0.5714285714,0.0,1.0,0.0,5.796890697e-05
I also saw that the tutorial is deprecated.,Investigation and Exploration,False,43,NONE,False,False,False,0.4705882353,0.01157742402,0.7689768977,0.375,0.2742562411,0.7257437589,0.006610382458,0.005351860947
"So similar results - the machine itself is a bit newer Dell model with the following specs:

CODE",Testing,True,99,NONE,True,False,False,0.4,0.1313868613,1.0,0.6914498141,0.03588162782,0.9641183722,0.01430180553,0.007829219811
"It means that class can be unloaded if it or any other class in this Classloader have no instances (objects) in the heap
- If GC makes a decision to unload Classloader(s)",Investigation and Exploration,False,171,CONTRIBUTOR,False,False,False,0.3516483516,0.3516483516,0.2857142857,0.6853146853,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
It worked for me using CODE.,Solution Discussion,True,28,NONE,False,False,False,1.0,0.008683068017,0.6303630363,1.0,0.1966981854,0.8033018146,0.01155879506,0.001115297349
"Efficiency is not really a problem here: only a small percentage of the encountered tokens will be triggering this logic, so we don't have to make it blazing fast, and it's easy to make sure we operate on contiguous buffers.",Solution Discussion,False,224,MEMBER,False,False,False,1.0,0.6451612903,0.3920704846,0.7777777778,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
in #1044 SCREEN_NAME  said he still prefers CODE.,Solution Discussion,True,49,MEMBER,False,False,False,0.5,0.1267605634,0.6195652174,0.4,0.06495783385,0.9350421661,0.02110253454,0.000167358443
be careful conda users.,Social Conversation,False,23,NONE,False,False,False,0.1111111111,0.03149606299,0.7653958944,0.25,0.5795291024,0.4204708976,0.1256221876,1.0
Just put it in seperate collection-keys: CODE CODE,Usage,True,50,NONE,False,False,False,1.0,0.03461538462,0.3147751606,1.0,0.2839877878,0.7160122122,0.1141986754,3.449553176e-05
"So excited that you figured this out, Cathy!!",Social Conversation,False,45,NONE,False,False,False,1.0,0.06015037594,1.0,0.9592875318,0.921037339,0.07896266095,0.001354250294,0.0003748407846
ð,Social Conversation,False,1,NONE,False,False,False,1.0,0.01369863014,0.4676724138,1.0,0.555896108,0.444103892,0.02505292255,0.05261868429
Not really no.,Social Conversation,False,14,MEMBER,False,False,False,0.08571428571,0.03092783505,0.7485207101,0.5,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
Crash or OutOfMemoryError when using AsyncGetCallTrace(),Observed Bug Behaviour,False,56,NONE,True,True,False,0.1176470588,0.05769230769,0.08333333333,0.005524861878,0.0,1.0,0.0,0.01118041169
And I am running it in a multi-gpu fashion (for training).,Usage,False,58,NONE,False,False,False,0.4615384615,0.04615384615,0.199143469,0.1875,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"This way, TF could better optimize/parallelize the execution, and all solutions would scale.",Solution Discussion,False,92,CONTRIBUTOR,False,False,False,0.3043478261,0.2089552239,0.1983356449,0.8181818182,0.04271149234,0.9572885077,0.001149776305,0.005164577321
If anyone interested: https://hanxiao.github.io/2017/07/07/Get-10x-Speedup-in-Tensorflow-Multi-Task-Learning-using-Python-Multiprocessing/,Solution Discussion,False,138,NONE,False,False,False,0.2222222222,0.05970149254,0.826629681,1.0,0.7158615465,0.2841384535,0.6886518758,0.01649590529
"To obtain that classloader the j9method being inserted would need to have a valid constantpool address, otherwise that check would segfault itself.",Investigation and Exploration,False,147,CONTRIBUTOR,False,False,False,0.511627907,0.2417582418,0.6,0.2762237762,0.6007887623,0.3992112377,0.01222678832,0.05114946292
Updated original comment with more info and code.,Social Conversation,False,49,NONE,False,False,False,0.4444444444,0.0824742268,0.4763313609,1.0,0.8484897144,0.1515102856,2.737530974e-05,1.942892084e-05
"---------------------------------------------
CODE
Dumps: https://ibm.box.com/s/ra34mxfgz1mh8bih1pw1dqqeu5rnq2pb",Testing,True,114,NONE,True,True,False,0.1666666667,0.06593406593,1.0,0.01048951049,0.0,1.0,0.0,0.003603409297
"Either when 
export CODE is set
or -O0 is included in VMDEBUG.",Investigation and Exploration,True,64,CONTRIBUTOR,True,False,False,0.1772151899,0.109375,0.2857142857,0.2444444444,0.03198961031,0.9680103897,0.001540680846,0.006548591463
I will have an update later today.,Task Progress,False,34,CONTRIBUTOR,True,False,False,1.0,0.0546875,1.0,0.8166666667,0.2033334187,0.7966665813,0.009658941575,0.01920965971
"I tried running grinders using a custom build with more debug info printed, and I was not able to reproduce the failure.",Bug Reproduction,False,120,CONTRIBUTOR,False,False,False,0.8461538462,0.2391304348,0.5,0.106918239,0.3379377875,0.6620622125,0.01472771154,0.01482991505
"If there's an issue with storage, I'm sure we can find some temporary space for you to upload to.",Investigation and Exploration,False,97,MEMBER,False,False,False,0.7307692308,0.1919191919,1.0,0.7754385965,0.3063864289,0.6936135711,0.001414404228,1.0
"It collects the OS libraries into a zip file so we can look at the core on other machines and we don't need to use the same OS where the crash occurred.

https://www.eclipse.org/openj9/docs/tool_jextract/",Investigation and Exploration,False,206,CONTRIBUTOR,False,False,False,1.0,0.3269230769,1.0,0.0773480663,0.007061211921,0.9929387881,0.01118041169,8.41e-06
It may not be the right place to ask but I'd like to know why others developers look for a nodejs api/add-on for tensorflow ?,Motivation,False,125,NONE,False,False,False,0.8181818182,0.3698630137,0.7715517241,0.75,0.7541437327,0.2458562673,0.8203682945,0.005981548758
"Still, this code worked fine last Friday!",Observed Bug Behaviour,False,41,NONE,False,False,False,0.1627906977,0.07216494845,0.426035503,0.75,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"I will switch to the master branch to see if it work by adding the ""reuse"" parameter, thanks.",Solution Discussion,False,93,NONE,True,False,False,1.0,0.02604920405,0.08910891089,1.0,0.001752946722,0.9982470533,0.0008163895906,0.0002569016662
I am away on vacation next week and will be back to clean up the remaining issues on JDK11 with VS2017.,Task Progress,False,103,CONTRIBUTOR,False,False,False,0.2592592593,0.1779661017,0.5,0.6,0.4321547048,0.5678452952,0.004460705601,0.0001798820974
I wonder if that's causing a race condition.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.380952381,0.04232804233,0.6666666667,0.1828571429,0.308244607,0.691755393,0.01265320363,0.0005070055754
Puzzling part is that it was working last Friday!!!,Observed Bug Behaviour,False,51,NONE,False,False,False,0.2093023256,0.09278350515,0.4082840237,0.25,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
@AMairesse The first problem was solved with https://github.com/tensorflow/tensorflow/commit/2139e7d8b10764f2245f34548f6fbfc25d29bff8,Task Progress,False,133,NONE,False,False,False,1.0,0.1194029851,0.9375866852,1.0,0.9701878005,0.02981219955,0.0001913748963,0.04231472009
CODE,Bug Reproduction,True,4,NONE,False,False,False,0.04761904762,0.007874015748,0.3167155425,0.1818181818,0.3566928644,0.6433071356,0.1351135301,0.002261357628
Well ok...,Social Conversation,False,10,MEMBER,False,False,False,0.125,0.02816901408,0.9094202899,0.5,0.07859750583,0.9214024942,1.473905348e-05,2.105579069e-06
"@honnibal Great, thanks very much for these improvements.",Social Conversation,False,57,NONE,False,False,False,0.6153846154,0.1290322581,0.9295154185,0.3333333333,0.6578574086,0.3421425914,0.0002159883295,0.09426527661
CODE,Solution Discussion,True,4,MEMBER,False,False,False,0.03125,0.01408450704,0.384057971,0.6666666667,0.03962850149,0.9603714985,7.05368988e-06,8.078405027e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.25,1.0,0.181129828,0.818870172,0.2582538711,0.06623967139
Can we log some of the problematic methods to see if the transformation has occurred in them?,Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.5862068966,0.1827956989,0.6666666667,0.7567567568,0.6101357533,0.3898642467,0.007960250968,0.001063107557
"https://ci.eclipse.org/openj9/view/Test/job/Grinder/712 - multiheap:22 x 3 unlimited - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/709 - multiheap:24 x 3 unlimited - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/710 - multiheap:28 x 3 unlimited - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/711 - multiheap:32 x 3 unlimited - failed",Testing,False,378,CONTRIBUTOR,True,False,False,1.0,0.435483871,1.0,0.4514767932,0.2995913897,0.7004086103,0.0006504928285,0.01957604203
"I primarily run on MacOS which is the environment where I am currently seeing this - for example I had this again just now

I tried 'java -Xcheck:dump' but that by itself reports a usage error, and combined with -jar xxx doesn't elicit any additional output on MacOS

I tried adding back the options to generate a dump

CODE
but then just get
CODE

The core files are NOT generated, even with 'ulimit -c unlimited' - nothing at the paths given or under /cores

I've therefore unset the option again, and gone back to skipping the execution of apache rat - this is the only component so far I've seen the error in, but it occurs fairly often in my environment",Investigation and Exploration,True,670,NONE,True,False,False,1.0,0.962406015,1.0,0.2493638677,0.2201264881,0.7798735119,0.02955805577,0.003175723071
We probably need to raise a CODE if CODE.,Potential New Issues and Requests,True,41,MEMBER,False,False,False,1.0,0.1323529412,0.3861788618,1.0,0.5134673415,0.4865326585,0.0001312190945,0.01113877455
What SCREEN_NAME  suggests is very useful for segmentation tasks where both labels and images need to be augmented.,Motivation,False,115,NONE,False,False,False,0.5135135135,0.2835820896,0.6019417476,0.5,0.4981987086,0.5018012914,0.0130944201,0.02428476177
I'll let you know.,Social Conversation,False,18,NONE,False,False,False,0.09302325581,0.005788712012,0.3267326733,1.0,0.07123442229,0.9287655777,0.0001133215202,0.0004233834388
I'm back home with my significantly slower internet and I've confirmed this seems to be a JIT bug.,Investigation and Exploration,False,98,NONE,True,False,False,0.3064516129,0.2835820896,0.25,0.05586592179,0.001478498714,0.9985215013,0.002326266906,0.0001379039292
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1573275862,1.0,0.04256462615,0.9574353738,0.06837007389,0.02889078976
What operations that API should support is an open question; knowing the use cases required by spaCy or other tools would be extremely useful!,Potential New Issues and Requests,False,142,CONTRIBUTOR,False,False,False,0.8571428571,0.6315789474,0.7226277372,0.5,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
Or are you using TensorFlow.js?,Potential New Issues and Requests,False,31,NONE,False,False,False,0.3333333333,0.06849315068,0.9612068966,1.0,0.9680225341,0.03197746591,0.0002863848778,0.000479816395
-- Eric,Social Conversation,False,7,NONE,True,False,False,0.0487804878,0.03225806452,0.154185022,1.0,0.01937624511,0.9806237549,0.02003548886,0.01526654747
@kdvolder The best way forward may be to create the VM image and share it with us as we've had no luck reproducing the crash.,Investigation and Exploration,False,125,MEMBER,False,False,False,1.0,0.2626262626,0.5,0.7719298246,0.3063864289,0.6936135711,0.001414404228,1.0
I believe we have more problems with fake Exclusive then benefits from it.,Social Conversation,False,74,CONTRIBUTOR,False,False,False,0.1428571429,0.1428571429,0.9642857143,0.7517482517,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
Also note that excluding the entire test rather than just rc021 could hide other issues.,Solution Discussion,False,88,CONTRIBUTOR,False,False,False,1.0,0.1612903226,1.0,0.972972973,0.9195635971,0.08043640294,0.003058765602,0.2682425527
We're talking about 8GB provisioned PowerVMs on a heavily cached system.,Social Conversation,False,72,CONTRIBUTOR,False,False,False,0.5,0.2553191489,0.4285714286,0.3961538462,0.3641770197,0.6358229803,0.02184783511,0.004874474413
So finally I used CODE to be the function like CODE in [tensorflow/models/tutorials/rnn/ptb/ptb_word_lm.py#L112](https://github.com/tensorflow/models/blob/master/tutorials/rnn/ptb/ptb_word_lm.py#L112).,Solution Discussion,True,201,NONE,False,False,False,1.0,0.03762662808,0.498349835,0.75,0.08979967049,0.9102003295,0.01683649271,0.03567836101
"With some luck there is not much work left:
- make sure everything is still in order.",Solution Discussion,False,86,CONTRIBUTOR,False,False,False,0.2179487179,0.1164383562,0.25,0.7877094972,0.8996448583,0.1003551417,0.0001470921313,0.0005171483439
@zl-wang  OpenJ9 on Linux PPC64 LE uses gcc not xlc.,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.1967213115,0.06896551724,0.3333333333,0.2794117647,0.7587398458,0.2412601542,0.001068346158,0.0004175811221
I tracked the file accesses to CODE folder with [Process Monitor] URL  and there were total of 5412 tracked events.,Investigation and Exploration,True,115,NONE,True,False,False,1.0,0.1532846715,0.25,0.6579925651,0.02630162169,0.9736983783,0.0005470432334,9.69e-05
"The core file that is produced is never saved on disk, no matter what machine I've ran it on.",Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,0.6666666667,0.4255319149,0.6666666667,0.3115384615,0.3215728023,0.6784271977,0.9710937657,0.01822418003
We're starting to consider the possibility that there's some timing related issue related to the SCC APIs.,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.3469387755,0.2741935484,0.5,0.6393442623,0.8310912867,0.1689087133,0.008832756273,0.001165656648
Let's try OneDrive -> https://1drv.ms/u/s!ApVqcIDT57-flq5Z_z3td2RT1aZGpw?e=g8Xf6Q,Social Conversation,False,81,NONE,True,False,False,0.5714285714,0.03007518797,1.0,0.3002544529,0.2294323002,0.7705676998,0.004233616147,0.006261517055
Then I would encourage our friends in the community to veneer the library.,Contribution and Commitment,False,74,MEMBER,False,False,False,0.3939393939,0.1780821918,0.9288793103,0.7777777778,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"Yes, now in you code you need to specify to rnn_cells.",Solution Discussion,False,54,NONE,False,False,False,1.0,0.01591895803,0.8217821782,0.5,0.290243382,0.709756618,0.0009023003557,0.008897341264
"Instead of a CODE container, I would prefer to have a rich set of containers offering different trade-off with respect to memory/time complexity.",Expected Behaviour,True,145,NONE,False,False,False,0.8333333333,0.3731343284,0.1622746186,0.6285714286,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"no matter the actual call is made through bl or bctrl, the ABI definition needs to be fulfilled (AIX glink or LE plink or something code for bl, for example).",Solution Discussion,False,158,CONTRIBUTOR,False,False,False,1.0,0.234375,0.3333333333,0.4055555556,0.03713237758,0.9628676224,0.000131199442,0.0001129474738
Critical to see: https://devtalk.nvidia.com/default/topic/1000340/cuda-setup-and-installation/-quot-nvidia-smi-has-failed-because-it-couldn-t-communicate-with-the-nvidia-driver-quot-ubuntu-16-04/post/5243047/#5243047,Motivation,False,216,NONE,False,False,False,0.1081081081,0.03149606299,0.3841642229,0.2727272727,0.3802587264,0.6197412736,0.006558528713,0.00183836987
The problem is we also want the inverse mapping.,Investigation and Exploration,False,48,MEMBER,False,False,False,0.225,0.1451612903,0.3524229075,0.5277777778,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"Aha, will launch a grinder to check (after OMR promotion), yes, https://github.com/eclipse-openj9/openj9/issues/13162#issuecomment-947040043 shows CODE though.",Investigation and Exploration,True,159,MEMBER,True,False,False,1.0,0.1630434783,1.0,0.5094339623,0.4981911402,0.5018088598,0.0008332355771,0.009822949607
"For a lot of my use cases, my input data is either 1. not on the file system, or 2. require complex preprocessing unavailable in TensorFlow.",Motivation,False,140,CONTRIBUTOR,False,False,False,0.8666666667,0.3880597015,0.1026352288,0.07692307692,0.008365735399,0.9916342646,0.03692313957,0.0188753671
"I have no updates - @mpirvu, let me know if you want something from me.",Task Progress,False,71,NONE,True,False,False,1.0,0.175,1.0,0.6078431373,0.82814466,0.17185534,0.1280321867,0.0014034579
Could you help us debug?,Contribution and Commitment,False,24,MEMBER,False,False,False,0.5,0.07352941176,0.5284552846,0.6666666667,0.5676858537,0.4323141463,0.000437512086,0.005325768668
"I think I personally would never need this max-value based method, but the OneHotEncoder has been like that for many years (for good reason or not?).",Expected Behaviour,False,149,CONTRIBUTOR,True,False,False,0.9310344828,0.421875,0.2205882353,0.75,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
"I think you should use symbol link from ''cuda/''   to ''cuda/9.1"",or your cuda version is too new to tensorflow master branch",Solution Discussion,False,126,NONE,False,False,False,1.0,0.1811023622,0.0293255132,1.0,0.01525067408,0.9847493259,0.1834480158,0.08816336793
Given the limited resolution of operating system timers and the aforementioned limitations of timestamps no scheme based on timestamp checking can ensure a file read twice at two different points in time is actually the same file.,Solution Discussion,False,230,CONTRIBUTOR,False,False,False,1.0,0.2700729927,1.0,0.9591078067,0.0729306553,0.9270693447,0.002656948816,0.170274971
"Hereby my reproduction case:

You need three terminals, then in terminal:
1. Run CODE
2. Run CODE
3. Run CODE

Once the output from terminal 2 stops, the hang has been hit.",Bug Reproduction,True,179,NONE,True,False,False,0.9024390244,0.4933333333,0.4,0.7627118644,0.08541061734,0.9145893827,2.19e-06,2.98e-05
A big +1 to this as well!,Social Conversation,False,25,MEMBER,False,False,False,0.25,0.0752688172,1.0,0.9305019305,0.8498306174,0.1501693826,0.005725859998,0.01048932789
"@zl-wang I know it seems straightforward to remove CODE, but this is a patch to the OpenJDK code, which we are trying to avoid.",Solution Discussion,True,127,CONTRIBUTOR,False,False,False,1.0,0.1436781609,0.3333333333,0.6323529412,0.772822397,0.227177603,8.08e-05,0.0002421616125
I had three goals in mind for the project:,Solution Discussion,False,42,NONE,False,False,True,9.0,0.1232876712,0.9827586207,5.0,1.0,0.0,0.5674118797,0.0
OK.,Social Conversation,False,3,CONTRIBUTOR,False,False,False,0.1,0.006849315068,0.5,0.3798882682,0.03212209259,0.9678779074,2.02e-05,0.2238931518
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4719827586,1.0,0.5629089105,0.4370910895,0.07356638806,0.04294821502
Let's the do something useful for community in best wishes :),Social Conversation,False,61,CONTRIBUTOR,False,False,False,0.1506849315,0.1506849315,0.7306034483,1.0,0.7054246115,0.2945753885,0.001234509156,0.0009450258333
"For Images and especially larger batch size, this might take quite a while.",Solution Discussion,False,75,NONE,False,False,False,0.3939393939,0.1940298507,0.3120665742,0.6,0.2822482794,0.7177517206,0.03560947306,0.002163656075
As is I have not been able to reproduce this on any baremetal machines or Power VMs with more than 8GB of Ram.,Bug Reproduction,False,110,CONTRIBUTOR,False,False,False,0.8,0.5106382979,0.3333333333,0.3,0.3215728023,0.6784271977,0.9710937657,0.01822418003
"I used a ubuntu virtual instance in google cloud compute engine (bumpy, spicy, scikit etc were not the most up to date).",Observed Bug Behaviour,False,120,NONE,False,False,False,0.7857142857,0.2268041237,0.6479289941,0.09090909091,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
have we seen this before:,Potential New Issues and Requests,False,25,MEMBER,False,False,False,1.0,0.07352941176,0.4390243902,0.5,0.5348647334,0.4651352666,4.558136965e-05,0.02112247576
"I don't get any error messages because it doesn't crash, it just stops doing any meaningful.",Observed Bug Behaviour,False,92,NONE,True,False,False,0.8888888889,0.1649484536,0.150887574,1.0,0.009500960535,0.9904990395,1.797870487e-05,0.006789037082
"I know this feature may be too far away, but I hope the new design could allow such possible future feature.",Solution Discussion,False,108,CONTRIBUTOR,False,False,False,0.7,0.3134328358,0.1192787795,1.0,0.008365735399,0.9916342646,0.03692313957,0.0188753671
The input pipeline is definitely thesteepest part of the learning curve.,Motivation,False,72,NONE,False,False,False,0.3666666667,0.1641791045,0.1345353675,0.05714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
I think we still need to understand the whole flow: which opcodes and evaluators are involved.,Investigation and Exploration,False,94,CONTRIBUTOR,False,False,False,1.0,0.3404255319,0.5,0.6961538462,0.6431414257,0.3568585743,0.0002776418192,0.002558884395
What worked for me with tensorflow-gpu 1.6:,Solution Discussion,False,43,NONE,False,False,False,0.347826087,0.06299212598,0.4985337243,0.3333333333,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
@syllog1sm yes.,Task Progress,False,15,NONE,False,False,False,0.1818181818,0.03333333333,0.724137931,0.3333333333,0.4484783114,0.5515216886,0.0001265968096,0.003118709101
-         Simpler to implement,Solution Discussion,False,30,NONE,False,False,False,0.1428571429,0.02614379085,0.1286173633,0.4,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Or you may try to run UPDATE_OPS yourself explicitly as one [here](https://github.com/tensorflow/tensorflow/issues/7469#issuecomment-279646674)CODE,Usage,True,147,CONTRIBUTOR,False,False,False,0.3333333333,0.05769230769,0.6102783726,0.6,0.5080421357,0.4919578643,0.008986491854,0.001406808951
"Step 7. returns 1

we end up with a vector:",Solution Discussion,False,45,CONTRIBUTOR,False,False,False,0.1506849315,0.0582010582,0.9,0.9885714286,0.5018185814,0.4981814186,0.001953523523,1.0
"In all failed compiles, there are field load/store of the same class before the one that's causing the crash, and the defining class of the field is the class of outer most method, which means that validation for the class should succeed.",Solution Discussion,False,238,CONTRIBUTOR,False,False,False,1.0,0.6935483871,0.2,0.349726776,0.6389467947,0.3610532053,0.00359446461,0.01517828221
@dmcmorris I am seriously interested in lending a hand!,Contribution and Commitment,False,55,NONE,False,False,False,0.4736842105,0.1232876712,0.3232758621,0.3333333333,0.3515690911,0.6484309089,0.003344771761,0.1714133005
"However, disabling piping will disable piping for all processes, so keep that in mind.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.21875,0.1052631579,1.0,0.2468193384,0.2149926436,0.7850073564,0.0009205468343,0.02955805577
We need to have a solution in place that works as seamless as possible across all environments.,Solution Discussion,False,95,CONTRIBUTOR,False,False,False,1.0,0.1111111111,0.9549839228,1.0,0.201856209,0.798143791,1.089920072e-05,6.508280685e-05
https://github.com/eclipse-openj9/openj9/pull/14308,Solution Discussion,False,51,CONTRIBUTOR,False,False,False,1.0,0.009615384615,1.0,0.9723756906,0.3305859537,0.6694140463,5.71e-05,0.05952597194
For some reason adding CODE is making things slower on your system.,Investigation and Exploration,True,67,CONTRIBUTOR,False,False,False,0.5,0.08759124088,0.25,0.5204460967,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"### Suspect Code

- CODE: https://github.com/eclipse/omr/blob/165a4a81709504806f14bd8e540d97962cafe5f5/gc/base/standard/Scavenger.cpp#L2483
- CODE: https://github.com/eclipse/omr/blob/165a4a81709504806f14bd8e540d97962cafe5f5/gc/base/standard/Scavenger.cpp#L2304
- CODE: https://github.com/eclipse/omr/blob/165a4a81709504806f14bd8e540d97962cafe5f5/gc/base/standard/Scavenger.cpp#L2208",Investigation and Exploration,True,387,CONTRIBUTOR,False,False,False,0.2444444444,0.1466666667,1.0,0.6101694915,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
Thanks for the lead but it did not seem to help.,Social Conversation,False,48,CONTRIBUTOR,False,False,False,0.7857142857,0.0632183908,0.3333333333,0.125,0.7214571752,0.2785428248,0.00724878302,0.01330093329
P.S: the URL is not working.,Solution Discussion,False,28,NONE,False,False,False,0.24,0.1,0.8620689655,0.6666666667,0.5355364529,0.4644635471,0.03798484879,0.2918907521
"I inclined to multiheap,considersize for moderate RSS plus most of the performance benefit.",Solution Discussion,False,91,CONTRIBUTOR,False,False,False,0.28,0.2258064516,0.8333333333,0.9240506329,0.9167594621,0.08324053794,0.01000533813,0.01893430022
I wonder what else we did going from 14.0 to 14.2 that compensates for the timestamp checking overhead (at least on Linux).,Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.1605839416,1.0,0.7620817844,0.04441215903,0.955587841,1.41e-05,3.48e-05
It would be interesting to see if just have the ROM classes in the cache slows things down.,Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,0.75,0.1313868613,0.5,0.5278810409,0.02511107793,0.9748889221,0.006018717906,8.32e-05
Is there something more I could do or test with my setup?,Social Conversation,False,57,NONE,True,False,False,0.5714285714,0.08759124088,0.6666666667,0.4312267658,0.02062277479,0.9793772252,4.56e-06,6.05e-05
"Repro rate with following command was 4/7:

CODE

Console:

CODE",Bug Reproduction,True,70,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.8193384224,0.8230077456,0.1769922544,0.00412079602,3.68e-06
"And I know, that for many cases asynchronous preprocessing is not possible, but for the cases it is (simple training of image classification CNN) TFs input queues help quite a lot.",Solution Discussion,False,180,NONE,False,False,False,0.8611111111,0.4626865672,0.3245492372,1.0,0.2825713456,0.7174286544,0.000434665323,0.0005756516163
"From my searching, this thread is the best resource for how to use it.",Social Conversation,False,70,NONE,False,False,False,0.4516129032,0.05384615385,0.3790149893,0.2,0.3712524908,0.6287475092,0.06886363297,0.000473907732
"So answers on your questions if I understand them correctly:

>1. Is the following true: J9Method's memory  can be freed **iff**",Social Conversation,False,130,CONTRIBUTOR,False,False,False,0.2527472527,0.2527472527,0.4642857143,0.7027972028,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
at the first CODE suggesting there is [a platform conflict] URL .,Potential New Issues and Requests,True,65,MEMBER,False,False,False,0.5789473684,0.1617647059,0.4552845528,0.4285714286,0.5420075121,0.4579924879,0.02112247576,0.002129547778
"trace output:
CODE
Stack slots:
CODE
test output:
CODE
I've uploaded the core file to box so JIT members can help with investigating from JIT side",Task Progress,True,152,CONTRIBUTOR,False,False,False,1.0,0.3586956522,1.0,0.6855345912,0.5752476289,0.4247523711,0.007881921876,0.05054425471
"See for example this:

./java -verbose:gc,sizes -Xmx64M  -Xmos32M  -Xgcpolicy:gencon

  -Xmns10880K     initial new space size
  -Xmnx16M        maximum new space size
  -Xms43648K      initial memory size
  -Xmos32M        initial old space size
  -Xmox54656K     maximum old space size       
  -Xmx64M         memory maximum

vs 

./java -verbose:gc,sizes -Xmx64M  -Xmos32M  -Xgcpolicy:balanced

  -Xmns16M        initial new space size
  -Xmnx16M        maximum new space size
  -Xms32M         initial memory size
  -Xmos32M        initial old space size
  -Xmox64M        maximum old space size
  -Xmx64M         memory maximum

While, having different meaning for Gencon and Balanced (old space vs all space), I think it would still be ok to use it.",Solution Discussion,False,778,CONTRIBUTOR,False,False,False,1.0,1.0,0.8333333333,0.1061452514,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
What do other people think?,Social Conversation,False,27,MEMBER,False,False,False,1.0,0.07042253521,0.1630434783,1.0,0.03731979275,0.9626802072,0.0007677994074,0.001972331007
if use pycharm - add it to interpreter,Solution Discussion,False,38,NONE,False,False,False,0.3888888889,0.05511811024,0.8768328446,1.0,0.8876696556,0.1123303444,0.3262189553,0.2682755484
I fix him for now by:,Workarounds,False,21,NONE,False,False,False,1.0,0.04724409449,0.2697947214,0.1666666667,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
"After fixing the issue with CODE by adding vm/lib to the libpath on Windows,  I encountered an issue with unresolved external symbol with JVM_BeforeHalt (only supported since JDK11)
CODE

Given that JVM_BeforeHalt is supported since JDK11,  need to check whether it failed to locate the related .lib file or something else missing in code.",Potential New Issues and Requests,True,342,CONTRIBUTOR,False,False,False,1.0,0.5,1.0,0.6727272727,0.5491622394,0.4508377606,0.07975398056,0.00614979155
@byrony can you provide code to reproduce?,Bug Reproduction,False,42,MEMBER,False,False,False,1.0,0.07216494845,0.9201183432,0.5,0.9967708885,0.003229111537,0.001411219069,0.007211566446
"As i know, there is a function numpy.save for saving an array to a binary file in .npy format~~",Bug Reproduction,False,95,NONE,False,False,False,1.0,0.2676056338,0.02923976608,1.0,0.003878707231,0.9961212928,8.510605321e-05,0.007997893245
"However, CODE evaluates the dynamic, real-time shape of a tensor, so I thought this should work.",Usage,True,96,NONE,False,False,False,0.4857142857,0.2537313433,0.7517337032,0.4,0.5818615051,0.4181384949,0.00639731668,0.009301532526
That value comes from the delta between the value of the counter initially to the moment it encounters the read-only memory.,Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,0.7586206897,0.4680851064,0.9166666667,0.5923076923,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"@DanHeidinga Yes, the catch code is only interested in the top method in the map, since that will be the catcher.",Solution Discussion,False,113,CONTRIBUTOR,False,False,False,1.0,0.328125,0.5,0.9007092199,0.9828827558,0.01711724422,0.000432781777,0.0004808686411
Can you provide a stand-alone snippet to reproduce the problem ?,Bug Reproduction,False,64,MEMBER,False,False,False,1.0,0.1134020619,0.8520710059,0.5,0.9334539234,0.06654607659,0.0001350091473,0.05592088416
Is this table walkable at any moment of time?,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.5,0.0989010989,0.75,0.2167832168,0.3548042241,0.6451957759,0.0007155979557,0.1429285596
"AIX kernel folks responded:
pthread_create returns EAGAIN for exceeding the thread count ulimit or failure to allocate (malloc) memory for internal pthread data structures.",Investigation and Exploration,False,173,CONTRIBUTOR,False,False,False,0.6097560976,0.4032258065,0.2,0.08016877637,0.003956069835,0.9960439302,0.01118964345,0.000481306353
"But if that looks to be infeasible, then maybe this 'hackery' is still a viable solution (at least as far as launching boot apps from STS is concerned).",Workarounds,False,152,NONE,True,False,False,0.6666666667,0.2828282828,1.0,0.9263157895,0.9035334291,0.09646657091,0.002703173696,0.005495507544
I'm not sure I get the stacking example.,Social Conversation,False,40,MEMBER,False,False,False,0.2962962963,0.1126760563,0.9528985507,0.5,0.07865103886,0.9213489611,1.933623445e-05,8.503030139e-05
Thanks a lot for the work!,Social Conversation,False,26,NONE,False,False,False,0.5454545455,0.09677419355,0.8061674009,1.0,0.5871184167,0.4128815833,1.0,0.09855593002
"*         SCREEN_NAME : I agree that the CODE construction is pretty ugly, and we should try to find ways to improve it.",Motivation,True,120,CONTRIBUTOR,True,False,False,0.4468085106,0.3134328358,0.5367545076,0.5,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Then I am going the save the entire command line.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,1.0,0.06849315068,1.0,0.3854748603,0.03212209259,0.9678779074,2.02e-05,0.2238931518
The short term tactical fix for 0.23 ONLY will be to convert the fatal assert into a compile abort.,Solution Discussion,False,99,CONTRIBUTOR,False,False,False,0.76,0.3064516129,0.75,0.2896174863,0.4942847726,0.5057152274,0.01863655198,0.01288492485
"If you're planning to deprecate the current queues paradigm, I would like to know that the CODE and CODE would enable the same flexibility.",Expected Behaviour,True,139,NONE,False,False,False,0.5454545455,0.3582089552,0.2718446602,0.8333333333,0.07487735986,0.9251226401,0.199242644,0.03685646374
We can use CODE to generate either CODEor  CODE.,Solution Discussion,True,48,CONTRIBUTOR,False,False,False,1.0,0.2127659574,0.6666666667,0.9730769231,0.7350858598,0.2649141402,0.01440588944,0.1968967087
"I tried several things, at the end I was able to use tensorflow 1.1 but had to make these changes: (based on Tshzzz above) Remove this:CODE And add this:cells=[]for _ in range(NLAYERS):cell = rnn.DropoutWrapper(tf.contrib.rnn.GRUCell(INTERNALSIZE), input_keep_prob=pkeep)cells.append(cell)multicell = rnn.MultiRNNCell(cells, state_is_tuple=False)",Solution Discussion,True,346,NONE,False,False,False,1.0,0.06078147612,0.600660066,1.0,0.1810507623,0.8189492377,0.002511347281,0.0007677384667
"I am confused on how to use it and the SO seems to be outdated and then there is a layer in a different link from the API, just how exactly does one do this?",Usage,False,157,NONE,False,False,False,1.0,0.1346153846,0.07494646681,0.75,0.2025232642,0.7974767358,5.356953168e-05,0.001533935132
"We're still finishing up the blog post etc, but the model is uploaded and can be used from spaCy 0.100.7.",Task Progress,False,105,MEMBER,False,False,False,0.8695652174,0.3333333333,0.4137931034,0.25,0.3864300618,0.6135699382,0.4682936827,0.03367017273
I was thinking more along the lines of controlling/cleaning the environment at the point where STS launches a boot app (i.e. inside the launch configration delegate for boot apps which basically kicks of the boot app when user presses 'start' button).,Solution Discussion,False,251,NONE,True,False,False,1.0,0.4242424242,0.2,0.9122807018,0.9035334291,0.09646657091,0.002703173696,0.005495507544
https://github.com/AlenBadel/openj9/commit/27e93e6cae493f2a3945528330adf5faacec3e4b,Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.01960784314,0.01098901099,1.0,0.4825174825,0.8054811495,0.1945188505,0.1631008731,0.2634355634
You need a '*' at the end of each method filter for it to match anything.,Solution Discussion,False,73,CONTRIBUTOR,False,False,False,0.625,0.223880597,1.0,0.1675977654,0.002211155176,0.9977888448,0.0001215278376,0.0004214688837
"First I've installed tensorflow 1.5, it broke, and I get the following error:CODE",Bug Reproduction,True,81,NONE,False,False,False,0.652173913,0.1181102362,0.2873900293,0.5,0.342673923,0.657326077,0.05817708545,0.00239742362
It seems to think CODE and CODE are very similar: CODE,Potential New Issues and Requests,True,54,MEMBER,False,False,False,0.4782608696,0.2894736842,0.4817518248,0.8571428571,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"Also it could well be an openblas issue and that would be great reporting it upstream, especially since wheels use openblas.",Solution Discussion,False,124,MEMBER,False,False,False,0.5384615385,0.2957746479,0.5350877193,0.75,0.4545652645,0.5454347355,0.002465307867,7.597272067e-05
"But even if it didn't, would it result in a difference between training a testing?",Usage,False,82,NONE,False,False,False,0.5769230769,0.05769230769,0.4967880086,0.6666666667,0.386758151,0.613241849,0.0004998808382,0.0004945035936
The only _known_ problem with the current implementation arises when you call the CODE methods prior to pickling.,Testing,True,113,MEMBER,False,False,False,1.0,0.1176470588,0.2893890675,0.4444444444,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"32,buckets failed around 14700 threads; while 24,buckets failed around 18000 threads.",Testing,False,85,CONTRIBUTOR,False,False,False,0.2894736842,0.1774193548,0.375,0.1518987342,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
Here is where you can really speed things up using TFs input queues because they will load e.g. images into disk ( + preprocess ) on CPU while you are training/evaluating your network on GPU.,Solution Discussion,False,191,NONE,False,False,False,1.0,0.4925373134,0.3134535368,0.8,0.2822482794,0.7177517206,0.03560947306,0.002163656075
@yarikoptic SCREEN_NAME  how can you install numpy 1.12.1 on debian stretch?,Bug Reproduction,False,76,MEMBER,False,False,False,1.0,0.1764705882,0.05691056911,0.5,0.06675880694,0.9332411931,0.1491477665,0.02842550899
"It's reproducible when inlining is the only optimization enabled.

- Further, allocating a Memory Segment larger than CODE causes the failure.",Bug Reproduction,True,144,CONTRIBUTOR,False,False,False,0.9130434783,0.4468085106,0.75,0.5461538462,0.5030540536,0.4969459464,0.01535044408,0.005154978519
https://www.tensorflow.org/install/install_linux,Solution Discussion,False,48,NONE,False,False,False,0.07142857143,0.007874015748,0.146627566,0.8333333333,0.2153063504,0.7846936496,0.002231038575,0.01329083736
"As much as I dislike dumping state to disk, it's the most practical way to do this.",Solution Discussion,False,83,MEMBER,False,False,False,0.5666666667,0.4473684211,0.2554744526,0.7777777778,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
Training seems to work very well.,Usage,False,33,NONE,False,False,False,0.1714285714,0.02307692308,0.1092077088,0.1304347826,0.2164964176,0.7835035824,0.06906725807,0.007698692487
Looking forward to hear whether we've just not been using the datasets API right.,Usage,False,81,CONTRIBUTOR,False,False,False,0.2678571429,0.223880597,0.8959778086,1.0,0.8997769167,0.1002230833,0.0385452454,0.125435556
Leaving the intended entry in the HT as it's j9method reference becomes invalid.,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.5416666667,0.1428571429,1.0,0.6503496503,0.8573774451,0.1426225549,0.001731608401,0.0007841536263
"So if this memcpy is small, there should be negligible.",Solution Discussion,False,55,CONTRIBUTOR,False,False,False,0.3846153846,0.1492537313,0.3051317614,1.0,0.2777249108,0.7222750892,0.001660279021,0.0007705893431
Thanks for the summary.,Social Conversation,False,23,CONTRIBUTOR,False,False,False,0.3333333333,0.08510638298,0.25,0.4730769231,0.3707829483,0.6292170517,0.001912007579,0.2098027598
Thanks for the quick feed back so far!,Social Conversation,False,38,NONE,False,False,False,0.3076923077,0.03076923077,0.5032119914,1.0,0.386758151,0.613241849,0.0004998808382,0.0004945035936
@zl-wang I found a different version of jdk was used for this performance test.,Investigation and Exploration,False,79,NONE,False,False,False,1.0,0.2419354839,0.25,0.8860759494,0.7701023622,0.2298976378,0.1778324879,1.0
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.03232758621,1.0,0.0002667589089,0.9997332411,0.0004247083312,0.001126727522
@lastmjs I explain in more detail in the link I provided.,Potential New Issues and Requests,False,57,CONTRIBUTOR,False,False,False,1.0,0.1506849315,0.963362069,0.3333333333,0.9680492001,0.03195079986,0.000479816395,0.007495803266
I look forward to switching back to openj9 as the JVM for my development system! 👍,Task Progress,False,82,NONE,True,False,False,1.0,0.2388059701,1.0,0.9497206704,0.3681008747,0.6318991253,0.1312948834,1.0
@ebrevdo i am running Tensorflow r1.0 (tensorflow-1.0.1-cp36-cp36m-linux_x86_64) on Red Hat and have the latest version of the translation tutorial from Github..,Bug Reproduction,False,161,NONE,False,False,False,1.0,0.03328509407,0.3300330033,0.5,0.07133742303,0.928662577,0.0004233834388,0.001538799449
"Removed the intel label, this platform should be covered by https://github.com/eclipse/openj9/issues/10580",Action on Issue,False,106,CONTRIBUTOR,False,False,False,1.0,0.2340425532,1.0,0.8653846154,0.7270690018,0.2729309982,0.002441530636,0.01554507959
"Agreed with SCREEN_NAME  absolutely ""+1"" just makes this topic unreadable, and actually we had community implementations then if anyone wants to use TensorFlow with Node.js or JavaScript, just have a try with the above one or two, I think this might be a good start than comment votes here.",Social Conversation,False,290,CONTRIBUTOR,False,False,False,0.6849315068,0.6849315068,0.7198275862,0.1666666667,0.7054246115,0.2945753885,0.001234509156,0.0009450258333
How can we confirm that it is the problem we were after here?,Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.4482758621,0.1397849462,0.5,0.7799227799,0.6105914436,0.3894085564,0.0008616766512,0.001283189472
"oddly, throughput went up a couple % when I added CODE
[booking.vlog.log] URL ",Testing,True,79,NONE,True,False,False,1.0,0.1625,1.0,0.2598039216,0.1380083141,0.8619916859,0.01574975534,0.1612106274
"That would explain why we are looping, but still need to understand how we may end up in this concurrent/STW mixed scenario...",Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,1.0,0.3066666667,1.0,0.6949152542,0.08501734132,0.9149826587,9.19e-06,0.0001249419873
"The scorer function is ""score_model"", it doesn't use joblib.",Investigation and Exploration,False,60,NONE,False,False,False,0.375,0.09278350515,0.1952662722,0.4,0.2578934907,0.7421065093,0.000173866989,0.0009051930247
I would gladly lend a hand.,Contribution and Commitment,False,27,NONE,False,False,False,1.0,0.1,0.05172413793,1.0,0.01355763016,0.9864423698,0.05217402879,6.476167891e-05
@Timonzimm  I am facing the same issue.,Bug Reproduction,False,39,NONE,False,False,False,1.0,0.06299212598,0.06158357771,0.5,0.0859291402,0.9140708598,0.3335768717,0.562496811
I would like to update everyone that I downgraded the tensorflow to 1.0.0 (tensorflow-GPU) and it is working for me.,Solution Discussion,False,116,NONE,False,False,False,1.0,0.03039073806,0.7194719472,0.2,0.2668032658,0.7331967342,0.00251122862,0.02402499291
the compiler generates bl to read()'s glink or plt_link inside your module.,Solution Discussion,False,75,CONTRIBUTOR,False,False,False,1.0,0.09375,1.0,0.4444444444,0.03724082546,0.9627591745,4.44e-05,0.0002304042575
+999,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.6702586207,1.0,0.7050983337,0.2949016663,0.03291102261,5.134566588e-05
We will exclude the test on PPC and arch64.,Solution Discussion,False,43,CONTRIBUTOR,False,False,False,0.6,0.09677419355,0.2,0.9575289575,0.9195635971,0.08043640294,0.003058765602,0.2682425527
There are clear problems with queues like you said.,Motivation,False,51,NONE,False,False,False,0.1475409836,0.1343283582,0.07905686546,0.5,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"Actually the failures are there in the 450 grinder, but the problem is that I used the test material from master in order to test the 0.15 branch.",Testing,False,146,CONTRIBUTOR,True,False,False,1.0,0.4827586207,0.5,0.3853211009,0.02121810867,0.9787818913,4.7e-05,0.00651377534
The initial heap setting is not affecting these results.,Investigation and Exploration,False,56,CONTRIBUTOR,False,False,False,0.5625,0.06569343066,1.0,0.3531598513,0.02012572759,0.9798742724,8.9e-05,6.54e-05
"I currently use this method with CODE ops and it works nicely but I'd like to find a way to do this for evaluation as well (and figured maybe Dataset is a good way to do this with the ""reintializable"" iterator).",Motivation,True,211,NONE,False,False,False,1.0,0.6268656716,0.8571428571,1.0,0.8801745557,0.1198254443,0.88547434,0.1191105139
simply updating the conda install of numpy to the same version as the pip install (1.12.1) did the trick for me.,Solution Discussion,False,112,NONE,False,False,False,1.0,0.2957746479,0.9678362573,0.6666666667,0.8460874495,0.1539125505,0.1393667667,0.01200604239
-         Less communication (so faster),Solution Discussion,False,40,NONE,False,False,False,0.1785714286,0.03267973856,0.1221864952,0.2666666667,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Currently using spacy to get the POS tags. (from sentence subtree etc),Motivation,False,70,NONE,False,False,False,0.3870967742,0.1935483871,0.9515418502,0.5,0.6824651873,0.3175348127,0.09426527661,0.02091540384
"The jdk11+ extended.system suite running now with ""multiheap"" usually doesn't complete.",Testing,False,87,CONTRIBUTOR,True,False,False,0.7333333333,0.1774193548,0.4,0.5991561181,0.4808175087,0.5191824913,0.003806695701,0.001055956968
@brunoalano thanks but actually I am interested in Turkish for the beginning.,Expected Behaviour,False,77,NONE,True,False,False,1.0,0.2,0.3103448276,1.0,0.1699330677,0.8300669323,7.712870506e-05,0.1046411372
@llxia can you help diagnose this problem please.,Contribution and Commitment,False,49,CONTRIBUTOR,True,False,False,0.4,0.1379310345,0.5,0.5412844037,0.7522431881,0.2477568119,1.24e-05,0.001356949176
"Updating with the stack trace. 
CODE",Investigation and Exploration,True,37,CONTRIBUTOR,False,False,False,0.2692307692,0.1489361702,1.0,0.5346153846,0.5002525673,0.4997474327,0.2185584951,0.01535044408
Will a more stable fix be available in next 1.x releases?,Task Progress,False,57,NONE,False,False,False,1.0,0.1774193548,0.8017621145,0.8,0.5871184167,0.4128815833,1.0,0.09855593002
FWIW -- locally I had only the test_multi_output_classification_partial_fit_parallelism to popup and indeed it was due to inability to do multiprocessing in my case (absent bound to /dev/shm I guess):CODE,Potential New Issues and Requests,True,204,MEMBER,True,False,False,0.8333333333,0.4411764706,0.1707317073,0.4,0.2807260694,0.7192739306,0.007023674687,0.0006692173817
"@neighthan Sorry, fixed.",Social Conversation,False,24,CONTRIBUTOR,False,False,False,1.0,0.0447761194,0.4382801664,1.0,0.4013321589,0.5986678411,0.00137881541,0.005091284808
"I modified your script to not use Parallel and it ran to completion in seconds, single-threaded.",Solution Discussion,False,96,NONE,False,False,False,0.7727272727,0.1111111111,0.691318328,1.0,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
Can anyone confirm good test performance with small or single data samples using this batch norm layer?,Usage,False,103,NONE,False,False,False,0.5,0.06538461538,0.4732334047,1.0,0.3863527786,0.6136472214,0.03294891445,0.0006233545505
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3340517241,1.0,0.370108331,0.629891669,0.06070739721,0.1560058384
I'll run without compiling that method.,Task Progress,False,39,CONTRIBUTOR,False,False,False,0.4,0.075,1.0,0.8921568627,0.9562543243,0.04374567572,0.002453151618,0.01999637537
"To me, fit_more corresponds really to the partial_fit that we have inother estimators.",Solution Discussion,False,86,MEMBER,False,False,False,1.0,0.1830985915,0.2210144928,1.0,0.03944048936,0.9605595106,6.155309477e-05,1.565147108e-05
It still happens with the latest OpenJ9 and OMR changes.,Bug Reproduction,False,56,CONTRIBUTOR,False,False,False,0.2325581395,0.1075268817,0.07692307692,0.1891891892,0.3402178482,0.6597821518,0.06293969756,0.0116494207
"What I'd like is for CODE and CODE there to output elements in the same order (because they share the CODE step), but with different functions (CODE/CODE) applied.",Expected Behaviour,True,163,CONTRIBUTOR,False,False,False,1.0,0.447761194,0.5991678225,0.8333333333,0.4965705946,0.5034294054,0.06171840406,0.0130944201
The suggestion to store -Xmx was for the purpose of validating the hint.,Solution Discussion,False,72,CONTRIBUTOR,True,False,False,0.5,0.08904109589,0.1818181818,0.2011173184,0.01440399469,0.9855960053,0.001770078156,0.04266521959
"That would make sense to me, and then we should probably keep them separate.",Solution Discussion,False,76,MEMBER,False,False,False,0.4666666667,0.1971830986,0.2898550725,0.8,0.03947792369,0.9605220763,6.386923175e-06,3.579484417e-05
https://github.com/eclipse/openj9-systemtest/pull/99 is merged.,Action on Issue,False,63,CONTRIBUTOR,True,False,False,0.1578947368,0.0447761194,0.5,0.9826589595,0.02030795726,0.9796920427,0.0001604948466,0.0491754647
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.625,1.0,0.6709342147,0.3290657853,0.2551138181,0.28998505
"Finally, I need to document the process, and document the tokenizer file formats, so that I can describe what you'll actually need to do to add new languages.",Solution Discussion,False,158,MEMBER,False,False,False,0.4666666667,0.4666666667,0.09482758621,0.2,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Probably.,Social Conversation,False,9,CONTRIBUTOR,False,False,False,0.3333333333,0.01098901099,0.5,0.9440559441,0.8792939269,0.1207060731,0.0006146901707,5.93e-05
Can run the test again.,Investigation and Exploration,False,23,NONE,False,False,False,0.2941176471,0.07352941176,0.756097561,0.75,0.5911789386,0.4088210614,0.0005279841985,0.0004692809194
Like:CODE,Expected Behaviour,True,9,CONTRIBUTOR,False,False,False,0.08,0.02985074627,0.5020804438,1.0,0.4385463379,0.5614536621,0.02256391463,0.02590584966
the whole using of scopes and reuse is not clear in this thread for my opinion.,Social Conversation,False,79,NONE,False,False,False,1.0,0.06153846154,0.5524625268,1.0,0.4925242192,0.5074757808,0.003259624837,0.00210016914
"This is exactly the reason we wanted to check with you first, before applying a fix.",Social Conversation,False,84,CONTRIBUTOR,False,False,False,1.0,0.1758241758,0.4,0.7622377622,0.8593869021,0.1406130979,0.0008804396806,0.03684751755
"In such case, there is only Java VM on the machine: Java 11 for OpenJ9.zip

Repeatedly starting will trigger segment fault (not really crash/just stuck in ntdll.dll/windbg still works)",Investigation and Exploration,False,186,CONTRIBUTOR,False,False,False,0.5636363636,0.3131313131,0.1666666667,0.8175438596,0.803200419,0.196799581,0.3518178539,0.2306492075
Still some slight cpu usage in the 1-2% range.,Investigation and Exploration,False,46,NONE,True,False,False,1.0,0.1492537313,1.0,0.1005586592,0.001675947433,0.9983240526,0.0001922036014,5.6e-05
"I'm checking if any subsequent asserts fail as well.

https://github.com/eclipse/openj9/blob/master/runtime/shared_common/CompositeCache.cpp#L3721",Investigation and Exploration,False,148,CONTRIBUTOR,True,False,False,0.5,0.1896551724,1.0,0.9908256881,0.9996774263,0.000322573672,0.005742138251,0.001861415604
"No, it consistently passes.",Testing,False,27,CONTRIBUTOR,False,False,False,0.08333333333,0.04301075269,0.6666666667,0.7297297297,0.5618996987,0.4381003013,0.004800769914,0.1957833797
"OK, there have been a few more twists and turns along the path than I was expecting, but I think we're getting closer to the answer now.",Task Progress,False,136,CONTRIBUTOR,False,False,False,0.84375,0.4029850746,0.08333333333,0.8770949721,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"Hint values typically continue growing, and it may take a few updates to converge to a stable value (this is what we need feedback for)
6) updates acquire a global SC lock and there might be contention in case of high number of VMs being started at about the same time.",Solution Discussion,False,270,CONTRIBUTOR,False,False,False,0.6842105263,0.3561643836,0.3333333333,0.4804469274,0.238226106,0.761773894,0.0005830751334,0.0001494982185
"[vlog_jitfile_limit2.txt] URL 
CODE
and rebuilt the project with the modified vlog file for 5 times as follows:
CODE
So, it turns out this method CODE is the only problematic method detected in the vlog file.",Investigation and Exploration,True,212,CONTRIBUTOR,False,False,False,0.7090909091,0.2932330827,0.5,0.4529262087,0.5404334453,0.4595665547,0.06758416136,0.0001761792565
"Bottom line, we should treat them same (we should set Xmns based on recommendation stored in SC)",Solution Discussion,False,96,CONTRIBUTOR,False,False,False,0.1164383562,0.1164383562,0.3333333333,0.08938547486,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
"1)         Detect this case (that the inferred categories are a consecutive range), and in that case don't raise a warning.",Solution Discussion,False,123,CONTRIBUTOR,True,False,False,0.4772727273,0.328125,0.4227941176,0.3333333333,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"Not ideal, but also not a big deal imho.",Motivation,False,40,MEMBER,False,False,False,0.6,0.140625,0.6176470588,1.0,0.1225315788,0.8774684212,7.444610875e-05,0.0001733007777
This doesn't work for me.,Usage,False,25,NONE,False,False,False,0.1612903226,0.01923076923,0.3897216274,0.7,0.3712524908,0.6287475092,0.06886363297,0.000473907732
@sguada assigning to you for triaging.,Contribution and Commitment,False,38,MEMBER,False,False,False,0.6,0.02307692308,0.7066381156,0.5,0.5747023981,0.4252976019,1.998711693e-05,0.1430218228
@jnothman  Yes in a sense except with a twist.,Social Conversation,False,46,NONE,False,False,False,0.4761904762,0.15625,0.8713235294,0.2,0.2637770953,0.7362229047,7.119163405e-05,0.0001159406612
I'm starting now with CODE,Task Progress,True,26,CONTRIBUTOR,False,False,False,0.07352941176,0.03759398496,1.0,0.8549618321,0.8337431676,0.1662568324,0.02587954735,0.00358081273
"@abred Yes indeed, but you are referring to line 391, where it does the update of the moving average within _fused_batch_norm(): CODECODEis_trainingCODETensorCODEVariableCODEPlaceholderCODEneed_updates` will be true.is_training_value = utils.constant_value(is_training)need_updates = is_training_value is None or is_training_valueif need_updates:...outputs = utils.smart_cond(is_training, _force_updates, no_updates)...CODE",Solution Discussion,True,423,CONTRIBUTOR,False,False,False,1.0,0.1423076923,0.8586723769,0.3333333333,0.7213435746,0.2786564254,0.001636711525,0.0005628859124
@zl-wang is someone looking at the performance of using CODE ?,Social Conversation,True,62,CONTRIBUTOR,True,False,False,1.0,0.1774193548,1.0,0.2658227848,0.1513408493,0.8486591507,0.2646134818,0.2076384777
"By the way CODE does only inference, no training, so no backpropagation.",Motivation,True,72,NONE,False,False,False,0.2727272727,0.1643835616,0.5668103448,0.8,0.6335331717,0.3664668283,0.0006531080173,0.08742750468
"With the new MALLOCOPTIONS setting on the system, the machines can't handle the test load.",Testing,False,90,CONTRIBUTOR,True,False,False,0.7142857143,0.2419354839,0.6,0.6244725738,0.4809708382,0.5190291618,0.001055956968,0.005901107588
"jdk_util_1_FAILED NullPointerException: Cannot invoke ""java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle.<init>(java.lang.invoke.MethodHandle, java.lang.invoke.MethodHandleImpl$Intrinsic)""",Observed Bug Behaviour,False,194,MEMBER,True,True,False,0.25,0.1086956522,0.5,0.006289308176,0.0,1.0,0.0,0.005412926547
@amueller that's fine.,Social Conversation,False,22,CONTRIBUTOR,True,False,False,0.125,0.046875,0.9154411765,0.6666666667,0.2716685717,0.7283314283,0.03415611878,0.7749660924
"What I'm trying to say is, I appreciate all the time you have spend on this already and whatever you choose to do is fine by me.",Social Conversation,False,128,NONE,True,False,False,0.75,0.2727272727,0.7857142857,0.5192982456,0.1973084735,0.8026915265,0.001977734278,0.003898730278
@adverley Could you try the most recent version from GitHub on your Windows box?,Investigation and Exploration,False,80,MEMBER,False,False,False,1.0,0.1443298969,0.1538461538,1.0,0.01204995998,0.98795004,0.006789037082,0.5381059742
"1) no setting
2) export MALLOCOPTIONS=multiheap
3) export MALLOCOPTIONS=multiheap,considersize",Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.5833333333,0.2258064516,1.0,0.8016877637,0.5605437521,0.4394562479,0.00178229201,0.002861585044
@Mesbah-Alam is there a setup that can be accessed to do investigation?,Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,1.0,0.1940298507,0.5,0.3410404624,0.005097603246,0.9949023968,2.67e-05,3.41e-05
Happy to try out a nightly to stick with if fairly stable & might address issue.,Investigation and Exploration,False,80,NONE,True,False,False,0.5357142857,0.1127819549,1.0,0.3333333333,0.4052567842,0.5947432158,5.07e-05,0.1962918967
but in testing I get zero accuracy.,Solution Discussion,False,35,NONE,False,False,False,0.25,0.02692307692,0.01713062099,0.5,0.1699515439,0.8300484561,0.07587028422,0.02257012206
i think .9 is somewhat arbitrary but we'd like to be sure that thevariation isn't pointing to something more sinister,Investigation and Exploration,False,117,MEMBER,False,False,False,1.0,0.3088235294,0.2113821138,1.0,0.2846943058,0.7153056942,0.0110061742,0.09406233598
My best attempt to figure that out brought me to the following code: CODE,Usage,True,73,NONE,False,False,False,0.4516129032,0.05384615385,0.3854389722,0.5,0.3712524908,0.6287475092,0.06886363297,0.000473907732
We're getting close to the reality check date for the CODE milestone,Social Conversation,True,68,MEMBER,False,False,False,1.0,0.08219178082,1.0,0.3966480447,0.1062582353,0.8937417647,0.2238931518,0.0001989032092
"Not sure about jitted code, but for classes, if any JVM connecting to the shared cache detects an updated jar, we will mark all potentially stale classes in the shared cache as stale pessimistically.",Solution Discussion,False,199,CONTRIBUTOR,False,False,False,1.0,0.2481751825,0.6666666667,0.9219330855,0.06914383896,0.930856161,0.0005002484678,0.001788553918
-1073741830,Testing,False,11,CONTRIBUTOR,True,True,False,0.01886792453,0.01612903226,0.6,0.01265822785,0.0,1.0,0.0,0.003027854511
"(below is an example of the function, in reality i use more layers and neurons). CODE",Usage,True,85,NONE,False,False,False,0.6153846154,0.06153846154,0.2077087794,0.4375,0.2234305404,0.7765694596,0.0068527403,0.007193130032
Now the question is why & how the passed-in class bytes got messed up?,Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.1609195402,0.1052631579,1.0,0.368956743,0.4567225994,0.5432774006,0.001811662331,0.08907149035
I ran an AIX build/test using xlc 13 with the OpenJDK 13.0.0 level.,Testing,False,67,CONTRIBUTOR,False,False,False,0.5833333333,0.08045977011,0.1111111111,0.8970588235,0.7942021981,0.2057978019,0.006755954606,0.002545177611
#### 2. Don't require a complete C++ or JS reproduction or abstraction of the API,Solution Discussion,False,81,NONE,False,False,True,14.0,0.1917808219,0.9892241379,8.0,1.0,0.0,0.5674118797,0.0
"It seems that multiple log files were generated, do you mind double check and attach all of them?",Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,1.0,0.2686567164,0.6666666667,0.2793296089,0.003350542477,0.9966494575,0.0004628400625,0.0001068755452
"to vm/lib, which means copying/renaming j9vm_jdk11/jdk11_jvm.lib  was incorrect or at least unnecessary.",Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.5925925926,0.1355932203,0.6,0.8545454545,0.6154962774,0.3845037226,0.01905847349,0.0312575819
"I tried it, and it fails with X_SIZE <= 1750 (Y_SIZE=20, n_components=2 became constants).",Investigation and Exploration,False,90,NONE,False,False,False,0.3611111111,0.1830985915,0.2923976608,0.6666666667,0.2874590375,0.7125409625,0.02320572223,0.0448632062
"Whether or not this issue should stay open, I'll let Andrew decide.",Social Conversation,False,67,CONTRIBUTOR,False,False,False,0.4,0.1791044776,1.0,0.9768786127,0.02015809145,0.9798419085,2.11e-05,0.0001604948466
For most flexibility it would be best to allow RW access to these GC hints.,Solution Discussion,False,75,CONTRIBUTOR,False,False,False,0.7142857143,0.102739726,1.0,0.1620111732,0.01352495743,0.9864750426,0.006230161811,0.0005232437649
"We'd like to end up with something that is flexible enough to cover all standard use cases (CODE, CODE, CODE etc) but still concise and clearly scoped.",Potential New Issues and Requests,True,151,CONTRIBUTOR,False,False,False,1.0,0.7368421053,0.7372262774,0.8333333333,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
"@nikhilk amazing, keep on going!",Social Conversation,False,32,NONE,False,False,False,0.2173913043,0.06849315068,0.8814655172,0.8,0.836290065,0.163709935,0.003132528254,1.0
I am trying to develop the seq2seq as shown in the tensorflow tutorial using own dataset.,Solution Discussion,False,89,NONE,False,False,False,0.7272727273,0.02315484805,0.8349834983,0.75,0.2924079275,0.7075920725,0.008897341264,0.000137172437
Even 0.99 doesn't work well for me.,Solution Discussion,False,35,NONE,False,False,False,0.5,0.02692307692,0.4453961456,0.8,0.3802491548,0.6197508452,0.003984639748,0.00101193657
"I think SCREEN_NAME  was against that because ""one-hot"" is known to be this in more fields (and we already use 'Dummy' for other things in scikit-learn ...)",Solution Discussion,False,156,CONTRIBUTOR,True,False,False,1.0,0.453125,0.5514705882,1.0,0.1224416066,0.8775583934,3.70196497e-05,8.136186748e-06
"CODE
I think the CODE object used in this function is generated on the Server. 
CODE",Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,1.0,0.09523809524,1.0,0.8171428571,0.4493811668,0.5506188332,0.0001208535739,0.002313600952
"I used Antergos linux, GTX 1060 in my PC.",Solution Discussion,False,41,NONE,False,False,False,0.2903225806,0.07086614173,0.780058651,0.5,0.6608360282,0.3391639718,1.0,0.07077280307
"Looking at the code, it looks like there's a need to add the concept of time-last-checked and the ability to specify an interval between checks.",Solution Discussion,False,144,CONTRIBUTOR,False,False,False,1.0,0.197080292,0.5,0.8959107807,0.06811585498,0.931884145,0.0002381149578,0.0006646513169
"Hi, We are getting a parser state error.",Potential New Issues and Requests,False,40,NONE,False,False,False,0.08791208791,0.08421052632,0.8736842105,0.3333333333,0.3119208037,0.6880791963,0.06317627064,0.03932243631
"If a low risk fix does become available in the next couple of weeks, please raise it for consideration.",Social Conversation,False,103,CONTRIBUTOR,False,False,False,1.0,0.1428571429,1.0,0.9287531807,0.9018069699,0.09819303014,0.1686297096,0.005186864467
I don't see how the JIT is at fault here.,Investigation and Exploration,False,41,CONTRIBUTOR,False,False,False,0.3846153846,0.1724137931,1.0,0.3027522936,0.02085230113,0.9791476989,4.43e-05,0.0001834423374
"btw these are the values I see for t, init, methodCODE",Investigation and Exploration,True,54,MEMBER,True,False,False,1.0,0.1617647059,0.2073170732,1.0,0.2809724567,0.7190275433,5.939390591e-05,0.0110061742
ð,Social Conversation,False,1,NONE,False,False,False,1.0,0.01369863014,0.04094827586,1.0,0.0003900155958,0.9996099844,0.0004087734693,0.0002144566821
I've also tagged it for 0.12.0 as I asumme the work will be done for the next release.,Action on Issue,False,86,CONTRIBUTOR,True,False,False,0.7916666667,0.296875,0.8333333333,0.06382978723,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
look at my comment 6 threads above and you'll find your solution there!,Solution Discussion,False,71,NONE,True,False,False,1.0,0.1023622047,0.8856304985,1.0,0.9139530137,0.08604698634,0.05498545055,0.1457126271
Moving this to CODE as the changes aren't ready yet.,Action on Issue,True,52,MEMBER,False,False,False,1.0,0.07299270073,1.0,0.9925650558,0.8535501679,0.1464498321,1.0,0.1860133344
Just keep telling yourself that Reddit.,Social Conversation,False,39,MEMBER,False,False,False,0.2608695652,0.1578947368,0.496350365,1.0,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
[Enhancement] Redesigning TensorFlow's input pipelines,Solution Discussion,False,54,CONTRIBUTOR,True,True,False,0.1063829787,0.07462686567,0.001386962552,0.03333333333,0.0,1.0,0.0,0.000766008561
@lesteve probably will be able to infer more from this?,Contribution and Commitment,False,55,NONE,False,False,False,0.7142857143,0.1408450704,0.6725146199,0.6666666667,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
"The more I think about it, the more confusing it gets for me :-/",Social Conversation,False,64,MEMBER,False,False,False,0.9333333333,0.1971830986,0.4673913043,0.6,0.04249542779,0.9575045722,0.0028917672,1.056298833e-05
"That GC thread is supposed to yield and release VM access, if there is an external exclusive VM access request (such as for generation of javacore).",Investigation and Exploration,False,148,CONTRIBUTOR,False,False,False,1.0,0.3466666667,0.5,0.6214689266,0.08461003919,0.9153899608,0.0006255851869,1.66e-05
When the updates_collections=None then the updates happens in-place and it is easier to use a tf.cond() to allow is_training being a Tensor a bit more complicated is when the updates are delayed and the the update_ops are run later.,Usage,False,232,MEMBER,False,False,False,1.0,0.1576923077,0.09421841542,0.5,0.2040149325,0.7959850675,0.007484820191,0.009973469892
Will check against the compilation on JDK10/OpenJ9 to see how it deals with the issue (e.g. the setting of LDFLAGS_JDKLIB and JAVA_BASE_LDFLAGS).,Testing,False,145,CONTRIBUTOR,False,False,False,0.4259259259,0.1949152542,1.0,0.6666666667,0.5234752654,0.4765247346,0.003822899709,0.07975398056
"Hi SCREEN_NAME , why do you think addressing 1 is so hard?",Solution Discussion,False,58,NONE,False,False,False,0.2682926829,0.1774193548,0.1982378855,0.25,0.1925825232,0.8074174768,0.6482365618,5.170680801e-06
This thread has been automatically locked since there has not been any recent activity after it was closed.,Action on Issue,False,107,NONE,False,False,True,18.0,0.1176470588,0.9967845659,1.0,1.0,0.0,0.5123188737,0.0
The systemtest material didn't change.,Investigation and Exploration,False,38,CONTRIBUTOR,True,False,False,0.2,0.07462686567,0.6666666667,0.2369942197,0.005020000581,0.9949799994,4.91e-06,6.9e-06
The patch works.,Testing,False,16,CONTRIBUTOR,False,False,False,0.2727272727,0.03225806452,0.5,0.7683397683,0.6103874427,0.3896125573,0.001063107557,0.0008616766512
"At any rate, the reason I say 'wasn't compiled' is because the CODE field had a count of 14.",Solution Discussion,True,92,CONTRIBUTOR,False,False,False,1.0,0.2043010753,0.6666666667,0.6563706564,0.5540805477,0.4459194523,0.001219776039,0.002831223282
There are some differences in the steps though I would surprised if they really mattered.,Investigation and Exploration,False,89,NONE,True,False,False,0.3846153846,0.1515151515,0.25,0.3263157895,0.117111595,0.882888405,0.00603452119,0.003554247873
Did you refer to https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-264087057,Solution Discussion,False,96,CONTRIBUTOR,False,False,False,1.0,0.07042253521,0.9444444444,1.0,0.803485216,0.196514784,0.0005974029784,0.001758720049
I upgrade to tf 1.2. It still doesn't work.,Solution Discussion,False,43,NONE,False,False,False,0.45,0.01302460203,0.8877887789,0.4,0.3445264171,0.6554735829,0.04382956016,0.06892677638
Hence the process of initialization of contiguous memory is identical in the case of Unsafe.,Solution Discussion,False,92,CONTRIBUTOR,False,False,False,0.3947368421,0.3191489362,0.6666666667,0.9115384615,0.7299060094,0.2700939906,0.01554507959,0.00748487997
This will give you the best chance of getting good feed-back.,Bug Reproduction,False,61,MEMBER,False,False,False,0.375,0.1237113402,0.4940828402,0.6,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
I'd be glad to help implement some strategies to address this problem if you could help me isolate the issue and/or suggest some approaches.,Contribution and Commitment,False,140,NONE,False,False,False,1.0,0.4032258065,0.2555066079,1.0,0.2016154368,0.7983845632,0.03459730626,0.03432994834
could you find out the ulimit for virtual memory and data memory for these runs?,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.3947368421,0.2419354839,0.875,0.1687763713,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
It appears somehow it was treated as CODE method invocation and the object CODE caused NPE.~,Investigation and Exploration,True,92,MEMBER,True,False,False,0.7272727273,0.1739130435,0.4,0.1635220126,0.3431647145,0.6568352855,0.001046537172,0.001139510487
Is it?,Social Conversation,False,6,NONE,False,False,False,0.05555555556,0.02985074627,0.319001387,0.2,0.2825713456,0.7174286544,0.000434665323,0.0005756516163
+1 Googolplex!,Social Conversation,False,14,NONE,False,False,False,0.2857142857,0.02739726027,0.7155172414,1.0,0.7053540966,0.2946459034,0.002671966484,3.430421643e-05
"The further investigation shows as follows:
[1] the CODE exception never occurred on the latest release & nightly build downloaded from AdoptOpenjdk.",Investigation and Exploration,True,150,CONTRIBUTOR,False,False,False,0.5,0.1654135338,0.1666666667,0.3486005089,0.4557884115,0.5442115885,0.03394128121,0.003566914598
"The test run results with CODE<img width=""784"" alt=""screen shot 2016-11-16 at 1 51 51 pm"" src=""https://cloud.githubusercontent.com/assets/6901075/20361517/dd5dbbd8-ac05-11e6-85ac-5a9e2dec3a2b.png"">",Usage,True,197,CONTRIBUTOR,False,False,False,0.55,0.08461538462,0.4325481799,0.6666666667,0.3796199321,0.6203800679,0.003216099592,0.003984639748
"CODE works in fit_transform, a splitted dataset (CODE) does not.",Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,0.5,0.1408450704,0.4064327485,0.7777777778,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"I am not sure we can change OMR method to adjust it to a particular consumer, openj9, especially since even this consumer passes information in somewhat inconsistent way.",Solution Discussion,False,170,CONTRIBUTOR,False,False,False,1.0,0.5957446809,0.8333333333,0.8538461538,0.7208851506,0.2791148494,0.1217072968,0.03144222045
@amicic we'd like to ensure this gets delivered for the 0.15 milestone.,Action on Issue,False,71,CONTRIBUTOR,True,False,False,1.0,0.08904109589,0.5,0.7653631285,0.6555901245,0.3444098755,1.0,0.7369047902
"Also, I was able to produce segfault at different locations when I tried CODE and CODE.",Bug Reproduction,True,87,CONTRIBUTOR,False,False,False,0.6956521739,0.1720430108,0.8888888889,0.08494208494,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"At the moment, we don't perform specific operations at the end of each data set, i.e. everything gets put into the same (large) random shuffle queue, to mix samples between data sets.",Motivation,False,183,CONTRIBUTOR,False,False,False,1.0,0.4776119403,0.1220527046,0.6666666667,0.01071263196,0.989287368,0.0188753671,0.02492556229
This failure will have to be triaged to get to the root cause.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.5,0.1397849462,0.1428571429,0.2548262548,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
"If you need any help, feel free to contact me or e.g. SCREEN_NAME  also offered help.",Contribution and Commitment,False,85,NONE,False,False,False,0.6071428571,0.2537313433,0.2981969487,0.7142857143,0.2770987131,0.7229012869,0.2860540634,0.003376036402
"for comparison (with AIX), i was suggesting to configure Linux build to use xlC.",Solution Discussion,False,80,CONTRIBUTOR,False,False,False,1.0,0.08045977011,0.6666666667,0.2941176471,0.758888869,0.241111131,0.0004175811221,0.0001148200426
"Running the same test https://github.com/eclipse/openj9/issues/10588#issuecomment-698430817 on XLinuxXL does not produce a crash, or does it hang.",Testing,False,146,CONTRIBUTOR,False,False,False,0.6666666667,0.3404255319,0.3333333333,0.6423076923,0.6362716987,0.3637283013,0.0113804523,0.01862203789
#### 1. Don't require building or installing tensorflow,Solution Discussion,False,55,NONE,False,False,True,7.0,0.09589041096,0.9849137931,6.0,1.0,0.0,0.5674118797,0.0
"-         The table should allow the user to pass in a key function, which should take a CODE object as an argument, and return a 64-bit unsigned integer (used to key the table)",Solution Discussion,True,177,MEMBER,False,False,False,1.0,0.8684210526,0.3503649635,0.5384615385,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
SCM23.MultiCL uses CODE,Solution Discussion,True,23,CONTRIBUTOR,False,False,False,0.3,0.0447761194,1.0,0.3121387283,0.005063180094,0.9949368199,1.44e-05,4.84e-06
Versions:CODE,Bug Reproduction,True,13,NONE,False,False,False,0.08695652174,0.0157480315,0.8973607038,0.5714285714,0.9258004594,0.07419954058,0.1457126271,0.001998099513
Those profiling counters are not always added to the native body.,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,0.275,0.1375,0.6,0.4803921569,0.5900416852,0.4099583148,0.488236616,0.0006727318859
"https://ci.eclipse.org/openj9/view/Test/job/Grinder/707 - multiheap:16 x 3 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/705 - multiheap:18 x 3 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/706 - multiheap:20 x 3 - passed, failed, failed",Testing,False,269,CONTRIBUTOR,True,False,False,1.0,0.3064516129,1.0,0.3839662447,0.2960745537,0.7039254463,0.008097614762,0.003121198774
"Here is the output of the command @charliegracie suggested:

CODE",Investigation and Exploration,True,67,NONE,True,False,False,1.0,0.0802919708,0.5,0.4460966543,0.02070295258,0.9792970474,6e-05,2.11e-05
I will close this issue.,Action on Issue,False,24,MEMBER,False,False,False,0.4545454545,0.06849315068,0.9504310345,0.5,0.9554745335,0.04452546649,0.0005732123907,0.2254964429
The correct check would be: because GC enters monitor in RW mode you can see owning thread is stored in monitor.,Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.875,0.2307692308,0.4,0.3496503497,0.6219792976,0.3780207024,0.002161429347,0.8023255008
already tried on both Oracle JDK8 and JDK11 but it ended up the same results as our builds.,Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,1.0,0.1818181818,0.3333333333,0.6315789474,0.2090152874,0.7909847126,0.004409374785,0.007850146101
"I'm going to tentatively move this back to the 0.20.0 milestone, hoping that a fix will be available and can go into the release.",Action on Issue,False,129,CONTRIBUTOR,False,False,False,1.0,0.1804511278,1.0,0.9618320611,0.9211024439,0.07889755605,0.0003748407846,0.1687874943
These two trials may help to isolate the issue.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.4736842105,0.1343283582,1.0,0.3351955307,0.003738339876,0.9962616601,9.22e-05,0.0002215081863
Unsafe method: CODE.,Solution Discussion,True,20,NONE,True,False,False,0.1578947368,0.0447761194,0.6,0.2234636872,0.002791329837,0.9972086702,0.0006464246683,0.0001327325319
and it seems to happen only on OSX by the way (i.e. not on my Ubuntu box).,Investigation and Exploration,False,74,MEMBER,False,False,False,0.3617021277,0.2394366197,0.7807017544,1.0,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
The method invoked via invokespecial is invalid.,Investigation and Exploration,False,48,NONE,True,True,False,0.07368421053,0.05263157895,0.75,0.01526717557,0.0,1.0,0.0,0.0001794494051
"I'm on a 4 core 2011 MacBook Pro with 8GB RAM, so it shouldn't be the hardware.[Archive.zip] URL ",Solution Discussion,False,97,CONTRIBUTOR,False,False,False,1.0,0.1241830065,0.6495176849,0.8571428571,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
Does anybody plan to add a support for Russian?,Task Progress,False,47,NONE,False,False,False,0.3214285714,0.15,0.7586206897,0.25,0.4575489558,0.5424510442,0.04109506146,0.1027852809
"To summarize the deeper issue as I understand it: the ultimate dream is to have CODE ""Just Work"", without having to deal with the details of how work is allocated to physical machines, let alone individual processes or threads.",Expected Behaviour,True,227,MEMBER,False,False,False,0.975,0.2549019608,0.7813504823,0.4210526316,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
You can ignore it.,Social Conversation,False,18,NONE,True,False,False,0.1666666667,0.05,0.2857142857,0.6421568627,0.8720495954,0.1279504046,0.001670230889,0.034636993
Just want to add a quick update: I had 2 virtual envs in conda both using MKL.,Investigation and Exploration,False,78,NONE,False,False,False,0.5151515152,0.2394366197,0.7251461988,0.1111111111,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
I think this is relevant: https://github.com/spacy-io/spaCy/issues/413,Potential New Issues and Requests,False,70,NONE,False,False,False,1.0,0.03921568627,0.9774919614,1.0,0.2615199667,0.7384800333,0.1692698285,1.0
@ppwwyyxx Thank you very much for your help.,Social Conversation,False,44,NONE,False,False,False,0.4210526316,0.03076923077,0.8286937901,0.25,0.7056210173,0.2943789827,0.001322497813,0.09017334918
Note the shared cache part of this #3908 is merged,Action on Issue,False,50,CONTRIBUTOR,True,False,False,1.0,0.06849315068,1.0,0.4301675978,0.1339894439,0.8660105561,0.08347165661,0.2112765929
@gacholio I've opened up the Epic to track the work but I'm not too familiar with the VM portion or the high level.,Social Conversation,False,115,CONTRIBUTOR,True,False,False,1.0,0.375,0.1666666667,0.03546099291,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
Can this combo be made to work with a binary package?,Solution Discussion,False,53,NONE,False,False,False,0.2972972973,0.08661417323,0.4046920821,0.9090909091,0.3802587264,0.6197412736,0.006558528713,0.00183836987
As you will notice is there is a CODE statement that forces the updates.,Solution Discussion,True,72,NONE,False,False,False,0.4117647059,0.05384615385,0.2740899358,0.4,0.225873701,0.774126299,0.0001639552333,0.002735597126
"I think, in theory, that delegate could modify the environment if it wanted to...

The suggested fix above functionally works from boot app perspective.",Solution Discussion,False,154,CONTRIBUTOR,False,False,False,1.0,0.2525252525,0.5,0.9298245614,0.9050841216,0.09491587836,0.005495507544,0.008713378481
"Could we make the underlying workings of word embeddings compositional/consistent as well (what if we need to do text analysis over legal+finance texts, or multi-lingual texts)?",Potential New Issues and Requests,False,177,NONE,False,False,False,0.8235294118,0.7368421053,0.9124087591,0.5714285714,0.02374400586,0.9762559941,0.01990868788,0.001584253352
"This won't take exclusive access and the GC/VM/JIT structures may not be in a good state for reading java stacks, object heap, etc, but all the native stacks should be available.",Investigation and Exploration,False,178,CONTRIBUTOR,False,False,False,1.0,0.44,1.0,0.4632768362,0.03477619422,0.9652238058,0.001877193186,1.99e-05
but no on its **Class** unloading.,Investigation and Exploration,False,34,CONTRIBUTOR,False,False,False,0.1034482759,0.06593406593,1.0,0.6293706294,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
TKG is running Java to generate make targets only.,Solution Discussion,False,50,CONTRIBUTOR,False,False,False,0.4736842105,0.1551724138,0.5,0.7706422018,0.9961777994,0.003822200553,0.0128898379,0.003909680331
While running my test with several hundred seeds on the original 50 samples random dataset I have never seen this score go below 0.87.,Solution Discussion,False,134,MEMBER,False,False,False,0.96,0.3529411765,0.9634146341,0.75,0.6536608828,0.3463391172,0.005246346584,1.0
Then all that needs to be done is to add a case in CODE that handles CODE by setting CODE and probably not much more.,Solution Discussion,True,117,CONTRIBUTOR,False,False,False,1.0,0.2118644068,1.0,0.5454545455,0.4198277578,0.5801722422,0.0001150597199,9.31e-05
"The testing is getting killed, I'm assuming by the OS.",Testing,False,54,CONTRIBUTOR,True,False,False,0.6666666667,0.1612903226,0.8,0.6075949367,0.4808175087,0.5191824913,0.003806695701,0.001055956968
I'll try to update the forests with the same mechanism before the release.,Task Progress,False,74,MEMBER,False,False,False,0.9285714286,0.1830985915,0.9855072464,1.0,0.999977436,2.256404123e-05,2.35122996e-06,2.449490317e-05
15 failures in 10K runs on AIX.,Testing,False,31,CONTRIBUTOR,False,False,False,0.8,0.125,1.0,0.5673758865,0.8348887032,0.1651112968,0.1984352534,0.07112047202
I don't know if it should block 0.17,Social Conversation,False,36,CONTRIBUTOR,False,False,False,0.1818181818,0.1194029851,0.75,0.5722543353,0.01124208961,0.9887579104,5.92e-05,5.28e-05
@sophiaxu0424 Can we please get the data requested in https://github.com/eclipse/openj9/issues/8842#issuecomment-605317393?,Investigation and Exploration,False,123,NONE,False,False,False,0.7692307692,0.1612903226,0.6,0.8523206751,0.6663614196,0.3336385804,0.02615972953,0.2052027758
We are not consistent in naming anywhere.,Motivation,False,41,MEMBER,False,False,False,0.6363636364,0.109375,0.5588235294,0.6666666667,0.122443456,0.877556544,8.136186748e-06,1.464513615e-05
"ASGCT is invoked from a signal handler, and the signal is blocked while the signal handler is executing (default POSIX behavior),",Investigation and Exploration,False,129,NONE,True,False,False,1.0,0.2019230769,0.5,0.1712707182,0.01616030641,0.9838396936,0.0002824625523,0.01268066734
"To follow up with TF developer's confirmation, I track the convergence of the statistics with two different CODE settings (and training batch_size=1).",Solution Discussion,True,150,CONTRIBUTOR,False,False,False,1.0,0.08461538462,0.4796573876,0.3333333333,0.3866792137,0.6133207863,0.001443840919,0.0004998808382
The load chain is usually very short.,Investigation and Exploration,False,37,CONTRIBUTOR,False,False,False,0.152173913,0.03703703704,0.5,0.8,0.4493209598,0.5506790402,0.0005637074234,0.0001208535739
"To yield, we look both at thread's HALT_EXCLUSIVE being set (seems to be the case) and exclusiveAccessState being PENDING (please, check what the value is).",Investigation and Exploration,False,156,CONTRIBUTOR,False,False,False,0.9615384615,0.3333333333,0.75,0.6271186441,0.08461003919,0.9153899608,0.0006255851869,1.66e-05
"Sorry for this, for some reason it worked on my system.",Social Conversation,False,55,NONE,True,False,False,0.5789473684,0.1057692308,0.5,0.3756906077,0.1323802739,0.8676197261,4.06e-05,6.21e-05
"Would be best if a few other people is interested as well, specially someone with C++ knowledge.",Contribution and Commitment,False,96,NONE,False,False,False,0.68,0.2328767123,0.07543103448,1.0,0.001454209969,0.99854579,0.004261247633,0.002175772592
"@fengxue-IS Can you take a look, its been upgraded to blocker",Contribution and Commitment,False,61,CONTRIBUTOR,False,False,False,1.0,0.1304347826,1.0,0.1006289308,0.3331772676,0.6668227324,0.01518116622,0.01472771154
"@ebrevdo Congratulations, TF 1.2 just got released - was the new tutorial also released somewhere or is it being released anytime soon?",Task Progress,False,135,NONE,False,False,False,1.0,0.03039073806,0.603960396,0.5,0.1812375377,0.8187624623,0.0007677384667,0.005664414752
"More info: Darwin-16.6.0-x86_64-i386-64bit('Python', '2.7.13 (default, Apr  4 2017, 08:47:57) \n[GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.38)]')('NumPy', '1.12.1')('SciPy', '0.19.1')('Scikit-Learn', '0.18.2')",Bug Reproduction,False,218,NONE,False,False,False,1.0,0.2268041237,0.298816568,1.0,0.8122508057,0.1877491943,0.003762853532,0.0002075199459
@xiezhongzhao Install Cuda 9.0 and you should be fine.,Solution Discussion,False,54,NONE,False,False,False,1.0,0.07086614173,0.3049853372,0.5,0.3429538677,0.6570461323,0.0006411370384,0.03386342376
The result indicates the defect might be related to CODE.,Investigation and Exploration,True,57,CONTRIBUTOR,False,False,False,0.5555555556,0.1492537313,0.4,0.374301676,0.004243795073,0.9957562049,0.0005447205204,0.0001206659381
Only seen on MacOS so far.,Bug Reproduction,False,26,NONE,True,False,False,0.6,0.04511278195,0.5,0.07888040712,0.0005096925721,0.9994903074,0.0002080632054,0.0005207711664
"Another nice solution would be to run a language identification program over Common Crawl dumps, so that we can get text from wider genres.",Solution Discussion,False,139,MEMBER,False,False,False,0.4,0.4,0.1379310345,0.4,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"FYI ...
I used ldedit to cancel F_NOEXEC on Peter's driver ... something like this:

milan:[zlwang] ldedit -b rwexec j9.64/bin/java
ldedit:  File j9.64/bin/java has been updated.",Solution Discussion,False,182,CONTRIBUTOR,False,False,False,0.4776119403,0.183908046,0.5,0.5588235294,0.7687524388,0.2312475612,0.006331049572,0.0002354283384
#NAME?,Investigation and Exploration,False,6,CONTRIBUTOR,False,False,False,0.1111111111,0.007299270073,1.0,0.3940520446,0.02031253358,0.9796874664,1.9e-05,2.03e-05
The only way I'm aware of doing it is programmatically.,Investigation and Exploration,False,55,MEMBER,False,False,False,0.2777777778,0.07518796992,0.2857142857,0.08651399491,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
"According to Henry, CODE returns the BV containing symRefs that are dead at that point, whereas   CODE returns the pending push symRefs that are live at that point.",Solution Discussion,True,164,MEMBER,False,False,False,0.58,0.3152173913,0.75,0.9811320755,0.6767585371,0.3232414629,0.05983688721,1.0
"
REFERENCE",Investigation and Exploration,False,10,NONE,False,False,False,0.05405405405,0.002894356006,0.06270627063,0.7777777778,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
1.         Anything that helps me analyze if and where the bottleneck lies in the input pipeline would be great.,Motivation,False,112,NONE,False,False,False,0.5263157895,0.2985074627,0.6185852982,0.1428571429,0.5016859242,0.4983140758,0.003761840049,0.03050902669
CODE where phase_train_py is a python boolean variable and is_training is a placeholder taking a boolean variable.,Usage,True,114,NONE,False,False,False,0.85,0.06538461538,0.9079229122,0.3,0.7489109604,0.2510890396,0.04599776246,0.3206669123
;D,Social Conversation,False,2,NONE,False,False,False,0.25,0.01369863014,0.8987068966,1.0,0.919790056,0.08020994398,0.3331738372,0.01198832771
"I think it should be easy to use a thread-local var that points to the buffer, allocate it on thread init and deallocate on thread termination.",Solution Discussion,False,143,NONE,True,False,False,0.5869565217,0.2596153846,1.0,0.8342541436,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
The methods being inlined that would be affected by this workaround is also fairly limited.,Workarounds,False,91,MEMBER,False,False,False,0.652173913,0.1630434783,0.8,0.9433962264,0.6394476,0.3605524,0.0002725427144,0.05549281815
"If there is no guarantee, then I don't see how there can be common semantics.",Solution Discussion,False,77,MEMBER,False,False,False,0.6,0.2112676056,0.4057971014,1.0,0.03970291757,0.9602970824,8.078405027e-05,0.0001056298833
"Given the above test it seems only one method is being compiled and as I understand the test runs very quickly at CODE, so the compilation will be synchronous and deterministic, meaning logging won't affect failure rate (in theory).",Testing,True,232,CONTRIBUTOR,True,False,False,1.0,0.609375,0.6666666667,0.695035461,0.948495458,0.05150454195,0.001656592469,8.9e-05
I strongly suspect this will fix the memory corruption issues: https://github.com/eclipse-openj9/openj9/pull/13972,Solution Discussion,False,114,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.2651933702,0.09577627094,0.9042237291,0.0181710758,0.002998466112
On both Ubuntu 18 and RHEL 8 I got the same CODE error as you did.,Bug Reproduction,True,66,CONTRIBUTOR,False,False,False,0.7619047619,0.1538461538,0.6666666667,0.3535911602,0.1323326733,0.8676673267,2.2e-05,3.48e-05
"Yes, that is actually true!",Social Conversation,False,27,NONE,True,False,False,0.2083333333,0.03649635036,0.5,0.2156133829,0.002019598648,0.9979804014,0.0001337584893,6.92e-05
"(I have no strong opinion yet, these remarks simply reflect what I think at the moment)",Social Conversation,False,87,MEMBER,False,False,False,0.6153846154,0.2253521127,0.6956521739,1.0,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
Solution:,Solution Discussion,False,9,CONTRIBUTOR,False,False,False,0.04545454545,0.01492537313,0.4840499307,0.5,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
If we go for CODE then what would be the specification?,Solution Discussion,True,55,MEMBER,False,False,False,0.4230769231,0.1549295775,0.6666666667,0.2727272727,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
@EdeMeijer  Thanks.,Social Conversation,False,19,NONE,False,False,False,0.04918032787,0.0447761194,0.7392510402,0.125,0.5810660853,0.4189339147,0.03325240618,0.00639731668
We are able to directly branch to the helper.,Solution Discussion,False,45,CONTRIBUTOR,True,False,False,0.0703125,0.0703125,0.4736842105,0.9222222222,0.3076445993,0.6923554007,0.1283873506,1.0
Currently a feasable workaround is lazy loading of the language models on the worker nodes: CODE,Workarounds,True,96,NONE,True,True,False,0.4444444444,0.1045751634,0.01607717042,0.625,0.0,1.0,0.0,0.0054583822
"We're past Milestone 2 for the 0.20.0 release, moving this forward to the next release.",Action on Issue,False,87,CONTRIBUTOR,False,False,False,0.7894736842,0.1127819549,0.5,0.9262086514,0.9018069699,0.09819303014,0.1686297096,0.005186864467
LISTEN!,Social Conversation,False,7,NONE,False,False,False,0.03846153846,0.007874015748,0.5923753666,0.3333333333,0.4583755089,0.5416244911,0.04654492211,0.008440528439
The purpose here is to resolve a string to an integer.,Investigation and Exploration,False,54,MEMBER,False,False,False,0.275,0.1774193548,0.3436123348,0.4722222222,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"- inside the routine CODE we have this:
- CODE
CODE
- ^for JITServer, this is another remote call to the client.",Investigation and Exploration,True,115,CONTRIBUTOR,False,False,False,0.4680851064,0.1164021164,0.3333333333,0.76,0.4488904385,0.5511095615,0.0001804525966,0.0003004784063
Less prone to memory leak and particularly good for days-long training.,Solution Discussion,False,71,NONE,False,False,False,0.6666666667,0.1791044776,0.8238557559,0.6,0.7158615465,0.2841384535,0.6886518758,0.01649590529
"Repro rate with following command was 2/3 (stopped early runs so we can move on):

CODE

Console:
CODE",Bug Reproduction,True,107,CONTRIBUTOR,False,False,False,1.0,0.1654135338,1.0,0.7480916031,0.7854126114,0.2145873886,0.00173440507,0.03284046744
"To avoid pickling and unpickling data that could just be read from disk (on a single machine), I've been using the following CODE proxy object.",Solution Discussion,True,143,NONE,False,False,False,1.0,0.1699346405,0.5144694534,0.4,0.1448670515,0.8551329485,0.02443361297,0.06319984844
The test also seems to take a long time to finish.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.3333333333,0.08270676692,0.625,0.4910941476,0.5596707013,0.4403292987,0.1072383922,0.000211333354
It can do more.,Social Conversation,False,15,MEMBER,False,False,False,0.3076923077,0.05633802817,0.5036231884,0.3333333333,0.04251459753,0.9574854025,1.684463255e-06,1.965207131e-06
from [kfreebsd-amd64] URL ,Potential New Issues and Requests,False,26,MEMBER,False,False,False,0.8,0.05882352941,0.4430894309,1.0,0.5348647334,0.4651352666,4.558136965e-05,0.02112247576
"There is no explicit exit with a zero error code for success. 
https://github.com/eclipse/openj9/blob/master/test/functional/cmdline_options_tester/src/MainTester.java#L111

As far as I can tell from the java launcher code, after invoking the main method the return code is set to zero as long as no exception occurs.",Investigation and Exploration,False,320,CONTRIBUTOR,True,False,False,1.0,0.7586206897,0.4285714286,0.8073394495,0.9968553268,0.003144673225,0.003909680331,0.004205153524
However I'm confused how one does that in this new paradigm.,Usage,False,60,NONE,False,False,False,0.3055555556,0.1641791045,0.6990291262,0.3333333333,0.551539804,0.448460196,0.1827564093,0.002095453319
"It tried it with CODE and that works, but I didn't see that CODE method being recompiled at hot.",Investigation and Exploration,True,96,CONTRIBUTOR,False,False,False,1.0,0.2375,0.6666666667,0.2990196078,0.2319737749,0.7680262251,0.3694370945,0.004429301533
"I believe all three of those trees can OSR—certainly the calls can, at least—but none of them can be expected to OSR correctly.",Solution Discussion,False,127,CONTRIBUTOR,False,False,False,0.5744680851,0.2903225806,0.6666666667,0.7992277992,0.6114489539,0.3885510461,0.002338836625,0.001335412299
"Until CODE releases VM Access, the JVM would stay hung.",Investigation and Exploration,True,55,CONTRIBUTOR,False,False,False,0.2222222222,0.1333333333,0.9,0.604519774,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
Can you explain that?,Motivation,False,21,MEMBER,False,False,False,0.25,0.0625,0.5808823529,1.0,0.1224653711,0.8775346289,4.637626447e-05,0.0002168293768
"Now that I think about it this is going to end up being slightly inefficient because later on in the compilation process we'll be able to decide if the helper is reachable via a direct call or not, and if not we'll redirect the call through a trampoline which will correctly load CODE.",Solution Discussion,True,285,MEMBER,False,False,False,1.0,0.4140625,0.25,0.6055555556,0.04021507893,0.9597849211,0.0001975507147,0.0003594564091
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5280172414,1.0,0.6114524392,0.3885475608,0.003347427571,0.01192259641
But yeah let's not divert too much here ;),Social Conversation,False,42,MEMBER,False,False,False,1.0,0.140625,0.6764705882,1.0,0.1226644565,0.8773355435,2.888346296e-05,8.868443556e-05
I believe this was collected with CODE.,Investigation and Exploration,True,39,CONTRIBUTOR,False,False,False,0.2121212121,0.05263157895,0.3333333333,0.6183206107,0.6090585554,0.3909414446,0.03283597098,0.001209954986
I changed from:CODEto:CODE,Solution Discussion,True,26,CONTRIBUTOR,False,False,False,0.7142857143,0.007235890014,0.9339933993,1.0,0.4006589622,0.5993410378,0.05332661552,0.02633936247
"I know batch normalization behave different in train and test phase, as describe in [How does batch normalization behave differently at training time and test time? - Quora] URL .",Solution Discussion,False,179,NONE,False,False,False,1.0,0.1076923077,0.02141327623,0.8333333333,0.1699515439,0.8300484561,0.07587028422,0.02257012206
"Ok, I'll just keep an eye out for more problems.",Social Conversation,False,48,CONTRIBUTOR,True,False,False,1.0,0.1492537313,1.0,0.04046242775,1.88e-05,0.9999811669,1.6e-05,0.001446574697
Maybe It could be nice to show how this placeholder thing should be used because it seems I don't understand how its suppose to be used.,Usage,False,136,NONE,False,False,False,0.8666666667,0.1,0.2655246253,0.8181818182,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
ok,Social Conversation,False,2,CONTRIBUTOR,False,False,False,1.0,0.01612903226,1.0,0.447257384,0.2994969353,0.7005030647,0.0008955215173,0.0006504928285
FYi @AlenBadel @gita-omr I've tagged this for the 0.11.0 release as we're not calling the c code correctly and that may result in issues.,Action on Issue,False,137,MEMBER,False,False,False,1.0,0.203125,1.0,0.7722222222,0.1038313764,0.8961686236,0.02385381934,0.1292651629
It cannot be a CODE.,Usage,True,20,CONTRIBUTOR,False,False,False,0.6,0.02307692308,0.03426124197,1.0,0.1735230886,0.8264769114,4.717771256e-05,2.587164882e-05
I find the CODE approach with two separate datasets/iterators to work better/faster in that case.,Solution Discussion,True,97,NONE,False,False,False,0.6071428571,0.2537313433,0.5866851595,0.75,0.4658107767,0.5341892233,0.02260310577,0.1856733495
My CODE folder has the following libcublas:CODE,Bug Reproduction,True,47,NONE,False,False,False,0.347826087,0.06299212598,0.8944281525,0.4285714286,0.9258004594,0.07419954058,0.1457126271,0.001998099513
*         If this freezes (i.e. it does not finish within one second) that means you are using Accelerate and the freeze is a known limitation with Python multiprocessing.,Investigation and Exploration,False,171,MEMBER,False,False,False,1.0,0.2886597938,0.6183431953,0.3333333333,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
Thank you.,Social Conversation,False,10,CONTRIBUTOR,False,False,False,0.1111111111,0.02985074627,0.2,0.3687150838,0.004243795073,0.9957562049,0.0005447205204,0.0001206659381
Maybe SCREEN_NAME  or SCREEN_NAME  can help.,Contribution and Commitment,False,44,MEMBER,False,False,False,0.4444444444,0.0824742268,0.2366863905,0.3333333333,0.2588472304,0.7411527696,0.001083708651,1.0
(eg DummyEncoder),Solution Discussion,False,17,CONTRIBUTOR,True,False,False,0.04,0.03125,0.7022058824,0.7,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
"An alternate possibility it is collision between ""class unload"" and ""classloader unload"" hook handlers itself.",Solution Discussion,False,110,CONTRIBUTOR,False,False,False,0.4054054054,0.1648351648,0.8,0.5874125874,0.854897081,0.145102919,0.001362640241,0.002579695967
"I had this again for the first time today under MacOS Catalina 19C56a with this build
CODE
No sign of any core.",Bug Reproduction,True,113,NONE,True,False,False,1.0,0.1804511278,1.0,0.2366412214,0.2137981781,0.7862018219,0.2641000633,0.005956575697
What I dislike about using the 'warm_start' is that currently thecontract with scikit-learn estimators is that you can call 'fit' and geta valid/useful answer regardless of the history of the object.,Solution Discussion,False,199,MEMBER,False,False,False,1.0,0.4647887324,0.634057971,0.25,0.06511199992,0.9348880001,0.000167358443,3.516317045e-05
*         [taking advantage of multi processor environments in node js] URL ,Solution Discussion,False,76,NONE,False,False,False,0.3666666667,0.1506849315,0.400862069,0.5,0.4752476502,0.5247523498,0.0635462371,0.3197097642
@lesteve Agreed.,Social Conversation,False,16,NONE,False,False,False,0.08333333333,0.0206185567,0.7899408284,0.1666666667,0.850540769,0.149459231,7.813286879e-05,0.005705487359
"it probably doesn't matter to anyone if we only check for updates every 100ms instead of on every class load

if classes are modified and we get some from the cache and some from the jar, they may not be compatible with each other",Solution Discussion,False,232,CONTRIBUTOR,False,False,False,1.0,0.3284671533,1.0,0.9479553903,0.07113230327,0.9288676967,0.0007946827895,4.6e-05
Reddit also thinks hot dogs are practically salad: CODE,Potential New Issues and Requests,True,55,MEMBER,False,False,False,0.3913043478,0.2368421053,0.4890510949,0.9285714286,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
Fair enough.,Social Conversation,False,12,MEMBER,False,False,False,0.2,0.02739726027,0.6465517241,0.5,0.6920733085,0.3079266915,0.000200513678,0.0871107993
"I tried it on Ubuntu 18 and it didn't load, but it does load on RedHat 8. You could create a fyre machine.",Solution Discussion,False,106,CONTRIBUTOR,False,False,False,1.0,0.2211538462,1.0,0.3314917127,0.1321211254,0.8678788746,9.57e-05,3.79e-05
"While I am confident @jdmpapin has identified a real problem, how can we confirm that it is *the* problem we were after here?",Solution Discussion,False,125,CONTRIBUTOR,False,False,False,0.7931034483,0.247311828,0.3333333333,0.7528957529,0.6101357533,0.3898642467,0.007960250968,0.001063107557
"If it comes back, it can always be reopened",Action on Issue,False,43,NONE,True,False,False,0.3913043478,0.0989010989,1.0,0.1503496503,0.2814809533,0.7185190467,0.8694307183,0.002857770092
Note that we currently remove all the references to J9Method on corresponding **Class Loader** unloading,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.2586206897,0.1648351648,0.8571428571,0.6258741259,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
"Same problem here, working on Windows 10 with German text.",Bug Reproduction,False,58,NONE,False,False,False,0.3333333333,0.1052631579,0.1894736842,0.2,0.08711286573,0.9128871343,0.02247209918,0.04915356896
"If you care share the cores and the stderr output from when they're written, we may be dig into this further.",Contribution and Commitment,False,109,MEMBER,False,False,False,1.0,0.2121212121,1.0,0.5824561404,0.2049075531,0.7950924469,0.01382387628,0.003692040835
"Stop confusing me - inlines are walked by default, and the catch code is not disabling them, so that's why it works.",Solution Discussion,False,116,CONTRIBUTOR,False,False,False,1.0,0.328125,1.0,0.9787234043,0.9870646075,0.0129353925,0.02022533505,0.0716422145
Please let me know if you need more help.,Social Conversation,False,41,CONTRIBUTOR,False,False,False,1.0,0.0989010989,0.5,0.06643356643,0.004843776376,0.9951562236,0.0001840989358,0.001428885046
"The CODE compilation is expensive, no doubt, but I do see other compilations being executed in parallel with.",Investigation and Exploration,True,109,CONTRIBUTOR,False,False,False,0.5142857143,0.1313868613,0.2,0.2788104089,0.007087055447,0.9929129446,0.006822511181,0.006010021534
F_NOEXEC was long deprecated.,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.3076923077,0.02298850575,1.0,0.6286764706,0.7727935619,0.2272064381,8.36e-05,8.08e-05
A work-around (other than the JOBLIB_START_METHOD) to avoid this particular bug is to use MKL (e.g. via conda) or OpenBLAS (e.g. via the conda-forge channel).,Workarounds,False,158,MEMBER,False,False,False,1.0,0.2783505155,0.3639053254,1.0,0.8123980581,0.1876019419,2.677933057e-05,1.887267362e-06
Thanks a lot :),Social Conversation,False,15,NONE,False,False,False,0.2105263158,0.0412371134,0.2603550296,0.5714285714,0.6343054009,0.3656945991,1.0,0.005493875023
"@fjeremic , as for your questions, 
[1] the problem only occurs on CODE and was never detected on CODE or upwards.",Observed Bug Behaviour,True,115,CONTRIBUTOR,False,False,False,0.5675675676,0.1578947368,0.25,0.5012722646,0.5597074071,0.4402925929,0.000211333354,0.0002117421226
"Thinking about it again, maybe there is room for a new method which we could use to implement #1626.",Solution Discussion,False,100,MEMBER,False,False,False,0.76,0.2676056338,0.7391304348,0.3333333333,0.07424730092,0.9257526991,0.00947335116,1.193161472e-05
"-         Reimplementing our data loading and transformation pipeline with TF primitives, perhaps with CODE, but still using the TF API for managing queue runners",Motivation,True,162,CONTRIBUTOR,False,False,False,0.6,0.3582089552,0.2552011096,0.875,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"However, this level of stress is not common in practice (CODE creates many compilations).",Investigation and Exploration,True,89,CONTRIBUTOR,False,False,False,0.3181818182,0.2089552239,0.8333333333,0.9190751445,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
"Problematic was that the program just stopped and waited for some process to begin filling the queue, but there was non, so it just did nothing, but also didn't throw an exception or give any kind of warning, which made understanding what was happening a bit difficult.",Motivation,False,269,NONE,False,False,False,0.7704918033,0.7014925373,0.6116504854,0.6,0.5012181902,0.4987818098,0.02428476177,0.003761840049
"We also can't just create a JNI ref for the class of the method being compiled, because when inlining or peeking or looking at statics or anything like that, the JIT would need to create JNI refs for every single class it wants to look at, which could be a massive set.",Investigation and Exploration,False,269,CONTRIBUTOR,False,False,False,1.0,0.5714285714,1.0,0.8181818182,0.86612727,0.13387273,0.03684751755,0.005897328255
"Now when I switched from a normal Session to using MonitoredSession and added a logging hook and told it to log the 'accuracy' tensor, it tried in vain to evaluate the first session run call as the hook had added that tensor to the fetch list, but with the queue being still empty there was no way to evaluate accuracy yet.",Motivation,False,323,NONE,False,False,False,1.0,0.9104477612,0.6102635229,0.5,0.5012181902,0.4987818098,0.02428476177,0.003761840049
Javascropt is a bad desigbed language.,Social Conversation,False,38,NONE,False,False,False,0.6,0.08219178082,0.8168103448,1.0,0.812005312,0.187994688,0.2701229087,0.0002104729666
"That said... as I mentioned above, with HCR it _is_ actually possible for us to get non-NULL the first time and NULL the second time.",Solution Discussion,False,133,CONTRIBUTOR,False,False,False,0.5652173913,0.4193548387,0.8333333333,0.7486338798,0.9240498584,0.07595014165,0.1265062135,0.2372754111
"If DetachCurrentThread() isn't JNI_OK, a message is printed to stderr and the return code is set to 1. DestroyJavaVM() is called, which doesn't affect the return code, and then the return code is returned.",Solution Discussion,False,205,CONTRIBUTOR,True,False,False,0.7727272727,0.5862068966,0.7142857143,0.8256880734,0.9968553268,0.003144673225,0.003909680331,0.004205153524
https://github.com/ibmruntimes/openj9-openjdk-jdk12/commit/d127ea8ed60ffb70e61cb3eefcb1f16737f572ef,Solution Discussion,False,99,CONTRIBUTOR,False,False,False,0.05882352941,0.005747126437,0.75,0.3125,0.7589445999,0.2410554001,4.13e-05,3.37e-05
so 9.1 won't cut it..,Investigation and Exploration,False,21,NONE,False,False,False,0.1714285714,0.04724409449,0.4164222874,0.4285714286,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
"Okay so CODE is working, in a branch (CODE).",Testing,True,44,MEMBER,False,False,False,0.5,0.05882352941,0.2797427653,0.1111111111,0.008127924991,0.991872075,0.0004078869671,0.01796302825
you may need to check against: from tensorflow.core import versionsversions.GIT_VERSION,Solution Discussion,False,87,CONTRIBUTOR,False,False,False,0.44,0.01591895803,0.09570957096,1.0,0.001815445769,0.9981845542,0.0002569016662,0.01544625718
Upgrading to Tensorflow 1.2.0 and generating the cells in a loop instead of list multiplication fixed this for me.,Solution Discussion,False,114,NONE,False,False,False,1.0,0.02749638205,0.699669967,1.0,0.2621436948,0.7378563052,0.02156039818,0.005470878209
"So perhaps the fast path from the compiled code is always incorrect, and we get lucky in production builds.",Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,1.0,0.1484375,0.5,0.3055555556,0.03660508119,0.9633949188,4.42e-05,0.0004075557136
"For the sake a comparison to allow OpenJ9 to get the benefit of AOT heh, would you mind doing a run without the debugger :).",Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,1.0,0.1824817518,0.6666666667,0.2379182156,0.002200894134,0.9977991059,0.0002033294683,1.24e-06
Nothing is lost by removing that option.,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.3043478261,0.04022988506,1.0,0.6727941176,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
CODE just walks through the indirect load chain using CODE.,Investigation and Exploration,True,59,CONTRIBUTOR,False,False,False,0.2173913043,0.05291005291,0.25,0.7942857143,0.4493209598,0.5506790402,0.0005637074234,0.0001208535739
This means you have to somehow manually manage the chunk size.,Solution Discussion,False,62,MEMBER,False,False,False,0.275,0.07189542484,0.7909967846,0.5789473684,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
It's not specific to the 17 release and is already present in the field.,Investigation and Exploration,False,72,MEMBER,False,False,False,0.5,0.1505376344,0.8571428571,0.9266409266,0.8498306174,0.1501693826,0.005725859998,0.01048932789
"It still fails. CODE log file: [osrtransitions.20211202.073456.30262.txt] URL 

CODE",Solution Discussion,True,86,CONTRIBUTOR,False,False,False,0.2857142857,0.1075268817,1.0,0.4749034749,0.5337820175,0.4662179825,0.002331376221,0.004039808715
I'm trying to do some work on the text from Wiki Dump.,Motivation,False,54,CONTRIBUTOR,False,False,False,0.6666666667,0.07843137255,0.7138263666,0.2857142857,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
I have never had this not fail within about 10 minutes.,Bug Reproduction,False,55,NONE,True,True,False,0.3666666667,0.1466666667,0.8,0.04519774011,0.0,1.0,0.0,4.66e-05
+1 :+1:,Social Conversation,False,7,NONE,False,False,False,1.0,0.02739726027,0.03017241379,1.0,0.0002431555178,0.9997568445,0.0003691576323,0.0004247083312
I am fine with the proposed CODE setting but should we get the JCE performance team to also measure with this setting on AIX to get the performance picture on the multithreaded scenarios they were running on ?,Solution Discussion,True,209,CONTRIBUTOR,False,False,False,1.0,0.5967741935,1.0,0.9493670886,0.9207074842,0.07929251579,0.008255133205,0.003961297135
I am not sure how much I would bet on it :),Social Conversation,False,43,CONTRIBUTOR,False,False,False,0.9230769231,0.06896551724,0.5,0.4117647059,0.7657175072,0.2342824928,0.0001692768735,9.33e-06
"Given that we want to handle both, an overview of how OneHotEncoder would work:",Solution Discussion,False,79,CONTRIBUTOR,True,False,False,0.4242424242,0.21875,0.1727941176,0.6666666667,0.002016098271,0.9979839017,0.0039907996,0.01559625638
CODE,Solution Discussion,True,4,NONE,False,False,False,0.1428571429,0.007874015748,0.2228739003,1.0,0.3308235311,0.6691764689,0.5779195954,0.02958178195
"Hm, interesting, so it's not a conda issue after all then ...",Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,0.7857142857,0.1549295775,0.581871345,0.3333333333,0.4547552612,0.5452447388,0.0003054131048,0.003896611783
"This runs from command prompt, but not from IPython Notebook.",Observed Bug Behaviour,False,61,NONE,False,False,False,0.4166666667,0.1030927835,0.1982248521,0.6,0.2578934907,0.7421065093,0.000173866989,0.0009051930247
"Although the issue is intermittent, JITClient always crash at the same method.",Bug Reproduction,False,78,CONTRIBUTOR,False,False,False,0.5714285714,0.06349206349,0.1666666667,0.1657142857,0.308244607,0.691755393,0.01265320363,0.0005070055754
"I was really, really happy to no longer see the TransformerConfigurationException/ClassFormatError.",Social Conversation,False,99,NONE,False,False,False,0.5714285714,0.09022556391,0.4,0.7073791349,0.7787161072,0.2212838928,0.2412282351,0.0001541057533
https://hyc-runtimes-jenkins.swg-devops.com/job/Grinder/10355,Bug Reproduction,False,61,CONTRIBUTOR,False,False,False,0.06666666667,0.02127659574,1.0,0.1653846154,0.1048089134,0.8951910866,0.05832768032,0.01345561023
"https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_ppc64_aix_Nightly/323
CODE

https://ci.eclipse.org/openj9/job/Test_openjdk14_j9_extended.system_ppc64_aix_Nightly/27
CODE",Testing,True,193,CONTRIBUTOR,True,False,False,0.4666666667,0.1129032258,1.0,0.611814346,0.4808175087,0.5191824913,0.003806695701,0.001055956968
"I haven't stepped through the automaton yet (if you want to do that, use the methodCODE) to see exactly where the problem is, but I'm pretty sure the error will come from an interaction with entities pre-set by the CODE class.",Investigation and Exploration,True,226,MEMBER,False,False,False,1.0,0.4421052632,0.3263157895,0.4444444444,0.1453780739,0.8546219261,0.07593267665,0.03116866066
"This currently doesn't work with plain pickle, failing as follows: CODE",Motivation,True,71,NONE,True,True,False,0.3055555556,0.07189542484,0.006430868167,0.25,0.0,1.0,0.0,0.0054583822
We need some detailed evaluations of its performance (especially JIT-compiler and GC).,Solution Discussion,False,86,CONTRIBUTOR,False,False,False,0.3823529412,0.07471264368,0.7777777778,0.5882352941,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
Would you please update if you diagnose the cause of this behavior?,Usage,False,67,CONTRIBUTOR,False,False,False,0.2,0.04615384615,0.4047109208,1.0,0.3713273265,0.6286726735,0.000473907732,0.001356181686
Same for SoNar-klein.,Solution Discussion,False,21,NONE,False,False,False,0.1081081081,0.06666666667,0.5948275862,0.25,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"Oh yeah and BTW, sklearn.grid_search is deprecated you probably want to use sklearn.model_selection at one point not too far down the road.",Solution Discussion,False,139,MEMBER,False,False,False,1.0,0.2268041237,0.5088757396,1.0,0.8484973075,0.1515026925,7.946388893e-07,5.939925697e-06
Any chance you can confirm whether the CODE is an input or output parameter?,Solution Discussion,True,76,CONTRIBUTOR,False,False,False,0.5185185185,0.1346153846,0.5,0.8950276243,0.318512894,0.681487106,1.18e-05,0.005051300017
Let's limit the PRs for this going into 0.16 until we're sure we're going to ship it.,Action on Issue,False,85,MEMBER,False,False,False,1.0,0.09770114943,1.0,0.04411764706,0.663539314,0.336460686,1.0,0.02235494254
this instruction is coming from and check/document overall assumptions about the incoming length for that code.,Investigation and Exploration,False,111,CONTRIBUTOR,False,False,False,1.0,0.3617021277,1.0,0.6269230769,0.5851663836,0.4148336164,0.3869983485,0.2686456518
The overhead of pickling and unpickling the spacy data models is significant.,Solution Discussion,False,77,NONE,False,False,False,0.5454545455,0.07843137255,0.6752411576,0.5833333333,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"UPDATE July 25, 2016:",Social Conversation,False,21,NONE,False,False,False,0.1142857143,0.01538461538,0.1241970021,0.4347826087,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"I will gladly contribute in any way I can, however, this is something I will not be able to do alone.",Contribution and Commitment,False,101,NONE,False,False,False,0.84,0.2876712329,0.07327586207,0.8333333333,0.001454209969,0.99854579,0.004261247633,0.002175772592
My Python version is installed via brew on macOS Sierra 10.12.4,Bug Reproduction,False,63,NONE,False,False,False,0.7857142857,0.1549295775,0.9561403509,0.5,0.8221631882,0.1778368118,0.1070466705,0.1393667667
Thanks,Social Conversation,False,6,NONE,False,False,False,0.04761904762,0.001447178003,0.6072607261,1.0,0.1812375377,0.8187624623,0.0007677384667,0.005664414752
I'm not sure how signal handlers work on the various platforms.,Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.2391304348,0.1057692308,0.5,0.861878453,0.3185054309,0.6814945691,0.006311966217,1.18e-05
I can reproduce the error with the example provided by SCREEN_NAME  .,Bug Reproduction,False,69,NONE,False,False,False,0.6666666667,0.1690140845,0.0701754386,1.0,0.0967678968,0.9032321032,0.247501826,0.008713891162
Okay so.,Social Conversation,False,8,MEMBER,False,False,False,0.0487804878,0.01307189542,0.1639871383,0.1428571429,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
"Even without merging, how accurate BCI info really is in GC maps, especially in non-FSD mode?",Solution Discussion,False,93,CONTRIBUTOR,False,False,False,0.9444444444,0.265625,0.6666666667,0.6028368794,0.8761337515,0.1238662485,0.1571286372,0.171061806
"This has now occurred on jdk14 aix too running test java/nio/channels/FileChannel/TransferToChannel.java: https://ci.adoptopenjdk.net/job/Test_openjdk14_j9_sanity.openjdk_ppc64_aix/12/console
CODE",Investigation and Exploration,True,197,CONTRIBUTOR,False,False,False,1.0,0.1978021978,1.0,0.08741258741,0.08854320636,0.9114567936,0.4507797245,0.0006539748809
Thanks SCREEN_NAME  for giving it a try.,Social Conversation,False,40,MEMBER,False,False,False,1.0,0.1126760563,0.350877193,1.0,0.3258831253,0.6741168747,0.005186210661,0.4852296023
I'm currently using the new CODE and CODE apis along with CODE to accomplish this but is there a more direct/natural way in the works?,Usage,True,134,NONE,False,False,False,0.8125,0.3880597015,0.5631067961,1.0,0.4602787203,0.5397212797,0.008479027653,0.0006250222677
"Can you confirm, @babsingh?",Contribution and Commitment,False,27,CONTRIBUTOR,False,False,False,0.2857142857,0.04301075269,1.0,0.749034749,0.6082511737,0.3917488263,0.1957833797,0.007960250968
"In the coordinate decent algorithms, the CODE option was introduced exactly for this purpose.",Potential New Issues and Requests,True,93,MEMBER,False,False,False,0.4666666667,0.1971830986,0.5289855072,0.75,0.04254757077,0.9574524292,3.382963704e-05,1.965207131e-06
Thanks for your help.,Social Conversation,False,21,NONE,False,False,False,0.2222222222,0.05633802817,0.8830409357,1.0,0.6460564675,0.3539435325,0.002055691741,0.0001352009984
It seems this problem is different.,Investigation and Exploration,False,35,MEMBER,True,False,False,0.2068965517,0.0652173913,0.8,0.534591195,0.5013662667,0.4986337333,0.009822949607,0.01749005949
@paulaceccon are your Numpy and Scipy installations using ATLAS or OpenBLAS?,Investigation and Exploration,False,76,NONE,False,False,False,1.0,0.1134020619,0.6952662722,1.0,0.8503804785,0.1496195215,0.001154610306,7.362329309e-05
I will investigate some more and see if I can reproduce the issue on another task.,Social Conversation,False,82,NONE,False,False,False,0.6153846154,0.06153846154,0.5010706638,0.8888888889,0.386758151,0.613241849,0.0004998808382,0.0004945035936
"For LE, that (r12 setting) is the requirement of the ABI definition.",Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.6315789474,0.09375,0.5,0.3833333333,0.03699803832,0.9630019617,6.66e-06,2e-05
Taking the example from https://github.com/pandas-dev/pandas/issues/17418,Expected Behaviour,False,73,NONE,False,False,False,0.1785714286,0.078125,0.7720588235,0.25,0.2567040608,0.7432959392,0.02304981706,0.003308173532
Same issue.,Bug Reproduction,False,11,NONE,False,False,False,0.3333333333,0.02816901408,0.08187134503,0.5,0.1107881706,0.8892118294,0.07295885932,0.0628243198
"In case you need to know where these debugging messages happens, you can grep them in my repo here: https://github.com/harryyu1994/openj9/tree/debug.",Social Conversation,False,149,CONTRIBUTOR,False,False,False,0.8333333333,0.1058201058,1.0,0.64,0.4475201106,0.5524798894,8.48e-05,3.48e-05
the stacktrace suggests that the NPE exception comes from internal handler of invokespecial so I don't think throw apply?,Investigation and Exploration,False,121,CONTRIBUTOR,False,False,False,1.0,0.2065217391,0.3333333333,0.3081761006,0.3660920551,0.6339079449,0.0001236847171,0.0002473694342
JITClient runs the application and JITServer does the compilations for JITClient.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.2291666667,0.0582010582,0.2941176471,0.5542857143,0.447477842,0.552522158,0.001615795728,8.48e-05
"Closing this out since I understand it to be resolved, but please let me know if I'm mistaken.",Action on Issue,False,94,MEMBER,False,False,False,1.0,0.1417322835,0.04105571848,0.6666666667,0.0329509246,0.9670490754,0.1295333454,0.2905541361
"As far as I know, BN-statistics are calculated on CPU, not GPU so far.",Solution Discussion,False,70,NONE,False,False,False,0.2631578947,0.05769230769,0.3383297645,0.8461538462,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
"I started working on a [NodeJS binding for TensorFlow] URL  a while ago, but a haven't had much free time to devote to it lately.",Social Conversation,False,129,NONE,False,False,True,26.0,0.3561643836,0.9784482759,3.0,1.0,0.0,0.5674118797,0.0
Thank you very much.,Social Conversation,False,20,NONE,False,False,False,0.2222222222,0.05970149254,0.8085991678,0.4,0.6149282872,0.3850717128,0.001498933696,0.123123279
"https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-985626197

Ran CODE and CODE and both passed",Solution Discussion,True,113,CONTRIBUTOR,True,False,False,1.0,0.09677419355,1.0,0.8108108108,0.6124062567,0.3875937433,0.002708126618,0.04747801046
All other threads have halted for CODE.,Investigation and Exploration,True,39,CONTRIBUTOR,False,False,False,0.1555555556,0.09333333333,0.8,0.5988700565,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
Do you mean we should be able to pass nodes with the length child being both Int and Long type?,Solution Discussion,False,95,CONTRIBUTOR,False,False,False,0.6666666667,0.4255319149,0.2,0.9423076923,0.7315269328,0.2684730672,0.001396795956,0.005094870496
"If so, I need to double-check the generation of jclse11_29.dll as well as all related module.xml to see whether there is anything else should be fixed.",Investigation and Exploration,False,151,CONTRIBUTOR,False,False,False,1.0,0.2288135593,1.0,0.8666666667,0.6154962774,0.3845037226,0.01905847349,0.0312575819
I want spaCy and Gensim to interoperate sanely.,Potential New Issues and Requests,False,47,MEMBER,False,False,False,0.3333333333,0.2105263158,0.7883211679,0.1428571429,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
"btw, sedmgr doesn't need root authority to run.",Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.8888888889,0.04597701149,0.5,0.8529411765,0.7733855658,0.2266144342,2.66e-05,1.04e-05
"Before the relevant changes on Linux for Power, this was a typical result from the verbose log:

CODE

and this was a typical one from after the change

CODE

The maximum compile-time was usually one of the many CODE methods.",Investigation and Exploration,True,233,MEMBER,False,False,False,1.0,0.671641791,0.4285714286,0.5086705202,0.009579724698,0.9904202753,0.003668136449,0.001720565783
"Given that the problem has been reported on different OSX versions, I kind of doubt this is only a OSX version issue.",Investigation and Exploration,False,117,MEMBER,False,False,False,1.0,0.3098591549,0.4561403509,0.3333333333,0.4155660316,0.5844339684,0.0005572716688,0.0001185949392
more code (on earth) is written in javascript than ANY other high level language..,Motivation,False,82,NONE,False,False,False,1.0,0.2054794521,0.8254310345,0.5,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
Can you post the output of CODE.,Investigation and Exploration,True,32,MEMBER,False,False,False,0.21875,0.07216494845,0.4792899408,0.1,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
"In any case it's not difficult to move the AGCT buffer to a dynamically-allocated buffer, pointed-to by a thread-local variable.",Solution Discussion,False,128,NONE,True,False,False,0.9583333333,0.2211538462,0.5,0.9171270718,0.3217031432,0.6782968568,0.005051300017,0.0136228909
"If no base estimator is given, then it is equivalent to combining the estimators in CODE.",Solution Discussion,True,89,MEMBER,False,False,False,0.5333333333,0.2253521127,0.8333333333,0.4545454545,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"Investigation shows the problem with jclse11_29 came from the code in J9SigQuitStartup as follows:
CODE
The problem with Initialization disappear if disabling SigQuit with -Xrs (JIT off)
CODE
How, the issue with module-info.class still exist with JIT on:
CODE",Investigation and Exploration,True,264,CONTRIBUTOR,False,False,False,1.0,0.3728813559,0.5,0.8303030303,0.6093579692,0.3906420308,0.02154742127,0.01905847349
I had to reverse back to 1.0.1: `pip3 install tensorflow==1.0,Solution Discussion,False,61,NONE,False,False,False,1.0,0.01447178003,0.6633663366,1.0,0.2137099354,0.7862900646,0.04042101496,0.04734857901
"If we want to store Xmx, we might want to store Xms as well.",Solution Discussion,False,60,CONTRIBUTOR,False,False,False,1.0,0.09589041096,0.6666666667,0.1731843575,0.01369821541,0.9863017846,0.0005232437649,0.0003613942987
"In the meantime, in the head stream, I like @liqunl's suggestion of capturing more of the API results that are producing inconsistent behaviour and including them in the assert so that we can hopefully reason as to what the issue might be.",Investigation and Exploration,False,239,CONTRIBUTOR,False,False,False,1.0,0.6774193548,1.0,0.5464480874,0.6839930416,0.3160069584,0.1091893746,0.01660963043
Notice 9.0 at the last line above.,Solution Discussion,False,34,NONE,False,False,False,0.5384615385,0.05511811024,0.724340176,0.6,0.5124660478,0.4875339522,0.03664686068,0.234967481
# +1,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.2801724138,1.0,0.2505502056,0.7494497944,0.1151068023,0.3442040813
I've used a tf.placeholder to switch between testing/training mode.,Usage,False,67,NONE,False,False,False,0.3235294118,0.04230769231,0.4689507495,0.5,0.3863527786,0.6136472214,0.03294891445,0.0006233545505
any guidance is greatly appreciated.,Social Conversation,False,36,NONE,False,False,False,0.2380952381,0.03937007874,0.3431085044,1.0,0.3566928644,0.6433071356,0.1351135301,0.002261357628
"This is the full commandline it now launches with:

CODE",Investigation and Exploration,True,58,NONE,True,False,False,0.4230769231,0.1111111111,1.0,0.6631578947,0.2124151465,0.7875848535,0.004198632607,0.0008429687088
"In a virtualenv, I get:CODE",Bug Reproduction,True,27,NONE,False,False,False,0.2608695652,0.04724409449,0.8914956012,0.2857142857,0.9258004594,0.07419954058,0.1457126271,0.001998099513
@ppwwyyxx do you have any example code for combining queues and the new dataset api?,Usage,False,84,NONE,False,False,False,1.0,0.223880597,0.7961165049,0.5,0.6090536099,0.3909463901,0.0001603273732,0.009944877922
Many thanks.,Social Conversation,False,12,NONE,False,False,False,0.06451612903,0.007692307692,0.5546038544,0.3333333333,0.4928558613,0.5071441387,0.00210016914,0.003858020855
I like early stopping but it doesn't resolve this in my opinion.,Solution Discussion,False,64,CONTRIBUTOR,True,False,False,1.0,0.1690140845,0.1304347826,1.0,0.03633137137,0.9636686286,0.007845949097,0.0001465833962
"[cmdLineTester_EnableAssertionStatusTest on mac] URL :

CODE",Testing,True,62,CONTRIBUTOR,False,False,False,0.75,0.1034482759,1.0,0.6055045872,0.8896179734,0.1103820266,0.02225954837,0.05033867386
@blang can you confirm?,Investigation and Exploration,False,23,NONE,False,False,False,0.2352941176,0.04210526316,0.1578947368,0.5,0.07664535565,0.9233546443,0.1559472602,0.02247209918
This would print something like:CODE,Solution Discussion,True,36,NONE,False,False,False,0.15,0.08955223881,0.6518723994,0.75,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Makes a difference for me.,Social Conversation,False,26,CONTRIBUTOR,False,False,False,1.0,0.03649635036,1.0,0.3791821561,0.02026459222,0.9797354078,9.03e-05,5.3e-05
"so this:

CODE

I realise the cores is really what you are after, but I just don't know what it is I should do to get them :-(",Investigation and Exploration,True,130,NONE,True,False,False,0.9090909091,0.303030303,1.0,0.6105263158,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
"The current version is designed to be a drop-in replacement for the queues, which use CODE to signal completion, and various other classes are designed to catch that exception.",Solution Discussion,True,176,CONTRIBUTOR,True,False,False,0.6382978723,0.447761194,0.5381414702,0.5357142857,0.4592244679,0.5407755321,0.003916059713,0.008479027653
@cathyzhyi Any update on the tactical fix?,Task Progress,False,42,CONTRIBUTOR,False,False,False,0.3043478261,0.05263157895,0.2,0.9694656489,0.950729363,0.04927063696,0.001789180059,0.03518393768
The J9 JVM is not able to do this post-processing if a pipe program processes the core dump first.,Investigation and Exploration,False,98,CONTRIBUTOR,False,False,False,0.3125,0.1503759398,0.6666666667,0.2442748092,0.2149926436,0.7850073564,0.0009205468343,0.02955805577
"Here are the results:<img width=""555"" alt=""screen shot 2016-08-16 at 2 24 25 pm"" src=""https://cloud.githubusercontent.com/assets/1669062/17711263/c23cb262-63be-11e6-9aaf-96e9763a00e0.png"">",Investigation and Exploration,False,188,NONE,False,False,False,0.76,0.3064516129,0.2378854626,0.5555555556,0.2016154368,0.7983845632,0.03459730626,0.03432994834
Related resources/discussion:,Solution Discussion,False,29,NONE,False,False,False,0.07142857143,0.04109589041,0.7995689655,0.7777777778,0.7855057516,0.2144942484,0.4412746119,0.2066977323
2.         using placeholder to switch between train and test evaluation,Usage,False,72,NONE,False,False,False,0.3793103448,0.04230769231,0.9379014989,0.4117647059,0.7995481369,0.2004518631,0.3206669123,0.722664447
why intern the strings?,Investigation and Exploration,False,23,MEMBER,False,False,False,0.1,0.06451612903,0.2907488987,0.1388888889,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"but I think that the placeholder value is not being used, because I see no change if I force values to CODE function, and in TensorBoard it's not connected to the graph...",Usage,True,171,NONE,False,False,False,1.0,0.1230769231,0.6595289079,0.6666666667,0.5706347361,0.4293652639,0.0008277913049,5.184475509e-05
CODE,Solution Discussion,True,4,NONE,False,False,False,0.08333333333,0.001447178003,0.6534653465,1.0,0.2038763093,0.7961236907,0.028390304,0.04042101496
"a monitor api is very flexible but actually you want to do early stopping **every time** you use an estimator, right?",Motivation,False,117,MEMBER,False,False,False,1.0,0.2957746479,0.2282608696,0.5,0.03945490707,0.9605450929,1.565147108e-05,1.186142875e-05
But by doing this I can't find a way to shuffle the entire data in e.g. my training data every epoch.,Workarounds,False,101,NONE,False,False,False,0.5675675676,0.3134328358,0.7808599168,0.25,0.6090011473,0.3909988527,0.000271284095,0.000261613555
"Unfortunately, the PR that added this tracing missed a change that meant we didn't trace anything in CODE....",Investigation and Exploration,True,109,CONTRIBUTOR,False,False,False,0.4130434783,0.3064516129,0.1666666667,0.7049180328,0.9240498584,0.07595014165,0.1265062135,0.2372754111
1.         Select an unannotated corpus.,Solution Discussion,False,40,MEMBER,False,False,False,0.1,0.1,0.1206896552,0.32,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"I've integrated this new dataset API into my factoration machine trainer, and it saved me 20% training time.",Solution Discussion,False,108,CONTRIBUTOR,False,False,False,1.0,0.2835820896,0.4965325936,0.6666666667,0.4357408203,0.5642591797,0.0001445491238,0.02256391463
IMHO the most important thing is a universal API (i.e. parameters and bbehavior patterns) for all of encoders we discuss,Expected Behaviour,False,120,NONE,False,False,False,1.0,0.3125,0.9779411765,0.5,0.9997898183,0.0002101816893,0.3072525155,0.0009246776239
Please create a new instance of the cell if you would like it to use a different set of weights.,Bug Reproduction,False,96,NONE,False,False,False,0.5263157895,0.02894356006,0.1815181518,0.7,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"The backtrace below shows it failed to locate the offset type when parsing these .pdf files as follows:
CODECODEfffde000 Unfrozen
Child-SP          RetAddr           Call Site
00000000CODE3f32442d ddrgen!PdbScanner::setMemberOffset+0x160",Investigation and Exploration,True,240,CONTRIBUTOR,False,False,False,0.5517241379,0.2711864407,0.1052631579,0.2666666667,0.4157549389,0.5842450611,0.03011392996,0.0003752752636
"The only way around for the moment is to explicitly add the following line to SpringToolSuite4.ini
CODE
which will start Java 8 separately.",Workarounds,True,141,CONTRIBUTOR,False,False,False,1.0,0.2525252525,0.3333333333,0.901754386,0.9027706622,0.09722933782,0.002496484253,0.002703173696
Would early stopping be an acceptable solution to you?,Solution Discussion,False,54,MEMBER,False,False,False,1.0,0.1267605634,0.1231884058,1.0,0.02910389561,0.9708961044,0.004244671937,0.007845949097
And Dataset do not stably init variable defined in the map function as https://github.com/tensorflow/tensorflow/issues/12648,Potential New Issues and Requests,False,124,NONE,False,False,False,0.7,0.2089552239,0.9459084605,1.0,0.9869915419,0.01300845813,0.09093412326,0.005682714673
IO?,Investigation and Exploration,False,3,CONTRIBUTOR,False,False,False,0.03846153846,0.007299270073,0.6666666667,0.468401487,0.02082693886,0.9791730611,0.0001014576777,0.0001142951797
How should the methods in cnathelp.cpp get the right TOC then?,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3235294118,0.0859375,1.0,0.1222222222,0.02817987909,0.9718201209,0.001090608783,1.78e-05
"I'll try to look at this in the spring break in two weeks, ok?",Contribution and Commitment,False,62,MEMBER,False,False,False,1.0,0.21875,0.7610294118,0.5,0.2514647759,0.7485352241,0.4169661461,0.02304981706
"-         This was the part I was not sure about: Is there any setup required, or is it sufficient to just load the English object at each worker?",Solution Discussion,False,146,NONE,False,False,False,1.0,0.1830065359,0.154340836,0.9333333333,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
"I have installed version 1.6 manually, and I get a lot of this during the run:
CODE
I take it that's not expected?",Investigation and Exploration,True,116,CONTRIBUTOR,False,False,False,1.0,0.2403846154,1.0,0.4033149171,0.132503031,0.867496969,2.73e-05,6.47e-05
https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=debnetwork,Workarounds,False,152,NONE,False,False,False,0.1666666667,0.007874015748,0.275659824,0.5,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
"I had a look at how CODE might fail, but didn't see anything obvious.",Solution Discussion,True,69,CONTRIBUTOR,False,False,False,0.35,0.2978723404,0.5,0.9615384615,0.7324567567,0.2675432433,0.005094870496,0.01440588944
The only known issue is that you shouldn't begin training a model and then pickle it part way through training.,Task Progress,False,111,MEMBER,False,False,False,1.0,0.1307189542,0.3151125402,0.75,0.01445541281,0.9855445872,0.01796302825,0.01064935216
So it is possible that something else in setting might change in such case.,Solution Discussion,False,75,CONTRIBUTOR,False,False,False,0.56,0.1414141414,1.0,0.9333333333,0.9050841216,0.09491587836,0.005495507544,0.008713378481
This shuffles as desired on every epoch the entire dataset and gives an output e.g. like this: CODE,Workarounds,True,99,NONE,False,False,False,1.0,0.2686567164,0.8127600555,1.0,0.6149282872,0.3850717128,0.001498933696,0.123123279
A higher abstraction can make it much easier without considering using control flows or other hacks.,Solution Discussion,False,100,CONTRIBUTOR,False,False,False,0.6956521739,0.2388059701,0.1012482663,1.0,0.003774842471,0.9962251575,0.004893293226,0.03692313957
"Hi,I tried to implement a batch normalisation layer with the help of the suggestions in this issue, but I still have a >70% error in validation and testing...",Usage,False,158,NONE,False,False,False,1.0,0.1115384615,0.6295503212,0.25,0.5678279549,0.4321720451,0.377195146,0.003001821466
"Next steps include investigating:
-> The classunloading routine within the HT was never called, due to some missed path.
-> An invalid j9classloader was passed into the classunloading routine and the entry was never removed.",Investigation and Exploration,False,226,CONTRIBUTOR,False,False,False,0.8139534884,0.3846153846,0.9,0.2867132867,0.6007887623,0.3992112377,0.01222678832,0.05114946292
The error is in [this](https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py#L122) cluster of lines.,Investigation and Exploration,False,136,NONE,False,False,False,0.5161290323,0.02315484805,0.3597359736,0.6666666667,0.07179521051,0.9282047895,0.000334150158,3.547972203e-05
"if is_training evalutes to False and thus the ""moments""-part of the graph is never used and thus shouldn't be executed",Solution Discussion,False,118,NONE,False,False,False,0.5789473684,0.08461538462,0.869379015,0.75,0.7214324611,0.2785675389,0.0005628859124,0.02303946421
It only affects the slow path by not creating OSR transition points to take on a failed guard for certain methods being inlined.,Workarounds,False,128,MEMBER,False,False,False,1.0,0.25,0.4,0.9308176101,0.6394476,0.3605524,0.0002725427144,0.05549281815
"The JIT should remove all entries inside DLTRecord, and J9MethodHT at the end of all four of the specified hooks rather than waiting for classloader unloading.",Investigation and Exploration,False,159,CONTRIBUTOR,False,False,False,0.8965517241,0.2857142857,0.8,0.520979021,0.8539779528,0.1460220472,0.001070700924,0.001618376001
"In the latter case, the moving mean and variance look more reasonable (with different values), but if I use is_training=False in test time, the performance is also really bad.",Usage,False,175,NONE,False,False,False,1.0,0.1153846154,0.4218415418,0.75,0.3791120712,0.6208879288,0.03827269103,0.003216099592
"The crash occur in CODE

This is c-stack (with preserved registers):
CODE",Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,1.0,0.1758241758,1.0,0.06293706294,0.004810099899,0.9951899001,0.0002611277793,0.0001840989358
"I also met the problem that I could get good results when using is_training=True for both training and inference, but get bad results when setting is_training=False during inference (worse than the case using is_training=True).",Usage,False,227,NONE,False,False,False,1.0,0.1423076923,0.8800856531,0.1666666667,0.7404633962,0.2595366038,0.09747656054,0.006199252888
Segmentation Error When compiling with debug enabled on PPC,Observed Bug Behaviour,False,59,CONTRIBUTOR,True,True,False,0.2571428571,0.0703125,0.1666666667,0.005555555556,0.0,1.0,0.0,0.009802165843
"currently the remote routine CODE used at the JITServer side takes an object address, we should create a new remote routine where it takes globalreference instead.",Solution Discussion,True,163,CONTRIBUTOR,False,False,False,0.6341463415,0.1375661376,0.5,0.9028571429,0.4989698829,0.5010301171,0.001840119827,0.003764671603
Thanks.,Social Conversation,False,7,MEMBER,False,False,False,0.1428571429,0.01612903226,0.08370044053,1.0,0.0002129451177,0.9997870549,0.0008157310994,0.02381581855
I am currently attempting to reproduce the failure and have the runtime OSR details written to the verbose log.,Task Progress,False,111,MEMBER,False,False,False,0.475,0.2065217391,0.9090909091,0.8176100629,0.6067408459,0.3932591541,0.03227550175,0.06952239071
Have a look at [how this is used in the NMT model code](https://github.com/tensorflow/nmt/blob/04c8c04a8b4e805f3d0a9c42b4d17c85f1324c55/nmt/utils/iterator_utils.py#L194) for an example.,Usage,False,185,CONTRIBUTOR,True,False,True,21.0,0.3134328358,0.9986130374,24.0,1.0,0.0,0.02385162338,0.0
For example this pattern works well: CODE,Usage,True,41,MEMBER,False,False,False,0.3333333333,0.02692307692,0.670235546,0.6,0.5709329897,0.4290670103,0.001836887066,0.003906111685
"Yes, that's accurate.",Solution Discussion,False,21,CONTRIBUTOR,False,False,False,1.0,0.03225806452,1.0,0.9382239382,0.852313953,0.147686047,0.01048932789,0.2809961131
I have been using spacy for streaming data (twitter and news stories mostly) and I believe that the fundamental design of the vocab/StringStore in spacy is problematic for streaming processing.,Motivation,False,193,NONE,True,True,False,0.5438596491,0.5,0.008810572687,0.1176470588,0.0,1.0,0.0,0.0008157310994
"Now tf.contrib.layers.batch_norm accepts a Tensor, Variable or Placeholder as is_training https://github.com/tensorflow/tensorflow/commit/9da5fc8e6425cabd61fc36f0dcc1823a093d5c1d#diff-94bbcef0ec8a5cdef55f705e99c2b2ed",Task Progress,False,216,MEMBER,False,False,False,1.0,0.04230769231,0.2291220557,1.0,0.2245664225,0.7754335775,0.007193130032,0.00405768911
There is a plan to support method handles with AOT but that is still being designed.,Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.5714285714,0.2388059701,1.0,0.3294797688,0.005067697264,0.9949323027,4.84e-06,5.36e-06
"@pawni If you don't want to worry about about updating moving_mean and moving_variance set updates_collections=None to make sure they are updated in place, otherwise you need to make sure the update_ops added to tf.GraphKeys.UPDATE_OPS are run during training.",Usage,False,260,MEMBER,False,False,False,1.0,0.1576923077,0.05781584582,1.0,0.1738849469,0.8261150531,1.156614889e-05,0.0001378806696
I am aware this is only relevant to some kind of ensembles though.,Solution Discussion,False,66,MEMBER,False,False,False,0.4333333333,0.1830985915,0.8731884058,0.9545454545,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"So if anyone is serious about that and/or wants more details on working with v8 modules, let me know.",Contribution and Commitment,False,101,NONE,False,False,False,0.5277777778,0.2602739726,0.3189655172,1.0,0.3441984002,0.6558015998,0.02043978005,0.1292799766
"-         Implementation B: More complex, but user can be oblivious",Solution Discussion,False,67,NONE,False,False,False,0.2325581395,0.06535947712,0.2411575563,0.6315789474,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
"Furthermore, there was no trace of CODEin any of the log files.",Investigation and Exploration,True,63,MEMBER,False,False,False,0.3,0.1304347826,0.2727272727,0.7735849057,0.6067408459,0.3932591541,0.03227550175,0.06952239071
This will at least partially solve this problem for 0.15.0..,Solution Discussion,False,60,CONTRIBUTOR,False,False,False,0.3333333333,0.0802919708,0.8,0.9851301115,0.1882122667,0.8117877333,0.002992794434,1.0
"Here is where the Liberty code does the put in the stack above.
https://github.com/OpenLiberty/open-liberty/blob/5c946ad0ee55c8adfbf54cb56bfa1558e6c28a96/dev/com.ibm.ws.jaxrs.2.0.cdi/src/com/ibm/ws/jaxrs20/cdi/component/JaxRsFactoryImplicitBeanCDICustomizer.java#L245",Investigation and Exploration,False,268,NONE,True,False,False,0.6818181818,0.1875,1.0,0.7598039216,0.9283799925,0.0716200075,0.02415455435,0.06820979376
When GC discovered that non of classes from classloader have instances in object heap the decision of unloading this classloader is taken.,Investigation and Exploration,False,138,CONTRIBUTOR,False,False,False,0.34375,0.2417582418,0.4,0.5314685315,0.8542739958,0.1457260042,0.001618376001,0.002043575217
I happened to have this error and then I found this discussion.,Social Conversation,False,63,NONE,False,False,False,1.0,0.1690140845,0.9766081871,0.6666666667,0.8481484551,0.1518515449,0.01200604239,0.8838761808
I really like what I see!,Social Conversation,False,25,NONE,False,False,False,0.2,0.08955223881,0.4563106796,0.8888888889,0.402192445,0.597807555,0.001827732055,0.008699923145
This determination of current thread JNI appeared in Honest Profiler (which AFAIK was the first open-source profiler to use AGCT) and still appears to be present in Async Profiler (https://github.com/jvm-profiling-tools/async-profiler/blob/master/src/profiler.cpp#L304).,Investigation and Exploration,False,270,NONE,True,False,False,1.0,0.2980769231,0.5,0.729281768,0.2976333762,0.7023666238,8.01e-05,0.0002211070502
"With multiple VM starting at the same time, values will not converge.",Solution Discussion,False,69,CONTRIBUTOR,False,False,False,0.375,0.08219178082,0.7142857143,0.5418994413,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
Am I right?,Social Conversation,False,11,NONE,False,False,False,0.08108108108,0.01153846154,0.8843683084,0.5,0.7404633962,0.2595366038,0.09747656054,0.006199252888
"Also, its not even remotely close to being called an alternative to Tensorflow...",Potential New Issues and Requests,False,81,NONE,False,False,False,0.3611111111,0.1780821918,0.6573275862,0.5,0.6969145374,0.3030854626,0.0871107993,0.1143443634
"That is basically what I did, which is a little different from your experiment.",Investigation and Exploration,False,79,NONE,True,False,False,0.3111111111,0.1414141414,0.5714285714,0.4070175439,0.1209219988,0.8790780012,0.003294872886,0.07075263326
"(3 runs each, all about the same).",Investigation and Exploration,False,34,NONE,True,False,False,0.2592592593,0.0875,0.3333333333,0.1225490196,0.09701181711,0.9029881829,0.01961071442,0.02610750661
"if regression, what are the last passing / first failing public SHAs (OpenJ9, OMR, JCL) :",Testing,False,89,CONTRIBUTOR,True,True,False,0.3888888889,0.2978723404,0.75,0.01153846154,0.0,1.0,0.0,0.002175337965
:+1:,Social Conversation,False,4,NONE,False,False,False,0.03225806452,0.01369863014,0.01724137931,0.2857142857,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
"I think the problem is in java/lang/J9VMInternals.primitiveClone

I added CODE statements at the start and end of CODE:
https://github.com/eclipse-openj9/openj9/blob/8b18a989f32dfc03c0dc352e1d969e181100e3da/runtime/vm/FastJNI_java_lang_J9VMInternals.cpp#L56-L60

I also tried setting a CODE in CODE for the above function.",Investigation and Exploration,True,327,CONTRIBUTOR,False,False,False,1.0,0.3870967742,0.5,0.416988417,0.4782081127,0.5217918873,0.3568236584,0.02724539507
"Tested on CODE and CODE - the issue seems to be fixed on CODE not just for the example document above, but for the entire corpus where that doc came from.",Testing,True,154,NONE,False,False,False,1.0,0.3157894737,0.4736842105,1.0,0.1598964447,0.8401035553,0.03116866066,0.03531242178
"Gunhan, is that possible?",Contribution and Commitment,False,25,CONTRIBUTOR,False,False,False,0.3333333333,0.005788712012,0.4785478548,1.0,0.08570368789,0.9142963121,0.006280741429,0.01683649271
I could give you that version to see if there is any difference.,Investigation and Exploration,False,64,NONE,True,False,False,0.6842105263,0.1625,1.0,0.5980392157,0.6496013347,0.3503986653,0.3672811628,1.0
However we only have Register class and not Register32 and Register64.,Solution Discussion,False,70,CONTRIBUTOR,False,False,False,0.55,0.2340425532,1.0,0.7307692308,0.6453871071,0.3546128929,0.007376113072,0.2919761514
"But now **with** CODE (which I've used for every run during this debugging):

CODE
CODE",Investigation and Exploration,True,90,NONE,True,False,False,0.7916666667,0.1386861314,0.8,0.5055762082,0.02107188063,0.9789281194,0.0002397714096,5.22e-05
"If using the CODE flag is incorrect, we should be able to convince the OpenJDK project of the same and have the flag removed that way.",Solution Discussion,True,134,CONTRIBUTOR,False,False,False,1.0,0.1494252874,0.5,0.7058823529,0.7731338493,0.2268661507,0.0005238959763,0.0001229708481
:+1:,Social Conversation,False,4,NONE,False,False,False,0.25,0.01369863014,0.4310344828,1.0,0.5093368755,0.4906631245,0.01110659869,0.063150964
The presumably problematic method inlines ~120 other methods so trying to eyeball it is not going to work.,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.45,0.1353383459,0.7692307692,0.6692111959,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"If not, then OSR would be ruled out completely as a factor.",Solution Discussion,False,59,CONTRIBUTOR,False,False,False,0.5217391304,0.1290322581,1.0,0.4826254826,0.5347384373,0.4652615627,0.004039808715,0.003498929432
"From https://github.com/eclipse/openj9/issues/10313#issuecomment-682071756

> Unfortunately, it appears that core files can't be produced on MacOS (see AdoptOpenJDK/openjdk-build#1778).",Social Conversation,False,187,CONTRIBUTOR,False,False,False,1.0,0.2903225806,0.5,0.1584699454,0.3655718406,0.6344281594,0.368564445,0.0002290380421
Have you figured it out?,Task Progress,False,24,NONE,False,False,False,0.625,0.03937007874,0.06451612903,1.0,0.0859291402,0.9140708598,0.3335768717,0.562496811
What's more:1.         [Here is a full example] URL  on how to use BN layer on MNIST dataset.,Usage,False,93,CONTRIBUTOR,False,False,False,0.4871794872,0.07307692308,0.5995717345,0.8181818182,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
@pshipton FYI.,Contribution and Commitment,False,14,CONTRIBUTOR,True,False,False,0.08333333333,0.03125,1.0,0.07092198582,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
Names are all similar to CODE.,Task Progress,True,30,NONE,True,False,False,0.4,0.08,1.0,0.5536723164,0.07094192738,0.9290580726,0.002460766356,0.02133685301
+1 and +999 just annoys people and adds no value whatsoever.,Social Conversation,False,60,NONE,False,False,False,0.6875,0.1506849315,0.6745689655,1.0,0.7051011873,0.2948988127,5.134566588e-05,0.000336181321
Could you please try a run without compiling that method ?,Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.2380952381,0.125,0.75,0.8774509804,0.9558660429,0.04413395706,0.001152633296,0.002453151618
"If not, does this sound like a synchronization problem?",Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.1525423729,0.04761904762,0.5555555556,0.4857142857,0.4461627725,0.5538372275,0.06246846736,0.001023944321
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_Nightly/608
CODE",Testing,True,74,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.606557377,0.7667145422,0.2332854578,0.1252248285,0.03792151791
After that the code freezes.,Observed Bug Behaviour,False,28,NONE,False,False,False,0.1785714286,0.05154639175,0.6597633136,0.4545454545,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
Sorry of not sending a timely update.,Task Progress,False,37,NONE,True,False,False,0.3181818182,0.06730769231,0.2,0.2375690608,0.08429996571,0.9157000343,0.002473459958,0.0181710758
"Saw this on a PR build:
CODE",Investigation and Exploration,True,29,CONTRIBUTOR,False,False,False,0.1739130435,0.1290322581,0.08333333333,0.6994535519,0.9240498584,0.07595014165,0.1265062135,0.2372754111
The snippet CODE reproduces the error (but it works fine on the nomkl env),Investigation and Exploration,True,74,CONTRIBUTOR,False,False,False,1.0,0.1971830986,0.418128655,1.0,0.4151190951,0.5848809049,0.0004979050073,0.001838152366
GDB also does not break upon segmentation.,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.2333333333,0.1489361702,0.8888888889,0.3192307692,0.3215728023,0.6784271977,0.9710937657,0.01822418003
"One question: if categories and n_values parameters are their default, dowe publish categories_?",Solution Discussion,False,96,MEMBER,False,False,False,0.619047619,0.203125,0.3933823529,0.8333333333,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
"I had originally implemented the proxy using thread-local storage, but this works just as well for my purposes.",Solution Discussion,False,111,NONE,False,False,False,0.7307692308,0.1241830065,0.5209003215,0.8,0.1448670515,0.8551329485,0.02443361297,0.06319984844
sedmgr (SED manager) can set the global policy of a machine for SED (and do other things).,Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.7391304348,0.09770114943,0.6666666667,0.6617647059,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
"cmdLineTester_locales failure rate is 8% (40 / 500 runs) on machine osx1013-x86-4: https://ci.eclipse.org/openj9/job/Grinder/1193/
We are going test with -Xint",Testing,False,160,CONTRIBUTOR,False,False,False,1.0,0.3620689655,1.0,0.6788990826,0.9881603927,0.01183960727,0.01346912259,0.02651069351
"It is natural for average-like ensembles, but makes no sense in boosted ensembles.",Motivation,False,82,MEMBER,False,False,False,0.9333333333,0.1971830986,0.9275362319,0.6666666667,0.07860762409,0.9213923759,8.878525073e-06,1.133503399e-05
"The fix in the documentation is one month old and prior to v1.3 release, the tensorflow.org website is not updated when there is a new release ?",Task Progress,False,144,NONE,False,False,False,1.0,0.3880597015,0.9403606103,0.6666666667,0.9754490635,0.02455093652,0.04231472009,0.001898479689
"I just followed the guide line at https://egeria.odpi.org/open-metadata-resources/open-metadata-tutorials/building-egeria-tutorial/task-building-egeria-source.html to build the open-sourced egeria project and managed to reproduce the ClassFormatError exception on Ubuntu 16.04 (the same exception detected at https://github.com/eclipse/openj9/issues/7684#issuecomment-549759371 / the original VerifyError exception not yet detected so far) as follows:
[ClassFormatError_GregorSamsa.txt] URL 
CODE
Given that the issue only occurs intermittently,  I will try to compile a debug build to capture the error to determine where exactly this exception comes from.",Investigation and Exploration,True,660,CONTRIBUTOR,False,False,False,1.0,0.5714285714,1.0,0.3409669211,0.4434403475,0.5565596525,0.0233304665,0.03715256715
"Sure, i'll update when it is done",Task Progress,False,33,NONE,False,False,False,1.0,0.1129032258,1.0,0.5105485232,0.4404876216,0.5595123784,0.001910640371,0.2549319316
Anybody observed the same or opposite?,Solution Discussion,False,38,NONE,False,False,False,0.1428571429,0.08955223881,0.7711511789,1.0,0.5844291371,0.4155708629,0.00636830506,0.1964778875
"Oh, seems we overlooked msvc's openmp option.",Social Conversation,False,45,CONTRIBUTOR,False,False,False,1.0,0.04575163399,0.922829582,0.25,0.1992845349,0.8007154651,0.0007126827681,0.00591569739
@tajila fyi.,Contribution and Commitment,False,12,CONTRIBUTOR,False,False,False,0.5,0.02173913043,0.5,0.03144654088,0.01508760104,0.984912399,0.0412638732,0.0001283837294
"If the target is wrong, it will not work for both production and debug builds.",Solution Discussion,False,78,CONTRIBUTOR,False,False,False,0.5555555556,0.1171875,1.0,0.2222222222,0.0287329189,0.9712670811,6.94e-05,0.003185934733
I get the same results.,Testing,False,23,NONE,True,False,False,0.5,0.07462686567,0.5,0.1508379888,0.002163483482,0.9978365165,0.0002508127713,0.0001215278376
"re https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-985077977:

> It would help a lot if we could get a JIT log for java/lang/invoke/MemberName.clone()Ljava/lang/invoke/MemberName; with traceOSR,traceFull.

**Logs:**
- [mylog.25697.90826.20211202.162026.25697.txt] URL 
- [osrtransitions.20211202.162026.25697.txt] URL 

re https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-985082138:

> Does it still fail with the environment variable TR_disableFastObjectClone=1?",Testing,False,510,CONTRIBUTOR,False,False,False,1.0,0.5161290323,0.3333333333,0.7258687259,0.5618996987,0.4381003013,0.004800769914,0.1957833797
The only way I managed to reproduce this problem was to install numpy with both pip and conda in the same conda environment.,Investigation and Exploration,False,124,MEMBER,False,False,False,0.7931034483,0.323943662,0.9122807018,0.5,0.654594251,0.345405749,0.006016236851,0.8667419106
Does it work then?,Investigation and Exploration,False,18,NONE,False,False,False,0.1025641026,0.005788712012,0.2442244224,0.4,0.06622159454,0.9337784055,0.0006557222206,0.0061573337
I'll kick it around some more and see if it happens again and if I can find the coredump files I'll attach them.,Task Progress,False,112,NONE,True,False,False,0.5111111111,0.2323232323,1.0,0.04561403509,0.09758727792,0.9024127221,0.01583808516,0.005467138405
"The best way of turning these 5 hours into something useful for the project, would be to provide us with a stand-alone example reproducing the problem.",Bug Reproduction,False,151,MEMBER,False,False,False,1.0,0.2783505155,0.2721893491,1.0,0.6363681212,0.3636318788,0.005493875023,0.07308442859
"I intent to continue using the nightly some of the time now, and suggest closing, and I'll reopen if it resurfaces.",Action on Issue,False,115,NONE,True,False,False,1.0,0.1578947368,1.0,0.2340966921,0.1679274795,0.8320725205,0.4323046536,0.2641000633
*         [WebMonkeys - node GPU processing] URL ,Solution Discussion,False,49,NONE,False,False,False,0.2,0.08219178082,0.4094827586,1.0,0.4752476502,0.5247523498,0.0635462371,0.3197097642
"I thought the answer was no, but in discussing with @vijaysun-omr it turns out it is possible to circumvent the workaround.",Workarounds,False,123,CONTRIBUTOR,False,False,False,0.6875,0.2365591398,0.3333333333,0.4285714286,0.4846584266,0.5153415734,0.02724539507,0.2051611074
I thought I applied the fix from jdk12.,Solution Discussion,False,39,CONTRIBUTOR,False,False,False,0.7272727273,0.04597701149,0.4,0.3566176471,0.7636365775,0.2363634225,0.00180747065,0.0005973713534
"
REFERENCE",Investigation and Exploration,False,10,NONE,False,False,False,0.05405405405,0.002894356006,0.05280528053,0.4444444444,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
"- An additional core file may be saved to disk with the CODE, this core is not a dump of the thread that encountered the segmentation fault.",Investigation and Exploration,True,140,CONTRIBUTOR,False,False,False,0.7027027027,0.5531914894,0.3,0.4423076923,0.3704340031,0.6295659969,0.007316005049,0.001912007579
@danrsc Exactly.,Social Conversation,False,16,CONTRIBUTOR,False,False,False,0.1111111111,0.007692307692,0.6916488223,0.3333333333,0.5725805298,0.4274194702,0.0005567984656,0.003358850219
"the performance varied quite a bit, especially looking at multiheap default and multiheap:32 (they should be the same or comparable, since default multiheap is 32).",Investigation and Exploration,False,164,CONTRIBUTOR,False,False,False,1.0,0.4032258065,0.2857142857,0.4852320675,0.4402101884,0.5597898116,0.00359667111,0.001910640371
https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/shared_common/Manager.cpp#L472-L484,Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,0.05263157895,0.01612903226,0.8333333333,0.8524590164,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
"In the macros, r12 is used as the function pointer for indirect calls, nothing else.",Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.652173913,0.1171875,0.5,0.3333333333,0.03694655147,0.9630534485,8.8e-05,7.09e-06
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1659482759,1.0,0.04553857963,0.9544614204,0.02032203913,0.1015440217
In such cases the failure likely is still from OSR frame as the decompile log generated before detecting NPE has outerframe of CODE and CODE is inlined in the call and decompiled.,Investigation and Exploration,True,179,CONTRIBUTOR,False,False,False,0.8888888889,0.347826087,0.6666666667,0.7106918239,0.5919809991,0.4080190009,0.0005225972985,0.01338731827
I know that data does not appear magically in memory if I use TF.,Solution Discussion,False,65,NONE,False,False,False,0.3783783784,0.2089552239,0.3328710125,0.3333333333,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR_testList_0/58 - osx1011-x86-1
cmdLineTester_CryptoTest_0",Testing,False,141,CONTRIBUTOR,True,False,False,1.0,0.1034482759,1.0,0.5321100917,0.752241031,0.247758969,0.03333540361,1.24e-05
This sounds great!,Social Conversation,False,18,CONTRIBUTOR,False,False,False,0.1111111111,0.04838709677,0.5330396476,0.25,0.2185494447,0.7814505553,0.008439281707,0.0010422294
Is there a difference between these configs if you run with -Xshareclasses:none ?,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,1.0,0.1625,1.0,0.05882352941,0.03613219465,0.9638678053,0.1088941245,0.03316104244
@gacholio yes.,Social Conversation,False,14,NONE,True,False,False,0.1,0.02666666667,0.3333333333,0.790960452,0.08544452514,0.9145554749,2.47e-05,1.77e-05
@stackOverMind.,Social Conversation,False,15,NONE,False,False,False,0.03333333333,0.01369863014,0.3943965517,0.125,0.4752476502,0.5247523498,0.0635462371,0.3197097642
Note that we currently remove all the references to J9Method on corresponding **Class Loader**,Investigation and Exploration,False,94,CONTRIBUTOR,False,False,False,0.1538461538,0.1538461538,0.1428571429,0.6713286713,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
you could change that afterwards by CODE but that feels awkward :-/,Solution Discussion,True,67,MEMBER,False,False,False,1.0,0.1690140845,0.1884057971,1.0,0.03926780009,0.9607321999,0.000142372238,0.0001259136283
It'd be nice to design an API which encouraged minimal communication: either (a) load it on the driver and broadcast it (transfer only once) or (b) load it on each worker (once).,Solution Discussion,False,178,NONE,False,False,False,0.7674418605,0.2156862745,0.2122186495,0.1578947368,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
"Going to check if CODE is true or false here, I suspect it's false and walkReferenceChain returned a bad methodHandle.",Investigation and Exploration,True,118,CONTRIBUTOR,False,False,False,0.9090909091,0.1058201058,0.5,0.12,0.2561152379,0.7438847621,0.2308646783,0.03555330036
"At the very least, I think we should abort compilation as we've been doing in the release branches.",Solution Discussion,False,99,CONTRIBUTOR,False,False,False,0.4318181818,0.3064516129,0.4,0.912568306,0.9845135933,0.01548640667,0.001320457339,0.001947660621
Now I just have to figure out how to get CODE in my image.,Investigation and Exploration,True,58,CONTRIBUTOR,False,False,False,1.0,0.1346153846,1.0,0.3922651934,0.1324195026,0.8675804974,6.21e-05,0.0001049103339
That also didn't help.,Investigation and Exploration,False,22,NONE,True,False,False,0.1538461538,0.0404040404,0.6,0.6561403509,0.2124151465,0.7875848535,0.004198632607,0.0008429687088
"However: While running without CODE seems to prevent this test from failing, it's not necessarily a generally reliable workaround for the actual bug.",Workarounds,True,149,CONTRIBUTOR,False,False,False,0.4181818182,0.247311828,0.5,0.1274131274,0.08152264145,0.9184773586,0.002003118449,0.008601845704
"Afterwards we could consider filtering out specific command line options as not being relevant to the GC hints, but not sure this is a necessary feature.",Solution Discussion,False,153,CONTRIBUTOR,True,False,False,1.0,0.1780821918,0.7272727273,0.2346368715,0.01440399469,0.9855960053,0.001770078156,0.04266521959
"To save/restore them, you can use tf.global_variables()",Usage,False,55,NONE,False,False,False,0.32,0.03076923077,0.5481798715,1.0,0.4920094851,0.5079905149,0.001170108729,0.003259624837
"SCC | Tput |  
-- | -- | --
0.24.0 | 6413.33",Testing,False,46,NONE,True,False,False,0.9,0.1125,0.3333333333,0.06862745098,0.04138087714,0.9586191229,0.03316104244,0.3318641488
Fixes are still under testing: https://github.com/eclipse/openj9/pull/9158 and https://github.com/eclipse/omr/pull/5035,Task Progress,False,119,CONTRIBUTOR,False,False,False,0.347826087,0.06015037594,1.0,0.9796437659,0.950729363,0.04927063696,0.001789180059,0.03518393768
Iterators implementing CODE are great for progress report.,Motivation,True,58,NONE,False,False,False,0.2666666667,0.1194029851,0.1442441054,0.2571428571,0.04064994448,0.9593500555,0.2125437083,0.01543061897
I feel this goes back to my argument that this is more of a path algorithms than anything else ;),Social Conversation,False,97,MEMBER,False,False,False,0.7692307692,0.2816901408,0.3586956522,1.0,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
"Sorry, but I still get this on Python 3.5.1, scikit 0.17, scikit-learn 0.18 (commit 9e913c04d748), and Numpy 1.11.1 on Mac OS 10.11.5.",Bug Reproduction,False,134,NONE,False,False,False,1.0,0.323943662,0.2426900585,1.0,0.2223002195,0.7776997805,0.04731273831,0.003913356226
"This makes it easier to prevent integers from being ""stranded"".",Solution Discussion,False,63,MEMBER,False,False,False,0.3846153846,0.1612903226,0.5286343612,1.0,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"With the CODE below I get an error,CODE",Potential New Issues and Requests,True,39,MEMBER,False,False,False,0.4736842105,0.1323529412,0.4512195122,0.2857142857,0.5420075121,0.4579924879,0.02112247576,0.002129547778
See #1626.,Solution Discussion,False,10,MEMBER,False,False,False,0.2222222222,0.02816901408,0.1195652174,0.5,0.02910389561,0.9708961044,0.004244671937,0.007845949097
"As a follow up, I'm reusing 16 layers of batch_norm.",Usage,False,52,NONE,False,False,False,1.0,0.03846153846,0.7794432548,0.5,0.6228922805,0.3771077195,0.007914289561,0.0008174426453
"This isn't the end of the world but for large datasets where we are shuffling minibatches, we want a reasonable CODE which means each initialization is quite slow.",Solution Discussion,True,163,NONE,False,False,False,1.0,0.4179104478,0.5852981969,0.5,0.4658107767,0.5341892233,0.02260310577,0.1856733495
I'm guessing codegen?,Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.15,0.06382978723,1.0,0.6576923077,0.6396702573,0.3603297427,0.01862203789,0.008463782054
That has been the reason we initialized vm->jitTOC (and consequentially J9VMThread->jitTOC).,Solution Discussion,False,92,CONTRIBUTOR,False,False,False,0.4074074074,0.0859375,1.0,0.3555555556,0.03695143384,0.9630485662,7.09e-06,1.33e-05
FYI @pshipton - many thanks to @Leonardo2718 @liqunl and @dsouzai for their investigation and discussion.,Social Conversation,False,105,CONTRIBUTOR,False,False,False,0.56,0.2258064516,1.0,0.3005464481,0.4942847726,0.5057152274,0.01863655198,0.01288492485
@jnothman : I am using RandomizedSearchCV from sklearn.grid_search which does not have the return_train_score parameter.,Investigation and Exploration,False,120,NONE,False,False,False,0.7777777778,0.1443298969,0.4674556213,0.25,0.8484897144,0.1515102856,2.737530974e-05,1.942892084e-05
"If you read in details, it says ""but can freeze joblib/multiprocessing prior to OpenBLAS version 0.2.8-4"".",Investigation and Exploration,False,106,MEMBER,False,False,False,0.5142857143,0.1855670103,0.7396449704,0.2,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
I did destroy my Shareclasses cache before I started using the new JDK12 builds.,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.5384615385,0.102189781,1.0,0.3308550186,0.0199179817,0.9800820183,0.0002223786649,0.0002232068908
"The above change is safe to make today, given that ExceptionCatch forces FSD.",Solution Discussion,False,77,CONTRIBUTOR,False,False,False,0.203125,0.203125,0.6363636364,0.1205673759,0.000716727624,0.9992832724,0.003714710253,0.00734286415
I've tried to add printf to provide more data during the execution on where exactly the NPE is generated (ie. which of initialSpecialMethod / resolveSpecialMethodRef / invokeSpecialLogic / etc),Investigation and Exploration,False,193,CONTRIBUTOR,False,False,False,0.75,0.2934782609,0.6666666667,0.3899371069,0.4653466555,0.5346533445,0.004763623737,0.09933594565
@abrahamrhoffman That's easy for anyone who has sudo privileges but what about people on a shared system like a cluster environment with simple user privileges.,Solution Discussion,False,160,NONE,True,False,False,1.0,0.1968503937,0.2258064516,0.25,0.3332287349,0.6667712651,0.02958178195,0.02419682242
https://github.com/eclipse-openj9/openj9/issues/13167 OMR PR,Investigation and Exploration,False,60,MEMBER,True,False,False,0.3333333333,0.03260869565,0.2,0.4528301887,0.4977312427,0.5022687573,0.0002080991169,0.000454293798
I believe as long as the evaluators we use support the initialization of a contiguous memory segment which has a length argument of type long then we could easily justify it's use to compile and evaluate Unsafe methods.,Solution Discussion,False,219,CONTRIBUTOR,False,False,False,1.0,0.8085106383,0.5555555556,0.9038461538,0.7299060094,0.2700939906,0.01554507959,0.00748487997
this was working last Friday!!,Investigation and Exploration,False,30,NONE,False,False,False,0.1851851852,0.05154639175,0.4526627219,0.2,0.8484794361,0.1515205639,1.184011945e-05,2.737530974e-05
"re: https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-984098564 

> Neither the print statements got invoked nor the breakpoint was hit before the segfault.",Investigation and Exploration,False,175,CONTRIBUTOR,False,False,False,1.0,0.1827956989,0.3333333333,0.4478764479,0.5332300671,0.4667699329,0.2051611074,0.002331376221
"I know it's < 1 in 100, which normally wouldn't warrant ""blocker"" status.",Observed Bug Behaviour,False,73,CONTRIBUTOR,False,False,False,0.6,0.1290322581,0.5,0.555984556,0.5492852021,0.4507147979,0.01613685365,0.00255891854
Would that help given any thoughts on changes going to 11.0.5 (or the packaging from adoptopenjdk),Investigation and Exploration,False,98,NONE,True,False,False,0.5161290323,0.1203007519,1.0,0.1959287532,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
"Please add the following to link librt (which obviously needs to be linked to get timer_create):

CODE",Solution Discussion,True,104,NONE,True,False,False,1.0,0.1826923077,1.0,0.3812154696,0.1323802739,0.8676197261,4.06e-05,6.21e-05
There will also be use-cases where you only care that the activity on each shard is internally consistent.,Solution Discussion,False,106,MEMBER,False,False,False,0.5428571429,0.1241830065,0.4533762058,0.5,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
"In the compilation log I think we print the accurate number of nodes which is 435, but the total number of nodes ever created can be over 1100.",Investigation and Exploration,False,143,CONTRIBUTOR,False,False,False,1.0,0.35,0.6,0.5049019608,0.5901481642,0.4098518358,0.0006727318859,0.002367610279
"Hm maybe what you mean is that CODE might need to do less work than CODE because CODE needs to store the ""sufficient statistics"" of the previous data and fit doesn't need to do that?",Solution Discussion,True,182,MEMBER,False,False,False,1.0,0.4929577465,0.5,1.0,0.04251304585,0.9574869542,3.754949339e-06,1.684463255e-06
"Edit2: The new input pipeline should also take support for variable-sized tensors (i.e. different per example) into account, for both training and inference, e.g. in a fully-convolutional setting.",Expected Behaviour,False,196,CONTRIBUTOR,False,False,False,0.625,0.447761194,0.05825242718,1.0,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
"weâre hoping to entice you to contribute SWIG interfaces to your favorite language -- be it Go, Java, Lua, Javascript, or R.",Contribution and Commitment,False,124,NONE,False,False,False,0.7096774194,0.301369863,0.02155172414,0.5714285714,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
"files were executed in parallel, which might have something to do with this compilation error.",Solution Discussion,False,94,CONTRIBUTOR,False,False,False,0.2173913043,0.1271186441,1.0,0.6242424242,0.5174086874,0.4825913126,0.2645202125,0.01501286261
"It can be launched with ""..\bin\java.exe -Dserver.port=8081  -Dcom.sun.management......"" 
(I specified the port number to avoid any conflict in there)
![image] URL ",Investigation and Exploration,False,166,CONTRIBUTOR,False,False,False,1.0,0.2626262626,0.5,0.7087719298,0.2157040785,0.7842959215,0.00438505838,0.001276611266
"And, there is not really a good other name we could use for the encoder that does one-hot encoding.",Solution Discussion,False,99,CONTRIBUTOR,True,True,False,0.4,0.3125,0.07720588235,0.875,0.0,1.0,0.0,0.0007774126438
"-         The table should be keyed by a CODE (64 bit unisnged integer), with values being CODE, i.e. raw C arrays of floats.",Solution Discussion,True,125,MEMBER,False,False,False,0.696969697,0.6052631579,0.3868613139,0.9230769231,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
Simply hashing oov tokens sounds good enough to me.,Solution Discussion,False,51,CONTRIBUTOR,False,False,False,0.2307692308,0.1451612903,0.4317180617,0.5,0.2159596248,0.7840403752,0.01198979712,0.001341566856
CODE,Expected Behaviour,True,4,NONE,False,False,False,0.06666666667,0.01492537313,0.8432732316,0.4285714286,0.7617931948,0.2382068052,0.1736946043,0.06663052939
Now I have a hot recompilation that fails and is followed by a warm recompilation.,Task Progress,False,82,CONTRIBUTOR,False,False,False,0.5357142857,0.1875,0.5,0.3137254902,0.2326748385,0.7673251615,0.004429301533,0.02640472652
@DanHeidinga FYI this one is missing diagnostics and so cannot be progressed - should we backlog it or close it pending diagnostics?,Action on Issue,False,132,CONTRIBUTOR,False,False,False,1.0,0.3548387097,1.0,0.2021857923,0.4447571858,0.5552428142,0.3080636089,0.0002184327063
Small word of advice:,Social Conversation,False,21,MEMBER,False,False,False,0.125,0.0412371134,0.4852071006,0.3,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
I stopped your script after spending a few minutes writing this post.,Solution Discussion,False,69,NONE,False,False,False,0.5454545455,0.07843137255,0.6720257235,0.5,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Repro rate with following command was 1/1 (killed early to make progress):

CODE",Bug Reproduction,True,82,CONTRIBUTOR,False,False,False,1.0,0.1127819549,1.0,0.7557251908,0.7914299514,0.2085700486,0.001804304497,0.005813915463
"The trick is to build the model twice, but sharing the variables the second time.",Usage,False,81,MEMBER,False,False,False,0.7142857143,0.05769230769,0.6745182013,1.0,0.5709329897,0.4290670103,0.001836887066,0.003906111685
"During my debugging I've done with Cheng, I've tried running tests locally but could not recreate the ClassFormatError or any exception.",Investigation and Exploration,False,136,NONE,False,False,False,1.0,0.1729323308,0.75,0.786259542,0.7978584392,0.2021415608,0.00412079602,0.0003049413581
"@amicic were these tests also with CODE flag, as in my testing this was required to make it fail… note that I have not tested this outside of docker, as that is a more complicated environment for me to setup.",Testing,True,208,NONE,True,False,False,1.0,0.5466666667,1.0,0.9096045198,0.3329642512,0.6670357488,0.0005378413394,0.05174676994
Let the user decide how and what for he / she want to use CODE for.,Solution Discussion,True,67,MEMBER,False,False,False,1.0,0.2112676056,0.3768115942,1.0,0.03962200382,0.9603779962,6.344811593e-05,7.05368988e-06
will try again with 100 times.,Task Progress,False,30,CONTRIBUTOR,False,False,False,0.25,0.04511278195,1.0,0.5699745547,0.5844251894,0.4155748106,0.02434789149,9.4e-05
"So unless the count got re-encoded during the decompile, it hadn't been compiled yet.",Solution Discussion,False,85,CONTRIBUTOR,False,False,False,0.7894736842,0.1612903226,1.0,0.6602316602,0.5540805477,0.4459194523,0.001219776039,0.002831223282
I am wondering if your driver is after the code merge such that your no-setting actually means the current setting in the merge.,Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,0.7741935484,0.3870967742,1.0,0.8818565401,0.7442803236,0.2557196764,0.3314129696,0.1778324879
"I already finished the sanity test with build/windows-x86_64-normal-server-release/jdk/bin and it shows the compiled build functionally works:
CODE",Solution Discussion,True,148,CONTRIBUTOR,False,False,False,1.0,0.2118644068,1.0,0.9515151515,0.6456286653,0.3543713347,9.63e-05,0.0001289502294
So we're absolutely interested in helping the individual devoted to making that happen be successful.,Social Conversation,False,101,MEMBER,False,False,False,0.4285714286,0.2054794521,0.599137931,1.0,0.6506314731,0.3493685269,0.01305197974,0.05278600034
A versatile/portable/production-ready/modern NLP framework is never ever done before!,Potential New Issues and Requests,False,85,NONE,False,False,False,0.3823529412,0.3421052632,0.9343065693,1.0,0.02374400586,0.9762559941,0.01990868788,0.001584253352
"Backtrace
CODE
*",Investigation and Exploration,True,18,CONTRIBUTOR,True,False,False,0.07407407407,0.03125,0.8571428571,0.06666666667,0.006753802741,0.9932461973,0.009802165843,0.02838288421
For questions about SoNaR you can email [Nelleke Oostdijk] URL .,Solution Discussion,False,64,NONE,False,False,False,0.7142857143,0.1666666667,0.525862069,0.625,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
Now off to further limiting.,Task Progress,False,28,CONTRIBUTOR,False,False,False,0.1063829787,0.03759398496,1.0,0.8600508906,0.8343651076,0.1656348924,0.00358081273,0.003611879142
"If they do not, they might have to do something like override the default CODE implementation by specifying CODE.",Investigation and Exploration,True,113,MEMBER,False,False,False,0.5277777778,0.1428571429,0.8571428571,0.09669211196,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
"However, for some other reason I'd better use Python 2.7, so I have to continue to explore ...",Solution Discussion,False,94,NONE,False,False,False,1.0,0.2535211268,0.8771929825,0.5,0.6460564675,0.3539435325,0.002055691741,0.0001352009984
Maybe you just have to provide the sizes when you create the CODE.,Solution Discussion,True,66,NONE,False,False,False,0.8125,0.1940298507,0.9098474341,1.0,0.9153731312,0.08462686876,0.125435556,0.2620248075
#                  ATTENTION,Social Conversation,False,28,NONE,False,False,False,0.125,0.02739726027,0.6853448276,0.3333333333,0.7051734119,0.2948265881,6.462471741e-05,2.810732572e-05
"I think I have this taken care of, but I'm not 100% sure.",Social Conversation,False,57,MEMBER,False,False,False,1.0,0.1368421053,0.4842105263,0.5,0.1763449807,0.8236550193,0.03531242178,0.02657364924
I've ran into additional conditions on AIX that need to be investigated and addressed.,Investigation and Exploration,False,86,CONTRIBUTOR,True,False,False,0.9375,0.1171875,0.2,0.8222222222,0.2165690907,0.7834309093,0.01920965971,0.0002757120844
Our biggest issue with the current data loading scheme is just that it's very complicated and involves a lot of new concepts.,Motivation,False,125,CONTRIBUTOR,False,False,False,0.55,0.328358209,0.2482662968,0.25,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"Edit: Hard to say, if my results are correct, but the whole network indeed seams to be 1.5x faster.",Solution Discussion,False,99,NONE,False,False,False,0.3333333333,0.07307692308,0.3361884368,0.7692307692,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
"However, use of hints does not seem to introduce additional regression.",Testing,False,71,CONTRIBUTOR,False,False,False,0.1929824561,0.07534246575,0.8888888889,0.9273743017,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"-         Already in CODE, we accept a CODE argument, that represents the allocation pool that will own the memory for the created CODE struct.",Solution Discussion,True,143,MEMBER,False,False,False,0.9230769231,0.3870967742,0.4845814978,0.4117647059,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"Followed SCREEN_NAME  recommendation & checked environment & removed numpy installed with pip: Darwin-16.6.0-x86_64-i386-64bitPython 3.6.1 |Anaconda custom (x86_64)| (default, May 11 2017, 13:04:09)[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]NumPy 1.13.1SciPy 0.19.1Scikit-Learn 0.19.0  $conda list | grep numpygnumpy                   0.2                pipnumpy                     1.13.1            py36_0numpy                     1.13.3           pipnumpydoc              0.6.0             py36_0 $pip uninstall numpy $conda list | grep numpygnumpy                   0.2                      pipnumpy                     1.13.1                  py36_0numpydoc              0.6.0                  py36_0 $conda install numpy -f                                // most likely unnecessary $conda list | grep numpygnumpy                   0.2                       pipnumpy                     1.13.1                   py36_0numpydoc               0.6.0                   py36_0",Solution Discussion,False,987,NONE,False,False,False,1.0,1.0,0.825443787,0.6666666667,0.8588999674,0.1411000326,0.005718638633,2.097846668e-05
Given that CODE is not the default way of invoking the JIT suggests this is not a blocker but one that should be investigated for 0.30.,Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,1.0,0.2795698925,1.0,0.277992278,0.3798717355,0.6201282645,0.1430196731,0.0009064390746
Excluding it fixed execution.,Solution Discussion,False,29,NONE,True,False,False,0.2105263158,0.05970149254,0.8,0.2290502793,0.002791329837,0.9972086702,0.0006464246683,0.0001327325319
Curious why it works for me now :/,Investigation and Exploration,False,34,CONTRIBUTOR,False,False,False,0.5714285714,0.1126760563,0.5847953216,0.6666666667,0.4547552612,0.5452447388,0.0003054131048,0.003896611783
"Just to clarify, what would exactly happen in CODE in case of ensembles?",Solution Discussion,True,72,MEMBER,False,False,False,0.9285714286,0.1830985915,0.1666666667,0.3333333333,0.03913665065,0.9608633494,0.001972331007,0.000142372238
"Something that provides similar functionality as the generator feed function in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/inputs/queues/feeding_functions.py  (but it would be cool if the source of the data could be from an arbitrary source, maybe using a kind of publisher/subscriber model?)",Motivation,False,330,NONE,False,False,False,1.0,0.5671641791,0.6241331484,0.7142857143,0.5016859242,0.4983140758,0.003761840049,0.03050902669
What is the motivation of that interface?,Solution Discussion,False,41,MEMBER,False,False,False,0.3043478261,0.0985915493,0.884057971,0.1428571429,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
@dsouzai Can you update the script to give the total time spent in failed compilations?,Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,1.0,0.1094890511,1.0,0.1412639405,0.00141840298,0.998581597,0.0001602617194,4.47e-05
Ok so this seems to imply that CODE is when the issue starts happening.,Investigation and Exploration,True,71,CONTRIBUTOR,False,False,False,0.7,0.1052631579,0.4285714286,0.5776081425,0.5844415189,0.4155584811,9.4e-05,0.001518166493
@andrewcraik the option makes no difference.,Task Progress,False,44,CONTRIBUTOR,False,False,False,1.0,0.04511278195,1.0,0.8269720102,0.823740371,0.176259629,1.76e-05,0.0001144552014
As you know Compilation Threads don't stop while GC takes Exclusive VM Access (known as Stop-The-World).,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,1.0,0.1978021978,0.25,0.2097902098,0.3548042241,0.6451957759,0.0007155979557,0.1429285596
I tried CODE to see if that narrowing still fixed things but it didn't.,Solution Discussion,True,71,NONE,True,False,False,1.0,0.2089552239,1.0,0.1787709497,0.002376484669,0.9976235153,0.0004214688837,5.77e-05
"-         Then, for me: Download deb (network)",Solution Discussion,False,46,NONE,False,False,False,1.0,0.05511811024,0.219941349,0.75,0.3308235311,0.6691764689,0.5779195954,0.02958178195
Currently investigating the error related to ddrgen.,Task Progress,False,52,CONTRIBUTOR,False,False,False,0.1206896552,0.0593220339,0.05263157895,0.2606060606,0.4157549389,0.5842450611,0.03011392996,0.0003752752636
"After doing some runs on my network, I have to say that ~~I can not see any performance difference between using  _updates_collections=None_ in contrast to manually fetching _tf.GraphKeys.UPDATE_OPS_ while graph construction~~. Even with heavy use of batch normalization (in total, my _tf.get_collection(tf.GraphKeys.UPDATE_OPS)_ returns 140 Update-Ops, all of them are BN-ops only)",Usage,False,382,NONE,False,False,False,1.0,0.2192307692,0.3340471092,0.6923076923,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
"Midway through the 10 minutes run, the booking service started to misbehave, being the only that consumed ~200% CPU.",Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,0.7037037037,0.2375,0.625,0.7205882353,0.8886091519,0.1113908481,0.05954547102,0.2271166044
I don't understand the following statement.,Social Conversation,False,43,CONTRIBUTOR,True,False,False,0.1428571429,0.04109589041,0.5,0.6033519553,0.2534795534,0.7465204466,0.000737706338,6.29e-05
*         [x] CODE PR in #9808,Action on Issue,True,30,MEMBER,False,False,False,0.3157894737,0.08823529412,0.4105691057,0.6666666667,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
"The place where CODE is called is:

https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/compiler/env/J9SharedCache.cpp#L884-L901

The CODE that's passed into CODE comes from CODE (which is also passed in as a param).",Solution Discussion,True,256,CONTRIBUTOR,False,False,False,0.9,0.435483871,0.1111111111,0.781420765,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"This is because with large Nursery all early created object end up staying for long time there, making first few Scavenges expensive and wanting to expand even more.",Solution Discussion,False,165,CONTRIBUTOR,False,False,False,0.3684210526,0.1917808219,0.7777777778,0.5027932961,0.238226106,0.761773894,0.0005830751334,0.0001494982185
But let's first agree on a decision for the first 2 questions.,Solution Discussion,False,62,CONTRIBUTOR,True,False,False,0.24,0.1875,0.7132352941,1.0,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
When using  xlclang/xlclang++ there are quite a lot of compiler/linker options that are not supported anymore and cause the build to fail.,Investigation and Exploration,False,138,CONTRIBUTOR,True,True,False,0.9259259259,0.1436781609,0.8,0.01470588235,0.0,1.0,0.0,0.2685593546
Actually I just noticed JITClient's CODE did not acquire vmaccess.,Investigation and Exploration,True,66,CONTRIBUTOR,False,False,False,0.2272727273,0.05291005291,0.3333333333,0.7771428571,0.4490401313,0.5509598687,0.0003004784063,0.0005637074234
"https://ci.eclipse.org/openj9/view/Pipelines/job/Pipeline-Release-Build/71/
Rebuild without the following
eclipse/omr#4087
eclipse/omr#4285

eclipse/omr#4099 and eclipse/omr#4119 are obsolete now.",Solution Discussion,False,201,CONTRIBUTOR,False,False,False,1.0,0.1206896552,1.0,0.4080882353,0.7656570969,0.2343429031,0.000272756665,0.0001692768735
+1 last opt index 0 is not supported.,Investigation and Exploration,False,37,CONTRIBUTOR,False,False,False,0.3076923077,0.06015037594,0.5,0.631043257,0.6092687087,0.3907312913,0.001209954986,2.37e-05
"Java8/11/12 builds are fine, but Java13 is not.",Observed Bug Behaviour,False,47,CONTRIBUTOR,False,False,False,0.2,0.04597701149,1.0,0.4669117647,0.7662829103,0.2337170897,0.0002229068111,4.94e-05
[malloc_performance.xlsx] URL,Task Progress,False,30,NONE,False,False,False,0.2,0.03225806452,1.0,0.5189873418,0.4775048297,0.5224951703,0.2549319316,0.01177304509
"up to 40% difference between multiheap:16 and multiheap:20 for 32-thread scenario;
2) for large payload",Task Progress,False,104,CONTRIBUTOR,False,False,False,0.6071428571,0.2741935484,0.5,0.5316455696,0.4792143262,0.5207856738,0.01177304509,0.003593754102
Reason: the automatic preevaluation of pending enqueues.,Motivation,False,56,NONE,False,False,False,0.4117647059,0.1044776119,0.2760055479,1.0,0.07945996255,0.9205400374,0.03685646374,0.2293928428
xlc 13 with jdk13.0.1 compiled fine.,Testing,False,36,CONTRIBUTOR,False,False,False,1.0,0.03448275862,0.3333333333,0.9411764706,0.7963722046,0.2036277954,0.00187043267,0.004816889792
"Why aren't hints saved and used on restart?

> If both master and slave are restated at some point later (and brought up in same order - master first and slave second), again, no hints will be used at any of the restarts.",Solution Discussion,False,223,CONTRIBUTOR,True,False,False,1.0,0.2876712329,1.0,0.6089385475,0.2534795534,0.7465204466,0.000737706338,6.29e-05
"I'd like to change the current set up, because I want to support vectors keyed by different information, e.g. vectors keyed by lemma and part-of-speech.",Motivation,False,152,MEMBER,False,False,False,1.0,0.7368421053,0.102189781,0.5,0.003440430228,0.9965595698,0.0006606771075,0.0004625994361
This has nothing to do with custom scorers.,Investigation and Exploration,False,43,MEMBER,False,False,False,0.275862069,0.0824742268,0.100591716,0.3333333333,0.009477465184,0.9905225348,0.02437524994,2.548804237e-05
"As a related experiment, I attempted to print the classes being unloaded, and the contents of the Method HT.",Investigation and Exploration,False,108,CONTRIBUTOR,False,False,False,0.76,0.2087912088,0.5555555556,0.3881118881,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
So it may have something to do with n_jobs=-1.,Investigation and Exploration,False,46,NONE,False,False,False,0.2093023256,0.09278350515,0.4230769231,0.6666666667,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"However, to verify this, @Leonardo2718 is coding up some changes to provide a trace of calls made in CODE starting from CODE up to the point where we assert.",Solution Discussion,True,157,CONTRIBUTOR,False,False,False,0.5918367347,0.4677419355,0.6666666667,0.6448087432,0.8310912867,0.1689087133,0.008832756273,0.001165656648
"However, I no longer get it after clearing my Anaconda installation and reinstalling from scratch with Python 3.5.2.",Solution Discussion,False,116,NONE,False,False,False,1.0,0.2535211268,0.2514619883,1.0,0.2242654904,0.7757345096,0.007534999345,0.08372802707
Can anyone of you see any performance benefits as well?,Solution Discussion,False,55,NONE,False,False,False,0.1754385965,0.03846153846,0.3404710921,0.9230769231,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
I think you may be onto sth!,Social Conversation,False,28,CONTRIBUTOR,False,False,False,0.1044776119,0.0985915493,0.4385964912,0.2857142857,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
So it seems the failure to parse package names from java.base/module-info.class triggered the exception.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.3255813953,0.1186440678,0.6666666667,0.8060606061,0.5961088928,0.4038911072,0.02070056321,0.01958885944
We could change the default to 0.9 or document better its impact in smaller datasets or few updates.,Solution Discussion,False,100,MEMBER,False,False,False,0.2857142857,0.06923076923,0.4625267666,0.5,0.3811497473,0.6188502527,0.001631435738,0.03294891445
"If so, that was only a minor reason.",Motivation,False,36,CONTRIBUTOR,True,False,False,0.2222222222,0.125,0.5882352941,0.2857142857,0.122514657,0.877485343,0.0002168293768,7.444610875e-05
@wolfiex so you didCODE,Solution Discussion,True,23,MEMBER,False,False,True,4.0,0.05633802817,0.9970760234,1.0,1.0,0.0,0.0007094938778,0.0
Next thing we'll need to do is collect a trace log of a passing run and a failing run.,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.6551724138,0.1428571429,0.5,0.6005089059,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
"Just wanted to note that I also have the problem of poor test performance, specifically using small batch sizes (anything smaller than 10 instead of the 200 I used for training diminishes test accuracy).",Usage,False,203,NONE,False,False,False,1.0,0.1307692308,0.4668094218,0.25,0.3863527786,0.6136472214,0.03294891445,0.0006233545505
Alternatively you can put the TOC in CODE and call the local entry point if you want I guess.,Solution Discussion,True,93,MEMBER,False,False,False,0.4418604651,0.1484375,0.6,0.5777777778,0.040055736,0.959944264,0.001397241848,3.37e-05
@urisimchoni Where did you make the TLS buffer change?,Solution Discussion,False,54,CONTRIBUTOR,False,False,False,0.375,0.08653846154,0.5,0.9834254144,0.9997507065,0.0002492935368,1.0,0.0003947203969
"I found a few hits like https://stackoverflow.com/questions/49758534/java-lang-verifyerror-class-gregorsamsa-method-illegal-target-of-jump

That link shows an issue with branch/jump targets and should be fixed in [JDK10] URL .  According to the java -version above, you're using JDK11 so it may be related to the XLST processor but shouldn't be the same issue.",Investigation and Exploration,False,362,MEMBER,False,False,False,1.0,0.3684210526,0.5,0.04580152672,0.000182464119,0.9998175359,0.0001463391504,0.0001643249677
"One function that still seems to be missing, but would be essential for one of our primary use cases (see comment above: https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-283186552) is a CODEused as inCODE function, where one element of CODE is mapped to one **or more** elements for CODE; i.e. #CODE >= #CODE.",Expected Behaviour,True,326,CONTRIBUTOR,False,False,False,1.0,0.6865671642,0.6629680999,0.2222222222,0.5116443977,0.4883556023,0.04958391229,0.003143434467
This OpenJ9 JDK15 nightly is now starting to hang during a simple CODE on the same machine.,Social Conversation,True,91,CONTRIBUTOR,False,False,False,0.4358974359,0.3617021277,0.5,0.2423076923,0.1142105821,0.8857894179,0.0002203960832,0.005424033477
"There are many different problems and ideas flying around here, and it's difficult to figure out the consensus advice for the simplest standard case of how to use the batch_norm layer.",Social Conversation,False,184,NONE,False,False,False,1.0,0.1192307692,0.3811563169,0.3,0.3712524908,0.6287475092,0.06886363297,0.000473907732
Anyway the OneDrive download worked.,Social Conversation,False,36,CONTRIBUTOR,False,False,False,0.3846153846,0.03759398496,0.6666666667,0.3053435115,0.2305198431,0.7694801569,0.006261517055,1.0
"This output on JITClient may show you what I mean, as it contains some CODE output that you are familiar with, mixed with my own debugging messages:
CODE
- in the CODE routine, CODE method is called.",Investigation and Exploration,True,201,CONTRIBUTOR,False,False,False,0.7916666667,0.2010582011,0.7058823529,0.5942857143,0.447477842,0.552522158,0.001615795728,8.48e-05
@pavelbulanov It's very kind of you to help me with this!,Social Conversation,False,57,CONTRIBUTOR,False,False,False,0.34375,0.04230769231,0.6167023555,0.1666666667,0.5082642878,0.4917357122,0.001406808951,0.377195146
Hope this helps!,Social Conversation,False,16,NONE,False,False,False,0.07894736842,0.01960784314,0.5916398714,0.9230769231,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
"Also observed at https://openj9-jenkins.osuosl.org/job/Test_openjdk16_j9_sanity.openjdk_s390x_linux_Nightly/49/consoleFull
CODECODEmain' threw exception: java.lang.BootstrapMethodError: bootstrap method initialization exception
23:10:08  --------------------------------------------------
23:11:35  Test results: passed: 41; failed: 1
23:11:35  Report written to /home/jenkins/workspace/Test_openjdk16_j9_sanity.openjdk_s390x_linux_Nightly/jvmtest/openjdk/report/html/report.html
23:11:35  Results written to /home/jenkins/workspace/Test_openjdk16_j9_sanity.openjdk_s390x_linux_Nightly/aqa-tests/TKG/output_16260563457690/jdk_math_0/work
23:11:35  Error: Some tests failed or other problems occurred.",Bug Reproduction,True,706,MEMBER,True,False,False,1.0,0.75,0.5,0.01886792453,0.00174965029,0.9982503497,0.005412926547,0.0412638732
Streaming Data Memory Growth,Expected Behaviour,False,28,NONE,True,True,False,0.0701754386,0.06451612903,0.004405286344,0.05882352941,0.0,1.0,0.0,0.0008157310994
"If the main motivation is to distribute embarassingly parallel jobs, then I think we should attack this by implementing a more powerful parallelization.",Solution Discussion,False,152,MEMBER,False,False,False,1.0,0.323943662,0.8985507246,0.7142857143,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
My fault.,Social Conversation,False,9,MEMBER,False,False,False,0.07142857143,0.02941176471,0.9837398374,0.5,0.9921128047,0.007887195265,0.0008629382027,1.795629714e-05
Two main reasons: 1)         String-to-int mapping 2)         Save memory to represent lots of documents at once.,Observed Bug Behaviour,False,113,MEMBER,False,False,False,0.5,0.3225806452,0.295154185,0.1666666667,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"I also observe that if I remove batch_norm, this problem goes away.",Usage,False,67,NONE,False,False,False,0.2926829268,0.04615384615,0.7858672377,0.3333333333,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
"-         If the English object will be used on workers multiple times, it'd be important to cache it to prevent re-loading.",Solution Discussion,False,124,NONE,False,False,False,0.8214285714,0.1503267974,0.1254019293,0.3333333333,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.03333333333,0.003846153846,0.2569593148,0.4545454545,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
"This wasn't a successful experiment since I wasn't able to reproduce the failure after adding this check, it might've changed timing.",Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,0.511627907,0.2417582418,0.7,0.2797202797,0.6007887623,0.3992112377,0.01222678832,0.05114946292
As an example here is a piece of code that demonstrates what I'd like to do.,Usage,False,76,NONE,False,False,False,0.4722222222,0.2537313433,0.7018030513,0.5555555556,0.551539804,0.448460196,0.1827564093,0.002095453319
Here is a feature that would help my use-case:,Motivation,False,46,CONTRIBUTOR,False,False,False,0.3333333333,0.1492537313,0.5950069348,0.3333333333,0.4965705946,0.5034294054,0.06171840406,0.0130944201
So unless the shuffling isn't done already in the list of filenames you'll have troubles training any network.,Solution Discussion,False,110,NONE,False,False,False,0.45,0.2686567164,0.6546463245,0.8333333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
"When he looks the runtime on bare metal machines he has access to we see the runtime double (4 mins to 7 mins kind of thing), but we have not been able to reproduce the pathological 2 hour timeout.",Bug Reproduction,False,197,CONTRIBUTOR,False,False,False,0.8125,0.5820895522,0.4444444444,0.6416184971,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"(Think CODE in C#, CODE in Java and Scala.)",Usage,True,43,CONTRIBUTOR,True,False,False,0.1956521739,0.1343283582,0.0665742025,0.75,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
"Remind me what the actual difference in output is, when n_values='auto',please?",Solution Discussion,False,79,MEMBER,False,False,False,0.7857142857,0.171875,0.2316176471,0.5,0.008302130491,0.9916978695,0.0007367317101,0.0005898735392
@JamesKingdon The thread titled mySystem-irods-dispatcher takes near 70% of cpu time when -Xnojit is passed to openj9.,Investigation and Exploration,False,118,NONE,True,False,False,0.95,0.2835820896,0.5,0.1340782123,0.001850743645,0.9981492564,0.0002284033828,0.0005464443196
It crashes on the first instruction (usually 'ld') of any compiled method.,Social Conversation,False,74,CONTRIBUTOR,False,False,False,1.0,0.06896551724,0.3333333333,0.09558823529,0.7187874877,0.2812125123,0.001423319644,0.0002320026376
Example script: https://github.com/spacy-io/spaCy/blob/master/examples/parallel_parse.py,Solution Discussion,False,88,MEMBER,False,False,False,0.1034482759,0.01960784314,0.6109324759,1.0,0.1671397646,0.8328602354,3.922323826e-06,4.685962093e-06
much easier than compiling.,Solution Discussion,False,27,NONE,False,False,False,0.16,0.03149606299,0.7624633431,1.0,0.5693151486,0.4306848514,0.09867224734,0.1256221876
"Uninstalled, installed 1.4 with CODE, still broke.",Solution Discussion,True,50,CONTRIBUTOR,False,False,False,0.875,0.05511811024,0.1935483871,1.0,0.2837406291,0.7162593709,0.2378544464,0.001119586478
"A similar pattern turns up in many different settings, including [Java's Stream API] URL , [Scala's collections] URL  (and hence Spark's RDDs), and [.NET's Language Integrated Query] URL .",Motivation,False,188,CONTRIBUTOR,True,True,False,0.5957446809,0.4179104478,0.0346740638,0.8333333333,0.0,1.0,0.0,0.000766008561
**The crash*,Observed Bug Behaviour,False,12,CONTRIBUTOR,False,False,False,0.06451612903,0.04255319149,0.2222222222,0.7538461538,0.6986733294,0.3013266706,0.2919761514,0.1217072968
I think I could migrate my class over to this tutorial pretty easily by using static RNN's.,Potential New Issues and Requests,False,91,NONE,False,False,False,0.3953488372,0.02460202605,0.3234323432,0.75,0.07123442229,0.9287655777,0.0001133215202,0.0004233834388
"I also noticed that the failure goes away with CODE. 
CODE",Solution Discussion,True,59,CONTRIBUTOR,False,False,False,1.0,0.1290322581,1.0,0.5675675676,0.5502204269,0.4497795731,0.001391365329,0.003338530748
"Those methods typically went from having about 15 methods inlined to about 150 or so inlined, and seemed to require about ten times more memory per compile.",Investigation and Exploration,False,156,MEMBER,False,False,False,0.6,0.4029850746,0.5714285714,0.5144508671,0.009579724698,0.9904202753,0.003668136449,0.001720565783
Try just CODE without the filter.,Investigation and Exploration,True,33,CONTRIBUTOR,False,False,False,0.25,0.04511278195,0.5,0.1399491094,0.01296304619,0.9870369538,0.002394157552,0.003545658632
"Here's that: 
[Unsafe.20171013.215123.17207.log] URL 

You'll notice compareAndSwapObject isn't even in the log...",Investigation and Exploration,False,117,NONE,True,False,False,1.0,0.2089552239,1.0,0.3072625698,0.003623724951,0.996376275,0.0003395884257,0.0001999606974
I would also run CODE 100 times just to get a sense of what the reproducibility rate is.,Investigation and Exploration,True,88,CONTRIBUTOR,False,False,False,0.9,0.1353383459,0.7142857143,0.582697201,0.5844415189,0.4155584811,9.4e-05,0.001518166493
Some queries produce more confusing results: CODE,Potential New Issues and Requests,True,49,MEMBER,False,False,False,0.3043478261,0.1842105263,0.4452554745,0.5,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"Because jdk10 builds fine with VS2013, I wouldn't expect changes to how jvm.lib is handled in jdk11 with VS2017.",Expected Behaviour,False,112,CONTRIBUTOR,False,False,False,1.0,0.1610169492,1.0,0.7272727273,0.5537235252,0.4462764748,0.0004840842543,0.0002629936456
Hopefully something can be learned from the crash dumps.,Social Conversation,False,56,NONE,True,True,False,0.1764705882,0.08653846154,0.6666666667,0.04419889503,0.0,1.0,0.0,0.01118041169
"@lesteve I meant that I get the same error with a small number of instances, with the same system parameters (Python 3.5.2, scikit-learn 0.17.1, scipy 0.17.1, numpy 1.11.1 on Mac OS X El Capitan 10.11.3)",Bug Reproduction,False,203,NONE,False,False,False,1.0,0.5070422535,0.2894736842,0.3333333333,0.2874590375,0.7125409625,0.02320572223,0.0448632062
we're going to release a bug-fix release in any case.,Potential New Issues and Requests,False,53,MEMBER,False,False,False,0.9166666667,0.1617647059,0.337398374,0.5,0.3593097139,0.6406902861,0.001373656731,0.0004426917871
"I realise this will probably raise all sorts of mutability and stateissues, but these should be avoidable by setting the WRITABLE flag on thereturned numpy arrays to false.",Potential New Issues and Requests,False,172,CONTRIBUTOR,False,False,False,1.0,0.4179104478,0.3883495146,1.0,0.3246503118,0.6753496882,0.01426913622,0.02224733169
Yi is the subject matter expert in this area and will continue the investigation where I left off.,Task Progress,False,98,CONTRIBUTOR,False,False,False,1.0,0.1353383459,0.75,0.9160305344,0.8710433064,0.1289566936,0.06424166071,0.006658022574
"And I second SCREEN_NAME  suggestion on adding some kind of note, comment or docs!",Solution Discussion,False,82,NONE,False,False,False,0.4545454545,0.2112676056,0.7485380117,1.0,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
Does anyone want to run a benchmark?,Solution Discussion,False,36,MEMBER,False,False,False,0.5833333333,0.1129032258,0.7577092511,1.0,0.2945721721,0.7054278279,1.641129124e-05,0.1206599722
"That is to say, the generated bad class bytes only occurs on OpenJ9 with JIT enabled according to the tests.",Investigation and Exploration,False,108,CONTRIBUTOR,False,False,False,0.6451612903,0.1503759398,1.0,0.3893129771,0.4730620837,0.5269379163,0.005002918608,4.74e-05
Do we need to **resolve** the CODE in case of a CODE?,Solution Discussion,True,53,CONTRIBUTOR,False,False,False,0.4444444444,0.1304347826,1.0,0.572327044,0.5070196757,0.4929803243,0.01749005949,7.94e-05
I cannot replicate either with OSX 10.11.5.,Bug Reproduction,False,43,MEMBER,False,False,False,0.1818181818,0.1126760563,0.1959064327,0.25,0.1684104767,0.8315895233,0.000240649474,0.05891636054
We'd like the same code to work both for Java8 classes (impl in sun.misc) and Java9 (impl in jdk.internal.misc)) which makes it a little more fiddly than it would otherwise be.,Solution Discussion,False,176,CONTRIBUTOR,False,False,False,1.0,0.4776119403,1.0,0.938547486,0.3165978639,0.6834021361,0.4477852629,0.1312948834
After taking a closer look at the code in contrib I realized what my problem was.,Usage,False,81,NONE,False,False,False,0.4571428571,0.06153846154,0.1284796574,0.5217391304,0.2164964176,0.7835035824,0.06906725807,0.007698692487
thanks for your support,Social Conversation,False,23,NONE,False,False,False,0.2857142857,0.01538461538,0.5139186296,1.0,0.3886203772,0.6113796228,0.01129830123,0.06578784903
@sguada I changed my old one where I manually tell it to train or not (based on a tf.cond) and now it seems the accuracy is up to ~95's again.,Usage,False,142,NONE,False,False,False,1.0,0.1153846154,0.2483940043,0.09090909091,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
No sign of cores on linux either,Investigation and Exploration,False,32,NONE,True,False,False,1.0,0.05263157895,1.0,0.1374045802,0.01254721259,0.9874527874,9.24e-05,0.002394157552
"ok.

https://ci.eclipse.org/openj9/view/Test/job/Grinder/702 - multiheap:24 x 3 - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/703 - multiheap:28 x 3 - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/704 - multiheap:30 x 3 - stopped it",Social Conversation,False,264,CONTRIBUTOR,True,False,False,1.0,0.3225806452,1.0,0.3755274262,0.2946793402,0.7053206598,0.000466721312,0.001511010247
@lesteve SCREEN_NAME  :I took Paula's excerpt code and made a complete run-able code snippet.,Investigation and Exploration,False,93,NONE,False,False,False,0.9411764706,0.1649484536,0.7662721893,0.1428571429,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
I see the same poor test performance with that code.,Usage,False,52,NONE,False,False,False,1.0,0.03846153846,0.4111349036,1.0,0.3719306107,0.6280693893,0.002464198457,0.007204899096
I think the package separator is CODE instead of CODE for CODE.,Investigation and Exploration,True,63,MEMBER,True,False,False,1.0,0.1304347826,0.3333333333,0.3270440252,0.3661720137,0.6338279863,0.0002473694342,0.0008075588312
@mebble Here you go: [link] URL .,Solution Discussion,False,33,NONE,True,False,False,0.5454545455,0.04724409449,0.9090909091,0.25,0.9259629187,0.07403708125,0.001998099513,0.02806508983
We noticed the same issue in another cmdlinetest,Bug Reproduction,False,48,CONTRIBUTOR,False,False,False,1.0,0.1379310345,0.5,0.5963302752,0.8896179734,0.1103820266,0.02225954837,0.05033867386
"It's not wrong, but it is not ideal since 1GB is a fairly big object.",Solution Discussion,False,69,NONE,False,False,False,0.3720930233,0.1045751634,0.2090032154,0.1052631579,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
#8728 is a good step in this direction with the pros:,Solution Discussion,False,53,NONE,False,False,False,0.3548387097,0.1641791045,0.3606102635,0.5454545455,0.2978770854,0.7021229146,0.001143668596,0.01002173327
"You should use only one BN layer (of course, with different CODE parameter).",Usage,True,76,CONTRIBUTOR,False,False,False,1.0,0.05,0.6402569593,1.0,0.5683019787,0.4316980213,0.003001821466,0.003618682739
"@sguada thanks, does that also mean the output is actually independent of the batch size?",Solution Discussion,False,89,NONE,False,False,False,0.5769230769,0.05769230769,0.4860813704,0.1111111111,0.386758151,0.613241849,0.0004998808382,0.0004945035936
Any conclusions from the 50x grinder?,Task Progress,False,37,CONTRIBUTOR,False,False,False,1.0,0.0652173913,1.0,0.2578616352,0.3623739262,0.6376260738,0.05801551647,0.0112234231
@hzongaro can we look at where the compile-time increase is happening to see if we can do anything simple to help cut the pathlength.,Contribution and Commitment,False,133,CONTRIBUTOR,False,False,False,0.9615384615,0.3731343284,0.8333333333,0.2947976879,0.005049779156,0.9949502208,1.72e-05,1.44e-05
http://scikit-learn.org/dev/modules/generated/sklearn.linear_model.ElasticNet.html,Solution Discussion,False,82,MEMBER,False,False,False,0.03125,0.01408450704,0.3804347826,0.3333333333,0.03962850149,0.9603714985,7.05368988e-06,8.078405027e-05
"Mesbah tried 5000 and it still failed, but 500 worked.",Testing,False,54,CONTRIBUTOR,True,False,False,0.2631578947,0.1612903226,0.75,0.6835443038,0.4907237786,0.5092762214,0.02872086273,0.1405385381
"However, I think that, with some temporary ugly hacks, we could reuse the name, if we are OK with deprecating the current attributes (and I think we agree it are not the most useful attributes).",Solution Discussion,False,194,CONTRIBUTOR,True,True,False,0.7,0.546875,0.08088235294,0.9166666667,0.0,1.0,0.0,0.0007774126438
I assume I should do those one at a time?,Investigation and Exploration,False,41,NONE,True,False,False,0.5882352941,0.1492537313,1.0,0.3463687151,0.003825230836,0.9961747692,0.0002215081863,5.6e-05
"I've tried enabling either CODE, or CODE causes the issue to disappear even with aggressive iterations.",Solution Discussion,True,103,CONTRIBUTOR,False,False,False,0.68,0.1868131868,0.2222222222,0.3776223776,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
"1. No SCC
CODE

2. cold SCC
CODE

3. warm SCC
CODE

4. warm SCC with noTimestampChecks
CODE

So timestamp checking is slowing things down (from 4s to 13s).",Solution Discussion,True,167,CONTRIBUTOR,False,False,False,1.0,0.2700729927,0.5,0.8066914498,0.04520980406,0.9547901959,0.0006439456684,0.01947449064
"Fix the attribute error, then it'll work.",Solution Discussion,False,41,MEMBER,False,False,False,0.875,0.07216494845,0.2071005917,0.3333333333,0.2582333528,0.7417666472,0.0009051930247,0.0005513005954
I should be able to spin up a Windows 10 machine to check things out.,Social Conversation,False,69,CONTRIBUTOR,False,False,False,1.0,0.1094890511,1.0,0.4609665428,0.02075943522,0.9792405648,6.38e-05,0.0001014576777
"I tried it on a 2 layered NN network based on the MNIST beginner tutorial and I consistently get worse results when BN is present: with BN (one with scale and center trained and the other not) accuracy is 0.8423, 0.8221 and without BN accuracy is 0.9477.",Usage,False,254,NONE,False,False,False,1.0,0.1807692308,0.2334047109,0.5,0.2252071806,0.7747928194,0.00405768911,0.003439914719
I also found out that it can happen at any time during the compilation,Investigation and Exploration,False,70,CONTRIBUTOR,False,False,False,0.2916666667,0.07407407407,0.5294117647,0.5771428571,0.447477842,0.552522158,0.001615795728,8.48e-05
raises: CODE,Observed Bug Behaviour,True,12,CONTRIBUTOR,False,False,False,0.1428571429,0.02105263158,0.2631578947,0.6,0.1100086119,0.8899913881,0.04915356896,0.07593267665
We can go on a wild hunt into the assembly but there are other ways to limit it down.,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.6129032258,0.1428571429,1.0,0.8040712468,0.8159998455,0.1840001545,6.58e-05,0.004064385956
http://spacy.io/tutorials/add-a-language/,Solution Discussion,False,41,NONE,False,False,False,0.5,0.01666666667,0.8103448276,0.5,0.490032338,0.509967662,0.05549127115,0.1838195117
", it becomes unlikely that classes are unloaded before the classloader.",Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,0.1960784314,0.1098901099,0.8095238095,0.4685314685,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"We only check the timestamp of the outside most jar, which is spring.boot.openj9-0.0.1-SNAPSHOT.jar in this case.",Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,0.4444444444,0.1167883212,0.3333333333,0.8773234201,0.06771827233,0.9322817277,0.0001677157529,0.000359450058
"However I can't see any core file in the current directory from where the sw was launched, nor the relevant maven directory nor indeed anywhere down the tree",Investigation and Exploration,False,157,NONE,True,False,False,1.0,0.2105263158,1.0,0.1170483461,0.005061994847,0.9949380052,0.002785757849,0.005541266823
"I am using a customized tokenizer that merges the three tokens, 'Linux', '.' and 'Mirai', into one token.",Potential New Issues and Requests,False,105,NONE,False,False,False,0.1789473684,0.1789473684,0.9473684211,1.0,0.4570840766,0.5429159234,0.2723202982,0.165555169
"I've had my head down for a while, so there's lots to respond to here:",Social Conversation,False,70,CONTRIBUTOR,True,False,False,0.3404255319,0.2388059701,0.5187239945,0.03571428571,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Unless we are trying to determine the severity of this defect...,Social Conversation,False,64,CONTRIBUTOR,False,False,False,1.0,0.2340425532,1.0,0.3653846154,0.3334917865,0.6665082135,0.001565670877,0.1462886158
"@amicic based on the results in https://github.com/eclipse/openj9/issues/3743#issuecomment-503670540, I agree it seems fine as-is.",Solution Discussion,False,130,CONTRIBUTOR,True,False,False,1.0,0.09589041096,0.5,0.9664804469,0.9684593998,0.03154060015,0.0001713134092,2.18e-05
"Java -version output
--------------------
openjdk version ""1.8.0_312""
IBM Semeru Runtime Open Edition (build 1.8.0_312-b07)",Observed Bug Behaviour,False,126,NONE,True,True,False,0.3529411765,0.1730769231,0.1666666667,0.01104972376,0.0,1.0,0.0,0.01118041169
"Although, I have not use it yet, I liked what I read in the input pipeline documentation.",Social Conversation,False,89,NONE,False,False,False,0.5666666667,0.2537313433,0.1386962552,0.1428571429,0.04064994448,0.9593500555,0.2125437083,0.01543061897
superset.dat is produced by ddrgen.,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,0.2272727273,0.04237288136,0.3333333333,0.4909090909,0.4196348615,0.5803651385,0.0004100015372,0.0001321913482
For a warm compile there should not be more than 200 optimizations that run.,Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.4242424242,0.1052631579,0.6470588235,0.5419847328,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
Steps to reproduce: CODE,Bug Reproduction,True,24,NONE,True,True,False,0.2,0.04210526316,0.05263157895,0.5,0.0,1.0,0.0,0.008598273629
still don't get good validation and testing results... >70%...,Usage,False,62,NONE,False,False,False,0.8181818182,0.03461538462,0.6466809422,1.0,0.5688734124,0.4311265876,0.003618682739,0.002504984351
@azar923 Did you try the CODE mitigation above?,Workarounds,True,47,MEMBER,False,False,False,0.275862069,0.1290322581,0.872246696,0.25,0.6576765505,0.3423234495,0.0002468438052,0.0002666834826
"I hacked in healthcenter and have some hcd files, but they haven't been very enlightening.",Investigation and Exploration,False,90,NONE,True,True,False,0.1973684211,0.1875,0.6,0.01470588235,0.0,1.0,0.0,0.0188118453
"In the meantime though, I managed to get a trace of compareAndSwapObject with CODE
here you go:",Investigation and Exploration,True,96,NONE,True,False,False,1.0,0.2686567164,0.6666666667,0.5586592179,0.005492387743,0.9945076123,0.0001990987978,0.0006886577466
It could be made more efficient by avoiding copies.,Solution Discussion,False,51,CONTRIBUTOR,False,False,False,0.4736842105,0.1343283582,0.1844660194,0.75,0.04256853321,0.9574314668,0.01543061897,0.001149776305
"Also, if my description is terribly unclear, please let me know and I'll try to clarify.",Social Conversation,False,88,CONTRIBUTOR,False,False,False,0.3265306122,0.2388059701,0.8779472954,1.0,0.8949843368,0.1050156632,0.1191105139,0.0385452454
and -DVS12AndHigher were already set up for x86_64-w64-mingw32-g++ and it works in some way but it didn't help to get these obj file linked correctly.,Solution Discussion,False,150,CONTRIBUTOR,False,False,False,0.6222222222,0.2372881356,0.4,0.1151515152,0.3892686419,0.6107313581,0.003403174815,0.0001502490105
"@kaustubhn Sounds great â for more info on how to add languages, see the new link posted above.",Solution Discussion,False,95,MEMBER,False,False,False,0.6428571429,0.3,0.8879310345,0.5,0.5956265856,0.4043734144,0.001011405608,1.0
Thanks.,Social Conversation,False,7,NONE,False,False,False,0.04761904762,0.001447178003,0.6864686469,1.0,0.226528822,0.773471178,0.005343317335,0.08527687651
"- something like this: (rough draft)
CODE
- the walk on JITServer will create a vector of offsets
- then we need to send it to the JITClient
- JITClient just need to iterate through the vector in reverse order and apply the offsets

- Imagine we have 3 nodes (A, B, C) where C is the leaf node (A-->B-->C)
- this is pre-order traversal
- we can also do post-order",Solution Discussion,True,371,CONTRIBUTOR,False,False,False,1.0,0.3862433862,0.6,0.9714285714,0.5018185814,0.4981814186,0.001953523523,1.0
I'll play with it in a few hours and see if I can track something down.,Social Conversation,False,71,NONE,False,False,False,0.7619047619,0.02315484805,0.303630363,1.0,0.06823054198,0.931769458,5.707607458e-05,0.01223409639
"Any of this help?
CODECODE__pthread_kill",Solution Discussion,True,41,NONE,True,False,False,0.1111111111,0.04511278195,0.3333333333,0.2798982188,0.2279520689,0.7720479311,0.0001733178764,0.0007382360491
"Generally, huge cache sizes indicate a corrupt stack. CODE results in a huge positive value.",Investigation and Exploration,True,92,CONTRIBUTOR,False,False,False,0.5769230769,0.1442307692,0.25,0.1325966851,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
Will be reaching out to the common team for help on how to proceed.,Contribution and Commitment,False,67,CONTRIBUTOR,False,False,False,1.0,0.1052631579,1.0,0.8702290076,0.8404830514,0.1595169486,0.03161211786,0.000959379849
So it is highly likely that we already fixed the issue via #3650.,Solution Discussion,False,65,CONTRIBUTOR,False,False,False,0.4814814815,0.1313131313,0.75,0.9754385965,0.9103914698,0.08960853018,0.006460058278,0.07945790628
@lesteve and others I cannot reproduce the error with the [snippet posted earlier](https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-218365487) on the latest master with python 2.7.,Bug Reproduction,False,201,CONTRIBUTOR,False,False,False,1.0,0.3661971831,0.1578947368,0.5,0.1665130991,0.8334869009,0.0002442474535,0.008272861908
At some point OpenJ9 started to embed a shared class cache into the containers and  Liberty images create another SCC layer on top.,Usage,False,131,CONTRIBUTOR,False,False,False,0.96,0.3,0.6666666667,0.03921568627,0.004949898627,0.9950501014,0.01246148827,0.08811482837
"Also if you execute CODE before the same CODE call, CODE does not raise an exception (a dictionary is built?)",Observed Bug Behaviour,True,109,NONE,True,True,False,1.0,0.2105263158,0.08421052632,0.8,0.0,1.0,0.0,0.008598273629
"Another option to try to track this down is to use jit limitFiles: https://www.eclipse.org/openj9/docs/xjit/#limitfile

If you generate a compile log from a failing run using CODE, it can be used as a limit file control which methods are compiled in future runs.",Solution Discussion,True,264,MEMBER,False,False,False,1.0,0.3233082707,0.3333333333,0.4071246819,0.478949853,0.521050147,0.01584223495,0.009466671463
"As you can see, the real-world problems are more than just feeding into a series of images or texts.",Motivation,False,100,NONE,False,False,False,0.9523809524,0.2985074627,0.9153952843,0.4444444444,0.9479523715,0.05204762849,0.2620248075,0.005625200409
"They also have a good implementation of word2vec, but it unfortunately the scikit pipeline does not always use iterators and would need quite a bit of memory (>24GB including paging when I tried a _much_ smaller dataset).",Solution Discussion,False,221,NONE,False,False,False,1.0,0.2483660131,0.5627009646,0.2307692308,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
Very nice indeed.,Social Conversation,False,17,CONTRIBUTOR,False,False,False,0.5,0.0447761194,0.4701803051,0.25,0.4356293768,0.5643706232,0.01344561339,0.0007517572389
[3] the exception only occurs with JIT on and was never triggered with JIT off so far.,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.3863636364,0.1278195489,0.6666666667,0.3562340967,0.4557884115,0.5442115885,0.03394128121,0.003566914598
"I also tried a clean Ubuntu 18.04 VM (Fyre) with 8-cores 256GB from a fresh install using the following sequence of commands:

CODE

I could not reproduce the issue.",Bug Reproduction,True,169,CONTRIBUTOR,False,False,False,1.0,0.2481203008,0.25,0.4834605598,0.5596707013,0.4403292987,0.1072383922,0.000211333354
"In general, the helpers don't use the indirect call - on LE the functions are called directly.

CODE

BRANCH_SYMBOL does no decoration.",Investigation and Exploration,True,139,CONTRIBUTOR,False,False,False,1.0,0.1796875,0.5,0.3722222222,0.03699345185,0.9630065482,4.77e-05,6.66e-06
"If you like you can reopen it and close it when you are done, it doesn't matter to me.",Action on Issue,False,86,CONTRIBUTOR,True,False,True,19.0,0.2676056338,1.0,4.0,1.0,0.0,2.449490317e-05,0.0
"We have reports of users that seems to indicate that freezing can still happen, none of which we have managed to reproduce AFAIK.",Bug Reproduction,False,129,MEMBER,False,False,False,0.6571428571,0.2371134021,0.7514792899,0.6,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
for me things started to work when I used this wrapper:CODE,Usage,True,59,NONE,False,False,False,0.75,0.04615384615,0.5503211991,0.5,0.4925242192,0.5074757808,0.003259624837,0.00210016914
(Is there at least a code snippet to do this?),Usage,False,46,NONE,False,False,False,0.4545454545,0.03846153846,0.3554603854,1.0,0.2984391787,0.7015608213,0.02076519409,0.004008482248
"Another feature request: it'd be great if there was an CODE operator, which would return the current iterator value (like CODE), but not advance the iterator.",Expected Behaviour,True,158,CONTRIBUTOR,False,False,False,1.0,0.4029850746,0.693481276,0.5,0.5288165167,0.4711834833,0.05557964708,0.1827564093
For linear estimators that is ok.,Solution Discussion,False,33,MEMBER,False,False,False,0.3,0.08450704225,0.4166666667,0.5,0.03980338897,0.960196611,3.439112479e-06,2.382813646e-05
**after installing Gensim**numpy (1.10.4) updated to numpy (1.13.3)scipy (0.16.1)   updated to scipy (0.19.1),Observed Bug Behaviour,False,109,NONE,False,False,False,0.5,0.1443298969,0.6656804734,0.6363636364,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
"However, during testing time, it's using the moving average statistics of all the training batches to normalize the input tensor.",Solution Discussion,False,129,CONTRIBUTOR,False,False,False,0.8695652174,0.07692307692,0.5096359743,1.0,0.386836239,0.613163761,0.0004945035936,0.01129830123
@jsimomaa is your machine running any virus software?,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.3333333333,0.05839416058,0.75,0.5353159851,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"Do you mean with ""slim batch_norm wrapper"" the function CODE?",Solution Discussion,True,61,NONE,False,False,False,0.1219512195,0.03846153846,0.9678800857,0.4,0.9175683472,0.08243165278,0.02471483102,0.01105297712
"@JIoJIaJIu I dunno what's the best place to move this repo for now, if this repo is not suitable for moving tensorflow org, I think nodejs-tensorflow is the good place :)",Action on Issue,False,170,CONTRIBUTOR,False,False,False,1.0,0.4383561644,0.6206896552,1.0,0.6567214309,0.3432785691,0.0009029755035,0.000624336739
"there was apparently also a 32bit failure on windows for 0.19.1, but I don't think it was this one.",Potential New Issues and Requests,False,99,MEMBER,False,False,True,19.0,0.2794117647,1.0,1.0,1.0,0.0,0.02330589243,0.0
Where are these dump files supposed to be located?,Investigation and Exploration,False,50,NONE,True,False,False,0.2903225806,0.09090909091,1.0,0.08421052632,0.09912996542,0.9008700346,0.005467138405,0.004133788861
+1s,Social Conversation,False,3,NONE,False,False,False,1.0,0.01369863014,0.3362068966,1.0,0.3787784383,0.6212215617,0.1560058384,0.08062287604
"I pasted it to show a pircture of exactly what ends up being passed to the JVM on launch (it can sometimes be hard to figure this out, because various parts of Eclipse or extensions can modify that before it gets launched).",Investigation and Exploration,False,223,NONE,True,False,False,1.0,0.4242424242,0.875,0.701754386,0.2144667264,0.7855332736,0.001641357342,0.00438505838
-         I downloaded the toolkit from the [archive] URL  as 9.0 but it got installed as 9.1 (I do not know why...),Solution Discussion,False,116,NONE,False,False,False,1.0,0.1811023622,0.5014662757,0.5,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
"After 73200 setps, I get perplexity 5.54.",Solution Discussion,False,41,NONE,False,False,False,0.3333333333,0.01013024602,0.6765676568,0.5,0.226528822,0.773471178,0.005343317335,0.08527687651
I'll submit a PR to reduce precision of the test.,Potential New Issues and Requests,False,49,MEMBER,False,False,False,0.5882352941,0.1470588235,0.5203252033,1.0,0.5675379045,0.4324620955,0.003751139534,0.000437512086
My suggestion/request in the near term would be to have an option to make the vocabulary read only so that users who want to be able to leave spacy alone to do streaming data processing don't need to worry about changing memory requirements.,Expected Behaviour,False,241,NONE,True,True,False,0.7719298246,0.7096774194,0.04845814978,0.6470588235,0.0,1.0,0.0,0.0008157310994
"I added another run using an option I spotted, ""considersize"", which looks much better but not sure how it affects perf.",Testing,False,120,CONTRIBUTOR,True,False,False,1.0,0.3387096774,0.25,0.776371308,0.5598736768,0.4401263232,0.008625593247,0.002832414962
hmm - so I'm not sure if the problem is the compile time or the fact that with the aggressive handle inlining we won't be able to do AOT.,Investigation and Exploration,False,137,CONTRIBUTOR,False,False,False,1.0,0.4179104478,0.3333333333,0.3179190751,0.005067697264,0.9949323027,4.84e-06,5.36e-06
"-         this can be translated to categories=[range(value)] internally, and raise deprecation warning that user should do that themselves in the future",Solution Discussion,False,153,CONTRIBUTOR,True,False,False,0.488372093,0.328125,0.3676470588,0.8333333333,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
I will work on collecting more JIT logs to try and understand what is happening.,Task Progress,False,80,MEMBER,False,False,False,0.46875,0.1630434783,1.0,0.7547169811,0.5963082563,0.4036917437,0.01338731827,0.03227550175
"In that light, I think we even don't need the CODE option.",Solution Discussion,True,58,CONTRIBUTOR,True,False,False,0.2727272727,0.1875,0.2683823529,0.6428571429,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"OpenJ9   - 77c1cf708
OMR      - 20db4fbc
JCL      - 2a7af5674b based on jdk-jdk-11.0.5+10)

Summary of problem
------------------

When building ODPi egeria  URL  master, the build fails on a maven step using the Apache RAT plugin 0.13 with

An API incompatibility was encountered while executing org.apache.rat:apache-rat-plugin:0.13:check: java.lang.VerifyError: JVMVRFY038 invokespecial on invalid target; class=die/verwandlung/GregorSamsa, method=template$dot$0(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;I)V, pc=698
[ERROR]",Observed Bug Behaviour,False,658,NONE,True,True,False,1.0,0.7142857143,0.375,0.007633587786,0.0,1.0,0.0,0.0001794494051
"@hzongaro, who is familiar with pre-escape analysis through the work he did last year, could provide us with some insights into whether escape analysis was making a wrong decision.",Contribution and Commitment,False,180,MEMBER,False,False,False,0.5357142857,0.3260869565,0.75,0.8616352201,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
"However you suspect that for some small values, the precise value is significant.",Potential New Issues and Requests,False,81,NONE,False,False,False,0.4482758621,0.203125,0.8492647059,0.75,0.262961705,0.737038295,0.002558830732,0.003516053103
"To be more precise, we need support for pipelines where learning is done in an online fashion, and training data is generated by a system responding to actions of a TensorFlow network (learning Atari simulator, robotics simulator, robot interacting with real world, etc).",Expected Behaviour,False,271,CONTRIBUTOR,False,False,False,1.0,0.6417910448,0.2177531207,0.6666666667,0.04902295757,0.9509770424,0.001787522968,0.0009069948543
"@sjperkins sadly the way our current unit tests are written makes them break if variables are returned without extra copies (because many tests do a = session.run(variable); session.run(update_variable); b = session.run(variable); assertDifferent(a, b) (which fails if they share buffers).",Solution Discussion,False,289,MEMBER,False,False,False,1.0,0.552238806,0.399445215,0.3333333333,0.3378723543,0.6621276457,0.04548767515,1.170644312e-05
We will then continue the investigation to find out why this is inconsistent and what the JIT can do to gracefully recover.,Task Progress,False,123,CONTRIBUTOR,False,False,False,0.88,0.3548387097,0.875,0.2950819672,0.4942847726,0.5057152274,0.01863655198,0.01288492485
"50K runs on AIX with no issues, so I believe #3687 fixes this.",Testing,False,62,CONTRIBUTOR,False,False,True,0.5185185185,0.21875,0.3333333333,0.9858156028,1.0,0.0,0.0716422145,0.0
"As by design the GC is initialized before the shared cache, new GC APIs will be needed to adjust the GC heap parameters after initialization.",Motivation,False,141,CONTRIBUTOR,True,True,False,0.6756756757,0.1712328767,0.7142857143,0.02793296089,0.0,1.0,0.0,5.94e-06
*         SCREEN_NAME  and SCREEN_NAME : Thanks for looking into the CODE integration.,Social Conversation,True,86,CONTRIBUTOR,True,False,False,0.2553191489,0.1791044776,0.5450762829,0.7142857143,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"After applied the filter, no data available in training cycles.",Usage,False,63,NONE,False,False,False,0.1639344262,0.1492537313,0.7434119279,0.5,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"Sure, no problem.",Social Conversation,False,17,CONTRIBUTOR,False,False,False,0.15,0.04225352113,0.3888888889,0.1111111111,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"Also occurred at internal builds such as CODE.
CODE",Bug Reproduction,True,52,MEMBER,False,False,False,1.0,0.1612903226,1.0,0.4725738397,0.3843796234,0.6156203766,0.5551474985,0.3809000137
Do you have any code that can be looked up to start coding on the new api?,Solution Discussion,False,74,NONE,False,False,False,1.0,0.02460202605,0.7788778878,0.75,0.2742562411,0.7257437589,0.006610382458,0.005351860947
"I tried two setups, where",Bug Reproduction,False,25,NONE,False,False,False,0.2777777778,0.07042253521,0.8040935673,0.1333333333,0.6456610805,0.3543389195,1.0,4.677373331e-05
"@tano297 you right about that, I was in the wrong place, but still:line 755-770 calculate the moments, but the moments are only used in _force_updates which is only executed if is_training evaluates to True, aren't they?",Solution Discussion,False,220,NONE,False,False,False,1.0,0.1461538462,0.8650963597,0.25,0.7214324611,0.2785675389,0.0005628859124,0.02303946421
"Andrew @andrewcraik, Marius @mpirvu, do you think it would be worth the time to get CODE logs for Windows before the degradation and for ppc64le_linux both before and after?",Investigation and Exploration,True,173,MEMBER,False,False,False,1.0,0.4328358209,1.0,0.4104046243,0.005296972601,0.9947030274,3.08e-05,5.28e-06
"#7034 is not included in my build, as it's not a delivered change (it was reverted).",Solution Discussion,False,84,CONTRIBUTOR,False,False,False,1.0,0.09195402299,1.0,0.3933823529,0.7654576966,0.2345423034,1.58e-05,0.0001942018005
or 3) install from https://sourceforge.net/projects/mingw-w64/files/?source=navbar,Solution Discussion,False,82,CONTRIBUTOR,False,False,False,0.1612903226,0.04237288136,1.0,0.2242424242,0.396812476,0.603187524,0.003533051078,0.002619750082
@pshipton thanks for the clarification!,Social Conversation,False,39,NONE,True,False,False,0.4166666667,0.06666666667,0.5,0.3220338983,0.01516958734,0.9848304127,0.007066552505,0.01017150312
"Hmm, lock dump doesn't immediately look suspicious.",Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,0.6363636364,0.1044776119,0.5,0.1229050279,0.001761147907,0.9982388521,0.0001611752173,0.0002284033828
"This updated numpy and scipy to the latest versions and installed few other things it needs (boto, bz2file and smart_open).",Observed Bug Behaviour,False,123,NONE,False,False,False,0.7142857143,0.206185567,0.6568047337,0.3636363636,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
Basically I ran the installer downloaded from Oracle's website.,Investigation and Exploration,False,63,NONE,True,False,False,0.25,0.09090909091,0.375,0.449122807,0.1964587946,0.8035412054,0.004535009544,0.001033447215
This is the mechanism being used for deserialization.,Solution Discussion,False,53,MEMBER,False,False,False,0.16,0.1290322581,0.563876652,0.5714285714,0.2188215168,0.7811784832,0.0010422294,0.002309046196
It's great to see a design forging.,Social Conversation,False,35,CONTRIBUTOR,True,False,False,0.7777777778,0.109375,0.6666666667,0.1631205674,0.002042521787,0.9979574782,0.00734286415,0.06695374525
"yeah, that 32bit issue didn't reproduce in current build.",Bug Reproduction,False,57,MEMBER,True,False,False,1.0,0.1323529412,0.1178861789,0.3333333333,0.2728067621,0.7271932379,0.004772231277,0.004433478825
I just wanted to write that I think you got it flipped: the wheels worked find and the issue only occured when I was using it via conda with MKL ...,Solution Discussion,False,148,CONTRIBUTOR,False,False,False,0.8823529412,0.4225352113,0.5526315789,0.1428571429,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
This issue can be closed from my end.,Action on Issue,False,37,NONE,True,False,False,0.1818181818,0.0522875817,0.07395498392,1.0,0.002086131182,0.9979138688,0.0004639102472,1.030911661e-05
"Once again, this code works on my computer only when I change n_jobs to 1 or when I don't define a scoring= argument.",Observed Bug Behaviour,False,117,NONE,True,False,False,0.6388888889,0.2371134021,0.0798816568,1.0,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
Do we need to write swig interface file specifically for Javascript or is it auto-generated when running some commands or is somebody already working on this (this would be awesome) ?,Solution Discussion,False,183,NONE,False,False,False,1.0,0.4246575342,0.02801724138,1.0,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
"Such that, I suggested setting every limit to unlimited and running one of the known failures.",Solution Discussion,False,94,CONTRIBUTOR,False,False,False,1.0,0.2580645161,1.0,0.4303797468,0.2977992985,0.7022007015,0.0007234180335,0.0004492192628
"In the worst case, if you had a chunk size of 1, you could use a thousand node cluster and have your job complete slower than it would on a Macbook Air.",Solution Discussion,False,152,MEMBER,False,False,False,0.8,0.2091503268,0.8102893891,0.8947368421,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
That's actually a really good idea!,Social Conversation,False,35,NONE,True,False,False,0.1578947368,0.1578947368,0.1240875912,0.2,0.003800102762,0.9961998972,0.0004625994361,7.224875116e-05
It appears https://github.com/eclipse/openj9/issues/10580 with different error output.,Testing,False,86,MEMBER,False,False,False,1.0,0.1489361702,1.0,0.01923076923,0.0003970034597,0.9996029965,0.002175337965,0.006689164241
Does CODE do several epochs and CODE does not?,Solution Discussion,True,46,MEMBER,False,False,False,0.3,0.1267605634,0.2862318841,0.6,0.03947792369,0.9605220763,6.386923175e-06,3.579484417e-05
"I can share a link to it via private email, I don't think I should share this in a public forum.",Social Conversation,False,96,NONE,True,False,False,1.0,0.2121212121,0.8,0.7894736842,0.5885610122,0.4114389878,1.0,0.002646435418
"I tried the below [-Xshareclasses] URL  options to figure out where the corruption is happening in the SCC:
1. CODE
2. CODE
3. CODE
4. CODE
5. CODE

None of the above options prevented the segfault.",Investigation and Exploration,True,205,CONTRIBUTOR,False,False,False,1.0,0.4623655914,0.9230769231,0.2316602317,0.3402178482,0.6597821518,0.06293969756,0.0116494207
AGCT already performs the attached thread check and returns the current JNIEnv in the output buffer.,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,0.7619047619,0.1538461538,1.0,0.7569060773,0.3053817121,0.6946182879,0.01204726646,0.01340473801
"BatchNorm is currently very slow (because of all the statistics computed), but they are working on adding a cudnn batchnorm op as said [here](https://github.com/tensorflow/tensorflow/pull/1759#issuecomment-228856467).",Solution Discussion,False,217,CONTRIBUTOR,False,False,False,1.0,0.1038461538,0.1841541756,1.0,0.2178446627,0.7821553373,0.0001282422122,0.02579900529
"Hm, so you excluded all these changes: https://github.com/eclipse/openj9/issues/5074#issuecomment-539181459  ?",Solution Discussion,False,110,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.375,0.7654318547,0.2345681453,0.004433211296,5.66e-05
"Even though it's compiled, no trace is provided for some reason...",Investigation and Exploration,False,66,NONE,True,False,False,0.2444444444,0.1641791045,0.5,0.4525139665,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
Lol :P this thread died years ago.,Social Conversation,False,34,NONE,False,False,False,1.0,0.09589041096,0.7112068966,0.3333333333,0.7053540966,0.2946459034,0.002671966484,3.430421643e-05
"Instead of doing these things, I've mostly been doing bug-fixes, improving the API docs, and trying to improve my deployment process, which at the moment feels very error-prone.",Task Progress,False,177,MEMBER,False,False,False,0.5166666667,0.5166666667,0.1034482759,0.24,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
The mystery deepens - @gacholio is there a way for us to get a log of the memory addresses of j9methods in a JVM run?,Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,1.0,0.2637362637,0.5,0.8741258741,0.8689687756,0.1310312244,0.001217055727,0.0001710040325
"jdk11

https://ci.eclipse.org/openj9/view/Test/job/Grinder/698 - multiheap:4
https://ci.eclipse.org/openj9/view/Test/job/Grinder/699 - multiheap:8
https://ci.eclipse.org/openj9/view/Test/job/Grinder/700 - multiheap:16",Testing,False,221,CONTRIBUTOR,True,False,False,1.0,0.1612903226,1.0,0.3291139241,0.2916508713,0.7083491287,0.001977731559,0.01326071928
"I build batchnorm like this, however, the moving mean and moving variable are updated during test, I can not find the reason.",Usage,False,125,NONE,False,False,False,1.0,0.08461538462,0.7323340471,1.0,0.6156738908,0.3843261092,0.003360169166,0.00136237059
"@cpple Remember not to add +1s, they cause noise and have been replaced by reactions.",Social Conversation,False,85,NONE,False,False,False,1.0,0.2054794521,0.8577586207,0.5,0.8186369424,0.1813630576,0.0004092161044,0.2335327035
Exactly.,Social Conversation,False,8,CONTRIBUTOR,False,False,False,0.1,0.02127659574,0.3333333333,0.9692307692,0.7350858598,0.2649141402,0.01440588944,0.1968967087
Feel free to patch for Debian.,Contribution and Commitment,False,30,MEMBER,False,False,False,0.2142857143,0.08823529412,0.9918699187,1.0,0.9921128047,0.007887195265,0.0008629382027,1.795629714e-05
[Source](https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py#L129) where the cell is created withCODE,Bug Reproduction,True,139,NONE,False,False,False,0.9375,0.02170767004,0.1188118812,1.0,0.01791190943,0.9820880906,0.003676957012,0.0007664331927
"The exception message seem to suggest that the receiver created by CODE bytecode is null, which I don't think is possible from VM code without triggering other exceptions, will have to look at a core dump at the exception point to confirm the issue",Investigation and Exploration,True,248,CONTRIBUTOR,False,False,False,1.0,0.4782608696,1.0,0.1383647799,0.3428264365,0.6571735635,0.0002941917355,0.001046537172
"Another two configs that may worth trying:
1. Export environment variable CODE
2. Export environment variable CODE",Investigation and Exploration,True,116,CONTRIBUTOR,False,False,False,1.0,0.2835820896,0.5,0.3296089385,0.003738339876,0.9962616601,9.22e-05,0.0002215081863
Do you have an example Hadoop command line?,Solution Discussion,False,43,CONTRIBUTOR,True,False,False,0.4,0.05479452055,1.0,0.7374301676,0.2638115076,0.7361884924,0.001870010978,0.005993563236
Could you link the papers here and I'll have a look at that as well.,Motivation,False,68,NONE,True,False,False,0.3947368421,0.3947368421,0.1313868613,0.4,0.003800102762,0.9961998972,0.0004625994361,7.224875116e-05
before I spend more time -- is there specific meaning for the threshold to be 0.9?,Investigation and Exploration,False,82,MEMBER,True,False,False,0.4210526316,0.2352941176,0.1991869919,0.8,0.2809523721,0.7190476279,0.0006692173817,5.939390591e-05
The only workaround we came up with is to reload nlp object each N processed content items and force garbage collector to free memory of deleted object.,Workarounds,False,152,NONE,False,False,False,0.7297297297,0.435483871,0.845814978,0.4444444444,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
"no, i don't think so.

-bash-5.0$ sedmgr
Stack Execution Disable (SED) mode: select
SED configured in kernel: select",Social Conversation,False,120,CONTRIBUTOR,False,False,False,1.0,0.1206896552,1.0,0.7426470588,0.7731956929,0.2268043071,6.97e-06,1.31e-05
I met the same problem when using the Release Version of Tensorflow 1.0 and working on MacOS in cpu mode.,Bug Reproduction,False,105,NONE,False,False,False,1.0,0.02894356006,0.1485148515,0.5,0.02175988772,0.9782401123,0.005971272817,0.0008504453773
"Ah, that sounds like a good idea!",Social Conversation,False,33,CONTRIBUTOR,True,False,False,0.1555555556,0.109375,0.5147058824,0.5,0.07586856219,0.9241314378,0.0001680122564,0.000726968286
"However, using the options that we need for diagnosing the problem, the failure was a lot less reproducible.",Investigation and Exploration,False,108,MEMBER,False,False,False,0.45,0.1956521739,0.1818181818,0.7672955975,0.6067408459,0.3932591541,0.03227550175,0.06952239071
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_s390x_linux_Release/8
jdk_util_0
-Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:+UseCompressedOops
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java
CODE",Testing,True,302,CONTRIBUTOR,False,False,False,1.0,0.2934782609,1.0,0.3647798742,0.4324772176,0.5675227824,0.09102607801,0.08317436407
"The improvements I see on my laptop (Windows 10 based) are significant:

 -Xms256m -Xmx1G
 Started Application in 6.133 seconds (JVM running for 7.087)
 Started Application in 6.433 seconds (JVM running for 7.332)
 Started Application in 6.539 seconds (JVM running for 7.485)

-Xms256m -Xmx1G -Xshareclasses -Xscmx100M 
  Started Application in 14.555 seconds (JVM running for 16.19)
  Started Application in 3.696 seconds (JVM running for 4.052)
  Started Application in 3.505 seconds (JVM running for 3.806)
  Started Application in 3.729 seconds (JVM running for 4.004)",Investigation and Exploration,False,583,CONTRIBUTOR,False,False,False,1.0,0.6934306569,1.0,0.6505576208,0.02588006835,0.9741199316,9.32e-05,8.65e-05
"So, we can assume that the entry was valid upon entry.",Investigation and Exploration,False,54,CONTRIBUTOR,False,False,False,0.2558139535,0.1208791209,0.4,0.2692307692,0.6007887623,0.3992112377,0.01222678832,0.05114946292
"use CODE with CODE flag
Do you know which case do you have?",Investigation and Exploration,True,60,CONTRIBUTOR,False,False,False,0.4242424242,0.08045977011,0.5,0.2426470588,0.7477267944,0.2522732056,0.0003712750967,0.001172416587
Great news - thanks folks!,Social Conversation,False,26,NONE,False,False,False,0.5,0.03007518797,0.5,0.9949109415,0.9998578626,0.0001421374188,0.03182672137,0.0008183546901
"The backup tracks the active store for 1000 documents, and then takes over.",Solution Discussion,False,75,MEMBER,False,False,False,0.40625,0.2096774194,0.9207048458,0.8,0.6578010252,0.3421989748,0.0002101432121,0.0002159883295
@abrahamrhoffman Would you also mind providing a justification on the down vote?,Solution Discussion,False,80,NONE,True,False,False,0.48,0.09448818898,0.2346041056,1.0,0.3332287349,0.6667712651,0.02958178195,0.02419682242
ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory,Observed Bug Behaviour,False,88,NONE,True,True,False,0.8666666667,0.1023622047,0.00293255132,0.1666666667,0.0,1.0,0.0,0.001987007177
@planetf1 Do you have the .class file that causes the verifyerror?,Investigation and Exploration,False,66,MEMBER,False,False,False,0.6875,0.08270676692,0.5,0.02290076336,3.12e-05,0.999968832,0.0001794494051,0.0004950187461
"@smlambert for some reason the grinder isn't passing all the sanity.functionality testing, there are 4 failures, not sure why.",Testing,False,126,CONTRIBUTOR,True,False,False,1.0,0.3275862069,1.0,0.3486238532,0.02110203119,0.9788979688,0.001257628253,0.0002379509176
Will look forward to 2.0 release to try.,Social Conversation,False,40,NONE,False,False,False,0.6153846154,0.1290322581,0.9339207048,0.6666666667,0.6578574086,0.3421425914,0.0002159883295,0.09426527661
"The signal handler code does some stuff which might not stack well, but I can't blame it yet.",Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,1.0,0.1730769231,0.5,0.1878453039,0.0241690347,0.9758309653,0.01268066734,9.99e-05
Here is my code:CODE,Usage,True,20,NONE,False,False,False,0.1724137931,0.01923076923,0.6338329764,0.75,0.5678279549,0.4321720451,0.377195146,0.003001821466
A couple of concrete use cases that come up for us:,Motivation,False,51,CONTRIBUTOR,False,False,False,0.2340425532,0.1641791045,0.2579750347,0.1666666667,0.05010423233,0.9498957677,0.0003781690105,0.199242644
Thanks,Social Conversation,False,6,NONE,False,False,False,0.04,0.01666666667,0.8706896552,1.0,0.5355364529,0.4644635471,0.03798484879,0.2918907521
@babsingh - Gah!,Social Conversation,False,16,NONE,True,False,False,0.1428571429,0.02666666667,0.1428571429,0.09604519774,0.001924165545,0.9980758345,0.0001509806852,0.0002669513564
"I'd like to minimize the number of mechanisms we have in sklearn, and we definitely need one (more?) for efficient model selection.",Potential New Issues and Requests,False,131,MEMBER,False,False,False,0.7666666667,0.323943662,0.5253623188,0.5,0.04254757077,0.9574524292,3.382963704e-05,1.965207131e-06
Have I got this part correct?,Usage,False,29,NONE,False,False,False,0.2307692308,0.02307692308,0.2184154176,0.75,0.2234305404,0.7765694596,0.0068527403,0.007193130032
@0dvictor you might be able to help since this is one of the primitives we probably do something special for in the code generator when we do encounter it - maybe you can provide some guidance?,Contribution and Commitment,False,193,CONTRIBUTOR,False,False,False,1.0,0.5223880597,1.0,0.2681564246,0.003168984322,0.9968310157,0.0003309694301,0.0004628400625
https://spacy.io/docs/usage/adding-languages,Solution Discussion,False,44,NONE,False,False,False,1.0,0.01666666667,0.8793103448,1.0,0.5954190914,0.4045809086,0.2918907521,0.001011405608
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1637931034,1.0,0.04440917151,0.9555908285,0.002504650435,0.02032203913
Test code: CODE,Investigation and Exploration,True,15,NONE,False,False,False,1.0,0.04411764706,0.7764227642,1.0,0.6031065348,0.3968934652,1.968286417e-05,0.002100196138
"@geovedi , were you working on Bahasa?",Task Progress,False,38,COLLABORATOR,False,False,False,1.0,0.1,0.7155172414,1.0,0.4484523395,0.5515476605,0.0002826479106,0.0001265968096
also some explanations at https://github.com/eclipse/openj9/issues/6642,Investigation and Exploration,False,71,NONE,True,False,False,1.0,0.03759398496,1.0,0.04325699746,0.0001570469382,0.9998429531,0.0001565583648,0.0001463391504
@ajaanbaahu Still waiting for tf1.2 new seq2seq tutorial.,Social Conversation,False,57,NONE,False,False,False,1.0,0.01157742402,0.6270627063,1.0,0.1938861613,0.8061138387,0.004226002744,0.01155879506
"For example the images could very reasonably use bilinear interpolation, but interpolating label values is not okay because a label pixel boundary of 0 and 2 should not be interpolated to the completely different label of 1.",Motivation,False,224,NONE,False,False,False,1.0,0.552238806,0.6033287101,1.0,0.4981987086,0.5018012914,0.0130944201,0.02428476177
"In such case, there are two Javas VM on the machine:",Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.2,0.1111111111,0.5833333333,0.8350877193,0.803200419,0.196799581,0.3518178539,0.2306492075
"It's been observed that order of these options may change (probably due to some startup race)

@amicic what options changed?",Solution Discussion,False,126,CONTRIBUTOR,True,False,False,1.0,0.1438356164,0.5,0.7039106145,0.2631687747,0.7368312253,4.81e-05,7.11e-05
It would help a lot if we could get a JIT log for CODE with CODE.,Solution Discussion,True,65,CONTRIBUTOR,False,False,False,1.0,0.1720430108,0.5,0.694980695,0.558010435,0.441989565,0.01376817541,0.001749464716
"Well, maybe if you were running a different workload then different libraries could be referenced that weren't already collected by the earlier jextract.",Investigation and Exploration,False,153,CONTRIBUTOR,False,False,False,1.0,0.3066666667,1.0,0.5084745763,0.03756929822,0.9624307018,1.62e-05,0.04024904373
"This inherently is mismatch on linux systems whenever that number changes, so since it can not find the exact matches then it thinks the file doesn't exist and throws the error.",Investigation and Exploration,False,177,NONE,True,False,False,1.0,0.2440944882,0.02639296188,1.0,0.0003350798813,0.9996649201,0.002134165505,0.1834480158
"Aside from that, we use two different input pipelines for training and validation data that we connect to the network part of our graph alternating through a switch implemented through CODE.",Motivation,True,190,NONE,False,False,False,0.5081967213,0.4626865672,0.6144244105,0.8,0.5012181902,0.4987818098,0.02428476177,0.003761840049
"You created this in a separate project and are using the TensorFlow C API, as SCREEN_NAME  recommended earlier.",Task Progress,False,111,MEMBER,False,False,False,0.5428571429,0.2602739726,0.5905172414,0.5555555556,0.6506314731,0.3493685269,0.01305197974,0.05278600034
"Having written all this, I'm thinking it might be nice to inter-operate closely with Gensim on this.",Solution Discussion,False,100,MEMBER,False,False,False,0.3,0.3,0.25,0.92,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Let's leave it open for now and think about it a bit more.,Action on Issue,False,58,MEMBER,False,False,False,1.0,0.08496732026,0.08038585209,1.0,0.002089762575,0.9979102374,1.030911661e-05,0.004147527693
or zip it,Investigation and Exploration,False,9,MEMBER,False,False,False,1.0,0.04411764706,0.7682926829,1.0,0.5913393822,0.4086606178,5.179701097e-06,0.03477789442
Fixing this here: https://github.com/eclipse/omr/pull/3014,Action on Issue,False,58,CONTRIBUTOR,False,False,False,0.08510638298,0.03125,1.0,0.75,0.08206856421,0.9179314358,0.002818533349,0.002348920944
There a number of methods that this is reproducible with.,Bug Reproduction,False,57,CONTRIBUTOR,True,False,False,0.1851851852,0.078125,0.1428571429,0.03888888889,0.006753802741,0.9932461973,0.009802165843,0.02838288421
"1)         As actual, not yet encoded (integer or string), categorical data (how it is done in CODE) -> infer categories from the unique values in the training data",Solution Discussion,True,164,CONTRIBUTOR,True,False,False,0.8484848485,0.4375,0.1470588235,0.2777777778,0.002016098271,0.9979839017,0.0039907996,0.01559625638
Many of the things said already resonate with my experience.,Motivation,False,60,NONE,False,False,False,0.1639344262,0.1492537313,0.07350901526,0.2142857143,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
**Replicated**,Bug Reproduction,False,14,NONE,False,False,False,0.04,0.01408450704,0.9824561404,0.2,0.9998782054,0.0001217945808,0.8838761808,0.0007094938778
If we don't have them then this will need to move to backlog until we can get diagnostic files since attempts at reproduction have not been successful to the best of my understaning.,Task Progress,False,182,CONTRIBUTOR,False,False,False,1.0,0.5322580645,1.0,0.1803278689,0.3837398331,0.6162601669,0.09512000124,0.01216692501
Where can I set verbose=20?,Investigation and Exploration,False,27,NONE,False,False,False,1.0,0.07352941176,0.7073170732,1.0,0.5900634231,0.4099365769,0.008422193983,2.417193845e-05
I think that a *huge* effort should be placed in tutorials: the hugest difficulty I am having -- and some colleagues with me -- is that the documentation that you can find is quite lousy and not very self-contained.,Motivation,False,215,NONE,False,False,False,1.0,0.5970149254,0.2871012483,0.75,0.2323183319,0.7676816681,1.0,0.07410076703
"See:

https://github.com/eclipse/openj9/blob/master/runtime/oti/phelpers.m4#L269",Social Conversation,False,82,CONTRIBUTOR,False,False,False,1.0,0.0234375,1.0,0.1055555556,0.02742843734,0.9725715627,0.00130769984,0.001090608783
"- this is when JITServer has just received  the CODE generated and sent by JITClient
- this debug message is to make sure that JITServer received the correct CODE and cloned it correctly.",Investigation and Exploration,True,188,CONTRIBUTOR,False,False,False,0.5593220339,0.1746031746,0.8333333333,0.3142857143,0.3768356435,0.6231643565,0.0999392835,0.03439401659
I guess we kept OneHotEncoder because it's more efficient when it can be used....,Motivation,False,81,MEMBER,False,False,False,1.0,0.234375,0.7352941176,0.5,0.1243761474,0.8756238526,0.002792339292,9.071848224e-05
https://stackoverflow.com/questions/44132307/tf-contrib-data-dataset-repeat-with-shuffle-notice-epoch-end-mixed-epochs,Usage,False,118,NONE,False,False,False,0.07692307692,0.01492537313,0.5922330097,1.0,0.488896746,0.511103254,0.1856733495,0.06171840406
"*         given this, we can probably get away with lowering the threshold, with a comment referencing this issue",Solution Discussion,False,113,MEMBER,False,False,False,0.5,0.2647058824,0.8414634146,0.6153846154,0.6243074007,0.3756925993,0.05176800464,0.02547446062
"From my point of view, that name suggests that it will build some estimators out of the total number requested in the constructor, but not more.",Solution Discussion,False,144,MEMBER,False,False,False,1.0,0.3661971831,0.6630434783,0.1818181818,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
"I am seeing a throughput regression of around 5% when running the AcmeAir MS benchmark, which has 5 different services, in a docker environment with OpenLiberty built on top of adoptopenjdk:8-jre-openj9 (0.26.0)  compared to the same version of Open Liberty running on adoptopenjdk/openjdk8-openj9:jre8u282-b08_openj9-0.24.0.

This has been tricky to debug - if I take this out of the docker env, the regression goes away or is a lot less.",Investigation and Exploration,False,441,NONE,True,True,False,1.0,0.95,0.4,0.009803921569,0.0,1.0,0.0,0.0188118453
https://github.com/eclipse/omr/issues/3927,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.3333333333,0.005747126437,1.0,0.03308823529,0.3066666981,0.6933333019,0.2738098908,1.0
;-),Social Conversation,False,3,NONE,False,False,False,0.02777777778,0.01369863014,0.6659482759,1.0,0.6969145374,0.3030854626,0.0871107993,0.1143443634
Installing using CODE (Tensorflow 1.0) is working for me (translate tutorial).,Solution Discussion,True,78,NONE,False,False,False,1.0,0.01591895803,0.5775577558,1.0,0.1540230276,0.8459769724,0.00832954705,0.001071629999
The system info of the Linux system is:Ubuntu 14.04.5 LTS (GNU/Linux 3.13.0-91-generic x86_64)Python 2.7.6sklearn 0.18numpy 1.11.2scipy 0.13.3,Testing,False,142,NONE,False,False,False,0.5882352941,0.2816901408,0.3625730994,1.0,0.409179596,0.590820404,0.4852296023,0.01767922574
@pshipton  somebody read too much into SED (Stack Execution Disable) for HotSpot.,Social Conversation,False,81,CONTRIBUTOR,False,False,False,0.5652173913,0.07471264368,0.1111111111,0.6433823529,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
Great!,Social Conversation,False,6,MEMBER,False,False,False,0.1428571429,0.02631578947,0.7518248175,0.3333333333,0.004412303027,0.995587697,0.0002779711734,1.589171419e-05
Definitely want to get together on this.,Potential New Issues and Requests,False,40,MEMBER,False,False,False,1.0,0.1842105263,0.7591240876,0.6666666667,0.004412303027,0.995587697,0.0002779711734,1.589171419e-05
However they could all share this binding in common.,Motivation,False,52,MEMBER,False,False,False,0.2727272727,0.1232876712,0.9331896552,0.8888888889,0.9204563137,0.0795436863,0.01198832771,0.1095689952
B)         A distillation of the above discussion into the current recommended workflow?,Solution Discussion,False,88,CONTRIBUTOR,False,False,False,0.5,0.08496732026,0.5434083601,0.6666666667,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
Do we know what the current failure rate of this problem is without any debug or diagnostic options?,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,1.0,0.1956521739,1.0,0.6918238994,0.5915853289,0.4084146711,0.05054425471,0.0007014954103
"Also, given that these are trainable variables, why are they not addded to the trainable_variables collection?",Solution Discussion,False,110,NONE,False,False,False,0.4444444444,0.06153846154,0.5438972163,1.0,0.4918247108,0.5081752892,0.0300603195,0.001170108729
"In this case though, if the class we're trying to remember is the class of the method we're compiling; we would've already remembered it at the start of the compile, or we wouldn't have done the compile to begin with.",Solution Discussion,False,217,CONTRIBUTOR,False,False,False,0.6612903226,0.6612903226,1.0,0.4972677596,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
So:pip install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.0.0-cp34-cp34m-linux_x86_64.whl,Solution Discussion,False,115,NONE,False,False,False,0.1290322581,0.005788712012,0.6237623762,1.0,0.1928580592,0.8071419408,0.04210161464,0.004226002744
Is the match proliferation expected for your use-case?,Potential New Issues and Requests,False,54,MEMBER,False,False,False,1.0,0.09473684211,0.6842105263,1.0,0.1887398302,0.8112601698,4.080282041e-06,4.264436363e-05
Using a Spark map function do_work.,Solution Discussion,False,35,CONTRIBUTOR,False,False,False,0.3333333333,0.03921568627,0.7170418006,0.4285714286,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
"My Windows 10 image does not have anything installed so getting it up to date with GIT, etc will likely take me until tomorrow.",Investigation and Exploration,False,127,CONTRIBUTOR,False,False,False,1.0,0.1751824818,1.0,0.5427509294,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"As SCREEN_NAME  mentioned, I followed the instructions in here  URL  to build Tensorflow from source.",Solution Discussion,False,101,NONE,False,False,False,1.0,0.1417322835,0.6568914956,0.3333333333,0.506545241,0.493454759,0.01499535971,0.001849462207
"I don't think this is going to be ready for the 0.10.0 release, deferring.",Action on Issue,False,74,CONTRIBUTOR,True,False,False,1.0,0.1186440678,1.0,0.9696969697,0.909100277,0.090899723,0.8162361998,0.0003067487503
@gacholio Can there be a race condition which can cause the CODE to be CODE?,Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,0.5555555556,0.1630434783,0.8,0.5660377358,0.5070196757,0.4929803243,0.01749005949,7.94e-05
"yes, but with which testcase, CODE?",Solution Discussion,True,35,CONTRIBUTOR,True,False,False,1.0,0.09677419355,1.0,0.2447257384,0.04791884889,0.9520811511,0.00225193033,0.001569350411
"Ran a 100x grinder:
- Segfault is only seen when CODE is specified.",Testing,True,68,CONTRIBUTOR,False,False,False,0.5652173913,0.1397849462,0.2222222222,0.06177606178,0.07958772392,0.9204122761,0.2864869704,0.001745734514
I'm guessing Gensim would hesitate to depend on spaCy.,Potential New Issues and Requests,False,54,MEMBER,False,False,False,0.375,0.2368421053,0.8102189781,0.5714285714,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
Why was 2234 kill after 10 mins?,Investigation and Exploration,False,32,MEMBER,False,False,False,0.1707317073,0.1044776119,0.2,0.7456647399,0.01724097253,0.9827590275,1.59e-05,1.18e-05
I'll test again today/tomorrow and get back to you.,Social Conversation,False,51,NONE,True,False,False,1.0,0.1612903226,0.1101321586,1.0,0.01414601723,0.9858539828,0.02955774717,0.02003548886
I'd be more sympathetic if this problem occurred during the execution of the JVM.,Social Conversation,False,81,CONTRIBUTOR,True,False,False,1.0,0.2586206897,0.3333333333,0.247706422,0.02084462621,0.9791553738,1.18e-05,4.43e-05
I'm using CODE model with CODE cells.,Bug Reproduction,True,37,NONE,False,False,False,0.7,0.01013024602,0.6600660066,0.6666666667,0.2137099354,0.7862900646,0.04042101496,0.04734857901
Instead I had both openj9-jdk and openj9-jre configured in the workspace.,Investigation and Exploration,False,73,NONE,True,False,False,0.2653061224,0.1313131313,0.2222222222,0.3543859649,0.1194799462,0.8805200538,0.004838964607,0.001815624911
"1. CODE
2. CODE
CODE
3. CODE
CODE
4. One more CODE
CODE",Investigation and Exploration,True,61,NONE,True,False,False,1.0,0.1386861314,1.0,0.5762081784,0.0253648365,0.9746351635,0.0001395560709,8.2e-05
@sguada maybe forth being a bit more descriptive about this.,Contribution and Commitment,False,60,MEMBER,False,False,False,0.3846153846,0.03846153846,0.3640256959,1.0,0.2990721664,0.7009278336,0.004008482248,0.3882282375
>2GB.,Investigation and Exploration,False,4,NONE,True,False,False,0.09090909091,0.01503759398,0.7142857143,0.2671755725,0.2215502762,0.7784497238,0.005021721962,0.0366849359
Here my attempt to translate to small in-memory dataset some of the routines available in the TF's input pipeline for large dataset.,Expected Behaviour,False,132,NONE,False,False,False,0.7666666667,0.3432835821,0.1678224688,0.7428571429,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"So this confirms it is a x86 codegen problem then, or perhaps ILGen.",Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.4482758621,0.0977443609,0.25,0.5954198473,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
"This is confirmed by looking at the javacore
CODE 
CODE

As a side note.",Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,0.5862068966,0.3617021277,0.75,0.5846153846,0.5039948473,0.4960051527,0.005154978519,0.01512432343
A new run with jdk0317 is running.,Task Progress,False,34,NONE,False,False,False,0.4666666667,0.1129032258,0.75,0.8945147679,0.7701023622,0.2298976378,0.1778324879,1.0
@lesteve paula has posted a snippet that also has the same problem.,Investigation and Exploration,False,67,NONE,False,False,False,0.5454545455,0.1237113402,0.7218934911,0.2,0.8504261564,0.1495738436,8.045718754e-06,1.849522015e-05
"You are right, reopening.",Action on Issue,False,25,MEMBER,False,False,False,0.1904761905,0.05633802817,0.5058479532,0.3333333333,0.4532374494,0.5467625506,0.004397699618,0.005172233894
"Tensorflow can be build with different options, so at least a couple of cuda-toolkit builds could be provided this way.",Solution Discussion,False,119,NONE,False,False,False,0.7,0.1653543307,0.9472140762,0.6666666667,0.928984049,0.07101595102,0.001770336874,0.003939258366
"Because as SCREEN_NAME  pointed out above, data processing doesn't really need to happen in the graph.",Solution Discussion,False,102,CONTRIBUTOR,False,False,False,0.5862068966,0.2537313433,0.7947295423,1.0,0.6090336754,0.3909663246,0.000261613555,0.0001603273732
"The test code:

https://github.com/eclipse/openj9/blob/master/runtime/tests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/decomp003.c
https://github.com/eclipse/openj9/blob/master/test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/decomp003.java",Testing,False,288,CONTRIBUTOR,False,False,False,1.0,0.109375,1.0,0.6808510638,0.9481963512,0.05180364876,0.005275128993,0.001656592469
"I've seen some discussions on the Adopt Slack channels, so hopefully things will get unblocked fairly soon.",Social Conversation,False,107,CONTRIBUTOR,False,False,False,1.0,0.2686567164,1.0,0.9720670391,0.9298292948,0.07017070524,0.3605162089,0.1542127927
"But it seems like you could split estimators into two classes: those that freeze parameters once they are fit (ensembles, DTs), and those that don't (linear models).",Solution Discussion,False,165,CONTRIBUTOR,True,False,False,0.9310344828,0.3802816901,0.7753623188,0.25,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
"I added the elapsed time for each of the ten runs (two sequential executions of five concurrent runs)

- Before
  - Accumulated run-time:  7701s
  - Total time spent in compile threads:  2403s

- After
  - Accumulated run-time:  68564s
  - Total time spent in compile threads:  53519s

So there’s roughly 10000s difference unaccounted for there in total.",Investigation and Exploration,False,364,MEMBER,False,False,False,1.0,0.9552238806,1.0,0.8034682081,0.018058256,0.981941744,0.0008600782261,0.001167361543
which will sort items by chunk of 10000 (similar to CODE) using the given comparison function.,Expected Behaviour,True,94,CONTRIBUTOR,False,False,False,0.7272727273,0.2388059701,0.7642163662,1.0,0.5836373245,0.4163626755,0.004980837062,0.00636830506
"Yes there are corpora for that: Lassy-Klein, Lassy-Groot, and SoNaR.",Solution Discussion,False,68,NONE,False,False,False,0.8571428571,0.2,0.4913793103,0.125,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
I can understand being hesitant about adding another instance method.,Solution Discussion,False,69,CONTRIBUTOR,True,False,False,0.3125,0.1408450704,0.08333333333,0.4545454545,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
"I have a few questions in order to better understand the hang.
- Can you confirm if the hang happens only when CODE is raised a few 100 times? 
- Does CODE terminate the JVM correctly when CODE is not raised?
- Can you generate **core files after the JVM hangs**, and provide them to us for diagnosing the hang? CODE (CODE) will generate a CODE, CODE and few other files before terminating the JVM.",Social Conversation,True,401,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.09039548023,0.00183020417,0.9981697958,0.001144827456,0.0001509806852
The serialiser backs off to a character codec for OOV words.,Solution Discussion,False,60,MEMBER,False,False,False,1.0,0.1774193548,0.7400881057,1.0,0.294567888,0.705432112,8.318051723e-06,1.641129124e-05
My apologies if I'm simply repeating what has already been said.,Social Conversation,False,64,CONTRIBUTOR,True,False,False,0.3793103448,0.1549295775,0.7717391304,0.125,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
It's a good question.,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.2222222222,0.0625,0.3333333333,0.5957446809,0.8761337515,0.1238662485,0.1571286372,0.171061806
We need to acquire vmaccess to read the globalreference's content.,Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.7692307692,0.05291005291,1.0,0.6742857143,0.4481962023,0.5518037977,0.0003017200526,0.0006369645556
This issue is stemming from an instruction call srawi which only shifts the lower 32 bits.,Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,1.0,0.3404255319,0.6666666667,0.6038461538,0.5067550661,0.4932449339,0.01512432343,0.04264807325
so we agree: the models will be different unless n_iter is big enough and the schedule is just right - which are unlikely in practice.,Solution Discussion,False,134,MEMBER,False,False,False,1.0,0.338028169,0.5942028986,0.5,0.04339026336,0.9566097366,0.0001494961139,0.002306767149
"Also worth noting that in https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-984786749, CODE wasn't compiled, so I don't know if the decompile circumstance applies there.",Solution Discussion,True,186,CONTRIBUTOR,False,False,False,1.0,0.2043010753,0.3333333333,0.6525096525,0.5540805477,0.4459194523,0.001219776039,0.002831223282
"Hmm, actually, looks like there were a small amount of Liberty errors in this code path when the problem originally happened, but this has been fixed in 21.0.0.11  URL , and I still see this issue there with scratchSpaceLimit=125000, although it seems to be better without that option.",Investigation and Exploration,False,285,NONE,True,False,False,1.0,0.6,0.5,0.4509803922,0.5115354209,0.4884645791,0.08681141034,0.007489941643
Or would you like to have another interface using CODE or CODE?,Solution Discussion,True,63,MEMBER,False,False,False,0.6666666667,0.1690140845,0.6304347826,1.0,0.06495783385,0.9350421661,0.02110253454,0.000167358443
Basically I feel your proposal just solves a very special case and leaves most cases unsolved.,Solution Discussion,False,94,MEMBER,False,False,False,0.6956521739,0.2253521127,0.9057971014,1.0,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
I've written down what I could,Social Conversation,False,30,CONTRIBUTOR,True,False,False,0.2916666667,0.109375,0.3333333333,0.04255319149,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
"To determine test passed or failed, we use shell to check the return code of the test command: https://github.com/AdoptOpenJDK/TKG/blob/master/settings.mk#L198",Investigation and Exploration,False,159,CONTRIBUTOR,False,False,False,1.0,0.3275862069,1.0,0.7798165138,0.9961777994,0.003822200553,0.0128898379,0.003909680331
I will be using the new JMeter script/build shortly.,Task Progress,False,52,CONTRIBUTOR,False,False,False,0.4761904762,0.125,0.3333333333,0.6225490196,0.8717852336,0.1282147664,0.2743165754,0.001670230889
So it basically starts up... does nothing... then shuts down.,Investigation and Exploration,False,61,NONE,True,False,False,0.5555555556,0.101010101,0.5,0.2,0.1140182149,0.8859817851,0.003967626759,0.002853124861
@bowu Same error here.,Bug Reproduction,False,22,CONTRIBUTOR,False,False,False,0.4444444444,0.005788712012,0.4059405941,0.5,0.08287024378,0.9171297562,0.002776317914,5.446552647e-05
"Debugging message and output
CODE
The uintptrj_t* address received from JITServer looks wrong, and its content is bogus. 
CODE",Observed Bug Behaviour,True,129,CONTRIBUTOR,False,False,False,1.0,0.1164021164,0.5,0.3257142857,0.3939701035,0.6060298965,0.03439401659,0.005060536466
There seems to be something different between CODE and CODE that I don't understand.,Solution Discussion,True,84,CONTRIBUTOR,False,False,False,1.0,0.09150326797,0.3536977492,0.6666666667,0.01909367945,0.9809063205,0.00111366228,0.004499495513
"tried to take code in the kernel tests and retrofit the beam search with the legacy seq2seq, but it was challenging...",Solution Discussion,False,118,NONE,False,False,False,1.0,0.03039073806,0.8712871287,1.0,0.2925639875,0.7074360125,5.387222008e-05,7.23833794e-05
"If you call the C code directly, you need to set up r12.",Solution Discussion,False,56,CONTRIBUTOR,False,False,False,0.8125,0.1015625,1.0,0.2,0.02868513082,0.9713148692,5.3e-05,6.94e-05
Now I can stop writing my own (horrible) dataset class.,Motivation,False,55,NONE,False,False,False,0.1639344262,0.1492537313,0.0721220527,0.1428571429,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
We have'nt done any experimenting with balanced GC to say if/how much it helps but I'd like to think that we need to stop treating balanced as a second class citizen if it's not a huge amount of extra work.,Solution Discussion,False,206,CONTRIBUTOR,False,False,False,1.0,0.2876712329,1.0,0.06145251397,0.00941579025,0.9905842098,0.0003297943533,0.00113422951
@EricYangIBM can you try this test again with Nazims work around in https://github.com/eclipse/omr/pull/6255,Contribution and Commitment,False,108,CONTRIBUTOR,False,False,False,1.0,0.1397849462,1.0,0.03861003861,0.008699622378,0.9913003776,0.000637864534,0.007094844115
So it seems that openblas is not the cause of this freeze.,Investigation and Exploration,False,58,NONE,False,False,False,0.5,0.1237113402,0.8017751479,0.8333333333,0.850540769,0.149459231,7.813286879e-05,0.005705487359
Thanks a ton!,Social Conversation,False,13,NONE,False,False,False,0.07142857143,0.004341534009,0.2376237624,1.0,0.06606207042,0.9339379296,0.04899488558,0.0006557222206
Thanks for the very detailed investigation and the summary.,Social Conversation,False,59,CONTRIBUTOR,False,False,False,0.3214285714,0.1914893617,0.1666666667,0.8384615385,0.7208851506,0.2791148494,0.1217072968,0.03144222045
It became clear that the failure was only seen in runs where OSR was induced from CODE.,Investigation and Exploration,True,87,MEMBER,False,False,False,0.3035714286,0.1847826087,0.25,0.8364779874,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.008620689655,1.0,7.673869571e-05,0.9999232613,0.0009160332375,0.00104373345
I assume that the CPU version of 1.0.0 should function as expected?,Solution Discussion,False,67,NONE,False,False,False,0.5714285714,0.01736613603,0.7260726073,0.6,0.2668032658,0.7331967342,0.00251122862,0.02402499291
Sorry to get your hopes up guys :(.,Social Conversation,False,35,NONE,True,False,False,0.1666666667,0.1194029851,1.0,0.6927374302,0.1129717723,0.8870282277,0.002111653916,4.74e-05
The inference happens with the function MyModel.,Usage,False,48,NONE,False,False,False,0.2692307692,0.02692307692,0.2055674518,0.375,0.2234305404,0.7765694596,0.0068527403,0.007193130032
I also thought about that ;),Social Conversation,False,28,MEMBER,False,False,False,0.5,0.08450704225,0.1811594203,0.5,0.03926780009,0.9607321999,0.000142372238,0.0001259136283
"**The Fix**

As discussed within the CODE compiled method, this issue stems from an instruction call CODE.",Solution Discussion,True,108,CONTRIBUTOR,False,False,False,0.5806451613,0.3829787234,0.8518518519,0.8192307692,0.6986733294,0.3013266706,0.2919761514,0.1217072968
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4892241379,1.0,0.5907768033,0.4092231967,0.01978932785,0.0008416705489
"@keithc-ca 

Although it makes no sense that GDB doesn't work.",Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.75,0.2553191489,0.6666666667,0.1961538462,0.1090281199,0.8909718801,0.009663080221,0.009602972199
**update** so the error going away didn't have anything to do with CODE.,Investigation and Exploration,True,72,NONE,False,False,False,0.4333333333,0.1368421053,0.4315789474,0.5555555556,0.1598964447,0.8401035553,0.03116866066,0.03531242178
"Pending stack starting at 0x0000000000321568 for UDATA(0x0000000000000001) slots
<22dc00>",Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,0.3846153846,0.1075268817,0.5,0.5366795367,0.5370601617,0.4629398383,0.0003133369641,0.001592796234
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4956896552,1.0,0.5949198688,0.4050801312,0.05582181283,0.001516025049
The code ran fine.,Observed Bug Behaviour,False,18,NONE,False,False,False,0.1428571429,0.0412371134,0.650887574,0.1818181818,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
Comparing by integer value is pretty important.,Investigation and Exploration,False,47,MEMBER,False,False,False,0.175,0.1129032258,0.3039647577,0.2222222222,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
And a quick sample to show how it's used together with deeplearnjs:CODE,Potential New Issues and Requests,True,71,NONE,False,False,False,0.325,0.1780821918,0.8728448276,1.0,0.8361159731,0.1638840269,0.08097676277,0.003132528254
"I used
CODE
to generate a stack trace every time an exception of type CODE is caught.",Investigation and Exploration,True,87,CONTRIBUTOR,False,False,False,1.0,0.2375,0.25,0.5490196078,0.5913809345,0.4086190655,0.00531516184,0.0004306064011
"At a glance, the hooks are definitely invoked before any memory segments are freed, but the GC team will need to confirm this is always true.",Investigation and Exploration,False,141,CONTRIBUTOR,False,False,False,1.0,0.2857142857,1.0,0.8636363636,0.8685452129,0.1314547871,0.007180628786,0.001098431308
"Ok, so the base estimators would be different.",Solution Discussion,False,46,MEMBER,False,False,False,0.6153846154,0.1126760563,0.9673913043,0.5,0.07880236017,0.9211976398,7.923995895e-05,1.0
"I think I am in favor of option 2: reuse CODE class, deprecate the weird attributes and add a constructor parameter to select the behavior with a future warning that says that the default behavior will change but makes it easy to silence that warning just by passing a value for that option.",Solution Discussion,True,291,MEMBER,False,False,False,1.0,0.828125,0.09558823529,1.0,0.0001767079666,0.999823292,0.0007774126438,0.002483571005
"@ogrisel I installed the CODE package, which uses version 1.12.1 and used branch CODE for CODE.",Bug Reproduction,True,95,CONTRIBUTOR,False,False,False,1.0,0.2352941176,0.06504065041,0.5,0.07637118021,0.9236288198,0.02842550899,0.004140653057
"https://unbscholar.lib.unb.ca/islandora/object/unbscholar%3A8100/datastream/PDF/view
https://ieeexplore.ieee.org/document/8121911

Since a shared cache can be used to run more than one application, which may have different heap requirements, the hint should be associated with an application, or at least a main class.",Motivation,False,321,CONTRIBUTOR,True,True,False,1.0,0.2534246575,0.5714285714,0.02234636872,0.0,1.0,0.0,5.94e-06
This thread has been automatically locked since there has not been any recent activity after it was closed.,Action on Issue,False,107,NONE,False,False,True,18.0,0.3,0.9913793103,1.0,1.0,0.0,0.9680205697,0.0
So far it looks like using Spacy pipe without Spark is the fastest option to do the job.,Solution Discussion,False,88,CONTRIBUTOR,False,False,False,1.0,0.1176470588,0.8392282958,0.875,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2995689655,1.0,0.3203791347,0.6796208653,0.2341900166,0.1377274453
I think I set the option correctly.,Investigation and Exploration,False,35,NONE,True,False,False,0.2121212121,0.07070707071,0.2857142857,0.5929824561,0.2060019578,0.7939980422,0.0001864257721,0.003392138506
"The default decay is 0.999, for small datasets such like MNIST, you can choose 0.99 or 0.95, and it warms up in a short time.",Usage,False,125,CONTRIBUTOR,False,False,False,0.641025641,0.09615384615,0.6038543897,1.0,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
I think storing the entire command line should be the first approach.,Solution Discussion,False,69,CONTRIBUTOR,True,False,False,0.4615384615,0.08219178082,0.6363636364,0.2290502793,0.01440399469,0.9855960053,0.001770078156,0.04266521959
You can cherry-pick 6c99d797 if you wish.,Action on Issue,False,41,MEMBER,False,False,False,1.0,0.1176470588,0.9959349593,1.0,0.9921188768,0.007881123162,1.795629714e-05,0.02330589243
@shahen94 we all saw that but still...,Social Conversation,False,38,NONE,False,False,False,1.0,0.09589041096,0.6918103448,0.5,0.705174974,0.294825026,2.810732572e-05,0.0003645099643
"yes, but with which testcase, multiheap:24,buckets?",Solution Discussion,False,51,CONTRIBUTOR,False,False,False,0.5,0.09677419355,0.5,0.2489451477,0.04814672529,0.9518532747,0.001569350411,7.29e-05
"Assumptions:
-> CODE can not happen at the same time as CODE, since CODE occurs ONLY during STW.",Investigation and Exploration,True,97,CONTRIBUTOR,False,False,False,1.0,0.1978021978,0.8571428571,0.3111888112,0.6101453274,0.3898546726,0.05114946292,0.001708499748
so no solution yet?,Task Progress,False,19,NONE,False,False,False,1.0,0.03149606299,0.5395894428,1.0,0.4117379571,0.5882620429,0.04783163312,0.002720580351
"(See https://github.com/eclipse/openj9/issues/8652#issuecomment-622437805).

The J9Method table, as well as the DLTRecordTable are only cleaned during the classloader unloading, and anonclasses unloading phases.",Investigation and Exploration,False,213,CONTRIBUTOR,False,False,False,0.7586206897,0.2417582418,0.4,0.513986014,0.8539779528,0.1460220472,0.001070700924,0.001618376001
"In light of @charliegracie's results, the one difference I see in the options he used is that CODE was also specified.",Investigation and Exploration,True,118,CONTRIBUTOR,False,False,False,0.875,0.1532846715,0.25,0.3345724907,0.02006648971,0.9799335103,0.0002232068908,8.9e-05
"Likely there will be something that changes the command line all the time, but otherwise there probably aren't that many variations.",Solution Discussion,False,132,CONTRIBUTOR,True,False,False,1.0,0.1438356164,1.0,0.6983240223,0.2631528405,0.7368471595,0.0001740403081,4.81e-05
It works like magic.,Solution Discussion,False,20,NONE,False,False,False,1.0,0.03149606299,0.7917888563,1.0,0.6665903473,0.3334096527,0.07077280307,0.2453262441
This issue continues to be worked in the master branch to get to the root cause of the problem.,Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.7916666667,0.3064516129,0.2,0.5628415301,0.6994168402,0.3005831598,0.04797128298,0.008864014105
Can you provide me the instructions to reproduce the hang?,Bug Reproduction,False,58,CONTRIBUTOR,False,False,False,0.3125,0.1333333333,0.75,0.2485875706,0.003598175951,0.996401824,0.0004813876919,5.86e-05
**Jupyer notebook:**CODE>> CODE,Bug Reproduction,True,31,NONE,False,False,False,0.1666666667,0.04225352113,0.8333333333,0.8,0.6456610805,0.3543389195,1.0,4.677373331e-05
What is the correct way to change this flag?,Usage,False,44,NONE,False,False,False,0.6428571429,0.03461538462,0.0278372591,0.6666666667,0.1735156386,0.8264843614,0.02257012206,4.717771256e-05
But with that switch enabled next releases will work properly on Windows,Task Progress,False,72,CONTRIBUTOR,False,False,False,0.4444444444,0.07843137255,0.8971061093,0.5454545455,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"https://ci.eclipse.org/openj9/job/Build_JDK15_ppc64_aix_Nightly/118
CODE",Testing,True,73,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.3278688525,0.6366922985,0.3633077015,0.056196,0.00328449111
I'm not keen on that sort of 'hackery'.,Social Conversation,False,39,NONE,True,False,False,0.1904761905,0.08080808081,0.6,0.9192982456,0.9035334291,0.09646657091,0.002703173696,0.005495507544
@andrewcraik mentioned about future work that will attempt to reduce compilation time.,Social Conversation,False,86,CONTRIBUTOR,False,False,False,0.4,0.1791044776,0.75,0.9710982659,0.02015809145,0.9798419085,2.11e-05,0.0001604948466
Thanks.,Social Conversation,False,7,MEMBER,False,False,False,0.05555555556,0.01470588235,0.1585365854,1.0,0.2782444475,0.7217555525,0.01003549822,0.0003149258267
GAC comment to me:  JIT-ed code should call the wrapper as we did always.,Solution Discussion,False,73,CONTRIBUTOR,False,False,False,1.0,0.125,0.5,0.1944444444,0.02868513082,0.9713148692,5.3e-05,6.94e-05
"CODE
^ both directly dereferenced CODE on JITServer.",Investigation and Exploration,True,53,CONTRIBUTOR,False,False,False,1.0,0.04232804233,0.3333333333,0.4342857143,0.4140530572,0.5859469428,0.0007909286976,0.001985392445
Is the file system shared between the driver and all children?,Solution Discussion,False,62,MEMBER,False,False,False,1.0,0.07189542484,0.2765273312,1.0,0.007984246554,0.9920157534,0.003579172558,0.0004078869671
The above discussion is overly complicated (also because I was still not fully understanding the current complex behaviour of OneHotEncoder ... :-)),Social Conversation,False,148,CONTRIBUTOR,True,False,False,1.0,0.328125,0.5477941176,1.0,0.122433192,0.877566808,7.729377411e-06,3.70196497e-05
OSX El Capitan Python 3.5.1scikit-learn==0.17.1scipy==0.17.1,Bug Reproduction,False,60,NONE,False,False,False,1.0,0.08450704225,0.08479532164,1.0,0.1107881706,0.8892118294,0.07295885932,0.0628243198
"With @tajila's suggestion of logging verbose output to trace buffer, the trace log showed that the bytecode frame in DDR of CODE is actually a decompiled frame from JIT.
CODE
after the decompiled finished, VM detected the invalid receiverSlot during first method dispatch via CODE
VM debug output 
CODE

This suggest that either the OSRBuffer data used to reconstruct the interpreter frame is invalid or transition from JIT to interpreter have overwritten the correct value on stack.",Investigation and Exploration,True,489,CONTRIBUTOR,False,False,False,1.0,0.8913043478,0.3333333333,0.6603773585,0.5726999115,0.4273000885,0.04419068659,0.007881921876
Can you try removing just the enableOSROnGuardFailure from this option list to see if the test still fails?,Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,0.5142857143,0.1935483871,0.2,0.4594594595,0.5337820175,0.4662179825,0.002331376221,0.004039808715
"I went to confirm with AIX kernel folks:  what signal is mapped to, when executing from non-executable memory?",Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,0.4166666667,0.1149425287,0.1,0.4889705882,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
It seems the CODE option is not available for some(?) Visual Studio express editions.,Solution Discussion,True,85,CONTRIBUTOR,False,False,False,0.6086956522,0.09150326797,0.9356913183,0.25,0.201368343,0.798631657,0.00591569739,0.00137409764
(outside module) caller sets r12 to the callee global entry ... (shared lib) loader relocates TOC base out of it.,Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,1.0,0.1484375,1.0,0.3888888889,0.03699803832,0.9630019617,6.66e-06,2e-05
AFAICT the issue still happens with the fix.,Solution Discussion,False,44,NONE,True,False,False,0.1568627451,0.07692307692,0.5,0.3093922652,0.1316131138,0.8683868862,0.0326248414,0.0007086181756
Now for the fun part.,Social Conversation,False,21,MEMBER,False,False,False,0.1515151515,0.06849315068,0.9137931034,0.3888888889,0.9204563137,0.0795436863,0.01198832771,0.1095689952
@andrewcraik @mpirvu Is this a stop ship issue?,Social Conversation,False,47,MEMBER,False,False,False,0.5333333333,0.1194029851,0.5,0.8439306358,0.0191742634,0.9808257366,2.78e-05,1.04e-05
"All in all, I cannot reproduce the behavior from this issue, and I may have to provide some instrumented builds.",Bug Reproduction,False,112,CONTRIBUTOR,False,False,False,0.75,0.2625,1.0,0.3235294118,0.2326748385,0.7673251615,0.004429301533,0.02640472652
As a part of operation it calls CODE in VM in CODE.,Investigation and Exploration,True,51,CONTRIBUTOR,False,False,False,0.5454545455,0.1318681319,0.5,0.04545454545,0.003804455496,0.9961955445,0.005933531811,0.005236420778
I'm still not sure what you're suggesting is the practical difference due to inferring categories from the max value.,Motivation,False,117,MEMBER,False,False,False,1.0,0.296875,0.1985294118,1.0,0.005561168928,0.9944388311,0.01559625638,0.01132191067
cells=[]for _ in range(15):cell = create_lstm_cell(config)cells.append(cell)lsmt_layers = rnn.MultiRNNCell(cells),Solution Discussion,False,113,NONE,False,False,False,1.0,0.008683068017,0.5214521452,0.5,0.1263831775,0.8736168225,0.09927558477,0.002197250879
"Ok, just for the sake of doing a second sanity, and also to get a sense of how much perf could improve, could you do the following:

CODE",Investigation and Exploration,True,139,CONTRIBUTOR,False,False,False,1.0,0.2116788321,1.0,0.1115241636,0.001080333738,0.9989196663,0.0001345867153,0.0001051846944
Looks like the TensorFlow team is making this a top priority now: https://js.tensorflow.org/faq/,Social Conversation,False,96,NONE,False,False,False,1.0,0.1780821918,0.9396551724,1.0,0.9265456688,0.0734543312,0.1095689952,0.01124093843
"However, I found that reusing 4 layers works.",Usage,False,45,NONE,False,False,False,0.8,0.03076923077,0.7815845824,1.0,0.6228922805,0.3771077195,0.007914289561,0.0008174426453
Maybe it is worth doing a run inside container with CODE with the SCC still enabled with both builds to see how that affects the delta that is observed.,Investigation and Exploration,True,152,CONTRIBUTOR,False,False,False,1.0,0.3625,1.0,0.1519607843,0.1128191359,0.8871808641,0.07376273152,0.02076334771
@brando90 I had a small error in my version which was fixed by nmhkahn (changing CODE to CODE),Usage,True,94,NONE,False,False,False,0.9473684211,0.06923076923,0.1563169165,0.25,0.2177340353,0.7822659647,0.0001386923292,0.0001955084991
Further note and caution to those looking here..,Social Conversation,False,48,NONE,False,False,False,0.2571428571,0.07086614173,0.4105571848,0.1428571429,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
"Whenever it said cuda 9.0 I changed to 9.1, and cudnn 7.0 I put 7.1.2.",Solution Discussion,False,70,NONE,False,False,False,0.8333333333,0.1181102362,0.6598240469,0.6666666667,0.506545241,0.493454759,0.01499535971,0.001849462207
what limitation are you referring to?,Investigation and Exploration,False,37,NONE,False,False,False,0.2727272727,0.0618556701,0.5177514793,0.5,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
Was wondering if spacy gives a direct method to find similarity between 2 sentences?,Potential New Issues and Requests,False,84,NONE,False,False,False,1.0,0.3684210526,0.9781021898,0.8,0.2224968185,0.7775031815,0.2540453279,1.0
"I had cuda 9.1, and tensorflow would not find libraries for cuda 9.0.",Bug Reproduction,False,69,NONE,False,False,False,0.9285714286,0.1023622047,0.7419354839,0.5,0.5399330381,0.4600669619,0.1028511002,0.2627005402
"So while GPU calculates ops on some data, CPU is already loading the next data into memory.",Solution Discussion,False,91,NONE,False,False,False,0.4594594595,0.2537313433,0.3356449376,0.5555555556,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
"-         constructor: CODE (optional), CODE (>=0), a list CODE of fitted estimators (optional).",Solution Discussion,True,96,MEMBER,False,False,False,0.4333333333,0.1830985915,0.8405797101,0.5454545455,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"could you try using conda packages without mkl, i.e. something like CODE so we can see whether that is a MKL vs openblas thing?",Investigation and Exploration,True,127,MEMBER,False,False,False,0.8,0.338028169,0.3801169591,0.5,0.4149662283,0.5850337717,0.0004752100597,0.0002007949321
"Just before my third batch of JMeter load finished, it started to show errors.",Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.5185185185,0.175,0.25,0.7058823529,0.8886091519,0.1113908481,0.05954547102,0.2271166044
"Hey guys, good news!",Social Conversation,False,20,NONE,True,False,False,0.1428571429,0.05970149254,0.25,0.5810055866,0.1112819629,0.8887180371,0.2689971282,0.0008696566537
https://github.com/eclipse/openj9/blob/1c80abff8e9b63a6d8ad6ef224d3bb893e33a842/test/functional/cmdline_options_tester/src/MainTester.java#L111,Testing,False,143,CONTRIBUTOR,True,False,False,0.05555555556,0.01724137931,0.5,0.3211009174,0.02088409074,0.9791159093,0.0001834423374,0.001257628253
I changed the function in seq2seq.py file in the tensorflow release.,Solution Discussion,False,68,NONE,False,False,False,1.0,0.01591895803,0.8118811881,0.5,0.2900238703,0.7099761297,4.604057575e-05,0.0009023003557
"Although is_traning can a placeholder reuse has to be a bool, and it cannot be a tensor nor a placeholder.",Solution Discussion,False,106,MEMBER,False,False,False,1.0,0.08076923077,0.6659528908,0.2,0.5709329897,0.4290670103,0.001836887066,0.003906111685
"can we just make it so that during deprecation, categories must be setexplicitly, and legacy mode with warnings is otherwise in effect?",Solution Discussion,False,135,MEMBER,False,False,False,1.0,0.34375,0.3272058824,0.5,0.0132023321,0.9867976679,0.0002831392988,0.1378318852
The problem related to CODE can be avoided by adding that type to CODE.,Solution Discussion,True,71,CONTRIBUTOR,False,False,False,0.6086956522,0.1186440678,0.4,0.6363636364,0.5222439948,0.4777560052,0.01501286261,0.003822899709
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR/173
osx1011-x86-1
CODE",Testing,True,108,CONTRIBUTOR,True,True,False,1.0,0.1206896552,1.0,0.01834862385,0.0,1.0,0.0,0.005144640352
"Edit: I think it's just the parallelization, that's not done by CODE, but instead calling the parser from different threads.",Potential New Issues and Requests,True,124,CONTRIBUTOR,False,False,False,1.0,0.2105263158,0.9684210526,0.6666666667,0.5341997205,0.4658002795,0.165555169,1.0
"@andrew-m-leonard You mentioned the test also failed on xlinux, could you provide the link to the x86 failure?",Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.4255319149,1.0,0.04230769231,0.002426944834,0.9975730552,0.0001574257737,0.005864825644
Should we try to build debug version?,Investigation and Exploration,False,37,CONTRIBUTOR,False,False,False,0.4375,0.04022988506,0.25,0.4742647059,0.766321062,0.233678938,5.75e-05,6.23e-05
"2. Lockhash Table failed:
https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/shared_common/Manager.cpp#L414-L418

   It returns false after failed ON MONITOR_ENTER_RETRY_TIMES (10) attempts.",Investigation and Exploration,False,230,CONTRIBUTOR,False,False,False,0.8421052632,0.2580645161,0.6666666667,0.8469945355,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
Working on docs for this here: http://spacy.io/tutorials/add-a-language/,Task Progress,False,72,MEMBER,False,False,False,1.0,0.1166666667,0.3189655172,1.0,0.1914006454,0.8085993546,0.1046411372,0.01700768191
**Running the test as-is on a system with ample resources**,Testing,False,59,CONTRIBUTOR,False,False,False,0.2972972973,0.2340425532,0.5,0.45,0.3704340031,0.6295659969,0.007316005049,0.001912007579
"Did not check inside Eclipse earlier, but I did just now and can't find them there either.",Task Progress,False,90,NONE,True,False,False,1.0,0.1717171717,1.0,0.09473684211,0.1006211919,0.8993788081,0.001150976506,0.0136252923
"I checked before the direct call to getInstanceOf, at the beginning of getInstanceOf execution and right before the segmentation.",Investigation and Exploration,False,129,CONTRIBUTOR,True,False,False,0.2405063291,0.1484375,0.7142857143,0.2611111111,0.03198961031,0.9680103897,0.001540680846,0.006548591463
"I'm on AIX 7.1 
On another 7.1 machine, which must have libc++.a I just get the same core dump.",Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,1.0,0.1149425287,1.0,0.7867647059,0.773286498,0.226713502,2.15e-05,2.22e-05
"I feel like maybe there should be a concrete example of how to do a batch norm with a fully connected net, as well as with CNNs.",Usage,False,128,NONE,False,False,False,1.0,0.1038461538,0.73875803,0.5,0.6158890256,0.3841109744,0.00136237059,0.002840605583
@abrahamrhoffman that's rude.,Social Conversation,False,29,NONE,False,False,False,0.3,0.02362204724,0.5513196481,0.3333333333,0.4120996726,0.5879003274,0.001728185996,0.2379527984
Things get worse if one need custom stuff and on-the-fly generation/modification of data.,Solution Discussion,False,89,NONE,False,False,False,0.5161290323,0.2388059701,0.3550624133,0.1818181818,0.2978770854,0.7021229146,0.001143668596,0.01002173327
Would be glad to lend a hand...,Contribution and Commitment,False,31,NONE,False,False,False,0.4666666667,0.1166666667,0.03448275862,1.0,0.002853904604,0.9971460954,0.01391101632,0.05217402879
"I am pretty sure I've never had to tweak that parameter, but it might be a side effect of the distributed setting.",Solution Discussion,False,114,MEMBER,False,False,False,0.7666666667,0.08846153846,0.460385439,1.0,0.3808921239,0.6191078761,0.003059753667,0.001631435738
The issue seems to be the j9method* is not valid.,Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,0.1754385965,0.1098901099,0.5714285714,0.8496503497,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
"You could try the [HashingVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html#sklearn.feature_extraction.text.HashingVectorizer) in sklearn, though I had issues with that too.",Solution Discussion,False,239,NONE,False,False,False,1.0,0.137254902,0.6302250804,1.0,0.1671416964,0.8328583036,7.983490974e-07,0.0004388490277
I looked at the verbose logs on Windows and there are some pretty large compilation times.,Investigation and Exploration,False,90,CONTRIBUTOR,False,False,False,1.0,0.2388059701,0.5,0.3699421965,0.005172043892,0.9948279561,1.17e-05,6.8e-06
Let me know what we should be aiming for and I can run more tests.,Social Conversation,False,66,CONTRIBUTOR,True,False,False,1.0,0.2419354839,1.0,0.3544303797,0.2943155004,0.7056844996,0.005090179308,6.42e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.161637931,1.0,0.04426997423,0.9557300258,0.001794442496,0.002504650435
It seems to be a newish assert failure.,Observed Bug Behaviour,False,39,MEMBER,False,False,False,0.7272727273,0.1290322581,0.6666666667,0.02732240437,0.0008061774606,0.9991938225,0.0009414561275,0.0002387130853
The reason the JIT acquired VMAccess is because it needs to know that the class hierarchy did not change during a compilation.,Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,0.4230769231,0.2417582418,0.5384615385,0.7972027972,0.86612727,0.13387273,0.03684751755,0.005897328255
Will check the macro...,Task Progress,False,23,CONTRIBUTOR,False,False,False,0.2666666667,0.02298850575,1.0,0.1911764706,0.7325733414,0.2674266586,7.65e-05,0.004173448668
we need to make sure we mark the throw map as requiring the BCI to match for merging then to make sure both sides show the right bytecode info if I read this right...,Solution Discussion,False,166,CONTRIBUTOR,False,False,False,1.0,0.53125,1.0,0.6666666667,0.9470042652,0.0529957348,0.007145708007,0.001327197449
Actually deprecating the max-value based categorization would certainly make the implementation (after deprecation) simpler.,Solution Discussion,False,124,CONTRIBUTOR,True,False,False,0.5172413793,0.234375,0.2242647059,0.875,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
Removing the blocker label and moving this issue to the next milestone as a reminder for any future work.,Action on Issue,False,105,CONTRIBUTOR,True,False,False,1.0,0.2835820896,1.0,0.9884393064,0.02030795726,0.9796920427,0.0001604948466,0.0491754647
I'll do the same with the test Filip mentioned [above](https://github.com/eclipse/openj9/issues/7178#issuecomment-535654690).,Task Progress,False,125,MEMBER,False,False,False,0.325,0.1940298507,1.0,0.4682080925,0.005379451493,0.9946205485,4.18e-05,0.0008238462571
This was mostly an issue where the GPU would get the data from the CPU.,Motivation,False,71,CONTRIBUTOR,False,False,False,0.6,0.223880597,0.09292649098,0.5,0.003166427653,0.9968335723,0.02236439613,0.004893293226
"So, I did some runs with this as the base, and it looks like the regression is gone.",Solution Discussion,False,84,NONE,True,False,False,0.75,0.225,0.5,0.3578431373,0.2983841117,0.7016158883,0.3746116206,0.0007771213165
I know sklearn.grid_search is depricated..,Investigation and Exploration,False,42,NONE,False,False,False,0.3333333333,0.0618556701,0.4704142012,0.5,0.8484897144,0.1515102856,2.737530974e-05,1.942892084e-05
"This build won't have DDR support so test failures are expected, but we can see if anything else fails.",Solution Discussion,False,103,CONTRIBUTOR,False,False,False,0.7916666667,0.1091954023,1.0,0.9264705882,0.7942021981,0.2057978019,0.006755954606,0.002545177611
Thanks Mark - did the hang happen in that last run that you provided logs for?,Social Conversation,False,78,CONTRIBUTOR,False,False,False,1.0,0.223880597,1.0,0.4748603352,0.005084980712,0.9949150193,0.0006257390789,0.0002266795837
The potential for impact in solving this issue is huge.,Motivation,False,55,MEMBER,False,False,False,0.2857142857,0.1369863014,0.5840517241,0.2222222222,0.6506314731,0.3493685269,0.01305197974,0.05278600034
"did you use CODEif __name__ == ""__main__""CODE?",Observed Bug Behaviour,True,46,MEMBER,False,False,False,0.8571428571,0.0618556701,0.9230769231,1.0,0.9967708885,0.003229111537,0.001411219069,0.007211566446
"I read the FAQ entry you refer to about ""Accelerate"".. its not much help for me.",Investigation and Exploration,False,80,NONE,False,False,False,1.0,0.175257732,0.600591716,0.4285714286,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
"In fact, there's been an example [1] where the third time it returns NULL again.",Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.306122449,0.2419354839,0.3333333333,0.6338797814,0.8310912867,0.1689087133,0.008832756273,0.001165656648
"I see where you have ways to generate feed_fns from dataframes for estimators, but it seems more like an adapter to another approach, instead of part of the pipeline design.",Solution Discussion,False,173,NONE,False,False,False,1.0,0.447761194,0.4535367545,0.6666666667,0.402192445,0.597807555,0.001827732055,0.008699923145
"@brando90 SCREEN_NAME  he's code works good, but have to change like below CODE",Usage,True,79,NONE,False,False,False,0.6666666667,0.05384615385,0.09850107066,0.3333333333,0.2055898638,0.7944101362,0.009973469892,0.06906725807
"I think openj9 is just more likely to trigger it than hotspot jvms at the moment, but I managed to trigger the error running the benchmark on zulu9.",Investigation and Exploration,False,148,NONE,True,False,False,1.0,0.4179104478,0.75,0.5921787709,0.1112819629,0.8887180371,0.2689971282,0.0008696566537
*         the test is brittle and already provides only weak assurances in asserting t > 0.9,Investigation and Exploration,False,92,MEMBER,False,False,False,0.4166666667,0.2205882353,0.837398374,0.5384615385,0.6243074007,0.3756925993,0.05176800464,0.02547446062
"I'm trying to narrow it down by looking for methods that were jit compiled with compareAndSwapObject inlined during the hanging case, but my first choice didn't turn up anything interesting.",Investigation and Exploration,False,190,CONTRIBUTOR,False,False,False,1.0,0.447761194,0.75,0.8659217877,0.1409452519,0.8590547481,0.06580775503,0.4477852629
So Ideally I'd be able to to run TF 1.4(which currently requires Cuda 8.0) in one conda environment and TF 1.6 (which currently requires Cuda 9.0) in another?,Solution Discussion,False,158,NONE,False,False,False,1.0,0.2283464567,0.4662756598,1.0,0.3805901386,0.6194098614,0.001605430808,0.001735580887
"In addition, I am more interested in multiheap:16, multiheap:18, and multiheap:20 with thread number 16, 24, and 32.",Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,0.72,0.2903225806,0.5714285714,0.4936708861,0.4402101884,0.5597898116,0.00359667111,0.001910640371
"I managed to get a crash with a debug build:
CODE",Bug Reproduction,True,50,CONTRIBUTOR,True,False,False,1.0,0.06349206349,1.0,0.07428571429,0.1337094484,0.8662905516,0.001175011289,0.0004416122032
Trying to narrow the scope of ParserStateError right now.,Potential New Issues and Requests,False,57,CONTRIBUTOR,False,False,False,0.3333333333,0.09473684211,0.6631578947,1.0,0.1887379296,0.8112620704,7.438390269e-06,4.080282041e-06
"It seems to me that it makes the whole thing transparent, when actually there's a meaningful decision here, that maybe the user needs to make.",Solution Discussion,False,142,MEMBER,False,False,False,0.6097560976,0.1633986928,0.1993569132,0.9285714286,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
@andrewcraik @DanHeidinga,Contribution and Commitment,False,25,CONTRIBUTOR,True,False,False,0.08,0.02985074627,1.0,0.838150289,0.01914830704,0.980851693,0.001167361543,2.78e-05
"Narrowing it further, 

- This is reproduced by limiting compilation to CODE hence we don't need to worry about any callers being compiled.",Investigation and Exploration,True,141,CONTRIBUTOR,False,False,False,1.0,0.4893617021,0.25,0.5384615385,0.5030540536,0.4969459464,0.01535044408,0.005154978519
"This might be too much refactor work, in which case what you mentioned also sounds great :)",Social Conversation,False,91,CONTRIBUTOR,False,False,False,0.68,0.2741935484,0.6035242291,1.0,0.2194242891,0.7805757109,0.002309046196,0.1481803025
"Referring to the native stack from gdb below, the segfault happens while resolving CODE in the JVM, which invokes CODE -> CODE (Java methods).",Investigation and Exploration,True,142,CONTRIBUTOR,False,False,False,1.0,0.247311828,0.5555555556,0.07335907336,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"When the hang occurs, you no longer get any dumps.

~If I do a CODE at that point, then I get two additional dumps.",Observed Bug Behaviour,True,117,NONE,True,False,False,0.6944444444,0.3333333333,0.4,0.8192090395,0.08547570942,0.9145242906,3.24e-05,0.0002356611565
"It also does that twice, sequentially.",Investigation and Exploration,False,38,MEMBER,False,False,False,0.1,0.08955223881,0.4,0.6936416185,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
I'll hopefully have some spare time soon and will write a little pull request now that I know where to look :-),Social Conversation,False,111,NONE,True,False,False,0.5945945946,0.5789473684,0.08759124088,1.0,0.002926751675,0.9970732483,0.0005265343115,0.0006606771075
"You could just table this issue for now, or close it, and wait to see if other reports come in from other folks experiencing the same.",Action on Issue,False,134,NONE,True,False,False,0.7222222222,0.2626262626,0.6428571429,0.5122807018,0.1973084735,0.8026915265,0.001977734278,0.003898730278
When I don't specify n_jobs at all it works fine but otherwise it freezes.,Observed Bug Behaviour,False,74,NONE,False,False,False,0.7777777778,0.1443298969,0.849112426,1.0,0.9334032331,0.06659676688,0.1984119539,0.0001350091473
It compiles with -O0,Investigation and Exploration,False,20,CONTRIBUTOR,True,False,False,0.3333333333,0.03389830508,0.8,0.07272727273,0.3881489186,0.6118510814,0.0001845122672,7.34e-05
"To fix it in the coming release, I think we can get CODE to return the defining class for us, then we should always get the defining class if CODE says the field is resolved.",Solution Discussion,True,174,CONTRIBUTOR,False,False,False,1.0,0.564516129,1.0,0.5300546448,0.6631878845,0.3368121155,0.0184875191,0.1091893746
"After the SCC is cleared and if the first run does not use -Xjit:disableAsyncCompilation, then subsequent runs with -Xjit:disableAsyncCompilation will always pass.",Solution Discussion,False,163,CONTRIBUTOR,False,False,False,1.0,0.2580645161,0.2,0.3204633205,0.3820724724,0.6179275276,5.6e-05,0.006214516454
I am also confused regarding is_training and reuse flags.,Social Conversation,False,57,NONE,False,False,False,0.3461538462,0.03461538462,0.1948608137,0.0625,0.2234305404,0.7765694596,0.0068527403,0.007193130032
i knew setting RSS to unlimited didn't make a difference.,Social Conversation,False,57,CONTRIBUTOR,False,False,False,0.625,0.1612903226,0.3333333333,0.4219409283,0.2977992985,0.7022007015,0.0007234180335,0.0004492192628
"@lming Yeah, the first two comments here cover that: by making a Dataset implementation that uses [py_func] URL , it'd be equivalent to the PyTorch implementation.",Solution Discussion,False,163,MEMBER,False,False,False,1.0,0.3880597015,0.2454923717,1.0,0.05005012429,0.9499498757,0.0003827497926,5.700528826e-05
I don't believe this affects JDK14.,Social Conversation,False,35,NONE,True,False,False,0.3333333333,0.06593406593,0.25,0.02797202797,0.002719058434,0.9972809416,0.003086545757,0.005933531811
We may also be able to deduce what the difference between the passing and the failing logs are which may help us improve reproducibility rate.,Investigation and Exploration,False,142,CONTRIBUTOR,False,False,False,0.8620689655,0.1879699248,1.0,0.6106870229,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
Yes the way you suggest is similar to what I am doing now with a lazy loaded CODE object.,Solution Discussion,True,89,NONE,True,False,False,0.4318181818,0.1241830065,0.06752411576,0.3333333333,0.002086131182,0.9979138688,0.0004639102472,1.030911661e-05
"I think this will also work for SCREEN_NAME 's [request](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-322407451), because you can create concurrent generators, and for SCREEN_NAME 's [request](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-321976369) and SCREEN_NAME 's [request](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-321091444) as well.",Solution Discussion,False,405,CONTRIBUTOR,True,False,True,33.0,0.4925373134,0.9916782247,19.0,1.0,0.0,0.02385162338,0.0
[osrtransitions.20211202.083039.19170.txt] URL .,Investigation and Exploration,False,48,CONTRIBUTOR,False,False,False,0.2222222222,0.02150537634,0.6,0.5212355212,0.5369859796,0.4630140204,0.0028647951,0.0003133369641
@nmduc SCREEN_NAME 44,Social Conversation,False,21,NONE,False,False,False,0.07894736842,0.01153846154,0.8929336188,0.25,0.7414423331,0.2585576669,0.006199252888,0.001298350941
You don't have to remove anything to make it work with tensorflow.,Solution Discussion,False,66,NONE,True,False,False,0.3243243243,0.09448818898,0.6950146628,0.3,0.5094864043,0.4905135957,0.02165076149,0.03664686068
Repeating the same steps on the previous Windows machine but nothing wrong happened (suspect the setting with STS4 got messed up by the existing maven setting in that machine).,Investigation and Exploration,False,176,CONTRIBUTOR,False,False,False,0.3766233766,0.2929292929,0.5,0.8701754386,0.9005578376,0.09944216237,0.1143762639,0.00534555638
MAX_VALUE.,Investigation and Exploration,False,10,CONTRIBUTOR,False,False,False,0.03225806452,0.02127659574,0.07407407407,0.7384615385,0.6986733294,0.3013266706,0.2919761514,0.1217072968
So maybe the rounding errors can indeed also have a large impact.,Solution Discussion,False,65,MEMBER,False,False,False,0.3636363636,0.1764705882,0.9349593496,0.8,0.6518867777,0.3481132223,0.02351100859,0.005246346584
+1.,Social Conversation,False,3,NONE,False,False,False,0.1666666667,0.01666666667,0.04310344828,0.5,0.01355763016,0.9864423698,0.05217402879,6.476167891e-05
"But you are right that the CODE is also only [2, 3, 5], essentially making them the same with the default value of CODE.",Investigation and Exploration,True,120,CONTRIBUTOR,True,False,False,0.5454545455,0.375,0.2536764706,0.3571428571,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"Just dumped the hex value from the core dump above to a .class file
CODE
[GregorSamsa.class.txt] URL 

and it ended up with the ClassFormatError exception as follows:
CODE
against the code with the newly added tracepoint:
CODE

Also tried with Hospot and end up with pretty much the similar error detected in the constant pool:
CODE
So the VM did thing right from the verification perspective when the error was captured in the constant pool of this class.",Investigation and Exploration,True,467,CONTRIBUTOR,False,False,False,1.0,0.6541353383,0.5,0.3664122137,0.4567225994,0.5432774006,0.001811662331,0.08907149035
"I'm trying with this:

CODE",Task Progress,True,29,CONTRIBUTOR,False,False,False,1.0,0.09375,1.0,0.7092198582,0.9485115204,0.05148847961,8.9e-05,0.0001586866516
"I left it running overnight, and it made 222889 dumps, and was still going strong, so whatever changes it was that you made they appear to have helped fix this issue, or at least make it non-reproducible in my test.",Task Progress,False,215,NONE,True,False,False,1.0,0.5466666667,0.3333333333,0.9491525424,0.3768312766,0.6231687234,0.01360883005,0.0001899293257
So the problem is very likely to be related to incorrect inlining and around 500 hundred methods are inlined.,Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.8260869565,0.1428571429,0.3333333333,0.9338422392,0.909962974,0.09003702602,0.04177124329,0.03295492264
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3706896552,1.0,0.4347763582,0.5652236418,0.03907670755,0.003115708122
We look forward to hearing from you!,Social Conversation,False,36,CONTRIBUTOR,True,True,False,0.1489361702,0.1044776119,0.04160887656,1.0,0.0,1.0,0.0,0.000766008561
Try CODE.,Solution Discussion,True,9,CONTRIBUTOR,False,False,False,0.1052631579,0.02150537634,1.0,0.2432432432,0.3429758343,0.6570241657,0.0116494207,0.01282443431
"For most of the methods this is working as expected, but in a small number of cases there is some additional complexity that got overlooked.",Investigation and Exploration,False,140,CONTRIBUTOR,False,False,False,0.78125,0.3731343284,0.5833333333,0.9106145251,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"Working with Andrei from async-profiler, we've identified some hidden malloc calls in the JIT metadata processing which I'm looking into.",Investigation and Exploration,False,137,CONTRIBUTOR,False,False,False,1.0,0.2115384615,1.0,0.2872928177,0.1001544797,0.8998455203,0.001297479501,0.006003143523
"try {         System.load(""/usr/local/cuda/lib64/libcublas.so.9.0"");         System.load(""/usr/local/cuda/lib64/libcusolver.so.9.0"");         System.load(""/usr/local/cuda/lib64/libcudart.so.9.0"");         System.load(""/usr/local/cuda/lib64/libcufft.so.9.0"");         System.load(""/usr/local/cuda/lib64/libcurand.so.9.0"");          System.load(""/home/greg/Desktop/platform/tensorbuilder/jni/libtensorflow_jni.so"");       } catch (UnsatisfiedLinkError e) {           System.err.println(""Native code library failed to load.\n"" + e);           System.exit(1);       }",Workarounds,False,563,NONE,False,False,False,1.0,0.4330708661,0.07917888563,1.0,0.1316640267,0.8683359733,0.562496811,0.05368173129
PS: Now I'm getting CODE and I have no idea if it's relevant or not..,Potential New Issues and Requests,True,69,CONTRIBUTOR,False,False,False,0.6153846154,0.1684210526,0.5368421053,1.0,0.1887229939,0.8112770061,0.02657364924,1.151867231e-05
"However, the cache was deleted.",Investigation and Exploration,False,31,NONE,True,False,False,0.2,0.03649635036,0.75,0.07063197026,0.0005686837121,0.9994313163,0.0002882226271,0.0003971343382
(enabling still results in a hang),Investigation and Exploration,False,34,CONTRIBUTOR,False,False,False,0.24,0.05084745763,1.0,0.103030303,0.3881725553,0.6118274447,7.34e-05,0.003403174815
"Talking about ""deeplearn.js"" and ""Tensorflow API for Javascript"" is like talking about apples & pears.",Social Conversation,False,102,NONE,False,False,False,0.3888888889,0.1917808219,0.6530172414,0.25,0.6969145374,0.3030854626,0.0871107993,0.1143443634
"16 and 16,buckets passed too.",Testing,False,29,CONTRIBUTOR,False,False,False,0.5555555556,0.08064516129,0.5,0.1181434599,0.03782155245,0.9621784476,0.005069760251,0.001350574796
"That said, given, as you say, the tendency of JIT bugs to cause intermittent failures, I'd be more sympathetic if this problem occurred during the execution of the JVM.",Social Conversation,False,168,CONTRIBUTOR,False,False,False,1.0,0.5172413793,0.75,0.2110091743,0.0208416062,0.9791583938,6.43e-05,5.63e-06
"I did uninstall Spyder and the numpys above, re-installed bumpy with conda (which updated scikit to 0.19) and still get the same error.",Observed Bug Behaviour,False,135,NONE,False,False,False,1.0,0.2474226804,0.5562130178,0.75,0.848593974,0.151406026,0.0001585701904,6.418695628e-05
"This is necessary for most of the applications at OpenAI, here's one example -- https://github.com/openai/universe-starter-agent",Motivation,False,128,CONTRIBUTOR,False,False,False,0.3488372093,0.223880597,0.2191400832,1.0,0.04902295757,0.9509770424,0.001787522968,0.0009069948543
Train what exactly?,Solution Discussion,False,19,NONE,False,False,False,0.125,0.05,0.9224137931,0.5,0.8008033367,0.1991966633,0.0001095095445,0.0006670641737
"@mirosval, it seems to me that this might be what CODE is intended for eventually.",Usage,True,82,CONTRIBUTOR,False,False,False,1.0,0.223880597,0.4244105409,1.0,0.3863101223,0.6136898777,0.001120764685,0.1106294504
Forests would be flattened in order to put all trees on the same level.,Solution Discussion,False,71,MEMBER,False,False,False,0.4666666667,0.1971830986,0.8586956522,0.7727272727,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
That's not true; the compilation threads can still run during a STW phase; it will only block if it needs to acquire VM Access and some other thread holds exclusive VM Access.,Investigation and Exploration,False,175,CONTRIBUTOR,False,False,False,0.6153846154,0.3516483516,0.07692307692,0.7762237762,0.86612727,0.13387273,0.03684751755,0.005897328255
"We're likely at the ""go / no-go"" point for AIX to make JDK 13.",Investigation and Exploration,False,62,MEMBER,False,False,False,0.8235294118,0.08045977011,0.3333333333,0.03676470588,0.663539314,0.336460686,1.0,0.02235494254
"Yes, I'm not sure what's going on with the trace.",Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,0.303030303,0.1492537313,0.25,0.5139664804,0.005276343682,0.9947236563,0.000261155566,1.47e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.05387931034,1.0,0.0006514732741,0.9993485267,0.0001602338884,0.002999516421
You would need the server to get vmaccess on the client and hold it until the walk was complete,Investigation and Exploration,False,95,MEMBER,False,False,False,0.7307692308,0.1005291005,1.0,0.7485714286,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
Can you try with CODE in the OPENJ9_JAVA_OPTIONS?,Investigation and Exploration,True,49,MEMBER,False,False,False,0.5,0.06015037594,0.75,0.165394402,0.01361800008,0.9863819999,0.0002252314856,0.002938228528
"Looking at the code
In CODE, we call CODE in non-SVM AOT compile
https://github.com/eclipse/openj9/blob/8c76311cdcccaa6def680d362df418eca6ae9325/runtime/compiler/env/j9method.cpp#L1845

And CODE calls to CODE to get defining class
https://github.com/eclipse/openj9/blob/8c76311cdcccaa6def680d362df418eca6ae9325/runtime/compiler/env/j9method.cpp#L1715",Solution Discussion,True,355,CONTRIBUTOR,False,False,False,0.6744186047,0.4677419355,0.3,0.3551912568,0.6389467947,0.3610532053,0.00359446461,0.01517828221
"It validates the OS is setup properly for collecting dumps, although not sure how well it works on Mac, it may work better on Linux.",Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,1.0,0.1879699248,1.0,0.2061068702,0.01893899458,0.9810610054,0.01296082525,0.01135477352
"-         Add a CODE member to CODE, which will be a sequence of CODE instances.",Solution Discussion,True,80,MEMBER,False,False,False,0.5769230769,0.2419354839,0.4801762115,0.3529411765,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
I believe we can piggy-back off this infra to also just cache the class chain per J9Class.,Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.3,0.2903225806,0.4444444444,0.9672131148,0.9848847044,0.01511529561,0.001947660621,0.07932791196
I believe it can be debugged via Windbg as long as it crashes with javaw.exe,Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.5555555556,0.1515151515,1.0,0.7578947368,0.2164794247,0.7835205753,0.001471142506,0.02954037942
"If the user wants to keep the current behaviour, it can manually specify it as",Usage,False,78,CONTRIBUTOR,True,False,False,0.4545454545,0.234375,0.1838235294,0.8333333333,0.002016098271,0.9979839017,0.0039907996,0.01559625638
The log seems to be truncated as we never seemed to have reached binary encoding.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.4545454545,0.1127819549,0.5,0.6208651399,0.6090585554,0.3909414446,0.03283597098,0.001209954986
"@zhongyuk Hm, I think it's unlikely that it is related.",Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.3571428571,0.1408450704,0.6432748538,0.3333333333,0.4587137632,0.5412862368,3.099797711e-05,4.884949071e-05
I am using a custom scorer and it keeps going on forever when I set n_jobs to anything.,Observed Bug Behaviour,False,87,NONE,False,False,False,1.0,0.1855670103,0.8461538462,0.6666666667,0.9334032331,0.06659676688,0.1984119539,0.0001350091473
@mpirvu any chance you can grab a profile so we can see where all of the time is being spent?,Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,0.8695652174,0.1459854015,0.5,0.7137546468,0.04154780057,0.9584521994,6.34e-05,0.001395974822
+1 ð,Social Conversation,False,4,NONE,False,False,False,1.0,0.02739726027,0.4568965517,1.0,0.5471678717,0.4528321283,0.005053785692,0.07567554408
You set CODE in the constructor and calling CODE append CODE more estimators?,Solution Discussion,True,77,MEMBER,False,False,False,0.5,0.1830985915,0.6702898551,0.3636363636,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
"Here are the relevant xlc 16 changes I found:
https://github.com/eclipse/openj9/pull/6584
https://github.com/eclipse/openj9/pull/6694
https://github.com/eclipse/openj9/pull/7034
https://github.com/eclipse/omr/pull/4087
https://github.com/eclipse/omr/pull/4099 and https://github.com/eclipse/omr/pull/4119
https://github.com/eclipse/omr/pull/4285",Investigation and Exploration,False,351,CONTRIBUTOR,False,False,False,1.0,0.132183908,1.0,0.3272058824,0.758961041,0.241038959,1.24e-05,5.55e-06
I want to wrap this function using CODE and use it to build a CODE.,Motivation,True,67,NONE,False,False,False,0.3571428571,0.223880597,0.854368932,0.6,0.8801745557,0.1198254443,0.88547434,0.1191105139
A different GC setting maybe?,Investigation and Exploration,False,29,NONE,True,False,False,0.1851851852,0.06666666667,0.6,0.2881355932,0.00489293646,0.9951070635,0.002021828306,0.009446358204
"Java is not the only language that has the capability to allocate, and initialize a very-large contiguous region of memory.",Solution Discussion,False,123,CONTRIBUTOR,False,False,False,0.5526315789,0.4468085106,0.9444444444,0.9307692308,0.7299060094,0.2700939906,0.01554507959,0.00748487997
@lesteve: i had this error using the setup you describe (two versions of numpy installed).,Bug Reproduction,False,90,NONE,False,False,False,0.7142857143,0.2112676056,0.9649122807,0.3333333333,0.8460874495,0.1539125505,0.1393667667,0.01200604239
There could be so many combinations of Xmx and Xms.,Solution Discussion,False,51,CONTRIBUTOR,False,False,False,0.7142857143,0.06849315068,1.0,0.1787709497,0.01369821541,0.9863017846,0.0005232437649,0.0003613942987
"thanks,",Social Conversation,False,7,NONE,False,False,False,0.0303030303,0.001447178003,0.7524752475,0.75,0.272648067,0.727351933,0.02402499291,0.006610382458
Can you please provide a little more detail:,Investigation and Exploration,False,44,MEMBER,False,False,False,0.4444444444,0.0824742268,0.02662721893,0.2222222222,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
See the linked issue for the full problem,Social Conversation,False,41,NONE,True,False,False,0.2857142857,0.1290322581,1.0,0.1967213115,0.3860581428,0.6139418572,0.01216692501,0.3080636089
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4590517241,1.0,0.5513735802,0.4486264198,0.07567554408,0.01337665255
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2349137931,1.0,0.1314649353,0.8685350647,0.255129089,0.149949263
Running with the JIT but removing the ASGCT stack walk entirely crashes.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.6315789474,0.1153846154,0.5,0.6464088398,0.1404522465,0.8595477535,0.007465904141,2.46e-05
"However, it seem not always working way - sometimes it frees all the memory, and sometimes not.",Workarounds,False,95,NONE,False,False,False,0.4324324324,0.2580645161,0.8502202643,0.5555555556,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
"Need to update other modules to reflect the change, and do testing.",Task Progress,False,67,MEMBER,False,False,False,1.0,0.1935483871,0.6123348018,1.0,0.2581064871,0.7418935129,0.1481803025,0.002179048536
"Sorry, I'm still getting this error with above code snippet after upgrading to scikit-learn 0.18 (CODE) in conda env.",Testing,True,117,NONE,False,False,False,0.5882352941,0.2816901408,0.3538011696,0.25,0.409179596,0.590820404,0.4852296023,0.01767922574
Do you do pylab imports in IPython notebook?,Investigation and Exploration,False,44,MEMBER,False,False,False,1.0,0.0824742268,0.2100591716,0.6666666667,0.2582333528,0.7417666472,0.0009051930247,0.0005513005954
that is a good question.,Social Conversation,False,24,CONTRIBUTOR,False,False,False,0.1,0.08064516129,0.6666666667,0.9198312236,0.9167594621,0.08324053794,0.01000533813,0.01893430022
Tell me if your need more info.,Social Conversation,False,31,NONE,True,False,False,0.1842105263,0.1044776119,0.5,0.7039106145,0.113102954,0.886897046,0.0002870125527,0.0001456610252
"The results at the moment are quite messy, and many of the phrases need to be pruned from the vocab.",Potential New Issues and Requests,False,100,MEMBER,False,False,False,0.6666666667,0.5263157895,0.204379562,0.3888888889,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
Unsafe* doesn't solve the issue anymore.,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.1621621622,0.08955223881,0.6,0.8268156425,0.1150439695,0.8849560305,0.0009687751028,0.0002215081863
"@pwagland CODE sends a CODE, which generates a CODE.",Investigation and Exploration,True,52,CONTRIBUTOR,False,False,False,0.12,0.12,0.3333333333,0.0790960452,0.00183020417,0.9981697958,0.001144827456,0.0001509806852
The repo doesn't even have 9.0 anymore so I'm afraid I'll break my nvidia stuff if I remove 9.1 and then manually install 9.0.,Solution Discussion,False,126,NONE,False,False,False,1.0,0.188976378,0.2668621701,1.0,0.3379076477,0.6620923523,0.001120325967,0.0004436934522
"You can see the JDK via Task Manager.
![image] URL 

Given that it runs on the command line.",Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.7407407407,0.202020202,0.75,0.7543859649,0.2164794247,0.7835205753,0.001471142506,0.02954037942
hrm.,Social Conversation,False,4,MEMBER,False,False,False,0.06666666667,0.015625,0.7316176471,0.25,0.1243761474,0.8756238526,0.002792339292,9.071848224e-05
I'd rather propose the CODE fit parameter that we discussed in the past: CODE where CODE will be called after each iteration and is passed the complete state of the estimator.,Solution Discussion,True,175,MEMBER,False,False,False,0.4507042254,0.4507042254,0.2028985507,0.5,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
assigned to @Leonardo2718,Contribution and Commitment,False,25,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.05464480874,0.02207018927,0.9779298107,0.110942232,0.4214515802
Is that why we only hit this 5 days ago (where last commit to the branch is 11 days ago)?,Social Conversation,False,89,CONTRIBUTOR,False,False,False,0.625,0.2150537634,0.5,0.2895752896,0.3809305973,0.6190694027,0.003566073067,0.004767198096
I'm guessing CODE has failed because of precision errors due to partitioning the ensemble summation across jobs.,Potential New Issues and Requests,True,112,MEMBER,False,False,False,1.0,0.25,0.5162601626,0.5,0.5675379045,0.4324620955,0.003751139534,0.000437512086
"TF1.6 Ubuntu 16.04nvcc -Vnvcc: NVIDIA (R) Cuda compiler driverCopyright (c) 2005-2017 NVIDIA CorporationBuilt on Fri_Nov__3_21:07:56_CDT_2017Cuda compilation tools, release 9.1, V9.1.85Which requited a Nvidia display driver 390+",Bug Reproduction,False,228,NONE,False,False,False,0.7297297297,0.2125984252,0.3812316716,0.1818181818,0.3802587264,0.6197412736,0.006558528713,0.00183836987
Do you expect it to make the 0.22.0 code split on Aug 9?,Social Conversation,False,56,MEMBER,False,False,False,1.0,0.2096774194,1.0,0.1366120219,0.2953108514,0.7046891486,1.0,0.0001270779714
I test your data in ubuntu 14.04 LTS withPython==2.7.6scikit-learn==0.17.1numpy==1.8.2scipy==0.13.3,Bug Reproduction,False,99,NONE,False,False,False,0.4761904762,0.1408450704,0.03216374269,0.25,0.005251657845,0.9947483422,0.007997893245,0.2771530517
"Please let's not stop investigating the root cause here, but would it be possible to also measure how often this test fails with default options ?",Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,1.0,0.2688172043,1.0,0.5521235521,0.5454648218,0.4545351782,0.03390753575,0.01613685365
Got no segfaults.,Investigation and Exploration,False,17,NONE,True,False,False,0.09375,0.0303030303,0.3333333333,0.7228070175,0.2160643057,0.7839356943,0.001276611266,0.001471142506
@Alexivia It seems that you are using two different batch normalization layers?,Usage,False,79,CONTRIBUTOR,False,False,False,0.9230769231,0.04615384615,0.6381156317,0.5,0.5683019787,0.4316980213,0.003001821466,0.003618682739
Can you give an example of a non-static field where that happens?,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,1.0,0.1101694915,1.0,0.4303030303,0.4191753254,0.5808246746,0.0003428640749,0.0005917357025
"Still, the function description in the documentation seems a bit sparse, consisting of CODE.",Usage,True,92,CONTRIBUTOR,False,False,False,1.0,0.2089552239,0.6893203883,1.0,0.5121578228,0.4878421772,0.0001414952691,0.07840110346
I believe that the hang happens due to CODE.,Investigation and Exploration,True,44,CONTRIBUTOR,False,False,False,0.2,0.12,0.3,0.5706214689,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
_Here's my thoughts at the end of this:_,Solution Discussion,False,40,NONE,False,False,False,0.1860465116,0.01157742402,0.4455445545,0.3,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
*         See #2514 and #4535 for feature requests about handling multiple epochs.,Motivation,False,82,CONTRIBUTOR,True,True,False,0.2553191489,0.1791044776,0.01109570042,0.2666666667,0.0,1.0,0.0,0.000766008561
E.x CODE,Investigation and Exploration,True,8,CONTRIBUTOR,False,False,False,0.06451612903,0.04255319149,0.1111111111,0.7423076923,0.6986733294,0.3013266706,0.2919761514,0.1217072968
I want to perform batch nomalization.,Usage,False,37,NONE,False,False,False,0.2307692308,0.02307692308,0.2098501071,0.5,0.2234305404,0.7765694596,0.0068527403,0.007193130032
ps -lfp,Investigation and Exploration,False,7,CONTRIBUTOR,False,False,False,0.2222222222,0.03225806452,0.3333333333,0.7130801688,0.5175852387,0.4824147613,0.004416350414,0.2648672615
"It's hard to do asynchronous preprocessing well, so most users benefit from CODE doing it for them.",Solution Discussion,True,99,CONTRIBUTOR,False,False,False,1.0,0.2537313433,0.3176144244,1.0,0.2825173008,0.7174826992,0.002163656075,0.000434665323
"This is based on the fact that when I do the CODE then whatever lock is taken appears to be released, and I suspect that is why I end up getting two additional thread dumps when the CODE happens.",Investigation and Exploration,True,195,NONE,True,False,False,1.0,0.52,0.5,0.8474576271,0.08562237087,0.9143776291,0.0002356611565,6.35e-05
[pid],Investigation and Exploration,False,5,CONTRIBUTOR,False,False,False,0.0625,0.01612903226,1.0,0.7679324895,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
And that's a FACT and it's never going away sorry lol,Social Conversation,False,53,NONE,False,False,False,0.7333333333,0.1506849315,0.8275862069,0.625,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
Thanks.,Social Conversation,False,7,MEMBER,False,False,False,0.08333333333,0.01470588235,0.5691056911,0.6666666667,0.5703414647,0.4296585353,0.001821873532,0.0110293102
"@kmhofmann We'll certainly support CODE inside a new-style input pipeline (as well as, in general, compositions of any other TensorFlow ops).",Solution Discussion,True,141,CONTRIBUTOR,True,False,False,0.4782608696,0.328358209,0.05963938974,0.125,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
"Just running some testing, and I'll have a PR open soon",Task Progress,False,55,CONTRIBUTOR,False,False,False,1.0,0.1182795699,1.0,0.8069498069,0.6117651111,0.3882348889,0.001335412299,0.002708126618
"@rasbt hmm, I wonder if the problem goes away in Sierra...",Investigation and Exploration,False,58,NONE,False,False,False,0.2682926829,0.1549295775,0.634502924,0.3333333333,0.458708442,0.541291558,7.541918537e-05,3.099797711e-05
2.         Blocked binary format with paddings.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.3181818182,0.1044776119,0.492371706,0.9285714286,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"**
https://github.com/eclipse/openj9/blob/64ec0ba89116cf222135206decd82e66b05c6a4a/runtime/gc_glue_java/GlobalCollectorDelegate.cpp#L458",Investigation and Exploration,False,137,CONTRIBUTOR,False,False,False,0.03921568627,0.02197802198,0.6666666667,0.458041958,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"I don't know why my grinder failed, maybe something's wrong in my configuration?",Social Conversation,False,80,CONTRIBUTOR,False,False,False,0.65,0.2765957447,1.0,0.05769230769,0.003497287056,0.9965027129,0.005864825644,0.0004608281741
I'll close this (broad) bug now.,Action on Issue,False,32,MEMBER,False,False,False,0.5454545455,0.08219178082,0.6400862069,0.75,0.6919655619,0.3080344381,0.02124426926,0.001738227844
"What I rather see is a ""combination"" mechanism that would take as input a list of (fitted) estimators and would produce a meta-estimator combining them all.",Solution Discussion,False,156,MEMBER,False,False,False,0.9,0.3802816901,0.8079710145,0.1363636364,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"At first errors were still being produced, but after a few shuffles of the corpus to errors to my surprise went away.",Investigation and Exploration,False,117,NONE,False,False,False,0.7333333333,0.2315789474,0.4105263158,0.3333333333,0.1598964447,0.8401035553,0.03116866066,0.03531242178
-         [chain](https://docs.python.org/2/library/itertools.html#itertools.chain),Expected Behaviour,False,83,CONTRIBUTOR,False,False,False,0.5,0.0447761194,0.4729542302,0.75,0.4356293768,0.5643706232,0.01344561339,0.0007517572389
Let me retest with the fixed code and make sure I'm still getting the same problems.,Testing,False,84,NONE,True,False,False,0.7619047619,0.2388059701,1.0,0.6480446927,0.1116487982,0.8883512018,6.55e-05,0.001260959053
This doesn't explain why I can't reproduce it though.,Potential New Issues and Requests,False,53,MEMBER,False,False,False,0.25,0.1323529412,0.2723577236,0.8,0.3543056001,0.6456943999,0.009464004531,0.003096425316
"I repeated it quite a few times, maybe 20 times or so.",Investigation and Exploration,False,54,NONE,True,False,False,0.375,0.1212121212,0.2222222222,0.7192982456,0.2160643057,0.7839356943,0.001276611266,0.001471142506
@brando90 currently I am doing something like: CODE,Usage,True,51,NONE,False,False,False,0.6153846154,0.03076923077,0.08779443255,0.3333333333,0.202832989,0.797167011,0.000172984946,0.007484820191
"seeing as you don't use a custom scorer, should we assume that is aseparate issue?",Potential New Issues and Requests,False,82,MEMBER,False,False,False,1.0,0.1546391753,0.3017751479,1.0,0.8123287208,0.1876712792,0.0002075199459,1.255529445e-05
"In a way this information is already contained in word vectors because two verbs will be seen in more similar contexts than adjectives but guess that by reducing ambiguity and ""false positives"" it could make quite a difference.",Motivation,False,227,NONE,True,False,False,1.0,1.0,0.1459854015,0.8,0.003800102762,0.9961998972,0.0004625994361,7.224875116e-05
I'm wondering if there is a behaviour difference in how we treat it vs the RI.,Investigation and Exploration,False,78,MEMBER,False,False,False,1.0,0.1203007519,1.0,0.3765903308,0.4721931427,0.5278068573,0.08907149035,0.005002918608
"this allows you to do flexible data processing in Python (roughly parallelized on the CPU, apart from GIL issues) while maintaining some amount of speed benefit.",Solution Discussion,False,161,NONE,False,False,False,0.7428571429,0.3880597015,0.2080443828,0.625,0.04335363766,0.9566463623,0.005164577321,0.043809073
"Either CODE returned NULL or CODE failed
https://github.com/eclipse/openj9/blob/8c76311cdcccaa6def680d362df418eca6ae9325/runtime/compiler/env/j9method.cpp#L2022-L2040

Either way, the result is inconsistent.",Solution Discussion,True,210,CONTRIBUTOR,False,False,False,0.3720930233,0.2580645161,0.6,0.3715846995,0.6389467947,0.3610532053,0.00359446461,0.01517828221
"Yes, I think that's exactly what went wrong.",Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.1951219512,0.04232804233,0.125,0.8857142857,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"@GaelVaroquaux The contract with CODE is imho that if you iterate over the data in batches, you will get the same result out.",Solution Discussion,True,125,MEMBER,False,False,False,1.0,0.323943662,0.7282608696,0.3333333333,0.06552070647,0.9344792935,6.632574066e-06,0.00947335116
So to me seems like we've found the culprit that's causing the overhead here.,Investigation and Exploration,False,77,NONE,True,False,False,0.6,0.1094890511,1.0,0.8252788104,0.05816692079,0.9418330792,0.01947449064,0.007031224118
what about f** I just only want to use tensorflow1.8 and cuda9.1?,Motivation,False,65,NONE,False,False,False,1.0,0.09448818898,0.8797653959,1.0,0.9094823157,0.09051768429,0.2682755484,0.05498545055
"Yeah, sorry about that.",Social Conversation,False,23,MEMBER,False,False,False,0.16,0.05633802817,0.5906432749,0.3333333333,0.4554241693,0.5445758307,0.003896611783,8.635150765e-05
@ChengJin01 Can you take a look at this after the 0.18 issue you're looking at is dealt with?,Contribution and Commitment,False,93,MEMBER,False,False,False,1.0,0.1353383459,1.0,0.320610687,0.4050742491,0.5949257509,1.06e-05,0.001000256707
"CODE In the above, since we run an init each time to get an iterator pointing to its required dataset, we end up running a training and validation on the first item of each dataset, always.",Usage,True,189,NONE,False,False,False,1.0,0.5373134328,0.705963939,0.8888888889,0.551539804,0.448460196,0.1827564093,0.002095453319
I believe all this is doing is changing timing.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.1764705882,0.0989010989,0.9523809524,0.479020979,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"To install 9.0, in the steps to download, do CODE instead of CODE.",Solution Discussion,True,66,NONE,False,False,False,1.0,0.1023622047,0.568914956,1.0,0.4315181319,0.5684818681,0.0008762945681,5.176423609e-05
Various commands work as well.,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.2380952381,0.05494505495,0.75,0.1083916084,0.1031456929,0.8968543071,0.01551514965,0.04744206468
This function is called once at the beginning of Global GC.,Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,0.9166666667,0.1208791209,0.6666666667,0.3391608392,0.621583916,0.378416084,0.02856229515,0.002161429347
"If the maven project is correctly setup then m2e should properly select the right JRE to use (i.e. it should pick a JRE or JDK 11 if the pom.xml says that is what it should use, this doesn't require changing the default workspace JRE).",Investigation and Exploration,False,235,NONE,True,False,False,1.0,0.4444444444,0.75,0.4771929825,0.1967504071,0.8032495929,0.001033447215,0.001977734278
I'm also glad to help in adding Portuguese tools to spaCy.,Contribution and Commitment,False,58,NONE,False,False,False,0.5789473684,0.1833333333,0.474137931,0.5,0.393337642,0.606662358,0.03367017273,3.129518449e-05
Up until now the snippet we have is non-deterministic (CODE is used and has no influence of numpy.random seed).,Investigation and Exploration,True,111,MEMBER,False,False,False,0.6666666667,0.2816901408,0.3859649123,1.0,0.4149662283,0.5850337717,0.0004752100597,0.0002007949321
"Sorry, but I really don't do Windows :)",Contribution and Commitment,False,39,MEMBER,False,False,False,0.6153846154,0.0824742268,0.1301775148,1.0,0.009492338114,0.9905076619,7.410007642e-06,4.98635903e-06
CODE,Bug Reproduction,True,4,NONE,False,False,False,0.1,0.01408450704,0.04678362573,0.6666666667,0.05282886859,0.9471711314,0.2771530517,0.0003346120921
"BTW, I took a look at string peepholes, and it seems it will already refuse to transform under involuntary OSR, though not as intentionally as we might like.",Solution Discussion,False,157,CONTRIBUTOR,False,False,False,0.3294117647,0.3010752688,0.1666666667,0.8146718147,0.6236466175,0.3763533825,0.04747801046,0.02028856842
Wondering if we can read back the page-protection/permission flags after codeCache is allocated but some point before we start to execute from it.,Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,0.5208333333,0.1436781609,1.0,0.5220588235,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
CODE,Investigation and Exploration,True,4,MEMBER,False,False,False,1.0,0.01470588235,0.7154471545,1.0,0.5900715971,0.4099284029,2.417193845e-05,0.0003256305423
"From the compilation logs I see the following 3 catch blocks:
CODE
CODE
CODE
I cannot tell which of 3 catch block is most responsible for triggering the recompilation (they all decrement the same counter).",Investigation and Exploration,True,209,CONTRIBUTOR,False,False,False,1.0,0.5,0.4,0.4754901961,0.5900416852,0.4099583148,0.488236616,0.0006727318859
I tried installing python and scikit dependency using CODE and the test passed for both CODE and CODE.,Bug Reproduction,True,102,CONTRIBUTOR,False,False,False,1.0,0.2647058824,0.0487804878,0.6666666667,0.01632298172,0.9836770183,0.00144962568,0.1491477665
@oxwsds comment **that the tutorial (in it's current form) works without any need for modification when Tensorflow is compiled from the branch remotes/origin/r1.0 was TRUE**.,Solution Discussion,False,174,NONE,False,False,False,0.6279069767,0.03907380608,0.4488448845,0.4,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
Hopefully after that you will have a single numpy that uses MKL.,Solution Discussion,False,64,MEMBER,False,False,False,0.4444444444,0.1237113402,0.5384615385,0.8,0.8485070338,0.1514929662,1.996530209e-05,7.298758198e-05
"By the way, anyone knows if there is corpora to train dependency parsers or just PoS-taggers to Dutch?",Solution Discussion,False,102,NONE,False,False,False,1.0,0.3166666667,0.4827586207,1.0,0.393337642,0.606662358,0.03367017273,3.129518449e-05
nice.,Social Conversation,False,5,CONTRIBUTOR,False,False,False,0.09090909091,0.01612903226,0.5,0.8312236287,0.6619728929,0.3380271071,0.001286400616,0.004063392422
@pshipton We should be trying to contain this in the 0.10.0 release to match the compiler levels used by OpenJDK.,Action on Issue,False,113,MEMBER,False,False,False,1.0,0.1694915254,0.3333333333,0.9757575758,0.9091990739,0.09080092608,0.0003067487503,0.000301424055
Call it whenever convenient.,Workarounds,False,28,MEMBER,False,False,False,0.1212121212,0.06451612903,0.6740088106,0.625,0.288728579,0.711271421,0.1151253204,0.02221386295
@dmitripivkine thanks for the excellent response!,Social Conversation,False,49,CONTRIBUTOR,False,False,False,0.375,0.06593406593,0.2,0.7587412587,0.8593869021,0.1406130979,0.0008804396806,0.03684751755
"@doomerxe Shoot, ignore the above, I got the fast / slow runs incorrect.",Social Conversation,False,72,CONTRIBUTOR,True,False,False,0.2857142857,0.1791044776,0.3333333333,0.2138728324,0.005015413916,0.9949845861,1.94e-05,4.91e-06
"But if we can accept that these strings pass out of date, so that they're around for a while and then they're not, the situation should be manageable.",Solution Discussion,False,150,MEMBER,False,False,False,0.7,0.4516129032,0.3700440529,0.6388888889,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"Unfortunately, CODE doesn't make compareAndSwapObject have a trace.",Investigation and Exploration,True,67,NONE,True,False,False,0.7272727273,0.1194029851,0.5,0.5698324022,0.005762527344,0.9942374727,0.0006886577466,0.2689971282
There is no xlclang in xlC13.,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.4285714286,0.03448275862,1.0,0.2977941176,0.758888869,0.241111131,0.0004175811221,0.0001148200426
Originally the jar of jar files did not work with CODE so I wouldn't be surprised if the timestamp for each individual jar inside the wrapping jar file is also being checked.,Investigation and Exploration,True,174,CONTRIBUTOR,False,False,False,1.0,0.2335766423,0.5,0.8698884758,0.06760668468,0.9323933153,4.8e-05,0.0001677157529
Is foreign bundled with J9 Java 14 builds?,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.170212766,0.170212766,1.0,0.1038461538,0.04838270716,0.9516172928,0.234046329,0.001299478205
@fjeremic I am also running into the TransformationConfigurationException/ClassFormatError and working with Cheng (you were mentioned: see work item 142716).,Task Progress,False,157,NONE,False,False,False,1.0,0.1503759398,0.25,0.679389313,0.6953049426,0.3046950574,0.004019012644,0.2346732222
"Anyway, I think this could be a feature that more people than I might be interested in and should/could possibly be integrated into master.",Potential New Issues and Requests,False,139,NONE,False,False,False,1.0,0.3731343284,0.8002773925,1.0,0.610290121,0.389709879,0.009944877922,0.006779557496
I'm intrigued by the 30% or so benefit that noTimestampChecks gives on Linux at the moment - I don't think we should leave that on the table if we can avoid it.,Solution Discussion,False,160,CONTRIBUTOR,False,False,False,1.0,0.2262773723,0.75,0.8364312268,0.06284506069,0.9371549393,0.007031224118,0.002372867318
FWIW I see that 54ff80e51f1bc6d11c574548e3f6e4fbf03e3790 [1] is in the list of changes in the diff from Peter's https://github.com/eclipse/openj9/issues/7178#issuecomment-535492114. Internally during Z testing we've found the same change is causing over 2x increase in footprint and massive compilation time increases for Octane benchmarks.,Investigation and Exploration,False,340,CONTRIBUTOR,False,False,False,1.0,0.6417910448,0.2,0.4219653179,0.00530660923,0.9946933908,5.04e-06,3.62e-05
And this thread should be mutator thread initiated GC (and became GC Master Thread for this GC).,Investigation and Exploration,False,96,CONTRIBUTOR,False,False,False,0.7083333333,0.1868131868,0.6,0.3531468531,0.6219792976,0.3780207024,0.002161429347,0.8023255008
"The design would be similar to the [ExternalShuffleService] URL  in Spark, using an in-memory storage such as LevelDB or LMDB, and a reader client in TF.",Solution Discussion,False,153,CONTRIBUTOR,False,False,False,1.0,0.4179104478,0.7364771151,0.8333333333,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
"and entry address was 0x3FFF805FDB30
CODECODE._..?....<..... ]
0x3FFF805FDBB0 :  00003fff805fd5f0 0000000000000008 [ .._..?..........",Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,0.7826086957,0.1978021978,0.8,0.1783216783,0.284435888,0.715564112,0.01329594867,0.3731531372
"@yorkie it looks awesome, would you like to join [to the project] URL  and join forces?",Contribution and Commitment,False,87,NONE,False,False,False,1.0,0.2328767123,0.6163793103,1.0,0.6566712476,0.3433287524,0.0005714418505,0.0009029755035
Java 8 builds perfectly.,Investigation and Exploration,False,24,CONTRIBUTOR,True,True,False,0.1142857143,0.03125,0.5,0.01666666667,0.0,1.0,0.0,0.009802165843
"We primarily deal with time series data, and prefer to not have to batch preprocess the whole dataset prior to training every unique model input architecture.",Motivation,False,158,NONE,False,False,False,0.5909090909,0.3880597015,0.26629681,0.1666666667,0.07487735986,0.9251226401,0.199242644,0.03685646374
"JITServer uses globalreferences for almost all the requests except when there's CODE involved, where we use object addresses for the walk.",Investigation and Exploration,True,138,CONTRIBUTOR,False,False,False,0.512195122,0.1111111111,0.25,0.8914285714,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"Searching for ""CountTransformer"" does not give any results",Potential New Issues and Requests,False,58,CONTRIBUTOR,True,False,False,1.0,0.125,0.6580882353,1.0,0.122597879,0.877402121,4.068093374e-05,2.684941627e-05
This doesn't seem to be supported?,Motivation,False,34,NONE,False,False,False,0.1428571429,0.08955223881,0.8557558946,0.8,0.8801745557,0.1198254443,0.88547434,0.1191105139
all passed.,Testing,False,11,CONTRIBUTOR,False,False,False,0.0625,0.03225806452,0.25,0.3333333333,0.2935763846,0.7064236154,0.01326071928,0.005090179308
Although I haven't tried to create an virtualenv with MKL and CODE to see if this would reproduce the error.,Investigation and Exploration,True,108,NONE,False,False,False,0.6060606061,0.2816901408,0.7456140351,0.8888888889,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
"In the whole stack it doesn't look like we ever call CODE
 
 This function is called once at the beginning of Global GC.",Investigation and Exploration,True,122,CONTRIBUTOR,False,False,False,1.0,0.2637362637,0.2,0.3461538462,0.6219792976,0.3780207024,0.002161429347,0.8023255008
"Say, in my [mnist_bn] URL  code, I controlled dependencies using CODE and set up CODE as a placeholder.",Usage,True,103,CONTRIBUTOR,False,False,False,0.6129032258,0.07307692308,0.5717344754,0.625,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
"- details info is generated on JITClient and sent to JITServer

Code Path on JITServer
- CODE
- create the compilee, if CODE then CODE
- mainline code looks like this
CODE

- comparing it to JITServer code
CODE

- the runFEMacro_derefUintptrjPtr was called in Remote::processEntry.",Investigation and Exploration,True,292,CONTRIBUTOR,False,False,False,0.813559322,0.253968254,0.3333333333,0.2971428571,0.3768356435,0.6231643565,0.0999392835,0.03439401659
It might be a bug somewhere in MultiRNNCell.,Investigation and Exploration,False,44,NONE,False,False,False,0.2051282051,0.01157742402,0.2475247525,0.6,0.06622159454,0.9337784055,0.0006557222206,0.0061573337
Do we have an outlook for starting this?,Solution Discussion,False,40,NONE,False,False,False,1.0,0.06779661017,1.0,0.01818181818,0.3220776432,0.6779223568,1.0,0.0918912762
"Can we log some of the problematic methods to see if the transformation has occurred in them?

Will the below option list collect the needed logs?
CODE",Solution Discussion,True,154,CONTRIBUTOR,False,False,False,1.0,0.311827957,1.0,0.7837837838,0.6105914436,0.3894085564,0.0008616766512,0.001283189472
"Going to learn some tensor flow via the current python API before researching more, but I have built nodejs bindings for C++ libs before and can tell you from experience that swig is the wrong way.",Solution Discussion,False,197,NONE,False,False,False,1.0,0.4931506849,0.3103448276,0.3333333333,0.3441984002,0.6558015998,0.02043978005,0.1292799766
They are great.,Motivation,False,15,NONE,False,False,False,0.1,0.0447761194,0.1414701803,0.2,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"- With CODE, the test passes 100 times.",Testing,True,39,CONTRIBUTOR,False,False,False,0.3043478261,0.0752688172,0.3333333333,0.06563706564,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"Forcing the FSD test to true for both of the above gives me the results I want, but we don't need to completely stop merging stack maps.",Solution Discussion,False,136,CONTRIBUTOR,False,False,False,0.421875,0.421875,0.8181818182,0.134751773,0.000716727624,0.9992832724,0.003714710253,0.00734286415
@AlenBadel Kicked off https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/3055/,Task Progress,False,85,NONE,True,False,False,1.0,0.04395604396,1.0,0.9825174825,0.9600877392,0.0399122608,0.04052333396,0.04251684043
"I tried to modify the script at closed/OpenJ9.gmk by adding the following code to renaming/copying redirector_jvm_jdk11.lib & .exp to vm/lib
CODE
The issue with resolving JVM_AreNestMates & JVM_BeforeHalt got fixed but it ended up with the another loading failure as follows:
CODE

Running ""jdk/bin/java  version"" also ended up with the same failure:
CODE

If the copying steps for jvm.lib are correct, then it is likely the failure has something to do with the generated .dll files (e.g. jvm.dll or others)",Solution Discussion,True,515,CONTRIBUTOR,False,False,False,1.0,0.7627118644,1.0,0.7575757576,0.5619462619,0.4380537381,0.0236395635,0.001487673562
Dan suggested that we run our Java process with CODE properties and we did and then saw the TransformerConfigurationException/ClassFormatError again.,Solution Discussion,True,149,NONE,False,False,False,1.0,0.1578947368,0.8,0.7124681934,0.7787161072,0.2212838928,0.2412282351,0.0001541057533
"Closing this issue, a new issue can be opened for any further improvements.",Action on Issue,False,75,CONTRIBUTOR,True,False,True,1.0,0.2096774194,1.0,1.0,1.0,0.0,0.4337999574,0.0
It seems there are still problems with TF v1.3.,Solution Discussion,False,47,NONE,False,False,False,0.3103448276,0.03461538462,0.9271948608,0.1176470588,0.7995481369,0.2004518631,0.3206669123,0.722664447
"That's very small differences for float32 data, and a large range in exponent from min to max.",Investigation and Exploration,False,94,MEMBER,False,False,False,0.4722222222,0.25,0.8495934959,0.7692307692,0.6243074007,0.3756925993,0.05176800464,0.02547446062
I ended up just doing it the low tech way to get the libraries loaded into my java program until I can figure out a cleaner way to handle the paths inside of Eclipse.,Workarounds,False,166,NONE,False,False,False,0.6181818182,0.2677165354,0.07624633431,0.8,0.1316640267,0.8683359733,0.562496811,0.05368173129
We appear to have the following issues:,Potential New Issues and Requests,False,39,MEMBER,False,False,False,0.3684210526,0.1029411765,0.3943089431,0.2222222222,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
-         if int-like data (handled before by OneHotEncoder) CODE is internally set to True and a deprecation warning is raised.,Solution Discussion,True,128,CONTRIBUTOR,True,False,False,0.6363636364,0.328125,0.1801470588,0.7777777778,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"Hey SCREEN_NAME , before going onto AWS, I wanted to start small.",Solution Discussion,False,65,CONTRIBUTOR,False,False,False,0.5789473684,0.07189542484,0.6334405145,0.1428571429,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
"MXNet [IIterator] URL  is a more relevant example than Java's Stream API, Scala's collections (and hence Spark's RDDs), and .NET's Language Integrated Query.",Solution Discussion,False,157,NONE,False,False,False,0.8888888889,0.3582089552,0.2773925104,0.2,0.1079818594,0.8920181406,0.2293928428,1.0
The cmdline tester code is doing the following.,Investigation and Exploration,False,47,CONTRIBUTOR,True,False,False,0.1818181818,0.1379310345,0.2857142857,0.7981651376,0.9968553268,0.003144673225,0.003909680331,0.004205153524
Dank u wel for all the clarifications!,Social Conversation,False,38,NONE,False,False,False,1.0,0.1166666667,0.6810344828,1.0,0.3933594208,0.6066405792,1.354708589e-05,0.01190727487
@jimfleming Good point,Social Conversation,False,22,NONE,False,False,False,1.0,0.0447761194,0.4660194175,1.0,0.4034026931,0.5965973069,7.838227136e-05,0.24574369
"once we know the reason, we can decide on a fix.",Social Conversation,False,48,CONTRIBUTOR,False,False,False,0.2894736842,0.1774193548,1.0,0.1729957806,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
OpenJ9 / OMR fails to build on AIX when using latest XLC v16.1,Investigation and Exploration,False,63,CONTRIBUTOR,True,True,False,0.4444444444,0.06896551724,0.2,0.003676470588,0.0,1.0,0.0,0.2685593546
"I would even go further and guess that it doesn't prevent the bug in general, since I don't think I've ever personally encountered a bug for which it would

I think it probably still makes sense to take into account that this is an unusual mode when evaluating the severity though:
CODE",Investigation and Exploration,True,289,CONTRIBUTOR,False,False,False,1.0,0.5913978495,1.0,0.1312741313,0.08152264145,0.9184773586,0.002003118449,0.008601845704
I ran the benchmark you requested above - collecting metrics on the length of the CODE as memory usage grows.,Investigation and Exploration,True,109,NONE,False,False,False,0.76,0.3064516129,0.2334801762,0.4444444444,0.2016154368,0.7983845632,0.03459730626,0.03432994834
"Any memory reachable from Classloader **would not** be freed until ""classloader unloaded"" hook is exited

>2. Is the following true: class can be unloaded without its **Class Loader** being unloaded or, more precisely, before Class Loader unloading JIT hook is called for its class loader?",Investigation and Exploration,False,291,CONTRIBUTOR,False,False,False,0.5054945055,0.5054945055,0.5357142857,0.7097902098,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
Not sure what you want to see how to call it as nmhkahn's examples seems to do the job?,Usage,False,87,NONE,False,False,False,1.0,0.07307692308,0.1627408994,1.0,0.2177340353,0.7822659647,0.0001386923292,0.0001955084991
latest grinder (CODE) confirmed that the null receiver on stack comes from OSR frame during decompile.,Investigation and Exploration,True,102,CONTRIBUTOR,False,False,False,0.4848484848,0.1739130435,0.5,0.679245283,0.5752476289,0.4247523711,0.007881921876,0.05054425471
+1 :+1:,Social Conversation,False,7,NONE,False,False,False,1.0,0.02739726027,0.213362069,1.0,0.08360426906,0.9163957309,0.08136760952,0.09653383558
"Thanks, do you know whether this also works for Python 3.4/3.5?",Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.6470588235,0.07189542484,0.9517684887,0.5,0.201856209,0.798143791,1.089920072e-05,6.508280685e-05
instead of CODE it should be CODE otherwise the numpy RNG is not reseeded appropriately and one cannot get deterministic results.,Bug Reproduction,True,129,MEMBER,False,False,False,1.0,0.3098591549,0.1754385965,1.0,0.1683509928,0.8316490072,0.002433479587,8.164645755e-06
### Suggestion,Solution Discussion,False,14,NONE,False,False,False,0.03333333333,0.007874015748,0.9384164223,0.1666666667,0.928984049,0.07101595102,0.001770336874,0.003939258366
#13978 will temporarily work around this problem.,Workarounds,False,49,MEMBER,False,False,False,0.3888888889,0.07608695652,0.5,0.8805031447,0.6293907182,0.3706092818,0.0005499522631,0.01709802761
"All of the OpenJ9 issues have been resolved, so closing.",Action on Issue,False,56,CONTRIBUTOR,False,False,False,1.0,0.09615384615,1.0,0.9779005525,0.3681807681,0.6318192319,0.05952597194,1.0
See https://github.com/eclipse-openj9/openj9/pull/13836#issuecomment-977193731.,Social Conversation,False,79,CONTRIBUTOR,True,True,False,0.08333333333,0.02150537634,0.8571428571,0.02316602317,0.0,1.0,0.0,0.03406420424
While CODE retains all of the state of the estimator and just keeps on fitting.,Solution Discussion,True,79,MEMBER,False,False,False,0.5769230769,0.2112676056,0.347826087,0.6666666667,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
"Maybe the Hashmap is getting too big? 

CODE

CODE
    
  CODE",Investigation and Exploration,True,68,NONE,True,False,False,0.65,0.1625,1.0,0.9803921569,0.9707570453,0.02924295466,0.001009097829,0.008707818333
"if it is SED related, SIGILL is expected.",Investigation and Exploration,False,41,CONTRIBUTOR,False,False,False,0.3636363636,0.04597701149,0.3333333333,0.7536764706,0.7732083398,0.2267916602,2.23e-05,6.97e-06
SED can be disabled globally on that machine.,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,1.0,0.04597701149,0.5,0.8345588235,0.7733531053,0.2266468947,8.27e-06,2e-05
"A bit of history: On Windows, the jar file cannot be updated if it is hold open.",Solution Discussion,False,80,CONTRIBUTOR,False,False,False,0.6666666667,0.1313868613,0.5,0.7843866171,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
"https://github.com/AlenBadel/openj9/commit/2ee9e7aca4aa4bb85501a3f6d59e695a98a118ad

The result was that we've hit the assert.",Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,0.4782608696,0.1208791209,0.375,0.9055944056,0.8779153049,0.1220846951,0.01532565869,0.003869158807
"If everybody did what we do, everything would come crashing down.",Solution Discussion,False,65,MEMBER,False,False,False,0.7857142857,0.1134020619,0.6390532544,0.5,0.8491787771,0.1508212229,0.000108726466,0.001720552123
"If an ambitious member of the community wants the glory of solving this problem, and having it merged into the TensorFlow contrib codebase, here are some tips on how I would do it.",Contribution and Commitment,False,180,MEMBER,False,False,False,1.0,0.4520547945,0.900862069,0.05555555556,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"At the very beginning of this phase ""classloader unloading"" hook is issued.",Investigation and Exploration,False,75,CONTRIBUTOR,False,False,False,0.1318681319,0.1318681319,0.3571428571,0.6923076923,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
So nevermind :),Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.15,0.03157894737,0.9789473684,1.0,0.5341997205,0.4658002795,0.165555169,1.0
Instead of: CODE,Potential New Issues and Requests,True,16,MEMBER,False,False,False,0.1666666667,0.03157894737,0.6,0.6,0.1887344648,0.8112655352,8.377216225e-06,7.438390269e-06
"I think to resolve it, one option is that to downgrade cuda to 9.0.",Solution Discussion,False,67,NONE,False,False,False,0.56,0.1102362205,0.1788856305,0.5,0.2644014152,0.7355985848,0.2449173066,0.2378544464
This function triggers CODE hook.,Investigation and Exploration,True,33,CONTRIBUTOR,False,False,False,0.2272727273,0.05494505495,0.75,0.04895104895,0.003804455496,0.9961955445,0.005933531811,0.005236420778
+1 to something like feed_dict.,Expected Behaviour,False,31,CONTRIBUTOR,False,False,False,0.2631578947,0.07462686567,0.1816920943,0.25,0.04256853321,0.9574314668,0.01543061897,0.001149776305
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly_testList_1/20
cmdLineTester_CryptoTest_0",Testing,False,129,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.504587156,0.6795309135,0.3204690865,0.04001375293,0.2838986371
@hangshao0 for insights.,Contribution and Commitment,False,24,CONTRIBUTOR,False,False,False,0.06976744186,0.03225806452,1.0,0.2355212355,0.3402178482,0.6597821518,0.06293969756,0.0116494207
CODE,Solution Discussion,True,4,NONE,False,False,False,0.07692307692,0.007874015748,0.7272727273,0.8,0.5124660478,0.4875339522,0.03664686068,0.234967481
@liqunl sorry to interrupt your dev work but could you take a look as this is lined up against the release that will be going out imminently.,Contribution and Commitment,False,141,CONTRIBUTOR,False,False,False,1.0,0.5744680851,1.0,0.03461538462,0.001858603039,0.998141397,0.001010387239,0.00295674226
"+ExitOnOutOfMemoryError and make code that would trigger out of memory more than one time

CODE hangs were seen in the past:",Investigation and Exploration,True,126,CONTRIBUTOR,False,False,False,0.3666666667,0.2933333333,0.5714285714,0.4293785311,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
"win2012r2-x86-4 got a test timeout from running slow, pls reboot it.",Testing,False,68,CONTRIBUTOR,True,True,False,0.8666666667,0.1940298507,0.5,0.01156069364,0.0,1.0,0.0,8.68e-08
I think it has to do with the GridSearchCV being placed in a for loop.,Investigation and Exploration,False,70,NONE,True,False,False,0.4166666667,0.1546391753,0.07100591716,0.7272727273,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
closing.,Action on Issue,False,8,MEMBER,False,False,False,0.1666666667,0.01408450704,0.2397660819,1.0,0.214178324,0.785821676,0.2064171901,0.04731273831
Try it to see if it works!,Social Conversation,False,26,NONE,False,False,False,0.5,0.02692307692,0.9635974304,1.0,0.913665577,0.08633442295,0.722664447,0.02471483102
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Personal/295/
cmdLineTester_loopReduction_0

CODE",Testing,True,132,CONTRIBUTOR,True,False,False,1.0,0.08620689655,1.0,0.4770642202,0.4723152043,0.5276847957,0.6523644538,0.4317150312
Thanks for any help.,Social Conversation,False,20,NONE,False,False,False,0.1142857143,0.01538461538,0.1220556745,0.3913043478,0.2164964176,0.7835035824,0.06906725807,0.007698692487
-         specific to older versions of something (yet to figure out since numpy as nscipy are the same) since is not reproducible on current debian sid but reproducible on testing (from few days back) and other older releases.,Bug Reproduction,False,227,MEMBER,True,False,False,1.0,0.5588235294,0.1910569106,0.4,0.2809523721,0.7190476279,0.0006692173817,5.939390591e-05
"-         if the input is not int-like, we set CODE internally to False and without warning use the new behaviour (= the current CategoricalEncoder behaviour)",Solution Discussion,True,158,CONTRIBUTOR,True,False,False,0.7878787879,0.40625,0.1911764706,0.9444444444,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"Exception Details:
[ERROR]   Location:
[ERROR]     die/verwandlung/GregorSamsa.template$dot$0(Lcom/sun/org/apache/xalan/internal/xsltc/DOM;Lcom/sun/org/apache/xml/internal/dtm/DTMAxisIterator;Lcom/sun/org/apache/xml/internal/serializer/SerializationHandler;I)V @698: JBinvokespecial
[ERROR]   Reason:",Observed Bug Behaviour,False,303,NONE,True,True,False,0.4105263158,0.2932330827,0.5,0.01017811705,0.0,1.0,0.0,0.0001794494051
I was trying to use batch norm with a 2 layered densely connected NN with the (flatten) MNIST  (and relu units) data set for the task of auto-encoding  and I keep getting a NaN error.,Usage,False,183,NONE,False,False,False,1.0,0.1461538462,0.2933618844,0.25,0.2434240867,0.7565759133,0.01989458774,0.1426765631
"@sguada  I have noticed that you said"" tf.contrib.layers.batch_norm can take tensor as is_training, so not need to do anything especial"".",Usage,False,137,NONE,False,False,False,0.65625,0.08076923077,0.7152034261,0.25,0.6129403111,0.3870596889,0.09912504113,0.01395060179
General directions to install on OSX:CODE,Potential New Issues and Requests,True,41,NONE,False,False,False,0.175,0.09589041096,0.8706896552,0.75,0.8361159731,0.1638840269,0.08097676277,0.003132528254
"anyway this seems indicative of the problem I was mentioning, i.e. that you have mixed pip and conda which is a bad idea for a given package.",Investigation and Exploration,False,141,MEMBER,False,False,False,1.0,0.2783505155,0.5325443787,0.4,0.8485070338,0.1514929662,1.996530209e-05,7.298758198e-05
"*         The current pipelines use TensorFlow queues and multiple Python threads, which can lead to poor performance (lock contention in the queues and the Python GIL) and hard-to-understand exceptions (CODE).",Motivation,True,210,CONTRIBUTOR,True,True,False,0.6808510638,0.4776119403,0.01386962552,0.3333333333,0.0,1.0,0.0,0.000766008561
I was getting the CODE message.,Observed Bug Behaviour,True,31,NONE,False,False,False,0.2307692308,0.0618556701,0.2781065089,0.6666666667,0.663808267,0.336191733,0.07308442859,0.3850825819
:),Social Conversation,False,2,NONE,False,False,False,0.03333333333,0.003846153846,0.2591006424,0.5454545455,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
"But, for some reason, today, more often than not it actually starts up fine.",Investigation and Exploration,False,76,NONE,True,False,False,0.4516129032,0.1414141414,0.4545454545,0.06315789474,0.09912996542,0.9008700346,0.005467138405,0.004133788861
The catcher itself has the correct information.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.1707317073,0.109375,0.6,0.7446808511,0.9534244256,0.04657557439,0.02679880937,0.0005193381324
Also note that this happens without the non-test changes in #13836,Observed Bug Behaviour,False,66,CONTRIBUTOR,True,True,False,0.5,0.1290322581,1.0,0.02702702703,0.0,1.0,0.0,0.03406420424
+1!,Social Conversation,False,3,NONE,False,False,False,1.0,0.01369863014,0.4504310345,1.0,0.537744965,0.462255035,0.01977759802,0.1444971057
"Repro rate with the following command was 1/2 (killed early to make progress):

CODE

Console:

CODE

We built a custom JIT with some extra fixes that allowed us to continue the search.",Bug Reproduction,True,193,CONTRIBUTOR,False,False,False,1.0,0.2781954887,1.0,0.8880407125,0.8471138117,0.1528861883,0.03111464651,0.07341320126
Thank you everyone!,Social Conversation,False,19,NONE,False,False,True,1.0,0.02255639098,1.0,1.0,1.0,0.0,0.0008183546901,0.0
"According to the build.log,  jvmtitest.rc was compiled twice by RC as follows:
CODE
If this is not intentional,  there might be duplicated steps in dealing with the RC compilation.",Investigation and Exploration,True,182,CONTRIBUTOR,False,False,False,1.0,0.2796610169,1.0,0.6121212121,0.4322126408,0.5677873592,0.0001798820974,0.2645202125
just fyi: nvidia website for downloading cuda-9.0 is actually downloading cuda-9.1.,Solution Discussion,False,83,NONE,False,False,False,1.0,0.08661417323,0.5601173021,0.5,0.4314468831,0.5685531169,0.2379527984,0.0008762945681
"@irinarada @DanHeidinga
In regards to release 0.11.0,",Social Conversation,False,54,CONTRIBUTOR,True,False,False,0.5,0.0625,0.4,0.8277777778,0.2165690907,0.7834309093,0.01920965971,0.0002757120844
"**edit** Also, Spacy uses compiled C-libraries that need to be installed on all the nodes.",Solution Discussion,False,90,NONE,False,False,False,0.2807017544,0.1045751634,0.4790996785,0.7142857143,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
"I don't understand why some op in moment are executed during test and it cost a lot of time, such as conv1/batch_norm/moments/sufficient_statistics/SquaredDifference.",Solution Discussion,False,166,NONE,False,False,False,0.09615384615,0.09615384615,0.7665952891,0.8,0.617232977,0.382767023,0.005602480188,0.0279240315
"Anyway, I can reproduce, and extract the core tomorrow.",Task Progress,False,55,NONE,True,False,False,0.3333333333,0.12,0.8,0.2937853107,0.00489293646,0.9951070635,0.002021828306,0.009446358204
Can you recommend how to get the byte code?,Investigation and Exploration,False,43,NONE,True,False,False,0.4285714286,0.06766917293,0.3333333333,0.05089058524,0.0002110051991,0.9997889948,0.0001643249677,0.0008114056243
We needed to make sure that the enqueue operations fills at least a certain multiple of the batch size into the first queue for our code to run without problems (otherwise the second input queue stalled),Motivation,False,203,NONE,False,False,False,0.5901639344,0.5373134328,0.6074895978,0.3,0.5012181902,0.4987818098,0.02428476177,0.003761840049
"Until we agree on a proper interface to do that, you could use the following hack: CODE",Workarounds,True,87,MEMBER,False,False,False,1.0,0.2394366197,0.1086956522,1.0,0.02519149129,0.9748085087,0.0001993983378,2.526694882e-06
The library is very willing to do work so that users don't have to.,Solution Discussion,False,67,MEMBER,False,False,False,0.3414634146,0.09150326797,0.1832797428,0.5714285714,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
We can get a sense of compilation time from verbose logs: -CODE,Investigation and Exploration,True,63,CONTRIBUTOR,False,False,False,1.0,0.1791044776,1.0,0.3352601156,0.005072700899,0.9949272991,5.36e-06,2.67e-05
I installed cuda-9.0 and still it does not work.,Solution Discussion,False,48,NONE,False,False,False,1.0,0.07086614173,0.2375366569,0.5,0.3351961041,0.6648038959,0.02419682242,0.0004392565177
"yes, to the idea that you can just make something that is both backwardscompatible and what we want going forward",Solution Discussion,False,113,MEMBER,False,False,False,1.0,0.3125,0.3051470588,1.0,0.01161011102,0.988389889,0.01273882759,0.003559988512
I was planning on doing that until... I ran out of memory.,Solution Discussion,False,58,NONE,False,False,False,0.3157894737,0.07843137255,0.5562700965,0.07692307692,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
A quick note: CODE alone fixes the problem as well.,Solution Discussion,True,51,NONE,True,False,False,1.0,0.1492537313,1.0,0.4357541899,0.004691773759,0.9953082262,0.0006283247775,0.0003766501067
"Assuming the NPE was at 
CODE",Investigation and Exploration,True,30,MEMBER,True,False,False,0.3181818182,0.07608695652,0.8,0.1886792453,0.3431647145,0.6568352855,0.001046537172,0.001139510487
However calling CODE before CODE could lead to the shuffle across multiple epochs.,Usage,True,82,NONE,False,False,False,0.8666666667,0.1940298507,0.8169209431,0.6,0.6302370014,0.3697629986,0.123123279,0.6886518758
"That seems to indicate, that this problem happens in some very specific combination of factors.",Investigation and Exploration,False,95,MEMBER,False,False,False,0.4285714286,0.1546391753,0.7544378698,0.7,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
Part way into generating code for a recognized call to CODE the wrong data size is used from an instruction which treated the data as if it was int and not long.,Investigation and Exploration,True,161,CONTRIBUTOR,False,False,False,1.0,0.6808510638,0.8,0.6730769231,0.6412149142,0.3587850858,0.008463782054,0.002100918508
[confer] URL ,Solution Discussion,False,13,NONE,False,False,False,0.0350877193,0.01307189542,0.4855305466,1.0,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
"@zl-wang Sure, here is performance for CODE, CODE and CODE.",Investigation and Exploration,True,59,NONE,False,False,False,1.0,0.1774193548,0.5,0.864978903,0.6961577413,0.3038422587,0.2052027758,0.3314129696
"If AdoptOpenJDK uses jdk12 as the bootjdk, then it doesn't tell us that.",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.07471264368,0.5,0.7757352941,0.7732295867,0.2267704133,4.82e-05,0.0001379730553
"If GC is going to check for the presence of -Xmns/-Xmnx/-Xmn/-Xmos/-Xmox/-Xmo/-Xmx/-Xms/... and gc policy to decide whether to turn off this feature, storing the main class probably should be sufficient.",Solution Discussion,False,203,CONTRIBUTOR,False,False,False,0.8333333333,0.2054794521,1.0,0.2737430168,0.0285314246,0.9714685754,0.04266521959,0.0006509267927
#3389 can be used to test the JIT changes.,Testing,False,42,CONTRIBUTOR,False,False,False,0.4736842105,0.140625,0.3333333333,0.1773049645,0.01413138559,0.9858686144,0.06695374525,0.5770832432
This makes spaCy much more useable for including in our docker environment where we literally have 100s of these containers running in parallel and memory is wasted for each instance.,Motivation,False,183,NONE,True,False,False,0.8108108108,0.7894736842,0.0802919708,0.8,0.002926751675,0.9970732483,0.0005265343115,0.0006606771075
So methodHandle CODE is stored at global reference CODE.,Investigation and Exploration,True,56,CONTRIBUTOR,False,False,False,0.1875,0.04761904762,0.7647058824,0.6,0.447477842,0.552522158,0.001615795728,8.48e-05
@diegoAtAlpine I found the same problems - not sure why this is the case though.,Usage,False,80,NONE,False,False,False,0.7368421053,0.05384615385,0.1584582441,0.5,0.2177340353,0.7822659647,0.0001386923292,0.0001955084991
FWIW: tests/test_pickle.py passes for me as well.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.5714285714,0.0522875817,0.3504823151,0.3333333333,0.01909367945,0.9809063205,0.00111366228,0.004499495513
Yep.  Trying to see if I can limit my runs to a single CPU to see if that matters.,Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,0.9090909091,0.1459854015,0.3333333333,0.4163568773,0.02061974402,0.979380256,7.91e-05,4.56e-06
"I found from Peter's java13 driver that F_NOEXEC is set, while java8 header flag is not.",Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,1.0,0.09195402299,1.0,0.5294117647,0.7663923908,0.2336076092,0.0001376186725,1.89e-05
"The problem could be in CODE, but it's also possible that the tree is malformed such that it creates an infinite loop.",Investigation and Exploration,True,118,CONTRIBUTOR,False,False,False,1.0,0.275,1.0,0.75,0.9245568441,0.07544315591,0.2271166044,0.02415455435
The segmentation fault occurs inside the compiled inlined call to CODEwhich is called by CODE.,Investigation and Exploration,True,94,CONTRIBUTOR,False,False,False,0.4838709677,0.3191489362,0.2962962963,0.7615384615,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"-bnorwexec actualy set request (i.e. disregarding global SED policy, SED is enforced).",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.6666666667,0.06896551724,1.0,0.8161764706,0.773339025,0.226660975,3.15e-05,1.41e-05
"Using the LabelEncoder before OneHotEncoder seems to be a typical pattern (from a quick github search), and in those case you *always* have consecutive ranges, and there will never be a change in behaviour with the new implementation, so we shouldn't warn for it.",Solution Discussion,False,263,CONTRIBUTOR,True,False,False,1.0,0.6875,0.4632352941,0.8571428571,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_mixed_Nightly/3
CODE",Testing,True,78,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6721311475,0.8442847673,0.1557152327,0.06807620883,0.03199201883
It seems to be stuck in a recursive loop.,Investigation and Exploration,False,41,CONTRIBUTOR,False,False,False,0.2,0.12,0.6,0.5875706215,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
"To reproduce the failure, I am using the truncated version (micro-test) of CODE created by Eric and available in https://github.com/EricYangIBM/openj9/tree/crash.",Bug Reproduction,True,162,CONTRIBUTOR,False,False,False,0.7,0.2258064516,0.6,0.3088803089,0.3820592256,0.6179407744,0.004767198096,5.6e-05
(thinking I might actually do this as part of my master thesis :P ),Social Conversation,False,67,NONE,True,False,False,0.3421052632,0.3421052632,0.1386861314,0.6,0.003800102762,0.9961998972,0.0004625994361,7.224875116e-05
@pshipton and I have been discussing alternative approaches.,Social Conversation,False,60,MEMBER,False,False,False,0.4210526316,0.05839416058,0.3333333333,0.9628252788,0.1862210471,0.8137789529,0.170274971,0.002992794434
"*Linux32**

CODE",Solution Discussion,True,18,CONTRIBUTOR,False,False,False,0.02702702703,0.0234375,0.8461538462,0.7222222222,0.08012656297,0.919873437,0.0570348239,0.002818533349
Attn: @harryyu1994,Contribution and Commitment,False,18,CONTRIBUTOR,True,False,False,1.0,0.01058201058,1.0,0.02285714286,3.51e-06,0.9999964948,7.04e-06,0.0001585168452
@M-Davies how often does it fail?,Investigation and Exploration,False,33,CONTRIBUTOR,False,False,False,1.0,0.07692307692,1.0,0.01398601399,0.0006591571412,0.9993408429,0.003603409297,0.003686600448
There are a few places that need to be checked.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,1.0,0.078125,0.6666666667,0.7944444444,0.1929866325,0.8070133675,0.000130769984,0.005357918949
"What CODE does is basically ""forget model, call CODE"".",Solution Discussion,True,54,MEMBER,False,False,False,1.0,0.1267605634,0.4963768116,1.0,0.04250958689,0.9574904131,4.807738873e-06,3.754949339e-06
building 0.19b2 on debian/ubuntus ...,Observed Bug Behaviour,False,37,MEMBER,True,True,False,0.2272727273,0.07352941176,0.008130081301,0.5,0.0,1.0,0.0,0.02663056991
"winver.h>
#include ""j9cfg.h""  <----------- (#include ""omrcfg.h"" in j9cfg.h)
#include ""j9version.h""

VS_VERSION_INFO VERSIONINFO
 FILEVERSION 2,9,0,0
 PRODUCTVERSION 2,9,0,0

Given that these lines literally don't exist in the generated header files,  it seems like there might be some problem with RC.",Investigation and Exploration,False,309,CONTRIBUTOR,False,False,False,1.0,0.3898305085,1.0,0.5696969697,0.4287428931,0.5712571069,0.02758701478,0.006132428413
"If the signal handler simply runs on top of wherever CODE points, then we might need to increase the ""slush"" area of the java stack (a 32K area beyond the point of java stack overflow used to handle the overflow or possible signal handler execution).",Solution Discussion,True,250,CONTRIBUTOR,False,False,False,1.0,0.4423076923,0.8,0.8784530387,0.3185054309,0.6814945691,0.006311966217,1.18e-05
"jdk11 CODE
CODE

jdk14 CODE
CODE",Investigation and Exploration,True,36,CONTRIBUTOR,True,False,False,0.375,0.1451612903,1.0,0.8227848101,0.6606657803,0.3393342197,0.6866637302,0.007715486688
But validation performance still is poor if I feed {is_training: False}.,Usage,False,72,CONTRIBUTOR,False,False,False,0.3548387097,0.04230769231,0.573875803,0.75,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
Why would anybody use a JS library to train NNs?,Motivation,False,48,NONE,False,False,False,1.0,0.1369863014,0.8146551724,0.6666666667,0.812005312,0.187994688,0.2701229087,0.0002104729666
This is really irritating.,Social Conversation,False,26,NONE,False,False,False,0.4444444444,0.03149606299,0.2404692082,1.0,0.3351961041,0.6648038959,0.02419682242,0.0004392565177
I want to perform inference by running my prediction operation; but because the input queue runners etc are part of the graph before that; I am stuck with that mechanism for performing inference.,Motivation,False,195,NONE,False,False,False,0.825,0.4925373134,0.4091539528,0.6666666667,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
related OMR issue:,Investigation and Exploration,False,18,CONTRIBUTOR,False,False,False,1.0,0.01724137931,0.5,0.02941176471,0.3066666981,0.6933333019,0.2738098908,1.0
"I know from previous runs that it take about 60 min to finish, but I waited a lot longer than that and nothing happens, it just hangs, no error msgs, nothing and my computer heats up and sucks power like there's no tomorrow.",Observed Bug Behaviour,False,224,NONE,False,False,False,1.0,0.4432989691,0.4142011834,0.4166666667,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
"If you would like to submit a bug report, please visit:
/#   https://github.com/AdoptOpenJDK/openjdk-build/issues
/#
IOT/Abort trap (core dumped)",Investigation and Exploration,False,148,CONTRIBUTOR,False,False,False,0.5675675676,0.1206896552,1.0,0.7316176471,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
That also applies to CODE.,Solution Discussion,True,26,CONTRIBUTOR,False,False,False,0.1785714286,0.07462686567,0.3259361997,0.3333333333,0.2826429201,0.7173570799,0.0005756516163,0.0003837677442
I think of it as a demo what you can achieve with JavaScript and neural networks...,Potential New Issues and Requests,False,83,NONE,False,False,False,0.4444444444,0.2191780822,0.661637931,0.75,0.6969145374,0.3030854626,0.0871107993,0.1143443634
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.474137931,1.0,0.5652957803,0.4347042197,0.04294821502,0.07703399105
"I've compiled tf with most of the packages and libraries, so it can be used hdfs, kafta, aws, etc.",Solution Discussion,False,98,NONE,True,False,False,1.0,0.157480315,0.9648093842,0.6666666667,0.9293111322,0.07068886784,8.356226683e-05,0.5218093819
"how to understand the discrepancy: modules + GC look like more than 4GB already, but JRE is 3.2GB?

yes, it doesn't make sense, there is a bug in how the accounting for modules is set up.",Investigation and Exploration,False,189,CONTRIBUTOR,True,False,False,1.0,0.6129032258,0.25,0.6751054852,0.4907237786,0.5092762214,0.02872086273,0.1405385381
I think SCREEN_NAME 's [fix] URL  in #9340 is the right fix:,Solution Discussion,False,60,MEMBER,False,False,False,0.375,0.1764705882,0.8780487805,0.1666666667,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
I have the same problem and would really appreciate a fix (or workaround?),Bug Reproduction,False,74,NONE,False,False,False,1.0,0.1830985915,0.08771929825,0.3333333333,0.1215728467,0.8784271533,0.0628243198,0.03406414755
@dsouzai When can this happen?,Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.4545454545,0.08064516129,0.5,0.4207650273,0.65955413,0.34044587,0.001387996583,0.0005831074118
I was just planning to make a nice summary for new readers of the issue.,Social Conversation,False,72,CONTRIBUTOR,True,False,False,0.7142857143,0.234375,0.5441176471,0.6666666667,0.122433192,0.877566808,7.729377411e-06,3.70196497e-05
"I'll gear the runs towards that index again to see if we can converge.

CODE",Task Progress,True,78,CONTRIBUTOR,False,False,False,0.7619047619,0.1203007519,1.0,0.7531806616,0.7911165675,0.2088834325,0.03284046744,0.001804304497
"In particular, one current limitation of the CODE and CODE implementation is that the entire pipeline runs on a single device, whereas the more explicit code in the benchmarks is able to split the processing across multiple CPU and GPU devices.",Solution Discussion,True,244,CONTRIBUTOR,True,False,False,0.8723404255,0.6119402985,0.5533980583,0.9285714286,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Only filename is not enough.,Solution Discussion,False,28,CONTRIBUTOR,False,False,False,0.2272727273,0.07462686567,0.4868238558,0.6428571429,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"Something to do with the VM that we can fix, or something to do with the application?",Solution Discussion,False,85,CONTRIBUTOR,True,False,False,0.8095238095,0.1164383562,1.0,0.7094972067,0.2631687747,0.7368312253,4.81e-05,7.11e-05
I expect there are still a small number of jdk11 users so far.,Social Conversation,False,62,CONTRIBUTOR,True,False,False,0.4193548387,0.2096774194,0.7142857143,0.5654008439,0.4797361547,0.5202638453,0.003593754102,0.003640426233
*         The epoch concept does not have a clear semantic either.,Expected Behaviour,False,66,NONE,False,False,False,0.3666666667,0.1641791045,0.1650485437,0.6857142857,0.04064994448,0.9593500555,0.2125437083,0.01543061897
please try multiheap:24/28/30 multiple times.,Testing,False,45,CONTRIBUTOR,False,False,False,0.15625,0.08064516129,0.5,0.3375527426,0.2935763846,0.7064236154,0.01326071928,0.005090179308
"For that last problem, we already had this with the CODE option, which was only relevant for 'onehot' and not for 'ordinal', and which we solved with having both 'onehot' and 'onehot-dense' encoding options and not a CODE keyword.",Solution Discussion,True,230,CONTRIBUTOR,True,True,False,0.8,0.625,0.04044117647,0.4583333333,0.0,1.0,0.0,0.0007774126438
"Both have the same defensive / not-defensive problem, right?",Solution Discussion,False,60,MEMBER,False,False,False,0.3913043478,0.1267605634,0.768115942,1.0,0.07435902202,0.925640978,3.965507246e-06,0.0008481974348
@mpirvu - looks like adding CODE at least loads the class.,Solution Discussion,True,58,NONE,True,False,False,1.0,0.125,0.5,0.2843137255,0.1734997986,0.8265002014,0.003212874696,0.3694370945
I have been using batch_norm as described in this thread (with a tf.bool for training; and ops.GraphKeys.UPDATE_OPS) and everything works.,Usage,False,138,NONE,False,False,False,0.6111111111,0.08461538462,0.5353319058,0.2,0.4918247108,0.5081752892,0.0300603195,0.001170108729
It is a bit hard to follow what you have done SCREEN_NAME .,Social Conversation,False,59,MEMBER,False,False,False,0.2926829268,0.1237113402,0.6982248521,0.2,0.850408121,0.149591879,7.362329309e-05,1.730326181e-05
generator?,Motivation,False,10,NONE,False,False,False,0.03333333333,0.01492537313,0.1553398058,0.4857142857,0.04064994448,0.9593500555,0.2125437083,0.01543061897
As you mentioned that would be heaven to see this code just work: CODE,Motivation,True,70,CONTRIBUTOR,False,False,False,0.7777777778,0.09150326797,0.8360128617,0.75,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
The JVMTI ExceptionCatch event already relies on the stack map at the catch point and gets the bytecode PC information from getCurrentByteCodeIndexAndIsSameReceiver.,Investigation and Exploration,False,165,CONTRIBUTOR,False,False,False,0.34375,0.34375,0.2727272727,0.09219858156,0.000716727624,0.9992832724,0.003714710253,0.00734286415
#3463 allows merging the catch map if the previous one has identical bytecode info and GC info.,Solution Discussion,False,95,CONTRIBUTOR,False,False,False,1.0,0.265625,0.3333333333,0.4397163121,0.7598910366,0.2401089634,0.001158893425,0.0002837124983
"In the meantime, a workaround solution was added to the 0.24 release (#11431) to gracefully fail the compilation when this incongruous state is detected.",Workarounds,False,153,CONTRIBUTOR,False,False,False,1.0,0.3870967742,0.6,0.5737704918,0.6994168402,0.3005831598,0.04797128298,0.008864014105
@kdvolder Can you try to reproduce the issue with the CODE set so that the cores will be captured?,Bug Reproduction,True,98,MEMBER,False,False,False,0.9047619048,0.1919191919,0.3333333333,0.5754385965,0.2049075531,0.7950924469,0.01382387628,0.003692040835
"The change to use ""multiheap,considersize"" is merged to the head stream, but not yet to the 0.20.0 branches",Action on Issue,False,107,CONTRIBUTOR,True,False,False,1.0,0.3064516129,1.0,0.9915611814,0.9370103887,0.06298961129,0.09372347346,0.4337999574
"Multiplying each individual vector by 10 doesn't work, but duplicating the date does.",Investigation and Exploration,False,85,NONE,False,False,False,0.6842105263,0.1830985915,0.1169590643,0.6,0.1546493757,0.8453506243,5.56302982e-05,0.007793915485
I see in the logs there an alarming number of fails for a final release :(((,Potential New Issues and Requests,False,76,MEMBER,False,False,False,1.0,0.2352941176,0.1056910569,0.6666666667,0.2704545226,0.7295454774,0.02725455123,0.002183761982
Keep in mind it wouldhave to be a backwards compatible change.,Potential New Issues and Requests,False,62,CONTRIBUTOR,False,False,False,0.2820512821,0.01591895803,0.3135313531,1.0,0.07120685343,0.9287931466,0.01223409639,0.0001133215202
"If want the ability to process both, we can add a boolean keyword to specify the input data type (for now I use CODE, but other ideas are CODE,  ...)",Solution Discussion,True,149,CONTRIBUTOR,True,False,False,0.9090909091,0.46875,0.1617647059,0.5,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"There is this exception being thrown:
CODE",Investigation and Exploration,True,43,CONTRIBUTOR,False,False,False,0.380952381,0.1,1.0,0.6323529412,0.8717852336,0.1282147664,0.2743165754,0.001670230889
So is the workaround to downgrade numpy?,Workarounds,False,40,NONE,False,False,False,0.3181818182,0.07216494845,0.5147928994,0.3333333333,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
"@tomtung â I think this is the sort of solution you were looking for, since this makes it a bit easier to control things manually.",Workarounds,False,130,MEMBER,False,False,False,0.7575757576,0.4032258065,0.6475770925,0.25,0.288728579,0.711271421,0.1151253204,0.02221386295
"1) e.g.  I_32 minAOT;
it shows in superset.dat:
F|minAOT|minAOT|I32|I32

2) e.g.  const UDATA _",Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,1.0,0.1525423729,0.5,0.4363636364,0.4193659102,0.5806340898,0.0005917357025,0.000275958121
"If we can't reproduce it locally, I suggest we add more information to the assert, and wait until next crash.",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.4651162791,0.3225806452,0.9,0.3879781421,0.6389467947,0.3610532053,0.00359446461,0.01517828221
"@JamesKingdon That didn't fix it either, but switching to CODE did.",Solution Discussion,True,67,NONE,True,False,False,0.7857142857,0.1641791045,0.5,0.1731843575,0.002376484669,0.9976235153,0.0004214688837,5.77e-05
Code is from a tutorial : https://machinelearningmastery.com/use-keras-deep-learning-models-scikit-learn-python/,Observed Bug Behaviour,False,112,NONE,False,False,False,0.2608695652,0.0618556701,0.8905325444,0.6,0.9768282061,0.02317179392,0.0165742005,0.01231978335
CODE just prevents fit to forget about the previous state (assuming that the inner state of the model will likely make it converge faster to the solution of the new call with the new hyperparameter).,Solution Discussion,True,199,MEMBER,False,False,False,1.0,0.4929577465,0.2971014493,1.0,0.03951089693,0.9604891031,3.579484417e-05,4.948110811e-06
-         Possible solution:,Solution Discussion,False,28,CONTRIBUTOR,True,False,False,0.06976744186,0.046875,0.3529411765,0.5,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
This is done because there is not a guarantee that the unloaded class(es) and their respective methods will still be alive by the time that the classloader is unloaded.,Investigation and Exploration,False,168,CONTRIBUTOR,False,False,False,1.0,0.3186813187,1.0,0.5244755245,0.8539779528,0.1460220472,0.001070700924,0.001618376001
@mpirvu,Social Conversation,False,7,CONTRIBUTOR,False,False,False,0.03225806452,0.007299270073,1.0,0.8401486989,0.06284506069,0.9371549393,0.007031224118,0.002372867318
"I do not understand what ""not alive class"" means.",Social Conversation,False,49,CONTRIBUTOR,False,False,False,0.140625,0.0989010989,0.2,0.527972028,0.8542739958,0.1457260042,0.001618376001,0.002043575217
"I see a couple of spots in the VM that load it, these could be changed to load from a particular location, similar to #3650.",Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,1.0,0.2525252525,0.4,0.9473684211,0.9078950378,0.09210496222,0.001248242127,0.002277636608
Could we get rid of the mutex?,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.25,0.07692307692,0.5,0.6538461538,0.8575208872,0.1424791128,0.0007841536263,0.009320490058
"No MALLOCOPTIONS (aix71p7rt4)
CODE

ulimit -m unlimited;MALLOCOPTIONS=multiheap (aix71p7rt4)
OOM

ulimit -m unlimited;MALLOCOPTIONS=""multiheap:18"" (aix71p7rt14)
CODE

limit -m unlimited;export MALLOCOPTIONS=""multiheap:18,considersize"" (aix71p7rt4)
CODE",Testing,True,262,CONTRIBUTOR,True,False,False,1.0,0.4516129032,1.0,0.7426160338,0.5560450992,0.4439549008,0.2648672615,0.0167902992
"In other words, if CODE is true, then we should a CODE function for training and another one for testing.",Usage,True,105,NONE,False,False,False,1.0,0.07692307692,0.9122055675,0.5,0.7489109604,0.2510890396,0.04599776246,0.3206669123
I don't believe the CODE condition is doing anything unexpected.,Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,0.3125,0.125,0.5,0.5196078431,0.5905229062,0.4094770938,0.002367610279,8.99e-05
I am trying this (which builds tensorflow manually)[link] URL ,Solution Discussion,False,62,NONE,False,False,False,0.6428571429,0.07086614173,0.5190615836,0.5,0.4059717933,0.5940282067,0.001371752256,0.0230868493
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly/87
osx1013-x86-4",Testing,False,105,CONTRIBUTOR,True,False,False,1.0,0.08620689655,1.0,0.02752293578,0.0008915394961,0.9991084605,0.005144640352,5.32e-05
Note also that command line option must fully match for hints to be taken into account.,Solution Discussion,False,87,CONTRIBUTOR,False,False,False,0.5,0.1095890411,0.1428571429,0.5195530726,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
I'd rather document it well and let the user decides whatis good for oneself.,Solution Discussion,False,77,MEMBER,False,False,False,1.0,0.2112676056,0.7572463768,1.0,0.0743553691,0.9256446309,0.0001053842324,3.965507246e-06
@mashu Well the other option is that the community provides pre-built [wheels] URL .,Solution Discussion,False,84,NONE,True,False,False,1.0,0.1102362205,0.8504398827,0.5,0.8466767537,0.1533232463,0.1779957627,0.09933113212
"Sorry, I do not follow.",Social Conversation,False,23,CONTRIBUTOR,False,False,False,1.0,0.05494505495,0.5,0.5034965035,0.8537820938,0.1462179062,0.0006108387286,0.001070700924
"But after I do the revision, It can work.",Solution Discussion,False,41,NONE,False,False,False,0.75,0.01302460203,0.6501650165,0.8,0.2038763093,0.7961236907,0.028390304,0.04042101496
"@lesteve I built scikit-learn in two conda virtual environments from source code (branch 0.18 release), the one uses MKL indeed throws the error; the one uses libBLAS does not throw error.",Investigation and Exploration,False,188,NONE,False,False,False,1.0,0.4507042254,0.6023391813,0.5,0.457092211,0.542907789,0.009630545628,0.001200894845
Love the take -> personal_stance.,Social Conversation,False,33,NONE,False,False,False,0.8,0.1052631579,0.299270073,1.0,0.003865952984,0.996134047,1.244572143e-05,4.667145537e-06
"If nothing is written to the NLP class, then serialization with Pickle is super simple: we can just tell it to load with the arguments originally passed to the constructor.",Solution Discussion,False,172,MEMBER,False,False,False,0.1960784314,0.1960784314,0.1093247588,1.0,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
"@jasonkriss , I see - thanks!",Social Conversation,False,29,NONE,False,False,False,0.3333333333,0.05970149254,0.7128987517,0.3333333333,0.5523403498,0.4476596502,0.004343090399,0.001784978089
3.         A way to control and monitor the epochs - currently they are rather deeply hidden and unaccessible even simple checks.,Motivation,False,129,NONE,False,False,False,0.488372093,0.3134328358,0.3495145631,0.75,0.2977348857,0.7022651143,0.1209962692,0.001143668596
Changing CODE to CODE looks to resolve the issue on Power.,Solution Discussion,True,58,CONTRIBUTOR,False,False,False,0.6875,0.2340425532,0.5,0.6115384615,0.5145384234,0.4854615766,0.04264807325,0.3869983485
"Hi,",Social Conversation,False,3,NONE,False,False,False,0.03125,0.01408450704,0.9210526316,0.125,0.8033826633,0.1966173367,0.8667419106,0.0005974029784
i can at least see why you have the second nop:  to restore TOC after return.,Social Conversation,False,77,CONTRIBUTOR,False,False,False,1.0,0.1328125,0.3333333333,0.4222222222,0.03721019966,0.9627898003,0.0001129474738,4.44e-05
@jimfleming you're right again ;),Social Conversation,False,33,NONE,False,False,False,0.3333333333,0.07462686567,0.5090152566,0.6666666667,0.4431919084,0.5568080916,0.01145704499,0.1250288844
"So, if you ever want to upgrade, you now know what to do!",Social Conversation,False,57,NONE,False,False,False,1.0,0.1023622047,0.57771261,0.6666666667,0.4315385746,0.5684614254,0.0001996620535,0.2835245529
Thanks for the workarounds.,Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.4,0.05970149254,0.5686546463,1.0,0.4614215074,0.5385784926,0.008566062512,0.01269843694
For those of you more serious than this troll Checkout the https://deeplearnjs.org ...,Solution Discussion,False,86,NONE,False,False,False,0.8,0.1643835616,0.8297413793,0.75,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
declared output 'external/local_config_cuda/cuda/cuda/lib/libcudnn.so.7' is a dangling symbolic link,Solution Discussion,False,100,NONE,False,False,False,1.0,0.1023622047,0.9736070381,0.5,0.9717378488,0.02826215116,0.5218093819,0.05092861342
"32,buckets have more fragmentations leading to the momentarily exceeding.",Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,0.2368421053,0.1451612903,0.5,0.1561181435,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
Thank you very much.,Social Conversation,False,20,NONE,False,False,False,0.125,0.01538461538,0.312633833,1.0,0.2659544384,0.7340455616,0.1426765631,0.1141986754
one thing I should've mentioned is that I installed Spyder within the python env I was working in.,Solution Discussion,False,98,NONE,False,False,False,0.7916666667,0.1958762887,0.550295858,0.25,0.848593974,0.151406026,0.0001585701904,6.418695628e-05
"For me, I installed cuda toolkit 8.0, and cudnn 5.1.",Bug Reproduction,False,52,NONE,False,False,False,0.7142857143,0.07874015748,0.04985337243,0.6666666667,0.05657498818,0.9434250118,0.2905541361,0.02745205338
I'm guessing the core file(s) aren't readable because you need the jextract data from the machine that produced the core file.,Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,1.0,0.4468085106,0.3333333333,0.1384615385,0.07022468829,0.9297753117,0.04938589637,0.1311728793
"Actually, we don't even use the nomenclature of an epoch anymore, since the same data is never seen twice, and above mentioned generation/sampling goes beyond the usual data augmentation.",Motivation,False,187,CONTRIBUTOR,False,False,False,0.625,0.447761194,0.04715672677,0.3333333333,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
**EDIT:**,Social Conversation,False,9,NONE,False,False,False,0.01754385965,0.003846153846,0.3276231263,0.4615384615,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
The destroy is waiting for the current thread to be the only non-daemon thread left in the VM.,Observed Bug Behaviour,False,94,CONTRIBUTOR,False,False,False,1.0,0.2533333333,0.5,0.4745762712,0.03581262904,0.964187371,0.001645470656,0.00168726386
"It failed on two of the last four jdk11 nightlies, hasn't been seen on jdk14 (the jdk_nio test fails in other ways though).",Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.2527472527,0.5,0.02097902098,0.002154449057,0.9978455509,0.004487700419,0.003086545757
That's a pretty clear signal that we need to change.,Solution Discussion,False,52,MEMBER,False,False,False,0.7142857143,0.1030927835,0.6420118343,0.75,0.8491787771,0.1508212229,0.000108726466,0.001720552123
This first draft queries CODE for whether to preserve bytecode info; it will be updated once we decide the proper API.,Solution Discussion,True,118,CONTRIBUTOR,False,False,False,1.0,0.328125,1.0,0.2553191489,0.269831671,0.730168329,0.6410820506,1.0
CODE,Solution Discussion,True,4,NONE,False,False,False,0.07142857143,0.007874015748,0.2463343109,1.0,0.3352318187,0.6647681813,0.0004392565177,0.03156952861
"The documentation of CODE is:
https://github.com/eclipse/openj9/blob/269003cc717d8fb7191426c71bcbafa86b296c15/runtime/shared_common/shrinit.cpp#L1792-L1795

It won't be able to return the record in an error case.",Investigation and Exploration,True,215,CONTRIBUTOR,False,False,False,1.0,0.3225806452,1.0,0.8633879781,0.9695463096,0.03045369037,0.0003529530185,7e-05
"@yarikoptic, we would like to release.",Task Progress,False,38,MEMBER,False,False,False,0.2727272727,0.08823529412,0.08130081301,0.5,0.1254523425,0.8745476575,0.1410011326,0.4013025222
"The only hooks that are firing at the client are:
CODE",Investigation and Exploration,True,55,CONTRIBUTOR,True,False,False,1.0,0.06349206349,1.0,0.1028571429,0.1341344027,0.8658655973,5.38e-05,7.12e-05
"@supermeatboy82 , Could you share your code?",Solution Discussion,False,44,NONE,False,False,False,1.0,0.008683068017,0.696369637,1.0,0.2568984803,0.7431015197,0.03955727952,0.02156039818
"Right, I don't think the value of zero matters.",Potential New Issues and Requests,False,47,MEMBER,False,False,False,0.18,0.1323529412,0.3455284553,0.5,0.3594594146,0.6405405854,0.0004426917871,0.001263501754
"This means that at least the string-to-int mapping will stay consistent, even if strings are passing out of memory.",Solution Discussion,False,115,MEMBER,False,False,False,0.525,0.3387096774,0.4185022026,0.9444444444,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"As SCREEN_NAME  pointed out earlier it provides a sub-sampling strategy, for instance, if your training data doesn't fit in main memory.",Solution Discussion,False,136,CONTRIBUTOR,True,False,False,0.7931034483,0.323943662,0.7971014493,1.0,0.07514035852,0.9248596415,0.0008481974348,0.003576957722
"For example, assuming a 10 line file, you'd run with:
CODE
and if it failed after a sufficient number of runs, you'd know the problematic methods were in the first 5 lines.",Investigation and Exploration,True,174,MEMBER,False,False,False,0.6,0.2706766917,0.75,0.4351145038,0.4821785449,0.5178214551,0.009122488321,0.000823259913
@cathyzhyi  Any update on the tactical fix?,Task Progress,False,43,NONE,False,False,False,1.0,0.06015037594,0.5,0.9643765903,0.9504186061,0.04958139394,0.1687874943,0.001789180059
"Though it is most likely related to joblibs, since _it happens only when n_jobs is more than 1_, runs fine with CODE.",Investigation and Exploration,True,117,NONE,False,False,False,1.0,0.2268041237,0.2189349112,0.3333333333,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
See eg http://contrib.scikit-learn.org/categorical-encoding/onehot.html,Solution Discussion,False,71,CONTRIBUTOR,True,False,True,3.0,0.046875,0.9889705882,2.0,1.0,0.0,0.0009246776239,0.0
Same here.OSX 10.12.5,Bug Reproduction,False,21,NONE,False,False,False,1.0,0.0412371134,0.2869822485,1.0,0.8099999958,0.1900000042,0.004286302035,0.002231981712
"When used with a recent-enough OpenJ9 VM, which supports AGCT, the VM either hangs or crashes, typically with an OutOfMemoryError message.",Bug Reproduction,False,138,NONE,True,True,False,0.431372549,0.2115384615,0.5,0.03314917127,0.0,1.0,0.0,0.01118041169
unloading but no on its **Class** unloading.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.07692307692,0.07692307692,0.1785714286,0.6748251748,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
i am not sure why it was put on in the first place.,Social Conversation,False,51,CONTRIBUTOR,False,False,False,1.0,0.07471264368,0.6666666667,0.625,0.7727935619,0.2272064381,8.36e-05,8.08e-05
"The new code should have to loop through the inlines to find the appropriate one, no?",Solution Discussion,False,85,MEMBER,False,False,False,0.7619047619,0.25,1.0,0.9574468085,0.9833151366,0.01668486342,0.0004760599547,0.0005409772213
"Just to chime in: Based on my experience with Spark, it sounds like loading English locally at each worker is best.",Solution Discussion,False,115,NONE,False,False,False,0.75,0.137254902,0.1125401929,0.06666666667,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
+100,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.4698275862,1.0,0.5588204194,0.4411795806,0.05261868429,0.07356638806
"Copying from above:

> 0x7ffff64376e4 <fast_jitInstanceOf(J9VMThread*, J9Class*, j9object_t)>          addis   r2,r12,60                                                      │*     
   │0x7ffff64376e8 <fast_jitInstanceOf(J9VMThread*, J9Class*, j9object_t)+4>        addi    r2,r2,-199",Social Conversation,False,287,CONTRIBUTOR,False,False,False,1.0,0.1875,1.0,0.4722222222,0.03778350873,0.9622164913,0.0003858680808,2.53e-05
"Well, the good news is that nowadays joblib gives a meaningful errormessage on such crash, rather than a fork bomb.",Solution Discussion,False,115,MEMBER,False,False,False,1.0,0.206185567,0.1094674556,1.0,0.009487034877,0.9905129651,2.548804237e-05,4.648637502e-06
Is there a corner case in the whole OSR infra when it comes to these special primitives?,Solution Discussion,False,88,CONTRIBUTOR,False,False,False,0.7727272727,0.1827956989,0.6666666667,0.6370656371,0.5537917672,0.4462082328,0.003696630136,0.001219776039
"Fixing in
https://github.com/ibmruntimes/openj9-openjdk-jdk8/pull/389
https://github.com/ibmruntimes/openj9-openjdk-jdk8/pull/390
https://github.com/ibmruntimes/openj9-openjdk-jdk11/pull/279
https://github.com/ibmruntimes/openj9-openjdk-jdk11/pull/280
https://github.com/ibmruntimes/openj9-openjdk-jdk14/pull/29
https://github.com/ibmruntimes/openj9-openjdk-jdk14/pull/30
https://github.com/ibmruntimes/openj9-openjdk-jdk/pull/181",Task Progress,False,437,CONTRIBUTOR,True,False,False,1.0,0.2580645161,1.0,0.3037974684,0.2620455761,0.7379544239,0.2853709122,0.02927509429
"It's hard to pick up diagnostic files from nightly builds at the best of times and with https://github.com/AdoptOpenJDK/openjdk-build/issues/1778, it makes it near impossible.",Task Progress,False,175,NONE,True,False,False,0.8214285714,0.3709677419,0.3333333333,0.1857923497,0.3860581428,0.6139418572,0.01216692501,0.3080636089
I have been searching hours on this problem and can consistently replicate it: CODE,Observed Bug Behaviour,True,83,NONE,True,True,False,0.6086956522,0.1443298969,0.005917159763,0.2857142857,0.0,1.0,0.0,5.796890697e-05
"test_pairwise_parallel I had missed, but I also suspect it's something we'll find impossible to debug...",Potential New Issues and Requests,False,104,MEMBER,False,False,False,1.0,0.2205882353,0.5081300813,0.5,0.5662694188,0.4337305812,0.009345907346,0.003751139534
PR in ~#9734~ #9830,Potential New Issues and Requests,False,19,MEMBER,False,False,False,0.2105263158,0.05882352941,0.418699187,0.8888888889,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
This result confirms my hypothesis but also shows that the memory increase really isn't all that significant (especially at the relatively low volume that I am currently processing).,Investigation and Exploration,False,182,NONE,True,True,False,0.4912280702,0.4516129032,0.03964757709,0.5294117647,0.0,1.0,0.0,0.0008157310994
I guess what I was proposing entails always including the original text as part of (de)serialization.,Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.64,0.2580645161,0.5991189427,0.8333333333,0.2194242891,0.7805757109,0.002309046196,0.1481803025
"I found out that the value of CODE matters a lot (they use exponential decay to compute moving average and moving variance), with a CODE setting closer to 1.0 (i.e. CODE), moving mean drops to a value closer to 0.",Usage,True,213,CONTRIBUTOR,False,False,False,1.0,0.1538461538,0.4282655246,0.3333333333,0.3796199321,0.6203800679,0.003216099592,0.003984639748
"CODE

https://github.com/eclipse/omr/blob/7e2e1c4bbb916130d1578f8b2560220af97d1a35/gc/base/standard/ParallelGlobalGC.cpp#L454-L465

Looking through the classunload monitors on the JIT side to see where they're reserved.",Solution Discussion,True,223,CONTRIBUTOR,False,False,False,0.4864864865,0.1978021978,1.0,0.9300699301,0.8786230746,0.1213769254,0.003869158807,0.001947289162
"\* this only case = integer data with inferred categories that are not consecutive range, and where you cannot / don't want to set the categories manually or set handle_unknown to ignore.",Solution Discussion,False,187,CONTRIBUTOR,True,False,False,0.46875,0.46875,0.4889705882,0.8,0.07437602253,0.9256239775,0.0003197521392,0.006398297259
java -version gave the same Illegal Instruction as with xlC 16(xlclang).,Bug Reproduction,False,72,CONTRIBUTOR,False,False,False,0.5,0.0632183908,1.0,0.3235294118,0.7589566145,0.2410433855,3.37e-05,1.24e-05
- I didn't change the STS.ini file to point JDK 8 but let it pick it up from my path.,Investigation and Exploration,False,85,NONE,True,False,False,0.4871794872,0.1919191919,1.0,0.3368421053,0.117111595,0.882888405,0.00603452119,0.003554247873
multiheap is multiheap:32  (the default is 32 heaps).,Testing,False,53,CONTRIBUTOR,False,False,False,1.0,0.1451612903,1.0,0.3713080169,0.2946115703,0.7053884297,0.001306819673,0.000466721312
i guessed we are mixing up the meaning of direct/indirect call here.,Social Conversation,False,68,CONTRIBUTOR,False,False,False,0.4333333333,0.1015625,0.6666666667,0.4111111111,0.03713237758,0.9628676224,0.000131199442,0.0001129474738
"How do you use such stores in spaCy, what metrics do you employ, what API signatures?",Potential New Issues and Requests,False,85,CONTRIBUTOR,False,False,False,0.5714285714,0.4210526316,0.7299270073,0.6666666667,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
"Further examination yields that the known object table was not recorded for the method handles, so we weren't able inline the method handle calls.",Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,0.75,0.1804511278,0.4285714286,0.8982188295,0.859885377,0.140114623,0.0001189516558,0.06424166071
"Here is our test:nlp = spacy.en.English()nlp.matcher.add('splash', 'my entity', {},[ [{LEMMA: 'splash'}, {LEMMA: 'on'}]])nlp('splash On')",Potential New Issues and Requests,False,137,NONE,False,False,False,0.1428571429,0.1368421053,0.8947368421,1.0,0.3119208037,0.6880791963,0.06317627064,0.03932243631
Indeed I was using an older image (jessie).,Bug Reproduction,False,43,MEMBER,False,False,False,0.4705882353,0.1176470588,0.07317073171,0.5,0.0777713839,0.9222286161,0.004140653057,0.1410011326
"If so, let's identify it and try to solve it.",Social Conversation,False,45,MEMBER,False,False,False,0.5,0.08474576271,1.0,0.9878787879,0.9091990739,0.09080092608,0.0003067487503,0.000301424055
Say I suspect that some of the values from 1...1024 are meaningful.,Potential New Issues and Requests,False,67,NONE,False,False,False,0.619047619,0.203125,0.875,0.4,0.2637770953,0.7362229047,7.119163405e-05,0.0001159406612
@zl-wang,Contribution and Commitment,False,8,CONTRIBUTOR,False,False,False,0.1333333333,0.01149425287,1.0,0.06985294118,0.7086383076,0.2913616924,0.003001622719,0.005841410604
"We then start a new backup from the original strings data, which adds entries for the next 1000 documents, so that when it takes over, those recent documents' strings will be available.",Solution Discussion,False,185,MEMBER,False,False,False,1.0,0.5161290323,0.9251101322,1.0,0.6578010252,0.3421989748,0.0002101432121,0.0002159883295
"From what Alen showed me, it comes from CODE.",Investigation and Exploration,True,45,CONTRIBUTOR,False,False,False,0.5294117647,0.1914893617,0.3333333333,0.6307692308,0.6341947438,0.3658052562,0.2686456518,0.0113804523
"The total number of inlined methods for all the compiles in any particular run went from being in the range 100000 to 150000 to about 270000 to 400000, while the total number of compiles fell by about 70% to 80%.",Investigation and Exploration,False,212,MEMBER,False,False,False,0.8888888889,0.5970149254,1.0,0.5317919075,0.009579724698,0.9904202753,0.003668136449,0.001720565783
I tried this same code on a Linux and it runs well.,Bug Reproduction,False,51,NONE,True,False,False,0.6666666667,0.1237113402,0.1479289941,0.75,0.009500960535,0.9904990395,1.797870487e-05,0.006789037082
"@pshipton we (Marius and I) were also wondering about the same thing, i.e. potential issues with storing as many distinct paths as can be fit.",Solution Discussion,False,142,CONTRIBUTOR,False,False,False,0.7352941176,0.1712328767,0.5,0.7150837989,0.2631923042,0.7368076958,7.11e-05,0.001870010978
"Then, with the following code, creating the model was ok, but I couldn't share the variable with another model.",Solution Discussion,False,111,NONE,False,False,False,0.7307692308,0.02749638205,0.4884488449,0.375,0.08979967049,0.9102003295,0.01683649271,0.03567836101
Same for this machine.,Investigation and Exploration,False,22,CONTRIBUTOR,False,False,False,0.3636363636,0.05970149254,0.3333333333,0.06936416185,0.002019093939,0.9979809061,7.29e-06,0.001425190268
@amicic @dmitripivkine,Contribution and Commitment,False,22,CONTRIBUTOR,False,False,False,0.04166666667,0.01369863014,1.0,0.3072625698,0.0320267529,0.9679732471,0.009905059007,0.0001774088301
[Snap.20210316.184837.7.0248.trc.gz] URL,Investigation and Exploration,False,41,NONE,True,False,False,0.0350877193,0.02666666667,1.0,0.1920903955,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
(Or only depending on a small set of symbols that are future proof),Solution Discussion,False,67,CONTRIBUTOR,False,False,False,0.52,0.2096774194,0.7356828194,1.0,0.2945657166,0.7054342834,0.000146521357,8.318051723e-06
Here is my system info:OS X El Capitan Version 10.11.4Python 2.7.12sklearn 0.18 (got the the same error on sklearn 0.17.1 as well)numpy 1.11.1 ( got the same error on numpy 1.11.2 as well)scipy 0.18.1,Testing,False,200,NONE,False,False,False,1.0,0.4788732394,0.3567251462,0.5,0.409179596,0.590820404,0.4852296023,0.01767922574
https://github.com/eclipse/openj9-omr/pull/81,Action on Issue,False,45,CONTRIBUTOR,False,False,False,0.125,0.02127659574,1.0,0.9923076923,0.8147080379,0.1852919621,0.2393844938,1.0
"1.         Can use whatever tools/languages to produce data from any sources, as long as they're finally sent with certain message protocol.",Motivation,False,140,CONTRIBUTOR,False,False,False,0.7666666667,0.3432835821,0.1109570042,0.5384615385,0.008365735399,0.9916342646,0.03692313957,0.0188753671
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3663793103,1.0,0.4292343583,0.5707656417,0.02148838249,0.06064343644
@kmhofmann I think you can map one example to multiple examples with CODE.,Usage,True,74,NONE,False,False,False,0.7222222222,0.1940298507,0.6740638003,0.5,0.5120352412,0.4879647588,0.003143434467,0.0002672122887
It's tricky to get right:,Solution Discussion,False,25,NONE,False,False,False,0.3846153846,0.03267973856,0.8617363344,0.3333333333,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
"The cells passed here are used for both the backward and forward phase of the legacy seq2seq model, which throws an error because of same cells being used with different scopes.",Investigation and Exploration,False,177,NONE,False,False,False,1.0,0.04486251809,0.3630363036,1.0,0.07179521051,0.9282047895,0.000334150158,3.547972203e-05
You could apply it to jdk13 in a personal build.,Solution Discussion,False,48,CONTRIBUTOR,False,False,False,0.5882352941,0.05747126437,0.5,0.3088235294,0.7589445999,0.2410554001,4.13e-05,3.37e-05
"Unfortunately my day job is not coding and it requires proficiency in C++, which I personally don't have.",Social Conversation,False,105,NONE,False,False,False,0.4090909091,0.2465753425,0.5646551724,0.6,0.6335331717,0.3664668283,0.0006531080173,0.08742750468
As update to this issue - we have open-sourced the Node.js binding for TFJS: https://github.com/tensorflow/tfjs-node,Task Progress,False,116,CONTRIBUTOR,False,False,False,1.0,0.2054794521,0.9461206897,0.5,0.9554426769,0.04455732307,0.5087182506,0.0005732123907
![pipe_performance] URL ,Solution Discussion,False,24,CONTRIBUTOR,False,False,False,0.07407407407,0.01307189542,0.9131832797,1.0,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
@mebble just make a conda virtual environment for python 3.6.,Solution Discussion,False,61,NONE,True,False,False,0.9090909091,0.07874015748,0.9560117302,0.5,0.929304338,0.07069566203,0.003939258366,8.356226683e-05
"With CODE, the segfault does not happen.",Solution Discussion,True,40,CONTRIBUTOR,False,False,False,1.0,0.0752688172,0.5,0.2471042471,0.3460120034,0.6539879966,0.01282443431,0.1430196731
Figuring out why CODE was not invoked will help further the investigation.,Investigation and Exploration,True,74,CONTRIBUTOR,False,False,False,0.6315789474,0.1290322581,1.0,0.5907335907,0.55101082,0.44898918,0.003338530748,0.005248394148
"So with this test, I can also confirm that CODE is the most likely suspect, or, at the very least, does something which causes something else to fail.",Investigation and Exploration,True,150,NONE,True,False,False,0.6829268293,0.3733333333,1.0,0.7796610169,0.08541061734,0.9145893827,2.19e-06,2.98e-05
"So it explains why the method didn't show up as compiled in the core dump (the DDR got corrupted in parsing this method)
CODE",Investigation and Exploration,True,126,CONTRIBUTOR,False,False,False,0.3676470588,0.1879699248,0.5,0.4198473282,0.480594089,0.519405911,0.009466671463,0.009122488321
We do not expect afix for CUDA 9.0.x.,Motivation,False,37,NONE,False,False,False,0.1951219512,0.06299212598,0.4486803519,0.7777777778,0.380459606,0.619540394,0.0006322631694,0.001605430808
"I don't see any obvious reason why this would cause corruption, but in general it's not safe to use these APIs from signal handlers.",Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.7458563536,0.2977730208,0.7022269792,0.0002211070502,0.01204726646
I think the time has come to collapse all source versions of the redirectors to one that yields the right content for the version of Java being built.,Solution Discussion,False,150,CONTRIBUTOR,False,False,False,1.0,0.2372881356,0.5,0.7454545455,0.554332487,0.445667513,0.001135549147,0.0236395635
The number of elements generated each time is variable and conditional on the properties of element CODE.,Motivation,True,105,CONTRIBUTOR,False,False,False,0.3695652174,0.2537313433,0.6726768377,1.0,0.5116443977,0.4883556023,0.04958391229,0.003143434467
Thought it was German that made it break.,Investigation and Exploration,False,41,NONE,False,False,False,0.2666666667,0.08421052632,0.2,0.4,0.08711286573,0.9128871343,0.02247209918,0.04915356896
Let's see when it cracks.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.3125,0.08064516129,1.0,0.1308016878,0.03801766169,0.9619823383,0.001350574796,0.04168404717
This description can certainly be added.,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.1578947368,0.1276595745,0.1111111111,0.8730769231,0.7299060094,0.2700939906,0.01554507959,0.00748487997
I would also be against defensive.,Solution Discussion,False,34,MEMBER,False,False,False,0.2608695652,0.08450704225,0.7608695652,0.3333333333,0.07435902202,0.925640978,3.965507246e-06,0.0008481974348
I would settle for multiheap setting as a fix.,Solution Discussion,False,46,CONTRIBUTOR,False,False,False,0.1451612903,0.1451612903,0.8,0.2953586498,0.2206084978,0.7793915022,0.01185472132,0.2853709122
"In particular, with XSLTC, there are attributes that can be used to indicate that generated classes should be written to a particular directory or a jar file - in particular [CODE, CODE, CODE](https://xml.apache.org/xalan-j/xsltc_usage.html#api-attributes).",Investigation and Exploration,True,257,MEMBER,False,False,False,1.0,0.2706766917,0.5714285714,0.09160305344,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
Cuda is only compatible with Nvidia graphics card.,Solution Discussion,False,50,NONE,False,False,False,0.4444444444,0.06299212598,0.9824046921,0.25,0.9758786978,0.02412130216,0.05092861342,0.2966697109
"If you just need a parser, try [Alpino] URL .",Solution Discussion,False,45,NONE,False,False,False,0.6428571429,0.15,0.5517241379,1.0,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
"After adding the printfs so far I have not been able to reproduce this issue on xlinux with 80x grinder

CODE",Bug Reproduction,True,111,CONTRIBUTOR,False,False,False,0.6111111111,0.2391304348,1.0,0.3962264151,0.4653466555,0.5346533445,0.004763623737,0.09933594565
If you decide to close the issue as 'cannot reproduce'.,Social Conversation,False,55,NONE,True,False,False,0.3055555556,0.1111111111,0.9285714286,0.5263157895,0.1973084735,0.8026915265,0.001977734278,0.003898730278
If the test is running for over an hour across multiple platforms I think it needs to be re-tuned.,Solution Discussion,False,98,CONTRIBUTOR,True,False,False,0.9523809524,0.2985074627,1.0,0.1387283237,0.003372681321,0.9966273187,2.44e-05,4.75e-06
What features do you miss from other systems?,Motivation,False,45,CONTRIBUTOR,True,True,False,0.170212766,0.1194029851,0.03883495146,0.9333333333,0.0,1.0,0.0,0.000766008561
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3642241379,1.0,0.42804013,0.57195987,0.001093308575,0.02148838249
"BTW, do I need to retrain the model using decay=0.9 from scratch?",Usage,False,65,NONE,False,False,False,0.3243243243,0.04615384615,0.886509636,0.6666666667,0.7404633962,0.2595366038,0.09747656054,0.006199252888
With the limitfile or without.,Bug Reproduction,False,30,CONTRIBUTOR,False,False,False,0.125,0.03759398496,0.2307692308,0.6513994911,0.6946068931,0.3053931069,9.44e-05,0.004019012644
@KaisJM I think it is more useful if you start from your freezing script and manage to simplify and post a fully stand-alone that freezes for you.,Bug Reproduction,False,146,MEMBER,False,False,False,1.0,0.2886597938,0.7869822485,1.0,0.8505114334,0.1494885666,0.0001636161473,7.813286879e-05
"it still means that multiheap setting increases RSS, at least memory consumption (eventually over the paging space).",Testing,False,116,CONTRIBUTOR,False,False,False,1.0,0.2741935484,0.5,0.6919831224,0.5111305761,0.4888694239,0.1405385381,0.04003593754
Also tried with 20 times for (CODE) but the exception didn't show up (there were some dumps generated but has nothing to with CODE).,Bug Reproduction,True,132,CONTRIBUTOR,False,False,False,1.0,0.1804511278,0.5,0.5674300254,0.5844251894,0.4155748106,0.02434789149,9.4e-05
JIT-ed code doesn't set up either r12 or r2 definitely.,Solution Discussion,False,55,CONTRIBUTOR,False,False,False,0.3333333333,0.0859375,0.6666666667,0.1666666667,0.02843923671,0.9715607633,0.0002282569671,0.0003038415884
Would be really interested to read something for the Python API + some example code.,Expected Behaviour,False,84,NONE,False,False,False,0.5,0.2089552239,0.2968099861,0.5714285714,0.2770987131,0.7229012869,0.2860540634,0.003376036402
"-         Within English, make the big objects transient (i.e., specify that via CODE for pickling).",Solution Discussion,True,100,NONE,False,False,False,0.3488372093,0.09803921569,0.2443729904,0.6842105263,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
I can even see if there's a way I can rig up a dummy system for the innards of this system so that I can provide you guys an open test case to poke at and use yourselves...,Contribution and Commitment,False,172,NONE,True,False,False,1.0,0.5671641791,1.0,0.7094972067,0.113102954,0.886897046,0.0002870125527,0.0001456610252
Work-arounds exist and have been listed in earlier posts.,Workarounds,False,57,MEMBER,False,False,False,0.5555555556,0.1030927835,0.3875739645,0.8,0.8130688094,0.1869311906,2.145525001e-05,0.001310816446
A segmentation fault occurs because the system was attempting to clear read-only memory[1].,Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,0.4516129032,0.2978723404,0.4074074074,0.7730769231,0.6986733294,0.3013266706,0.2919761514,0.1217072968
Can enable CODE by default?,Social Conversation,True,27,MEMBER,False,False,False,0.8333333333,0.03424657534,1.0,0.9888268156,0.9959782054,0.0040217946,0.08308572023,0.01208850295
"Hi guys,",Social Conversation,False,8,NONE,False,False,False,0.125,0.002894356006,0.8778877888,0.5,0.33386356,0.66613644,0.1696890683,0.04382956016
Tried for a bit to launch from terminal but don't seem to be getting the crash.,Investigation and Exploration,False,79,NONE,True,False,False,1.0,0.1616161616,0.5,0.7649122807,0.30598732,0.69401268,0.2876671246,0.001414404228
At least on my machine.,Observed Bug Behaviour,False,23,NONE,False,False,False,0.1428571429,0.05154639175,0.3076923077,0.4,0.8123334347,0.1876665653,1.255529445e-05,3.933462502e-05
"For a nonJITServer run, only one of the startPC isn't NULL
CODE",Investigation and Exploration,True,64,CONTRIBUTOR,False,False,False,0.5652173913,0.06878306878,1.0,0.4228571429,0.4127998443,0.5872001557,0.002068168866,0.001724646721
Jupyer notebook:CODE>>CODE,Bug Reproduction,True,26,NONE,False,False,False,0.1666666667,0.04225352113,0.8187134503,0.4666666667,0.6456610805,0.3543389195,1.0,4.677373331e-05
"This also explains why our test case would not fail when disabling inlining, as that would prevent inlining of the direct call which ultimately generates the sequence.",Investigation and Exploration,False,167,CONTRIBUTOR,False,False,False,0.8709677419,0.5744680851,0.6666666667,0.8,0.6986733294,0.3013266706,0.2919761514,0.1217072968
I'm using python3 and didn't tried with python2.,Usage,False,48,NONE,False,False,False,0.3636363636,0.1194029851,0.9348127601,0.6666666667,0.9701640056,0.02983599443,0.02053157431,0.0001913748963
"I don't remember when exactly these changes took place (they happened gradually), but I can check if I know exactly which images you are using.",Investigation and Exploration,False,143,CONTRIBUTOR,False,False,False,1.0,0.3125,1.0,0.04411764706,0.004949898627,0.9950501014,0.01246148827,0.08811482837
"The problem is not that it doesn't work, but that the distributed computing frameworks mentioned in this thread pickle and send over the spacy data models.",Solution Discussion,False,155,NONE,False,False,False,0.6842105263,0.1699346405,0.578778135,0.6153846154,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
"A simple thing to do is to convert all small values to strings, run DictVectorizer as above and then perform feature selection or just use your favorite classifier directly.",Potential New Issues and Requests,False,173,NONE,False,False,False,1.0,0.453125,0.8566176471,1.0,0.262961705,0.737038295,0.002558830732,0.003516053103
Some piece of information useful to have (just add what is missing to your earlier comment https://github.com/scikit-learn/scikit-learn/issues/2889#issuecomment-320885103): CODE,Investigation and Exploration,True,177,MEMBER,False,False,False,0.9,0.1855670103,0.3284023669,0.5,0.8123502768,0.1876497232,5.52274028e-06,1.58133139e-05
"We're starting to consider the possibility that there's some timing related issue related to the SCC APIs

I guess the APIs are CODE.",Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,1.0,0.3870967742,0.5,0.6612021858,0.8313133932,0.1686866068,0.001165656648,0.06807620883
"Just use the CODE function during building a graph, the is_training parameter is a CODE.",Usage,True,88,NONE,False,False,False,0.5172413793,0.05769230769,0.9550321199,0.8823529412,0.7995481369,0.2004518631,0.3206669123,0.722664447
"Sometimes, I even clicked the button before letting it complete the startup.",Investigation and Exploration,False,76,NONE,True,False,False,0.2448979592,0.1212121212,0.6666666667,0.3684210526,0.1194799462,0.8805200538,0.004838964607,0.001815624911
It's about 400+ MB unpacked.,Investigation and Exploration,False,28,NONE,True,False,False,0.2631578947,0.07462686567,1.0,0.4301675978,0.004445300957,0.995554699,0.0003930261983,0.0006283247775
"Here's a crash due to a invalid object pointer in CODE
Note that this is a different crash within the same testcase.",Potential New Issues and Requests,True,117,CONTRIBUTOR,False,False,False,0.6052631579,0.1216931217,0.25,0.3771428571,0.4100880548,0.5899119452,0.0008687385329,0.003375208545
"I would write a single .js file (even if it had to be 30,000 lines long like [tex.web] URL  with zero dependencies other than the Node standard library.",Solution Discussion,False,152,MEMBER,False,False,False,0.8787878788,0.397260274,0.9159482759,0.4444444444,0.9204563137,0.0795436863,0.01198832771,0.1095689952
But we didn't do that for general helper calls.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.4736842105,0.0703125,0.2857142857,0.5333333333,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
CODE,Investigation and Exploration,True,4,NONE,False,False,False,0.03846153846,0.01470588235,0.5487804878,1.0,0.5694868162,0.4305131838,0.005325768668,0.0007054752894
"A new question, if GC moved the objects that globalreference pointed to to somewhere else, can the compilation still continue or do we have to abort?",Investigation and Exploration,False,149,CONTRIBUTOR,False,False,False,0.7222222222,0.1375661376,0.75,0.8342857143,0.4505337598,0.5494662402,0.002313600952,0.0001676222515
Yes indeed (in practice it will more or less be the same),Solution Discussion,False,57,CONTRIBUTOR,True,False,False,0.2727272727,0.1875,0.4007352941,0.04761904762,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"(right now, I have conda 4.2.12)",Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.1764705882,0.08450704225,0.5701754386,1.0,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
I'll look at the code.,Contribution and Commitment,False,22,CONTRIBUTOR,False,False,False,0.4166666667,0.03649635036,1.0,0.126394052,0.001150317102,0.9988496829,0.0001051846944,0.0001896637403
"Both JITServer and JITClient outputs this, so the server one would be a remote call and the client one is a local call, both using the same methodHandleLocation as well.
CODE

details should be created in CODE
CODE",Investigation and Exploration,True,218,CONTRIBUTOR,False,False,False,0.7884615385,0.2169312169,1.0,0.3657142857,0.3964911687,0.6035088313,0.005060536466,0.02642430283
"The code was patched in the jdk12 repo, but not the jdk13 repo because the patch isn't needed for xlc 16 compiles.",Solution Discussion,False,114,CONTRIBUTOR,False,False,False,1.0,0.1264367816,1.0,0.4558823529,0.766203361,0.233796639,0.000396081896,0.0002229068111
"This works reliably in HotSpot VM (in the sense that the JVM is stable, AsyncGetCallTrace has its known sampling problems).",Investigation and Exploration,False,123,NONE,True,True,False,0.3921568627,0.1923076923,0.4166666667,0.02762430939,0.0,1.0,0.0,0.01118041169
"Since the next release is next month, we'll try to get AIX working in 0.17 rather than do a late update to 0.16.",Action on Issue,False,112,CONTRIBUTOR,False,False,False,1.0,0.132183908,1.0,0.05147058824,0.6715171808,0.3284828192,0.02235494254,0.1010162401
Now I'm getting the :,Bug Reproduction,False,21,NONE,False,False,False,0.1081081081,0.03149606299,0.3900293255,0.4545454545,0.3802587264,0.6197412736,0.006558528713,0.00183836987
I'm afraid that the core files are not readable on my end.,Social Conversation,False,58,CONTRIBUTOR,False,False,False,0.4,0.2553191489,0.3333333333,0.1269230769,0.06121166501,0.938788335,0.05286071254,0.04938589637
Thanks SCREEN_NAME !,Social Conversation,False,20,NONE,False,False,False,0.5,0.0157480315,0.788856305,0.5,0.6665903473,0.3334096527,0.07077280307,0.2453262441
There doesn't appear to be anything java related running on it other than the jenkins agent.,Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,1.0,0.2388059701,1.0,0.05202312139,0.002009654212,0.9979903458,0.0006854428644,2.82e-06
"I suppose this is true of most things about Carrot Top, so...Fair play.",Social Conversation,False,71,MEMBER,False,False,False,0.6086956522,0.3684210526,0.4598540146,0.6428571429,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"I will continue attempting to reproduce this on XLinuxXL, but I believe the reproduction rate was established to be less than 1 in 300.",Task Progress,False,135,CONTRIBUTOR,False,False,False,1.0,0.5106382979,0.6666666667,0.6461538462,0.6362716987,0.3637283013,0.0113804523,0.01862203789
"Repro rate with following command was 3/7:

CODE

Console:

CODE",Bug Reproduction,True,70,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.8066157761,0.8167057758,0.1832942242,0.004064385956,0.003360486467
"@kdvolder , please help to double-check all steps above in case of anything we ignored in between.",Contribution and Commitment,False,98,CONTRIBUTOR,False,False,False,1.0,0.1717171717,1.0,0.3228070175,0.1154088065,0.8845911935,0.002074999899,0.00603452119
"@Mesbah-Alam, may I ask you to generate the verbose logs on Windows and ppc64le_linux for builds before and after the relevant changes, with the following options?

CODE

I'm unable to submit grinder runs on those builds myself.",Contribution and Commitment,True,232,MEMBER,False,False,False,1.0,0.5970149254,0.5,0.4624277457,0.005379451493,0.9946205485,4.18e-05,0.0008238462571
"(I'm doing data parallelization on multiple gpus, and the batch_size is multiple of num_gpus).",Usage,False,94,NONE,False,False,False,0.6363636364,0.2089552239,0.7239944521,0.75,0.5764930385,0.4235069615,0.1924676673,0.003144961394
I understand this is all very new and under development.,Social Conversation,False,56,NONE,False,False,False,0.3333333333,0.1492537313,0.4549237171,0.7777777778,0.402192445,0.597807555,0.001827732055,0.008699923145
"Hints are saved always, but not used because of command line mismatch.",Solution Discussion,False,70,CONTRIBUTOR,False,False,False,0.2790697674,0.08219178082,0.3333333333,0.6145251397,0.2535003741,0.7464996259,6.29e-05,8.28e-05
"Also, when randomly creating a sample set, it seemed like the samples were consumed when I wanted them left in the buffer.",Motivation,False,122,CONTRIBUTOR,False,False,False,0.44,0.328358209,0.2288488211,0.4285714286,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"when I get OutOfMemory error and openj9 starts preparing the dumps of everything, very often it hangs forever.

CODE thread is waiting on a CODE to be notified: https://github.com/eclipse/openj9/blob/1eaf33671f61004ff201e88f687e935424b430dc/runtime/vm/jniinv.c#L320

If only the three threads shown in https://github.com/eclipse/openj9/issues/12224#issuecomment-801809036 are remaining in the JVM, then the CODE thread won't receive a notification, and the JVM would stay suspended during termination.",Investigation and Exploration,True,505,CONTRIBUTOR,False,False,False,1.0,0.8,0.4285714286,0.4237288136,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
This is the status code the CODE method was ignoring.,Investigation and Exploration,True,53,MEMBER,False,False,False,0.2380952381,0.1052631579,0.3684210526,0.8888888889,0.1453780739,0.8546219261,0.07593267665,0.03116866066
"In reponse to SCREEN_NAME 's [specific question](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-308845375) about the implementation, the CODE and CODE classes don't use TensorFlow's previous producer/consumer queues (such as CODE or CODE), but they do include simpler (and more efficient) implementations of the core ideas.",Solution Discussion,True,342,CONTRIBUTOR,True,False,True,42.0,0.6268656716,0.9778085992,9.0,1.0,0.0,0.02385162338,0.0
"Or the number of items processed per thread of a .map() operation  Basically, something along the lines of how the queues create summaries for the number of images they are holding.",Expected Behaviour,False,181,NONE,False,False,False,0.8421052632,0.4776119403,0.6213592233,0.4285714286,0.5016859242,0.4983140758,0.003761840049,0.03050902669
I had to add prints instead of using CODE.,Investigation and Exploration,True,42,CONTRIBUTOR,True,False,False,0.4285714286,0.1551724138,0.2,0.9082568807,0.9986823435,0.001317656456,0.002428514487,0.005742138251
I discussed with @dsouzai and he has agreed to dive deeper into this problem to understand the nature of it.,Contribution and Commitment,False,108,CONTRIBUTOR,False,False,False,0.7407407407,0.2150537634,0.3333333333,0.3590733591,0.3849982514,0.6150017486,0.0009250900844,0.03688423691
"Then this means since we don't have client's vmaccess when doing CODE at the server, at any point of the walk if the globalreference value changed by GC, the ""receiver"" object pointer used on the server becomes an outdated value.

CODE",Investigation and Exploration,True,237,CONTRIBUTOR,False,False,False,1.0,0.2222222222,1.0,0.8457142857,0.4506172661,0.5493827339,0.0001676222515,0.0001688638978
The on_match callback is being called.,Potential New Issues and Requests,False,38,NONE,False,False,False,0.3157894737,0.06315789474,0.9263157895,1.0,0.3302372055,0.6697627945,0.03932243631,0.2723202982
"~What platform did you test on?~ nm, I see Linux.",Investigation and Exploration,False,49,CONTRIBUTOR,True,False,False,0.7142857143,0.06849315068,1.0,0.9720670391,0.9684593998,0.03154060015,0.0001713134092,2.18e-05
"To avoid dependency hell (making sure the same version of spacy and it's data is installed on each node), a much better approach would be to broadcast the library and the data models as broadcast objec (which takes less space and is sent as a torrent file)t, un-serialize them in a temp directory and lazy load them from there.",Solution Discussion,False,327,NONE,False,False,False,1.0,0.3921568627,0.4437299035,1.0,0.1131980914,0.8868019086,0.0007474630201,1.624466859e-05
"[vlog-new.20190529.000410.16028.txt] URL 

Also, with the shareclasses populated on previous runs the result of the ""benchmark"" is now ~31s (compared to ~16s with HotSpot):

CODE",Investigation and Exploration,True,182,NONE,True,False,False,1.0,0.197080292,1.0,0.249070632,0.002201720709,0.9977982793,1.24e-06,2.07e-05
"I agree that the monitor API would be very useful in general (for dealing with snapshoting, early stopping and such) but would not solve the issue of growing the number of sub-estimators in an interactive manner.",Solution Discussion,False,212,MEMBER,False,False,False,0.9024390244,0.5211267606,0.2536231884,0.7142857143,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
Haha beat me to it :),Social Conversation,False,21,CONTRIBUTOR,False,False,False,1.0,0.04379562044,1.0,0.2527881041,0.002215496962,0.997784503,2.07e-05,0.0001263044559
Is this ever possible with BN?,Solution Discussion,False,30,NONE,False,False,False,0.1578947368,0.02307692308,0.2976445396,0.75,0.2434240867,0.7565759133,0.01989458774,0.1426765631
Is it possible this function got garbage if this table (for example) under modification?,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.7777777778,0.1538461538,1.0,0.2202797203,0.3548042241,0.6451957759,0.0007155979557,0.1429285596
I didn't bother with testing.,Testing,False,29,CONTRIBUTOR,False,False,False,0.8333333333,0.02873563218,0.6666666667,0.9448529412,0.7963722046,0.2036277954,0.00187043267,0.004816889792
"then I uninstalled,  installed 1.4 with pip install --upgrade tensorflow-gpu==1.4, it did't work,  and I get the following error:CODE",Solution Discussion,True,133,NONE,False,False,False,1.0,0.1811023622,0.2903225806,1.0,0.342673923,0.657326077,0.05817708545,0.00239742362
"OpenJ9 version string:
CODE

Update: using CODE makes the issue disappear, though I'm not sure if this is because the bench is slower and less demanding on OpenJ9, or if it's because of an issue with the jit compiler.",Solution Discussion,True,220,NONE,True,True,False,0.8541666667,0.6119402985,0.8571428571,0.03351955307,0.0,1.0,0.0,0.00144281986
"+ 10, stop reason = signal SIGSTOP
(lldb) thread backtrace
* thread #1, stop reason = signal SIGSTOP
  * frame #0: 0x00007fff6b2ad7fa libsystem_kernel.dylibCODEpthread_kill + 432
    frame #2: 0x000000000bb15123 libj9prt29.dylibCODEdoSystemDump + 297
    frame #4: 0x000000000bb83f55 libj9dmp29.dylibCODEomrsig_protect + 949
    frame #6: 0x000000000bb83b56 libj9dmp29.dylibCODEtriggerDumpAgents + 1030
    frame #8: 0x000000000bb9a438 libj9dmp29.dylibCODEJ9HookDispatch(J9HookInterface**, unsigned long, void*) + 415
    frame #10: 0x000000000cca0b25 libj9vm29.dylibCODEsetCurrentExceptionUTF",Solution Discussion,True,601,NONE,True,False,False,1.0,0.4060150376,0.6666666667,0.2824427481,0.2279520689,0.7720479311,0.0001733178764,0.0007382360491
"@AlenBadel will add an update shortly, so I am jumping slightly ahead.",Task Progress,False,70,CONTRIBUTOR,False,False,False,0.5217391304,0.09375,0.5,0.07777777778,0.02630992985,0.9736900702,0.02838288421,0.0003156516855
"In particular, for early stopping (on a validation set!) it could be better to do less iterations, leading to lower bias.",Solution Discussion,False,121,MEMBER,False,False,False,1.0,0.2957746479,0.5688405797,1.0,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
I would like to encourage you to use [CODE] URL  or [CODE] URL  to build your model.,Usage,True,84,MEMBER,False,False,False,0.4318181818,0.07307692308,0.244111349,0.75,0.2257503846,0.7742496154,0.003439914719,0.0006169627313
"If it were memory protection issue, it would be SIGSEGFAULT instead of  SIGILL.",Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.2978723404,0.08045977011,0.4285714286,0.1654411765,0.7325460239,0.2674539761,0.009169774309,7.65e-05
"Here it is:

https://app.box.com/s/uwe2kzgo6smck7gu1zxq9f43mntxwsqh",Social Conversation,False,69,NONE,True,False,False,0.1923076923,0.05050505051,1.0,0.5684210526,0.1993600534,0.8006399466,0.003371874835,0.005835937215
The thread holding exclusive will have vmThread-omrVMThread-exclusiveCount !,Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,1.0,0.12,0.3333333333,0.7005649718,0.08509509776,0.9149049022,0.0001249419873,0.0001794263215
Will try adding tracepoints in code to see how it goes.,Task Progress,False,55,CONTRIBUTOR,False,False,False,0.4230769231,0.08270676692,1.0,0.3460559796,0.4498932585,0.5501067415,0.03715256715,0.03394128121
The most likely explanation is that it's a narrow window race condition and the options change the timing.,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.8571428571,0.2686567164,0.4285714286,0.6145251397,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
"Does it still fail with the environment variable TR_disableFastObjectClone=1?
 
 No, it consistently passes.",Testing,False,110,CONTRIBUTOR,False,False,False,1.0,0.1505376344,0.25,0.7374517375,0.6082511737,0.3917488263,0.1957833797,0.007960250968
"@planetf1 I recently wrote an article on how to configure or disable Linux core processing: https://publib.boulder.ibm.com/httpserv/cookbook/Troubleshooting-Troubleshooting_Java.html#Troubleshooting-Troubleshooting_Java-Core_Dumps-Ensure_core_piping_is_configured_properly_or_disabled_on_Linux

> It is preferable to completely disable piping when running J9 JVMs because when the J9 JVM produces a core dump or handles a crash, it will post-process the core dump to rename it with additional information and also add some additional details into the core dump.",Investigation and Exploration,False,563,CONTRIBUTOR,False,False,False,1.0,0.4812030075,0.3333333333,0.2417302799,0.2149926436,0.7850073564,0.0009205468343,0.02955805577
@zhongyuk great !,Social Conversation,False,17,MEMBER,False,False,False,0.0625,0.02816901408,0.6081871345,0.2,0.4572983615,0.5427016385,0.001200894845,0.004204377413
Do you have any more information on this issue since it cropped up a few months ago?,Investigation and Exploration,False,84,NONE,False,False,False,0.4146341463,0.2741935484,0.2070484581,0.75,0.1925825232,0.8074174768,0.6482365618,5.170680801e-06
"the test is marked as Failed because of the Errors

Note CODE in this case means the output was written to stderr.",Investigation and Exploration,True,116,CONTRIBUTOR,True,False,False,1.0,0.3965517241,0.5,0.2293577982,0.02084258259,0.9791574174,5.63e-06,1.18e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.286637931,1.0,0.279996623,0.720003377,0.03349862064,0.1434033545
Do you have this issue with the tf nightlies?,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,1.0,0.01302460203,0.9603960396,1.0,0.5169293032,0.4830706968,0.3845326686,0.2231277001
"i.e. in OpenJ9.gmk 
CODE",Solution Discussion,True,25,CONTRIBUTOR,True,False,False,0.3571428571,0.04237288136,1.0,0.7212121212,0.5535676125,0.4464323875,0.00606228134,0.0004840842543
The increase in execution time on Power that Peter had reported was about four- to five-fold - going from 13 minutes to about 55 minutes.,Investigation and Exploration,False,137,MEMBER,False,False,False,0.4166666667,0.3731343284,0.2,0.6820809249,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
The latter is to ensure it's updated in very gradual run-to-run load change.,Solution Discussion,False,76,CONTRIBUTOR,False,False,False,0.6818181818,0.102739726,1.0,0.8715083799,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_ppc64le_linux_Nightly/81
jdk_util_0 CODE
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java

https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_aarch64_linux_Release/7
https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_aarch64_linux_Nightly/47
jdk_util_1 CODE
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java
CODE",Testing,True,482,CONTRIBUTOR,False,False,False,1.0,0.3586956522,1.0,0.6981132075,0.5918120771,0.4081879229,0.0007014954103,0.0005225972985
The issue replicates for me when using the Windows/GPU build 105 on the [Shakespeare RNN Repo] URL .,Bug Reproduction,False,100,NONE,False,False,False,1.0,0.02604920405,0.07590759076,0.5,0.001438113183,0.9985618868,0.002700374697,0.000477730304
"The regular JIT tries to minimize the life span of a vmaccess by putting it into a local scope with only code that needs it, so it is supposed to perform better than breaking up the operation and using a series of hold/release/hold/release.",Investigation and Exploration,False,240,CONTRIBUTOR,False,False,False,1.0,0.2433862434,1.0,0.8114285714,0.4493209598,0.5506790402,0.0005637074234,0.0001208535739
Thanks a lot for your help.,Social Conversation,False,27,NONE,False,False,False,0.2857142857,0.008683068017,0.5742574257,1.0,0.1519966151,0.8480033849,0.02814194594,0.00832954705
@jnothman So far I am not able to reproduce the CODE failure above.,Potential New Issues and Requests,True,67,MEMBER,False,False,False,0.3611111111,0.1911764706,0.243902439,0.1,0.3543056001,0.6456943999,0.009464004531,0.003096425316
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_ppc64_aix_Nightly/52
jdk_util_0 -Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:+UseCompressedOops 
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java
CODE",Testing,True,301,CONTRIBUTOR,False,False,False,1.0,0.2826086957,1.0,0.3710691824,0.459362129,0.540637871,0.08317436407,0.01375082044
So the individual runs on Power that Peter reported on went from about 6.5 minutes to roughly 27 minutes.,Investigation and Exploration,False,105,MEMBER,False,False,False,0.3166666667,0.2835820896,0.5,0.6994219653,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Personal/55
CODE",Testing,True,97,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.4220183486,0.0234646347,0.9765353653,0.002548931278,0.006110333228
Thanks for response :),Social Conversation,False,22,NONE,False,False,False,0.25,0.05633802817,0.850877193,0.25,0.6456750725,0.3543249275,3.473434042e-05,0.0001660605916
I guess something is missed in machine configuration,Investigation and Exploration,False,52,CONTRIBUTOR,False,False,False,0.1428571429,0.08791208791,1.0,0.1188811189,0.1118240786,0.8881759214,0.04744206468,0.0005430533463
"The latest crash is worse: the handler crashed:
CODE",Testing,True,53,CONTRIBUTOR,False,False,False,1.0,0.2127659574,1.0,0.4923076923,0.4097676433,0.5902323567,0.003809703725,0.01939485533
"JITClient
CODE

JITServer
CODE


GC Counter related things

CODE
CODE
CODE
CODE",Investigation and Exploration,True,91,CONTRIBUTOR,False,False,False,0.9523809524,0.1058201058,1.0,0.1942857143,0.308244607,0.691755393,0.01265320363,0.0005070055754
I bet it is the same offender here.,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,0.1860465116,0.1194029851,0.6,0.4335260116,0.00530660923,0.9946933908,5.04e-06,3.62e-05
[propelml.org] URL  - Looks interesting.,Workarounds,False,40,NONE,False,False,False,0.2777777778,0.06849315068,0.8879310345,0.5,0.8958462054,0.1041537946,0.07162521205,0.0976605631
I think was able to build JDK 13 with xlC 13 at least to the same point when using xlC 16 (xlclang).,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,1.0,0.1264367816,0.5,0.3198529412,0.7589566145,0.2410433855,3.37e-05,1.24e-05
The information is already available via the J9 hooks as was done in #3389.,Solution Discussion,False,75,CONTRIBUTOR,True,False,False,1.0,0.21875,0.6666666667,0.304964539,0.5284483563,0.4715516437,0.4039585107,0.04023187486
[STS4_windbg_java11_jre_Xint.txt] URL,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.03636363636,0.0202020202,0.25,0.8210526316,0.803200419,0.196799581,0.3518178539,0.2306492075
"*         If you insist you want to use CODE, I would strongly recommend you use CODE.",Solution Discussion,True,86,MEMBER,False,False,False,0.5,0.1649484536,0.5029585799,0.9,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
"As Andrew said, the test executes five processes concurrently, all running forceAOT,count=1.",Investigation and Exploration,False,92,MEMBER,False,False,False,0.2166666667,0.1940298507,0.3,0.6878612717,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
@pushtheworldllc I'm glad you are interested.,Social Conversation,False,45,NONE,False,False,False,0.5454545455,0.08219178082,0.1982758621,0.25,0.07805322871,0.9219467713,0.004404440072,0.009522850481
"Correct, it fails consistently with the test's default command line options:
CODE",Bug Reproduction,True,82,CONTRIBUTOR,False,False,False,0.4333333333,0.1397849462,1.0,0.3166023166,0.3820592256,0.6179407744,0.004767198096,5.6e-05
It is interesting that the segment fault occurred on both of them.,Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.1558441558,0.1212121212,0.375,0.8666666667,0.9005578376,0.09944216237,0.1143762639,0.00534555638
I answered SCREEN_NAME 's Stack Overflow question about doing this [here] URL .,Usage,False,79,CONTRIBUTOR,True,False,True,11.0,0.1641791045,0.9889042996,17.0,1.0,0.0,0.02385162338,0.0
I am using IPython Notebook.,Observed Bug Behaviour,False,28,NONE,False,False,False,0.3571428571,0.05154639175,0.1775147929,1.0,0.2546091762,0.7453908238,0.1079292843,0.008572782863
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2068965517,1.0,0.07858246618,0.9214175338,0.009522850481,0.0073712015
I've done some googling on this and nothing so far even hints at a workaround.,Social Conversation,False,78,NONE,False,False,False,0.9411764706,0.1649484536,0.6065088757,0.7142857143,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
"there are many uses of jitTOC in JIT runtime assembly (picBuilder, Crypto, arrayCopy, and recompilation etc etc).",Motivation,False,113,CONTRIBUTOR,False,False,False,1.0,0.1328125,1.0,0.5222222222,0.0387036143,0.9612963857,4.57e-05,0.0005651668273
And it seems working! Cheers!,Testing,False,29,NONE,False,False,False,0.25,0.07042253521,0.3479532164,1.0,0.3249928395,0.6750071605,0.005396415693,0.005186210661
Special thanks to Andrew for being able to detect the difference in the stack walk and catch code that the rest of us managed to repeatedly miss.,Social Conversation,False,145,CONTRIBUTOR,False,False,True,1.0,0.421875,1.0,1.0,1.0,0.0,0.0716422145,0.0
It works when I have more than 2100 points but fails for lower values.,Bug Reproduction,False,70,NONE,False,False,False,0.6363636364,0.1971830986,0.2573099415,1.0,0.2386385813,0.7613614187,0.08372802707,0.1743374667
"This will be used throughout gensim (doc2vec, word2vec, docsim...).",Potential New Issues and Requests,False,67,CONTRIBUTOR,False,False,False,0.3214285714,0.2368421053,0.7445255474,1.0,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
"With the new java I am up to 500 core files… I will let this run overnight, but at least the initial few minutes are very promising!",Task Progress,False,132,NONE,True,False,False,1.0,0.3733333333,1.0,0.9435028249,0.3683619523,0.6316380477,0.005131592796,0.01360883005
"Now, if you believe that some action is not correct for ""classloader unloaded"" hook but it is for ""classes unloaded"" your code has fundamental problem.",Investigation and Exploration,False,151,CONTRIBUTOR,False,False,False,0.2747252747,0.2747252747,0.6428571429,0.7202797203,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
The BabelNet project is probably the useful way to go about this.,Solution Discussion,False,65,MEMBER,False,False,False,0.2,0.2,0.2413793103,0.88,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"ASGCT is careful not to allocate anything, but I will take another pass over the code to be sure.",Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.6333333333,0.1826923077,1.0,0.1215469613,0.01148596888,0.9885140311,0.004865870055,0.007118677448
This Epic tracks the work to enable agents to request exception catch information without the JVM going into Full Speed Debug (FSD) mode.,Motivation,False,137,CONTRIBUTOR,True,True,False,0.4893617021,0.359375,0.5,0.01418439716,0.0,1.0,0.0,0.0002548603798
"However, we have come down from the initial 160s startup time to ~12s so at least I've learned a lot.",Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,0.84,0.1532846715,0.25,0.6171003717,0.02564146366,0.9743585363,0.0002157528574,0.0002654464138
I believe the exact reason for crash was an attempt to get CODE (decoding garbage ?),Investigation and Exploration,True,84,CONTRIBUTOR,False,False,False,0.652173913,0.1648351648,0.6,0.1748251748,0.284435888,0.715564112,0.01329594867,0.3731531372
"It's been observed that order of these options may change (probably due to some startup race), which would silently ignore the existing hint and would update them with completely fresh values.",Solution Discussion,False,192,CONTRIBUTOR,False,False,False,0.96875,0.2123287671,0.4285714286,0.530726257,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
Right now that gives you tensorflow 1.5 which does not work with Cuda 8.0,Solution Discussion,False,73,NONE,False,False,False,1.0,0.1102362205,0.1700879765,0.8,0.244487942,0.755512058,0.1948879119,0.2449173066
@tano297 Thank you.,Social Conversation,False,19,NONE,False,False,False,0.1153846154,0.01153846154,0.8458244111,0.2,0.7209968564,0.2790031436,0.007196275213,0.000558929072
At least that's good.,Investigation and Exploration,False,21,NONE,True,False,False,0.1818181818,0.03007518797,0.5714285714,0.2646310433,0.2215502762,0.7784497238,0.005021721962,0.0366849359
I couldn't find them in any of those places.,Investigation and Exploration,False,44,NONE,True,False,False,0.2903225806,0.09090909091,0.9090909091,0.08070175439,0.09912996542,0.9008700346,0.005467138405,0.004133788861
The CODE API was initially introduced to allow faster computation of a series of identical linear models when using a path of regularizers CODE.,Solution Discussion,True,144,MEMBER,False,False,False,0.4363636364,0.338028169,0.3188405797,0.5,0.03952644607,0.9604735539,1.193161472e-05,2.070486084e-06
"Maybe we can remove r2/r12 setup from the trampolines for C helpers and assume jitted code will always do it, that way we don't pay the penalty twice.",Solution Discussion,False,150,MEMBER,False,False,False,1.0,0.2265625,1.0,0.6388888889,0.04064191678,0.9593580832,0.0002600368647,0.0001090823512
We do timestamp checking to make sure the jar files are not updated when returning classes from the shared cache.,Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,1.0,0.1459854015,0.75,0.7397769517,0.04433446097,0.955665539,0.002371624979,9.23e-05
"-         A ""verbose"" dataset class should keep track of it's own statistics.",Expected Behaviour,False,77,NONE,False,False,False,0.1967213115,0.1791044776,0.08599167822,0.8571428571,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
The regular helpers load it before every call to the C code (INIT_GOT macro).,Solution Discussion,False,77,CONTRIBUTOR,False,False,False,1.0,0.109375,1.0,0.2833333333,0.03650166363,0.9634983364,0.006548591463,0.0001058614156
I am going to push it artificially to hot.,Task Progress,False,42,CONTRIBUTOR,False,False,False,0.4736842105,0.1125,1.0,0.3039215686,0.2319737749,0.7680262251,0.3694370945,0.004429301533
"Looking at the javacore of the first failures:

CODE

Then looking at the corresponding logs:
CODE

We can see in the verbose log that the method has to be compiled at a warm level to reproduce the issue:

CODE

Now peeking into the trace file, the inline table contains a stomping 697 entries, meaning that many methods were inlined into this compilation.",Task Progress,True,367,CONTRIBUTOR,False,False,False,1.0,0.5112781955,0.5,0.8473282443,0.8337431676,0.1662568324,0.02587954735,0.00358081273
let's launch a few sniffing retuned tests with multiheap or multiheap:32 setting.,Testing,False,81,CONTRIBUTOR,False,False,False,0.75,0.1935483871,0.75,0.5864978903,0.4802647602,0.5197352398,0.003640426233,0.003806695701
[output.txt.zip] URL ,Investigation and Exploration,False,21,NONE,False,False,False,1.0,0.02941176471,0.7723577236,1.0,0.6030998789,0.3969001211,0.03477789442,1.968286417e-05
"Here are the prints from stderr:

CODE",Observed Bug Behaviour,True,40,NONE,True,False,False,0.2857142857,0.05839416058,1.0,0.1858736059,0.001885417947,0.9981145821,0.0001743415604,1.49e-05
"Yesterday, the question was raised whether CODE could subvert the workaround we have in place for #13162.",Workarounds,True,105,CONTRIBUTOR,False,False,False,0.53125,0.1827956989,0.1666666667,0.4247104247,0.4846584266,0.5153415734,0.02724539507,0.2051611074
"Specifically,
CODE contains 0. 
 CODE starts off with the head of the memory to be allocated, and is incremented to subsequent segments as each segment is cleared.",Investigation and Exploration,True,165,CONTRIBUTOR,False,False,False,1.0,0.6170212766,0.25,0.5615384615,0.5039948473,0.4960051527,0.005154978519,0.01512432343
@nmhkahn SCREEN_NAME  SCREEN_NAME  when you do: CODE doesn't that mean that your using CODE as a placeholder?,Usage,True,109,NONE,False,False,False,0.7916666667,0.07307692308,0.164882227,0.3333333333,0.2177649084,0.7822350916,0.0001955084991,2.921974455e-05
@fjeremic @ChengJin01 Can you take another look at this?,Contribution and Commitment,False,56,MEMBER,False,False,False,0.6,0.06766917293,0.6666666667,0.7201017812,0.7787428733,0.2212571267,0.0001541057533,0.007400755077
We have limited the issue down to method handle inlining in the inliner (CODE).,Task Progress,True,79,CONTRIBUTOR,False,False,False,0.7777777778,0.1052631579,0.5,0.9134860051,0.8710433064,0.1289566936,0.06424166071,0.006658022574
That's why is asking libmpi.so because it's from openmpi library.,Solution Discussion,False,65,NONE,True,False,False,0.5,0.07874015748,0.9677419355,1.0,0.9293111322,0.07068886784,8.356226683e-05,0.5218093819
Has anyone working on this integration considered using WebAssembly (wasm)?,Solution Discussion,False,75,NONE,False,False,False,0.2380952381,0.1369863014,0.786637931,0.1111111111,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"I would be very accurate with table walks in hooks handlers

If you are referring to the runtime assumption table this N**2 behavior has been fixed.",Investigation and Exploration,False,150,CONTRIBUTOR,False,False,False,0.7105263158,0.2967032967,0.8,0.8321678322,0.8672060445,0.1327939555,0.005897328255,0.0001401924951
So summary of how it is now:,Motivation,False,28,CONTRIBUTOR,True,True,False,0.14,0.109375,0.01102941176,0.125,0.0,1.0,0.0,0.0007774126438
"CODE
CODE",Observed Bug Behaviour,True,10,CONTRIBUTOR,True,False,False,1.0,0.02054794521,1.0,0.0782122905,0.009906776373,0.9900932236,0.0003485618336,0.0002712462313
"I'm sure I note the following details, but still failed to use the official CODE, with CODE during evaluation(but when I keep CODE unchanged during evaluation, it is ok):",Usage,True,170,NONE,False,False,False,1.0,0.1115384615,0.9293361884,0.1764705882,0.7995481369,0.2004518631,0.3206669123,0.722664447
Ref: [v1.5.0_source] URL ,Workarounds,False,25,NONE,False,False,False,0.09677419355,0.04838709677,0.9647577093,1.0,0.6824651873,0.3175348127,0.09426527661,0.02091540384
"Then test it on my cross-validation set and if my cv score is still falling, I can continue training.",Motivation,False,101,CONTRIBUTOR,True,False,False,0.625,0.2816901408,0.07246376812,0.1818181818,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
Also will be interesting to see if it still fails.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.625,0.05747126437,1.0,0.4852941176,0.766321062,0.233678938,5.75e-05,6.23e-05
Some only come into play when using xlc 16 but the build is using xlc 13.,Solution Discussion,False,73,CONTRIBUTOR,False,False,False,0.9411764706,0.09195402299,0.5,0.3823529412,0.7654520476,0.2345479524,5.66e-05,1.58e-05
From a maintainer's point of view what we need is a fully stand-alone python snippet to see if we can reproduce.,Bug Reproduction,False,112,MEMBER,False,False,False,0.5365853659,0.2268041237,0.701183432,0.4,0.850408121,0.149591879,7.362329309e-05,1.730326181e-05
@urisimchoni,Social Conversation,False,12,CONTRIBUTOR,False,False,False,0.04,0.009615384615,0.3333333333,0.2209944751,0.08273780276,0.9172621972,0.0528229212,0.002473459958
"Currently, I think CODE is more in the right direction, but I don't have a strong opinion.",Solution Discussion,True,90,MEMBER,False,False,False,0.9444444444,0.2394366197,0.6231884058,0.6,0.06495783385,0.9350421661,0.02110253454,0.000167358443
And documented too (when it comes to CODE).,Motivation,True,43,NONE,False,False,False,0.1860465116,0.1194029851,0.3481276006,0.625,0.2977348857,0.7022651143,0.1209962692,0.001143668596
Then in running time depending on the value being CODE or CODE would use the batch CODE or the CODE and CODE.,Solution Discussion,True,109,MEMBER,False,False,False,0.7857142857,0.08461538462,0.7259100642,0.6666666667,0.6151432795,0.3848567205,0.01395060179,0.003360169166
+1 :+1:,Social Conversation,False,7,NONE,False,False,False,1.0,0.02739726027,0.2155172414,1.0,0.08896918825,0.9110308117,0.09653383558,0.265083066
Starup/footpirnt runs have finished.,Testing,False,36,NONE,False,False,False,0.1428571429,0.08064516129,0.25,0.9746835443,0.923401339,0.07659866095,0.01459087501,0.09372347346
The net is working well now.,Usage,False,28,NONE,False,False,False,0.1714285714,0.02307692308,0.1434689507,0.8260869565,0.2164964176,0.7835035824,0.06906725807,0.007698692487
I think it must be due to improper use of CODE or CODE or some other parameters.,Usage,True,80,CONTRIBUTOR,False,False,False,0.5483870968,0.06538461538,0.5674518201,0.375,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
This is considered stop-ship until we have a core file and can evaluate the cause and frequency,Investigation and Exploration,False,95,MEMBER,False,False,False,1.0,0.3829787234,1.0,0.15,0.09416399691,0.9058360031,0.1311728793,0.05832768032
[vlog2.20190529.001127.2660.txt] URL,Investigation and Exploration,False,37,NONE,True,False,False,0.09090909091,0.01459854015,1.0,0.2639405204,0.002299532103,0.9977004679,0.0001263044559,0.000373115786
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1594827586,1.0,0.04417024714,0.9558297529,0.02889078976,0.001794442496
And I have try to use 'reuse' parameter but failed.,Solution Discussion,False,51,NONE,False,False,False,0.6666666667,0.01447178003,0.5577557756,0.6666666667,0.1440568111,0.8559431889,0.03511934773,0.004494533216
"+ 230
    frame #12: 0x000000000cdd4e67 libj9vm29.dylibCODEdefineClassCommon + 1791
    frame #14: 0x000000000eaf5b3d libjclse29.dylibCODEsidecarInvokeReflectMethodImpl + 1474
    frame #17: 0x000000000cc904c1 libj9vm29.dylibCODEJVM_InvokeMethod_Impl + 109
    frame #19: 0x000000002e5a1760
    frame #20: 0x000000000cc8f5a9 libj9vm29.dylibCODEgpProtectedRunCallInMethod(void*) + 125
    frame #22: 0x000000000bb16505 libj9prt29.dylibCODEgpProtectAndRun + 202
    frame #24: 0x000000000cca6947 libj9vm29.dylibCODEcallStaticVoidMethod + 145
    frame #26: 0x000000000ba447a0 libjli.dylibCODE_pthread_start + 148
    frame #28: 0x00007fff6b36683b libsystem_pthread.dylibCODECODE",Solution Discussion,True,685,NONE,True,False,False,0.962962963,0.3909774436,1.0,0.2849872774,0.2279520689,0.7720479311,0.0001733178764,0.0007382360491
Just to clarify a few things for anyone who might stumble on this post.,Social Conversation,False,71,NONE,True,False,False,0.3783783784,0.1102362205,0.6891495601,0.1,0.5094864043,0.4905135957,0.02165076149,0.03664686068
"I cannot reproduce either with python 3.5.1, numpy 1.11.1, scipy 0.17.1 and scikit-learn 0.17.1 from miniconda (with MKL) on a virtualbox with OSX El Capitan.",Bug Reproduction,False,158,MEMBER,False,False,False,1.0,0.3802816901,0.149122807,0.5,0.1664564184,0.8335435816,0.05890874943,8.593635617e-05
I saw the tracing I inserted inside the port library.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,1.0,0.05747126437,1.0,0.3382352941,0.759064198,0.240935802,0.0002835062781,0.01035388553
"Oh I thought you were doing CODE, which is incorrect.",Usage,True,53,CONTRIBUTOR,False,False,False,0.4,0.03846153846,0.03854389722,0.25,0.1735438522,0.8264561478,0.0001056172017,5.01199785e-05
"@yarikoptic On this link I see ""No entry in i386 database, check Packages-arch-specific"" (with ""Suite: experimental"").",Bug Reproduction,False,118,MEMBER,False,False,False,1.0,0.2647058824,0.1463414634,0.25,0.2782444475,0.7217555525,0.01003549822,0.0003149258267
"Hi @pshipton, 

The change done recently in https://github.com/eclipse/openj9-systemtest/pull/98/files reduces load in the CODE variation of this test.",Task Progress,True,153,CONTRIBUTOR,False,False,False,0.6666666667,0.2686567164,0.3333333333,0.09248554913,0.003349898568,0.9966501014,0.001425190268,2.44e-05
"In fact for these kinds of higher-level abstractions, sooner seems better than later â one of the greatest frustrations of reading published TF research code is that the vast majority of codebases use their own idiosyncratic layers library, as opposed to e.g. the ones in CODE or CODE, and these libraries are all different, which makes it more difficult than it should be to share work.",Motivation,True,387,CONTRIBUTOR,False,False,False,1.0,1.0,0.3730929265,1.0,0.2991231524,0.7008768476,0.01002173327,0.1413171275
"_To Summarize the issue on Power:_

We’ve established that the crash occurs when MemorySegment.allocateNative is JIT compiled and invoked with a requested memory segment size greater than Integer.",Investigation and Exploration,False,198,CONTRIBUTOR,False,False,False,0.9677419355,0.6382978723,0.03703703704,0.7346153846,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"Therefore, if we can ensure that the CHTable will always be coherent, then we can cache the classchain and not have to worry about whether or not we're going to incorrectly fail an AOT validation we passed earlier.",Solution Discussion,False,214,CONTRIBUTOR,False,False,False,0.6333333333,0.6129032258,0.8888888889,0.9890710383,0.9848847044,0.01511529561,0.001947660621,0.07932791196
"However, I think it's important that we either assume the string is unavailable, or save it ourselves.",Solution Discussion,False,102,MEMBER,False,False,False,0.6538461538,0.2741935484,0.4625550661,0.1176470588,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
So during testing you would set the value to CODE and the CODE won't be used.,Usage,True,77,MEMBER,False,False,False,0.5714285714,0.06153846154,0.7280513919,1.0,0.6151432795,0.3848567205,0.01395060179,0.003360169166
"3x on a 0.15 release build: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/450
3x on the last nightly build: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/451",Testing,False,180,CONTRIBUTOR,True,False,False,0.8333333333,0.2586206897,1.0,0.3394495413,0.02088409074,0.9791159093,0.0001834423374,0.001257628253
The old code uses CODE & CODE to loop over the inlined call sites.,Solution Discussion,True,66,MEMBER,False,False,False,1.0,0.203125,0.6666666667,0.8865248227,0.9828046147,0.01719538533,0.01226695903,0.000432781777
"To verify the suggestion above, I made the following changes:
CODE

However, it still ended up with the same linking failures as follows: 
CODE
The failures shows -O0",Investigation and Exploration,True,171,CONTRIBUTOR,False,False,False,0.7111111111,0.2711864407,0.2,0.1090909091,0.3892686419,0.6107313581,0.003403174815,0.0001502490105
"Otherwise we'll have to store the key strings, which could occupy a lot of memory.",Solution Discussion,False,82,MEMBER,False,False,False,0.4545454545,0.3947368421,0.3722627737,0.7692307692,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"Using his fix and without the workaround in  eclipse/omr#6255 in place, 200 iterations of the test passed, and I observed 5 tests iterations where OSR transitions took place at the same bytecode where we previously ran into the crash, confirming that the issue is addressed by Henry's fix.",Solution Discussion,False,289,MEMBER,False,False,False,1.0,0.5434782609,1.0,0.9874213836,0.6767585371,0.3232414629,0.05983688721,1.0
The naming for OneHotEncoder and OrdinalEncoder at least is consistent with the CODE package.,Solution Discussion,True,93,CONTRIBUTOR,True,False,True,14.0,0.21875,1.0,5.0,1.0,0.0,0.0009246776239,0.0
"To make it concrete here, we would have a class whose job is to form an instruction stream, that class would have methods CODE and  CODE - calling the former with 64-bit registers or a a 64-bit value would not compile.",Solution Discussion,True,218,CONTRIBUTOR,False,False,False,0.9772727273,0.914893617,1.0,0.7153846154,0.644040952,0.355959048,0.002369973467,0.007376113072
Andrew mentioned offline that the priorities of the compilation threads on Windows are raised.,Investigation and Exploration,False,94,MEMBER,False,False,False,0.2333333333,0.2089552239,0.7,0.710982659,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
"Still, for a Debian release of 0.19.0 I'm not sure how this could work: can you apply some patches on the original .tar.gz to skip tests/modify code when needed?",Potential New Issues and Requests,False,161,MEMBER,False,False,False,0.4411764706,0.4411764706,0.3333333333,1.0,0.358845198,0.641154802,0.01032797867,0.001373656731
@sguada FYI,Social Conversation,False,11,MEMBER,False,False,False,1.0,0.007692307692,0.05353319058,1.0,0.1737325197,0.8262674803,0.00114464291,0.0009536999958
edit: The maybe only thing I like of TFs input queues is that I the state of the queues (and batch producers) can be observed in Tensorboard.,Solution Discussion,False,141,NONE,False,False,False,0.7297297297,0.4029850746,0.3398058252,0.8888888889,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
@zl-wang how do you propose we fix this problem?,Solution Discussion,False,48,CONTRIBUTOR,False,False,False,0.5,0.05747126437,0.3333333333,0.6102941176,0.7727637151,0.2272362849,0.01062274398,8.36e-05
I don't even remember how much bigger a CODE tuple would be.,Solution Discussion,True,60,MEMBER,False,False,False,1.0,0.1935483871,0.7533039648,0.75,0.2945721721,0.7054278279,1.641129124e-05,0.1206599722
I'll start from the beginning:,Social Conversation,False,30,MEMBER,False,False,False,0.125,0.08064516129,0.2863436123,0.1111111111,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
*         https://github.com/tomasreimers/tensorflow-emscripten,Solution Discussion,False,63,NONE,False,False,False,0.04761904762,0.02739726027,0.8038793103,1.0,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"(but we can't really make fej9->getReferenceFieldAt() return a globalreference though)

2. somehow do the entire CODE at the client, but I don't see how that's possible atm

3. during the walkReferenceChain at the JITServer, hold the vmaccess on JITClient.",Solution Discussion,True,260,CONTRIBUTOR,False,False,False,1.0,0.2169312169,0.75,0.9142857143,0.4989698829,0.5010301171,0.001840119827,0.003764671603
"https://ci.eclipse.org/openj9/job/Build_JDK11_ppc64_aix_Personal/852
CODE",Testing,True,74,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6229508197,0.829408276,0.170591724,0.1197204731,0.008832756273
The increases in time required on Windows with JDK 11 were much more dramatic.,Investigation and Exploration,False,78,MEMBER,False,False,False,0.2333333333,0.2089552239,0.6,0.7052023121,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
"For the initial implementation, we should just validate the commandline is the same.",Solution Discussion,False,84,MEMBER,False,False,False,1.0,0.08904109589,1.0,0.3687150838,0.03211184158,0.9678881584,3.75e-05,1.07e-05
"- We already have a mechanism that aborts the compilation if it detects that GC has happened.
- However, I didn't see the ""GC Counter"" getting incremented for this test, probably because we are dealing with a different GC mode/policy? 
- Looks like we are using CODE  in this case
- The GC Counter was never triggered
- Also, not sure if this is the way to go though.",Solution Discussion,True,371,CONTRIBUTOR,False,False,False,1.0,0.3703703704,0.5,0.9314285714,0.5008453723,0.4991546277,0.003764671603,0.001953523523
@gacholio were you able to reproduce the AIX failure above?,Bug Reproduction,False,59,CONTRIBUTOR,False,False,False,1.0,0.15625,1.0,0.5035460993,0.7927146439,0.2072853561,0.004342243829,0.01235591973
"I went through all java path related settings (installed JRE/Java compiler, etc) but didn't detect anything different in comparing STS4 B1362 with STS4 B1373.",Investigation and Exploration,False,158,CONTRIBUTOR,False,False,False,0.3246753247,0.2525252525,0.125,0.8596491228,0.9005578376,0.09944216237,0.1143762639,0.00534555638
"6x grinders, on the same JVMs as above:
0.15: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/452
head: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/453 - 1 failure",Testing,False,187,CONTRIBUTOR,True,False,False,1.0,0.275862069,1.0,0.4036697248,0.02234691216,0.9776530878,0.00651377534,0.003900901305
And _n_ would be user configurable.,Expected Behaviour,False,35,NONE,True,True,False,0.1052631579,0.09677419355,0.06167400881,0.8235294118,0.0,1.0,0.0,0.0008157310994
Node.js (JavaScript) Wrapper API,Expected Behaviour,False,32,NONE,True,True,False,1.0,0.05479452055,0.002155172414,0.5,0.0,1.0,0.0,0.0004647668033
Leave it as a placeholder and do periodic testing will change the value of moving mean and moving variance.,Solution Discussion,False,107,NONE,False,False,False,0.7307692308,0.07307692308,0.8501070664,0.6,0.7209968564,0.2790031436,0.007196275213,0.000558929072
We use CODE to obtain the system libraries from the original machine so the core can be viewed on other machines.,Bug Reproduction,True,113,CONTRIBUTOR,False,False,False,1.0,0.28,0.3333333333,0.2598870056,0.003634671094,0.9963653289,5.86e-05,0.002021828306
"CODE
CODE
So looks like with AOT, the majority of failures are AOT load failures that https://github.com/eclipse/openj9/issues/4897 was opened to address; this at least removes the ILGenFailures as a potential problem.",Investigation and Exploration,True,220,CONTRIBUTOR,False,False,False,1.0,0.2408759124,0.3333333333,0.2676579926,0.002547780177,0.9974522198,0.000373115786,0.006822511181
"I don't have access to the machines at Adopt, or any root access to any AIX machines.",Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,1.0,0.09770114943,1.0,0.8492647059,0.7733760806,0.2266239194,4.44e-05,2.66e-05
Great thanks a lot!,Social Conversation,False,19,MEMBER,False,False,False,0.4,0.0412371134,0.3372781065,0.5,0.8123772704,0.1876227296,5.608163961e-05,2.165390973e-06
So the workaround doesn't really work.,Workarounds,False,38,NONE,False,False,False,0.5454545455,0.09677419355,0.7929515419,0.4,0.5871184167,0.4128815833,1.0,0.09855593002
"What's more, Numpy is using OpenBLAS and has the same config as the environment that exhibits the freeze (the one where Gensim was installed).",Investigation and Exploration,False,142,NONE,False,False,False,1.0,0.2474226804,0.798816568,0.6666666667,0.850540769,0.149459231,7.813286879e-05,0.005705487359
"testFilterReturnI2String  - has a high drop in score with 20190913 build , but most of the perf is restored with the later build.
CODE",Investigation and Exploration,True,135,NONE,False,False,False,1.0,0.3582089552,1.0,0.6011560694,0.01191281987,0.9880871801,0.0006655096996,0.0002903767183
First documentation on master under CODE: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/data,Task Progress,True,118,CONTRIBUTOR,False,False,False,1.0,0.1044776119,0.46740638,0.5,0.4339575966,0.5660424034,0.24574369,0.01344561339
I'm giving a shot at migrating to tensorflow for our deep learning models for devices; but the input pipeline is so tightly bound to the rest of the compute graph that its like performing surgery to run inference against it.,Motivation,False,224,NONE,False,False,False,1.0,0.5970149254,0.4063800277,0.3333333333,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
"Summary:
1) MALLOCOPTIONS setting(s) almost have no performance degradation over no setting, except one case with CBC-decrypt-stream-nopadding 16-thread;
2) multiheap setting got most of the performance improvement there is;
3) multiheap,buckets might have less than 10% performance advantage over multiheap setting on average ... there are a few cases of regression too (up to -25%).",Task Progress,False,387,CONTRIBUTOR,False,False,False,1.0,1.0,0.4,0.2869198312,0.2206084978,0.7793915022,0.01185472132,0.2853709122
"Right now, this method starves my GPU all the time, which is a shame because most other DL frameworks (even those based on computational graphs) manage to make this much more performantly.",Motivation,False,188,NONE,False,False,False,1.0,0.4776119403,0.1303744799,0.8,0.01422300953,0.9857769905,0.003307324671,0.2125437083
but I'm unclear which class specifically you need ?,Investigation and Exploration,False,51,NONE,True,False,False,0.5714285714,0.06015037594,1.0,0.03053435115,0.0001171462243,0.9998828538,0.0004950187461,5.15e-05
anyone has experienced these problems or is BN just like this and I need to do something else to make it work?,Usage,False,110,NONE,False,False,False,0.4680851064,0.08461538462,0.2376873662,1.0,0.2252071806,0.7747928194,0.00405768911,0.003439914719
I have a Windows VM.,Contribution and Commitment,False,20,MEMBER,False,False,False,0.3846153846,0.05154639175,0.1331360947,0.3333333333,0.009494210283,0.9905057897,4.98635903e-06,1.797870487e-05
I think it fails on AIX 71.,Observed Bug Behaviour,False,27,CONTRIBUTOR,False,False,False,1.0,0.04022988506,1.0,0.2573529412,0.7481451978,0.2518548022,0.001172416587,0.02794923017
"The pip wheels are using OpenBLAS and you don't have the problem when using OpenBLAS with conda (through the CODE trick) so this does look like a MKL problem, which on top of that is likely CPU-specific.",Investigation and Exploration,True,203,MEMBER,False,False,False,1.0,0.5352112676,0.485380117,1.0,0.4161864309,0.5838135691,0.003024101758,0.0005175555106
"Yes, I went from no -Xms to setting -Xms",Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,1.0,0.06569343066,0.5,0.3903345725,0.02031253358,0.9796874664,1.9e-05,2.03e-05
"To confirm that assumption we need to know:

1) Is the following true: J9Method's memory  can be freed **iff**",Investigation and Exploration,False,112,CONTRIBUTOR,False,False,False,0.3620689655,0.2307692308,0.5714285714,0.6188811189,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
Closing this.,Action on Issue,False,13,CONTRIBUTOR,True,False,True,1.0,0.015625,1.0,1.0,1.0,0.0,0.00485352044,0.0
"@dmitripivkine in regards to:
> An alternate possibility it is collision between ""class unload"" and ""classloader unload"" hook handlers itself.",Social Conversation,False,143,CONTRIBUTOR,False,False,False,0.350877193,0.2197802198,0.1428571429,0.8391608392,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
Thank you again!,Social Conversation,False,16,NONE,False,False,True,3.0,0.03092783505,1.0,3.0,1.0,0.0,5.045956947e-06,0.0
Can it have a higher variance?,Solution Discussion,False,30,MEMBER,False,False,False,0.1666666667,0.08823529412,0.8577235772,0.9230769231,0.6243074007,0.3756925993,0.05176800464,0.02547446062
"Thank you to everyone who contributed to understanding this issue, regardless of how we proceed here.",Social Conversation,False,101,CONTRIBUTOR,False,False,False,0.7272727273,0.1720430108,0.6666666667,0.888030888,0.8409579034,0.1590420966,0.004353145679,0.0215829485
"When the ref count of an OOV string drops to 0, it's freed.",Solution Discussion,False,59,MEMBER,False,False,False,0.325,0.2096774194,0.4052863436,0.8611111111,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
I'd like to follow the progress.,Task Progress,False,32,CONTRIBUTOR,False,False,False,0.3333333333,0.1044776119,0.7142857143,0.625698324,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
And having incompatible options is something that happens often in scikit-learn.,Motivation,False,80,MEMBER,False,False,False,0.8,0.1875,0.6139705882,0.6666666667,0.1225315788,0.8774684212,7.444610875e-05,0.0001733007777
*         [shuffle_iter] URL ,Expected Behaviour,False,29,NONE,False,False,False,0.1,0.0447761194,0.1719833564,0.8285714286,0.04064994448,0.9593500555,0.2125437083,0.01543061897
It's not compiling because of harfbuzz code.,Solution Discussion,False,44,CONTRIBUTOR,False,False,False,0.6363636364,0.04022988506,0.2,0.3529411765,0.7636365775,0.2363634225,0.00180747065,0.0005973713534
"Following was a typical result from the verbose log on Windows before the change:

CODE

and this was a typical one from after the change

CODE",Investigation and Exploration,True,149,MEMBER,False,False,False,0.6444444444,0.4328358209,0.8571428571,0.5260115607,0.009579724698,0.9904202753,0.003668136449,0.001720565783
"I rebuilt it, but it doesn't work:
CODE",Solution Discussion,True,40,CONTRIBUTOR,False,False,False,0.45,0.08653846154,1.0,0.3259668508,0.1320606558,0.8679393442,0.0007086181756,9.57e-05
"That has been the case for: AIX32/64, BE Linux64, and LE Linux.",Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.2666666667,0.09375,0.6,0.1444444444,0.02828196509,0.9717180349,0.0001303405259,0.0002282569671
Some workarounds are,Workarounds,False,20,CONTRIBUTOR,False,False,False,0.05357142857,0.0447761194,0.8876560333,0.5384615385,0.8997769167,0.1002230833,0.0385452454,0.125435556
"The tutorial page [here] URL  mainly just suggests using separate processes, but this can be a pain, especially if I want to do early stopping based on the validation data.",Motivation,False,172,NONE,False,False,False,0.62,0.4626865672,0.4299583911,0.8,0.4000653979,0.5999346021,0.1106294504,0.0001180823828
"Worked fine, so far!",Social Conversation,False,20,NONE,False,False,False,0.2222222222,0.03149606299,0.6627565982,1.0,0.506545241,0.493454759,0.01499535971,0.001849462207
@djimoh5 Awesome thoughts on JavaScript to Python full-featured APIs!,Social Conversation,False,69,CONTRIBUTOR,False,False,False,0.1923076923,0.1369863014,0.7564655172,0.25,0.7054919778,0.2945080222,0.0002671302531,0.0550485294
"I'm currently using GDB 8.2, which is older.",Task Progress,False,44,CONTRIBUTOR,False,False,False,0.2105263158,0.170212766,0.75,0.2230769231,0.1107806812,0.8892193188,0.009602972199,0.01857337902
This is exactly the behavior I was expecting.,Expected Behaviour,False,45,CONTRIBUTOR,False,False,False,0.2857142857,0.1,0.75,0.318627451,0.2326748385,0.7673251615,0.004429301533,0.02640472652
Doing it the way you described seems pretty manual and hacky.,Solution Discussion,False,61,MEMBER,False,False,False,0.4782608696,0.1549295775,0.902173913,0.8571428571,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
"Try not defining the metric in the notebook, but in a separate file and import it.",Solution Discussion,False,82,MEMBER,False,False,False,0.8888888889,0.1649484536,0.2426035503,0.6666666667,0.2588472304,0.7411527696,0.001083708651,1.0
I have no idea if anything about that environment is masking properties sent to the jvm.,Investigation and Exploration,False,88,NONE,True,False,False,0.5161290323,0.1203007519,0.4285714286,0.1857506361,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
"I first performed some minor preprocessing to remove newlines from the data so that it could be read line by line so that it wouldn't all be kept in memory, then I ran spacy with all models set to false, only the tokenizer loaded.",Observed Bug Behaviour,False,230,NONE,True,True,False,0.7719298246,0.7096774194,0.02643171806,0.3529411765,0.0,1.0,0.0,0.0008157310994
It would seem better to run with 9.1 but I'd rather avoid building TF from source and it seems that may not fix it anyhow..,Solution Discussion,False,123,NONE,False,False,False,0.7297297297,0.2125984252,0.4017595308,0.8181818182,0.3802587264,0.6197412736,0.006558528713,0.00183836987
*         https://deeplearnjs.org/demos/mnist/mnist.html,Solution Discussion,False,56,NONE,False,False,False,0.3333333333,0.02739726027,0.8405172414,0.5,0.81202295,0.18797705,0.0001068963647,0.0006469111266
It's targeted for 0.19 so expect progress as we ramp on that release,Task Progress,False,68,MEMBER,False,False,False,0.7222222222,0.0977443609,1.0,0.3180661578,0.4050724031,0.5949275969,0.004984524022,1.06e-05
It turns out the mingw64 package specified in cygwin is still an older version without UCRT support.,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,0.5483870968,0.1440677966,0.3333333333,0.2121212121,0.396812476,0.603187524,0.003533051078,0.002619750082
I suspect that I have to enable multi-threading using OpenMP.,Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.55,0.07189542484,0.8520900322,0.75,0.1977965443,0.8022034557,0.00195977348,8.955394223e-06
I'm attempting the same test on one of the machines that produces the failure under normal circumstances.,Testing,False,105,CONTRIBUTOR,False,False,False,0.7391304348,0.3617021277,0.75,0.3461538462,0.3331491098,0.6668508902,0.04520695765,0.0003119892607
I'll edit the issue title to try to remember it right for next time.,Social Conversation,False,68,MEMBER,False,False,False,0.56,0.1971830986,0.5935672515,0.6666666667,0.4554241693,0.5445758307,0.003896611783,8.635150765e-05
"Using CODE for the individual tests doesn't change the CODE behavior, or change how TKG determines PASS/FAIL.",Investigation and Exploration,True,109,CONTRIBUTOR,True,False,False,0.7826086957,0.3103448276,0.2857142857,0.7155963303,0.9939440574,0.006055942622,0.006864019174,0.0128898379
But I guess everyone can imagine the same just with thousands of filenames in the list and a buffer_size e.g. of 5000.,Solution Discussion,False,118,NONE,False,False,False,0.55,0.328358209,0.6490984743,0.6666666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Yup that fixed it.,Usage,False,18,NONE,False,False,False,0.2857142857,0.01538461538,0.4389721627,0.2,0.3802491548,0.6197508452,0.003984639748,0.00101193657
I'll do some further testing with Spark before pushing it up to master.,Testing,False,71,MEMBER,False,False,False,0.7222222222,0.08496732026,0.2829581994,0.2222222222,0.008127924991,0.991872075,0.0004078869671,0.01796302825
I can retry some of the bigger sizes.,Task Progress,False,37,CONTRIBUTOR,True,False,False,1.0,0.1290322581,1.0,0.4430379747,0.2993669018,0.7006330982,0.01034662808,0.0008955215173
O-Slot: p0[0x0000000000321568],Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.1153846154,0.03225806452,0.75,0.5405405405,0.5370601617,0.4629398383,0.0003133369641,0.001592796234
ð,Social Conversation,False,1,NONE,False,False,False,0.25,0.01369863014,0.4245689655,1.0,0.5084527261,0.4915472739,0.1156266772,0.004802368983
The error points to this function in seq2seq_model.py which is line 142 in seq2seq_model.py: CODE,Potential New Issues and Requests,True,97,NONE,False,False,False,0.7894736842,0.02170767004,0.9438943894,0.6666666667,0.4075141407,0.5924858593,0.001838775159,0.06521718752
cuda 9.1 is the current version.,Solution Discussion,False,32,NONE,False,False,False,0.75,0.04724409449,0.2492668622,0.5,0.33779864,0.66220136,0.03156952861,0.0002203677479
"CODE etc., e.g. for creating streaming buffers, replay memory objects...",Expected Behaviour,True,72,NONE,False,False,False,0.6666666667,0.1492537313,0.8460471567,0.7142857143,0.7617931948,0.2382068052,0.1736946043,0.06663052939
"Among other things, we support a narrower range of platforms.",Potential New Issues and Requests,False,61,MEMBER,False,False,False,0.4166666667,0.2631578947,0.8175182482,0.7142857143,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
"To be precise, all values in my 128 dimensional output tensor increase such that the total vector length scales almost linearly with the batch size.",Usage,False,148,NONE,False,False,False,0.9615384615,0.09615384615,0.4903640257,0.3333333333,0.386758151,0.613241849,0.0004998808382,0.0004945035936
The benefits are:,Motivation,False,17,CONTRIBUTOR,False,False,False,0.1,0.0447761194,0.1095700416,0.4615384615,0.008365735399,0.9916342646,0.03692313957,0.0188753671
"FWIW, we are also able to reproduce this behaviour with 11.0.9 as well.",Bug Reproduction,False,71,NONE,True,False,False,1.0,0.1733333333,0.5,0.06779661017,0.001117731832,0.9988822682,0.001749406635,0.001144827456
Same problem here.,Social Conversation,False,18,CONTRIBUTOR,False,False,False,0.5,0.04838709677,0.2599118943,0.5,0.2105772073,0.7894227927,0.03432994834,0.008337610386
"On the other hand, if we warn we can point them to the fact that *if* they used LabelEncoder, they no longer need to do it.",Solution Discussion,False,123,CONTRIBUTOR,True,False,False,0.5909090909,0.40625,0.4669117647,0.9047619048,0.07430334202,0.925696658,0.1302436707,0.0003197521392
http://pytorch.org/docs/data.html,Motivation,False,33,NONE,False,False,False,0.05,0.01492537313,0.2399445215,0.5714285714,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
"DisableCASInlining caused it to hard crash instead of hanging

[DisableCASInlining.zip] URL 
[DisableUnsafe.zip] URL 

I included the coredump with the inlining zip",Investigation and Exploration,False,169,NONE,True,False,False,1.0,0.3582089552,1.0,0.3631284916,0.004030117692,0.9959698823,0.0004662876607,0.0005447205204
@rpshukla Could you help with the grinder?,Testing,False,42,CONTRIBUTOR,False,False,False,0.35,0.1489361702,0.75,0.05384615385,0.003497287056,0.9965027129,0.005864825644,0.0004608281741
In those cases even if you ask from the sys admin to install any libraries most probably the answer is gonna be NO!,Solution Discussion,False,115,NONE,True,False,False,0.96,0.188976378,0.2287390029,0.5,0.3332287349,0.6667712651,0.02958178195,0.02419682242
:),Social Conversation,False,2,NONE,False,False,False,0.3333333333,0.01666666667,0.9827586207,1.0,0.8014064324,0.1985935676,5.017614044e-05,0.9680205697
"ie:

1. Destroy SCC
2. Populate SCC; options CODE
2. Load from SCC; options CODE

Thanks!",Investigation and Exploration,True,95,CONTRIBUTOR,False,False,False,0.8,0.1459854015,1.0,0.2416356877,0.002200894134,0.9977991059,0.0002033294683,1.24e-06
I used ldedit to reset rwexec ... still same core dump.,Testing,False,55,CONTRIBUTOR,False,False,False,0.8333333333,0.05747126437,0.6666666667,0.8051470588,0.7733277692,0.2266722308,6.85e-06,3.15e-05
When we call other helpers via PicBuilder.m4 we do set r2.,Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.4782608696,0.0859375,0.6666666667,0.2944444444,0.03657460334,0.9634253967,0.0001058614156,4.42e-05
"Try uninstalling and reinstalling numpy, scipy and scikit-learn.",Solution Discussion,False,64,MEMBER,False,False,False,0.3214285714,0.1267605634,0.365497076,0.5,0.4122144832,0.5877855168,0.01767922574,0.01555461885
Python crashes.,Solution Discussion,False,15,CONTRIBUTOR,False,False,False,0.1111111111,0.01307189542,0.7234726688,0.7142857143,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
Still get the same error (CODE) in sklearn 0.18  (CODE) via conda.,Solution Discussion,True,66,CONTRIBUTOR,False,False,False,1.0,0.1830985915,0.3713450292,0.5,0.4148846518,0.5851153482,0.01555461885,0.0004752100597
With the elevated compile thread priority the system starves the application on windows.,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.4482758621,0.1940298507,0.6,0.8786127168,0.01918518568,0.9808148143,1.3e-06,0.0002576922821
"On the first run those would be default ones (8M/2M respectively for total/Nursery), but on subsequent, they would be higher values, as suggested by SC hints.",Solution Discussion,False,158,CONTRIBUTOR,False,False,False,0.6222222222,0.1917808219,1.0,0.3519553073,0.03208549702,0.967914503,0.0001774088301,4.2e-05
"The following windbg log shows removing the Java 8 from the Installed JRE (Only keeping Java 11) doesn't stop the segment fault
!",Investigation and Exploration,False,130,CONTRIBUTOR,False,False,False,0.2987012987,0.2323232323,0.75,0.8771929825,0.9005578376,0.09944216237,0.1143762639,0.00534555638
"still ongoing but I see consistent failure on Debian stretch (nd90, current stable) and testing (nd100), 32bit only (ok on amd64 build):CODE",Observed Bug Behaviour,True,140,MEMBER,True,True,False,1.0,0.3235294118,0.01219512195,0.75,0.0,1.0,0.0,0.02663056991
One simple sub case is where a column is numerical but has some missing values.,Motivation,False,79,NONE,False,False,False,0.75,0.234375,0.8051470588,0.3333333333,0.2596531697,0.7403468303,0.009666196666,0.01199680736
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_x86-64_mac_Nightly/73
jdk_util_0 CODE
java/util/Map/InPlaceOpsCollisions.java
CODE",Testing,True,156,CONTRIBUTOR,False,False,False,1.0,0.1195652174,1.0,0.5974842767,0.558018179,0.441981821,0.08663149456,0.00069427907
"The preprocessing and post processing do not require backprop, but they sill need to carry some values with them (normalization divisors or one hot mappings).",Expected Behaviour,False,158,NONE,False,False,False,0.5681818182,0.3731343284,0.4216366158,0.8333333333,0.3861707704,0.6138292296,0.3801876085,0.001120764685
-         One of our models is a localization model.,Motivation,False,52,CONTRIBUTOR,False,False,False,0.1914893617,0.1343283582,0.2593619972,0.3333333333,0.05010423233,0.9498957677,0.0003781690105,0.199242644
This bug seems to affect only JRE not JDK and it seems to affect both Hotspot and OpenJ9.,Investigation and Exploration,False,89,NONE,True,False,False,0.6923076923,0.1818181818,0.5714285714,0.5578947368,0.1993600534,0.8006399466,0.003371874835,0.005835937215
"I think that's a fine approach, and could even be done a bit more quickly by asynchronously loading the new English() instance and replacing the old one when the new is ready, but that still leads to quite the slow down.",Solution Discussion,False,220,NONE,True,False,False,1.0,0.6612903226,0.140969163,0.7,0.01937624511,0.9806237549,0.02003548886,0.01526654747
The processes are still there and consume a constant amount of RAM but require no processing time.,Observed Bug Behaviour,False,98,NONE,True,False,False,0.4722222222,0.175257732,0.05917159763,0.3636363636,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
It's close integration with Spark will be a great advantage for many researchers.,Motivation,False,81,CONTRIBUTOR,False,False,False,0.7222222222,0.08496732026,0.8327974277,0.625,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6810344828,1.0,0.7051249014,0.2948750986,8.432197716e-05,0.0008082516026
My code and results are available here: https://github.com/ELind77/spacy_memory_growth,Investigation and Exploration,False,86,NONE,True,True,False,0.1403508772,0.1290322581,0.06607929515,0.8823529412,0.0,1.0,0.0,0.0008157310994
try to feed reuse as a python variable (input of the model) and as placeholder.,Usage,False,79,NONE,False,False,False,1.0,0.05769230769,0.6552462527,1.0,0.5705040179,0.4294959821,0.0001103857016,0.0008277913049
here's the output of the above prints: CODE,Investigation and Exploration,True,43,NONE,False,False,False,0.2962962963,0.0824742268,0.4644970414,1.0,0.8484794361,0.1515205639,1.184011945e-05,2.737530974e-05
"https://ci.eclipse.org/openj9/view/Test/job/Grinder/666 - multiheap,buckets - failed

https://ci.eclipse.org/openj9/view/Test/job/Grinder/661 - multiheap:4 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/662 - multiheap:4,buckets - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/663 - multiheap:8 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/664 - multiheap:8,buckets - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/667 - multiheap:16 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/668 - multiheap:16, buckets - passed",Testing,False,593,CONTRIBUTOR,True,False,False,1.0,0.4677419355,1.0,0.1139240506,0.03708540155,0.9629145984,0.2206716703,0.005069760251
guys...thanks for the thread.,Social Conversation,False,29,NONE,False,False,False,0.2631578947,0.05154639175,0.2514792899,0.1428571429,0.6343054009,0.3656945991,1.0,0.005493875023
Or we should somehow jump to the local entry?,Solution Discussion,False,45,CONTRIBUTOR,False,False,False,0.9,0.0703125,1.0,0.3277777778,0.03688589167,0.9631141083,0.0004075557136,8.8e-05
I've updated the command line and will grind the test.,Task Progress,False,54,CONTRIBUTOR,False,False,False,1.0,0.171875,1.0,0.7234042553,0.9485857544,0.05141424556,0.0002524560366,0.02679880937
But there's no real problem.,Solution Discussion,False,28,MEMBER,False,False,False,0.1612903226,0.03267973856,0.05466237942,0.75,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
Thanks SCREEN_NAME  for your advice.,Social Conversation,False,36,CONTRIBUTOR,False,False,False,0.3333333333,0.03921568627,0.8199356913,0.125,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
Feel free to open other more specific FRs.,Potential New Issues and Requests,False,42,MEMBER,False,False,False,0.7272727273,0.1095890411,0.6422413793,1.0,0.6919655619,0.3080344381,0.02124426926,0.001738227844
"| 436044.333
  | CI | 2.17% | 0.56%
  | withSetting/noSetting | 99.61% | 99.93%



Setting-2 keeps failing the jobs and might need some help to figure it out @zl-wang @piyush286  FYI.",Testing,False,189,NONE,False,False,False,0.8571428571,0.4838709677,1.0,0.9873417722,0.923401339,0.07659866095,0.01459087501,0.09372347346
What I don't understand is why the JIT attempts to recompile the method again at hot.,Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,0.3404255319,0.2,0.875,0.2107843137,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
Is the dictionary part of the text dataset?,Motivation,False,43,NONE,False,False,False,0.2666666667,0.1194029851,0.1595006935,0.5714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"No, #9291 has the same problem, unfortunately.",Investigation and Exploration,False,46,CONTRIBUTOR,False,False,False,1.0,0.1129032258,1.0,0.09836065574,0.104729968,0.895270032,0.007925534914,4.8e-05
"Looked at the xlinuxXL failure, the error message is the same as #10580, which is 
CODE
So the crash is only seen on ppcle.",Investigation and Exploration,True,125,CONTRIBUTOR,False,False,False,1.0,0.5531914894,0.5,0.08076923077,0.005271788046,0.994728212,0.005529938089,0.002175337965
Some how the API is giving NULL.,Solution Discussion,False,32,CONTRIBUTOR,False,False,False,0.28,0.1129032258,0.375,0.2732240437,0.4942847726,0.5057152274,0.01863655198,0.01288492485
in training every thing is OK and loss decrease very good.,Solution Discussion,False,58,NONE,False,False,False,0.3928571429,0.04230769231,0.01498929336,0.3333333333,0.1699515439,0.8300484561,0.07587028422,0.02257012206
e.g. Some straw-man code: CODE,Solution Discussion,True,30,CONTRIBUTOR,True,False,False,0.1276595745,0.08955223881,0.5436893204,0.6785714286,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"Although it is slow, but with multi-processing, it is just a matter of machine.",Solution Discussion,False,79,NONE,False,False,False,0.7142857143,0.223880597,0.9209431345,0.8888888889,0.9479523715,0.05204762849,0.2620248075,0.005625200409
- Crash only occurs when inlining is enabled.,Bug Reproduction,False,45,CONTRIBUTOR,False,False,False,0.3043478261,0.1489361702,0.5,0.5423076923,0.5030540536,0.4969459464,0.01535044408,0.005154978519
The code @0dvictor delivered as part of #3463 and more specifically the line in [1] checks the same query used to generate the stack map as delivered in #3598.,Solution Discussion,False,159,CONTRIBUTOR,True,False,False,1.0,0.453125,0.25,0.4113475177,0.759681792,0.240318208,0.005380920094,0.001158893425
It is worthwhile to launch a previous failure with everything set to unlimited.,Solution Discussion,False,79,CONTRIBUTOR,False,False,False,1.0,0.2096774194,1.0,0.4008438819,0.2965277651,0.7034722349,0.003121198774,0.006977483614
-         fit: extend CODE with CODE new instances of CODE fitted over the training samples. Here we could also check whether the estimators in CODE are forests or decision trees.,Solution Discussion,True,179,MEMBER,False,False,False,1.0,0.4225352113,0.8550724638,0.7272727273,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"We are yet to agree what API is to be used, but effectively we need two:
- get/set total initial heap size (what normally is controlled by -Xms option)
- get/set Nursery/Eden initial heap size (what normally is controlled by -Xmns option).",Solution Discussion,False,241,CONTRIBUTOR,False,False,False,1.0,0.3082191781,0.875,0.3463687151,0.03208549702,0.967914503,0.0001774088301,4.2e-05
#11591 We need efficient sampling/shuffling for large datasets,Expected Behaviour,False,62,NONE,False,False,False,1.0,0.1343283582,0.8502080444,1.0,0.7700777998,0.2299222002,0.06663052939,0.88547434
Why 4 (INTR)?,Social Conversation,False,13,CONTRIBUTOR,True,False,False,0.0625,0.04838709677,0.3333333333,0.05907172996,0.002044534164,0.9979554658,0.0009071895501,0.00175020492
"I'm just wondering if there is any need to check the timestamps on every access, or if once per run or once per 'arbitrary interval' would be sufficient.",Solution Discussion,False,153,CONTRIBUTOR,False,False,False,1.0,0.204379562,1.0,0.7695167286,0.04443530314,0.9555646969,3.48e-05,0.0005201258903
Thanks for the update!,Social Conversation,False,22,NONE,False,False,False,1.0,0.03007518797,1.0,0.941475827,0.9156868095,0.0843131905,0.03295492264,0.02945136717
"Meanwhile, I will try to see if I can find an old backupstate to find out which conda version I had installed previously.",Investigation and Exploration,False,121,CONTRIBUTOR,False,False,False,0.6764705882,0.323943662,0.567251462,0.8571428571,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
Yes.,Social Conversation,False,4,MEMBER,False,False,False,0.06666666667,0.01052631579,0.7789473684,0.3333333333,0.1888985047,0.8111014953,3.85279729e-05,7.189240303e-05
Going to be building a custom JIT with some changes from @liqunl to enable us to carry on with CODE now.,Task Progress,True,104,CONTRIBUTOR,False,False,False,0.724137931,0.1578947368,1.0,0.8854961832,0.8417096079,0.1582903921,0.001691893138,0.03111464651
"Does the system test change resolve this Issue, or should it stay open for more investigation or further changes?",Social Conversation,False,113,CONTRIBUTOR,True,False,False,1.0,0.2835820896,1.0,0.9421965318,0.01960532883,0.9803946712,6.97e-06,0.0005708426721
"Running a build with all the fixes to date applied and DDR disabled resulted in the following, Illegal instruction.",Investigation and Exploration,False,115,CONTRIBUTOR,False,False,False,1.0,0.1091954023,0.5,0.05514705882,0.7075671106,0.2924328894,0.1010162401,0.003001622719
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1681034483,1.0,0.05118194258,0.9488180574,0.1015440217,0.1833290361
"That did cause the issue to disappear, however as we've expressed the lightest of changes causes this issue to disappear.",Testing,False,121,CONTRIBUTOR,False,False,False,0.4117647059,0.2307692308,0.9047619048,0.4755244755,0.8054811495,0.1945188505,0.1631008731,0.2634355634
"[CompareAndSwapObject.zip] URL 

edit: I've done a number of runs of this now.",Investigation and Exploration,False,80,NONE,True,False,False,0.3111111111,0.2089552239,0.6666666667,0.4581005587,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
I dumped internal stack traces at throw and catch which seem reasonable.,Task Progress,False,72,CONTRIBUTOR,False,False,False,0.2926829268,0.1875,0.8,0.7517730496,0.9534244256,0.04657557439,0.02679880937,0.0005193381324
This test runs as part of an automated build which can take several hours to complete.,Investigation and Exploration,False,86,NONE,False,False,False,0.6956521739,0.1203007519,0.5,0.7837150127,0.7978584392,0.2021415608,0.00412079602,0.0003049413581
i.e. a different -Xmx invalidates the hint.,Solution Discussion,False,43,CONTRIBUTOR,True,False,False,0.2692307692,0.04794520548,0.2727272727,0.2067039106,0.01440399469,0.9855960053,0.001770078156,0.04266521959
Thought I'd share since a number of folks have expressed interest on this issue.,Social Conversation,False,80,NONE,False,False,False,0.5555555556,0.2054794521,0.8642241379,1.0,0.8316156465,0.1683843535,0.2335327035,0.08097676277
Closing this bug since the original request to add a batch norm layer has been addressed.,Action on Issue,False,89,MEMBER,False,False,True,16.0,0.06153846154,0.9957173448,1.0,1.0,0.0,0.01441639293,0.0
happy to ignore for now ;),Social Conversation,False,26,CONTRIBUTOR,False,False,False,1.0,0.1034482759,1.0,0.376146789,0.0212099569,0.9787900431,7.08e-05,4.7e-05
"Now, we know the problematic JIT compiled method is:
CODE

Given this knowledge, we can try to binary search on the optimization which caused the JIT method to be miscompiled.",Investigation and Exploration,True,178,CONTRIBUTOR,False,False,False,0.9696969697,0.2406015038,0.4117647059,0.5318066158,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
"pthread_create is returning 11 (EAGAIN), which is ""The limit on the number of threads per process has been reached."".

We did see a similar problem creating threads because of the data limit, but we modified the VM to set the data soft limit to the hard limit.",Expected Behaviour,False,262,CONTRIBUTOR,True,False,False,1.0,0.7741935484,0.6666666667,0.06329113924,0.002044534164,0.9979554658,0.0009071895501,0.00175020492
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3599137931,1.0,0.4215855312,0.5784144688,0.1129128817,0.1150477105
Please see https://github.com/explosion/spaCy/pull/1424,Action on Issue,False,55,MEMBER,False,False,False,1.0,0.04838709677,0.9911894273,1.0,0.7416075027,0.2583924973,0.2056416849,0.9898268541
"For the record, if I had confirmed something like that, I would have said so explicitly.",Social Conversation,False,88,CONTRIBUTOR,False,False,False,0.5333333333,0.1720430108,0.6666666667,0.1814671815,0.325316952,0.674683048,0.005733320402,0.06293969756
"It failed to resolve JVM_AreNestMates & JVM_BeforeHalt because they were missing in jvm.lib.
CODE

I am wondering whether jvm.lib must be renamed from vm/j9vm_jdk11/jdk11_jvm.lib and copied to ./vm/lib.",Solution Discussion,True,205,CONTRIBUTOR,False,False,False,1.0,0.2711864407,0.6666666667,0.703030303,0.5516150872,0.4483849128,0.0008889926047,0.00606228134
It's great to hear that the new API brought a speedup for your code...,Solution Discussion,False,70,CONTRIBUTOR,True,False,False,0.2978723404,0.2089552239,0.5284327323,0.2857142857,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"@jnothman in case you want to reproduce the problem, IIRC you can create an environment with Accelerate on OSX  with something like:CODE",Bug Reproduction,True,136,MEMBER,False,False,False,1.0,0.2474226804,0.3698224852,1.0,0.8123999005,0.1876000995,3.019627779e-06,0.00176012514
https://github.com/jsimomaa/spring-boot-openj9,Bug Reproduction,False,46,NONE,True,False,False,0.01724137931,0.007299270073,0.5,0.3011152416,0.01108575056,0.9889142494,0.006010021534,0.009079840981
"Disabling jit with -Xnojit fixes the problem, and the program fails after a few warmup iterations when I have the default options enabled.",Solution Discussion,False,138,NONE,True,False,False,0.3709677419,0.3432835821,0.5,0.06145251397,0.001478498714,0.9985215013,0.002326266906,0.0001379039292
The next steps would be to define the areas that the bindings would initially cover (must be within the C++ API ) and start implementing the SWIG interface files for these.,Task Progress,False,172,NONE,False,False,False,0.7894736842,0.4109589041,0.2198275862,0.4,0.1037013205,0.8962986795,0.265083066,0.07059453633
"Both of these options require pickling, but B requires somewhat more complex pickling.",Solution Discussion,False,86,NONE,False,False,False,0.3023255814,0.08496732026,0.2508038585,0.7894736842,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
ABI behavior requires that the caller of a C/C++ compiled method pass the TOC of the calle's library.,Expected Behaviour,False,101,CONTRIBUTOR,True,False,False,0.1484375,0.1484375,0.1052631579,0.8833333333,0.3076445993,0.6923554007,0.1283873506,1.0
Yeah this sounds terrifying.,Social Conversation,False,28,CONTRIBUTOR,False,False,False,0.16,0.06451612903,0.5814977974,0.1666666667,0.2194242891,0.7805757109,0.002309046196,0.1481803025
Keep up the good work!,Social Conversation,False,22,NONE,False,False,False,0.1612903226,0.07462686567,0.5825242718,1.0,0.4630003862,0.5369996138,0.01269843694,0.02260310577
"To avoid any difference with STS4,  I tried the following steps:

1) downloaded/installed Oracle JDK 8 from https://download.oracle.com/otn-pub/java/jdk/8u191-b12/2787e4a523244c269598db4e85c51e0c/jdk-8u191-windows-x64.exe
![image] URL 
2) downloaded/unzipped STS4 (standalone tool package) from http://download.springsource.com/snapshot/STS4/nightly/dist/e4.9/spring-tool-suite-4-4.0.2.CI-B1369-e4.9.0-win32.win32.x86_64.zip
3) ran SpringToolSuite4.exe to launch STS4 with JDK8 (no changes in SpringToolSuite4.ini) 
4) Installed Java 11 support for Eclipse 4.9 from the Eclipse marketplace
5)",Investigation and Exploration,False,599,CONTRIBUTOR,False,False,False,1.0,0.6262626263,0.3333333333,0.4315789474,0.1951791301,0.8048208699,0.1924076078,0.004535009544
"For example, a CODE receives the number of epochs to be generated but there seems to be no way of knowing the epoch of one sample without counting how many we have already evaluated.",Motivation,True,182,CONTRIBUTOR,False,False,False,0.7391304348,0.5074626866,0.20110957,1.0,0.04271149234,0.9572885077,0.001149776305,0.005164577321
It is now implemented in GBRT.,Task Progress,False,30,MEMBER,False,False,False,0.4285714286,0.08450704225,0.981884058,0.6666666667,0.999977436,2.256404123e-05,2.35122996e-06,2.449490317e-05
Sorry I didn't see this issue since my external handle is wrong there.,Social Conversation,False,70,NONE,False,False,False,1.0,0.2096774194,0.4,0.8481012658,0.6663614196,0.3336385804,0.02615972953,0.2052027758
JIT-ed code call-able helpers:  the TOC should be gotten by loading from J9VMThread->jitTOC.,Expected Behaviour,False,92,CONTRIBUTOR,False,False,False,0.3555555556,0.125,0.4,0.1388888889,0.02828196509,0.9717180349,0.0001303405259,0.0002282569671
"so, I predicted:  even if you can get past the SIGABRT dump, you will see SIGILL next.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,1.0,0.1034482759,1.0,0.8272058824,0.7733450534,0.2266549466,2.84e-06,1.43e-05
"If you want to further discuss the specific non-linear discretization or mixed numeric/string encoding, feel free to open a new issue.",Potential New Issues and Requests,False,134,CONTRIBUTOR,True,False,False,0.9583333333,0.359375,0.9080882353,0.3333333333,0.2716685717,0.7283314283,0.03415611878,0.7749660924
CODE returns a (possibly nested) tuple of np.array or lists.,Solution Discussion,True,60,NONE,False,False,False,0.625,0.1492537313,0.9029126214,0.5,0.9153731312,0.08462686876,0.125435556,0.2620248075
We can at least pickle our data correctly :),Social Conversation,False,44,MEMBER,False,False,False,0.2571428571,0.05882352941,0.463022508,1.0,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
"What about the snippet from https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-243782185, you didn't find a way to make it deterministic and still fail on your machine?",Investigation and Exploration,False,187,MEMBER,False,False,False,1.0,0.2957746479,0.4152046784,1.0,0.4150336227,0.5849663773,0.0001917999833,0.0004979050073
The programmers' guide has [more details](https://www.tensorflow.org/programmers_guide/datasets#creating_an_iterator) about how to use this feature.,Usage,False,148,CONTRIBUTOR,True,False,True,14.0,0.2089552239,0.9958391123,22.0,1.0,0.0,0.02385162338,0.0
"With consistency, are you pointing to the naming scheme of ""what it accepts"" vs ""what it does"" ?",Motivation,False,96,CONTRIBUTOR,True,False,False,0.4722222222,0.265625,0.5845588235,0.1428571429,0.122514657,0.877485343,0.0002168293768,7.444610875e-05
"1)         Keep things as we have it now in master, and be be OK with adding some new options to the single class (an important question which is hard to answer now, is how much new features we will want to add in the future).",Solution Discussion,False,226,CONTRIBUTOR,True,True,False,0.92,0.71875,0.0625,0.7083333333,0.0,1.0,0.0,0.0007774126438
@miguelalche Glad to see you're interested!,Social Conversation,False,43,NONE,False,False,False,0.4615384615,0.08219178082,0.1012931034,0.3333333333,0.001699296561,0.9983007034,0.001375709738,0.0006469111266
Implementation details:-         The data should be stored in a PreshMap instance.,Solution Discussion,False,82,MEMBER,False,False,False,0.3636363636,0.3157894737,0.3795620438,0.8461538462,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
I can confirm that test_preserve_trustworthiness_approximately also failed on a 64 bit Mac.,Bug Reproduction,False,91,NONE,False,False,False,0.5454545455,0.1764705882,0.3617886179,0.25,0.4607405818,0.5392594182,0.2982430454,0.003789469322
"**Running the test with CODE on a system with ample resources**
- The test passes.",Testing,True,83,CONTRIBUTOR,False,False,False,0.4054054054,0.3191489362,1.0,0.4692307692,0.3704340031,0.6295659969,0.007316005049,0.001912007579
"(I had tried roughly the same thing others had, just on MNIST).",Solution Discussion,False,63,NONE,False,False,False,1.0,0.1690140845,0.3245614035,0.4,0.324045968,0.675954032,0.0002259807885,0.0001194252422
This will probably be Wikipedia --- it's a nice way to streamline things across languages.,Solution Discussion,False,90,MEMBER,False,False,False,0.25,0.25,0.1293103448,0.36,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
"So I see two possible solutions: make sure warm-start is always called with the same data, then adding estimators would be warm starting.",Solution Discussion,False,137,MEMBER,False,False,False,1.0,0.338028169,0.3623188406,0.3333333333,0.03956355713,0.9604364429,5.930714377e-06,6.344811593e-05
"For example, these two things are effectively same:
1) -Xmx4G -Xms4G
2) -Xmx4G -Xms4G -Xmn1G
but I would still invalidate the hints.",Solution Discussion,False,135,CONTRIBUTOR,False,False,False,0.6666666667,0.2054794521,0.625,0.3351955307,0.03208549702,0.967914503,0.0001774088301,4.2e-05
I found a failure in an internal build.,Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,0.4444444444,0.1290322581,0.3333333333,0.7650273224,0.9692607796,0.03073922042,0.2372754111,0.0002193629989
"It may gofaster or slower, but it's somewhat fool proof.",Solution Discussion,False,56,MEMBER,False,False,False,0.303030303,0.1408450704,0.6376811594,0.5,0.06511199992,0.9348880001,0.000167358443,3.516317045e-05
"Please make sure to set your PATH variable appropriately, such as described here: https://stackoverflow.com/questions/39287744/ubuntu-16-04-nvidia-toolkit-8-0-rc-darknet-compilation-error-expected-a/41290056#41290056",Solution Discussion,False,216,NONE,False,False,False,1.0,0.1102362205,0.2434017595,0.5,0.3352318187,0.6647681813,0.0004392565177,0.03156952861
"I've just been noticing that if I kill the tensorflow process and restart it, my error gets worse for a few epochs (i.e. worse than it should be at the last checkpoint).",Usage,False,169,NONE,False,False,False,0.8048780488,0.1269230769,0.7837259101,0.1666666667,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
So that's roughly a 60% penalty for just using the SCC.,Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,1.0,0.0802919708,0.5,0.5799256506,0.02541939046,0.9745806095,8.2e-05,1.78e-05
"A way to deal with the HCR problem, in this specific case anyway, is to check whether the comp should be interrupted before the assert - If it does then we abort the compilation; if it doesn't then the assert will only fire when we hit an inconsistent state.",Solution Discussion,False,258,CONTRIBUTOR,False,False,False,0.8,0.7741935484,0.1111111111,0.9508196721,0.9848847044,0.01511529561,0.001947660621,0.07932791196
@pbnsilva can you try this snippet posted below ?,Investigation and Exploration,False,49,MEMBER,False,False,False,0.3333333333,0.1126760563,0.2719298246,0.2857142857,0.2834754496,0.7165245504,0.0008809514386,0.02320572223
Use synaptic https://github.com/cazala/synaptic,Workarounds,False,47,NONE,False,False,False,1.0,0.04109589041,0.5495689655,1.0,0.6332208911,0.3667791089,0.01279613668,0.001457597222
This issue is fairly difficult to reproduce while enabling tracing.,Bug Reproduction,False,67,CONTRIBUTOR,False,False,False,0.4,0.1098901099,0.1111111111,0.3741258741,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
Do you think it could be related to some issue in the old conda?,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.4117647059,0.1971830986,0.5614035088,0.5714285714,0.4545854804,0.5454145196,4.179191556e-05,0.0006836161022
The build dependencies are intended to ensure that steps like running CODE occur before CODE begins; I suspect we're missing some of those dependencies.,Investigation and Exploration,True,152,CONTRIBUTOR,False,False,False,0.4285714286,0.2033898305,0.5,0.5818181818,0.4307180112,0.5692819888,0.006132428413,0.004460705601
"The Akka framework uses Unsafe extensively, making this an excellent stress test for those parts of Unsafe that are used for implementing synchronization primitives.",Investigation and Exploration,False,165,CONTRIBUTOR,False,False,False,0.8,0.3582089552,0.25,0.8547486034,0.1409452519,0.8590547481,0.06580775503,0.4477852629
This issue was opened yesterday in the morning,Action on Issue,False,46,CONTRIBUTOR,False,False,False,1.0,0.08602150538,1.0,0.1428571429,0.08661913122,0.9133808688,0.0003767503973,0.002189628546
2.         Use a smaller decay value will accelerate the warm-up phase.,Usage,False,71,CONTRIBUTOR,False,False,False,0.3333333333,0.05,0.6017130621,0.9090909091,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
Do you have a minute to video chat about this?,Social Conversation,False,46,MEMBER,False,False,False,1.0,0.1052631579,0.5473684211,0.5,0.1887283593,0.8112716407,1.151867231e-05,4.730238472e-06
@ebrevdo I meet the same error when running the sequence_to_sequence model on the tensorflow1.1 website.,Bug Reproduction,False,104,NONE,False,False,False,1.0,0.02170767004,0.5544554455,0.3333333333,0.1440568111,0.8559431889,0.03511934773,0.004494533216
"The state of the machine I was using has changed, so I'll be running a Grinder to verify the result on other machines.",Investigation and Exploration,False,118,CONTRIBUTOR,False,False,False,1.0,0.4893617021,1.0,0.35,0.3331491098,0.6668508902,0.04520695765,0.0003119892607
This would ensure that strings stay available from only the last 1000 documents.,Solution Discussion,False,80,MEMBER,False,False,False,0.40625,0.2096774194,0.9118942731,0.4,0.6578010252,0.3421989748,0.0002101432121,0.0002159883295
"This is scikit-learn version 0.14, last updated and run using Enthought Canopy.",Observed Bug Behaviour,False,79,NONE,True,False,False,0.3611111111,0.1340206186,0.06213017751,0.4545454545,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
Then add a placeholder to specify the action.,Solution Discussion,False,45,MEMBER,False,False,False,0.3636363636,0.1194029851,0.2219140083,0.5,0.04913573011,0.9508642699,0.0009069948543,0.001568663379
"I'll discuss the design decision here, so that we can consider the trade-offs.",Social Conversation,False,78,MEMBER,False,False,False,0.35,0.2258064516,0.281938326,0.08333333333,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"I wonder if CODE returns different results, or it's just that we failed storing the record.",Solution Discussion,True,91,CONTRIBUTOR,False,False,False,0.4571428571,0.2580645161,0.1666666667,0.5027322404,0.6631878845,0.3368121155,0.0184875191,0.1091893746
"yes, with any of the previously failing setting(s), e.g.  multiheap,buckets",Solution Discussion,False,75,CONTRIBUTOR,False,False,False,1.0,0.1935483871,1.0,0.253164557,0.04814672529,0.9518532747,0.001569350411,7.29e-05
"The similar issue mentioned above is not repeatable, so this is still my best chance to find the underlying problem (I'm hoping there's only one!).",Investigation and Exploration,False,147,CONTRIBUTOR,False,False,False,1.0,0.2403846154,1.0,0.2320441989,0.08273780276,0.9172621972,0.0528229212,0.002473459958
"Maybe try using Keras instead, it's likely a better solution for large scale neural nets.",Solution Discussion,False,89,MEMBER,False,False,False,1.0,0.1546391753,0.9911242604,1.0,0.9999981055,1.894545764e-06,1.350886112e-06,5.045956947e-06
"anyway, JavaScript is awesome!",Motivation,False,30,NONE,False,False,False,0.1904761905,0.05479452055,0.3836206897,1.0,0.4349495154,0.5650504846,0.003115708122,0.2584362368
"I'm not sure what are you trying to do, in most cases using static values solve the problem.",Usage,False,92,MEMBER,False,False,False,0.8571428571,0.06923076923,0.6680942184,0.4,0.5709329897,0.4290670103,0.001836887066,0.003906111685
"One scenario that might cause this is if the thread is interrupted during a malloc/free, and the ASGCT call uses malloc/free, resulting in corruption of the malloc heap.",Investigation and Exploration,False,169,CONTRIBUTOR,False,False,False,1.0,0.2884615385,0.5,0.1160220994,0.01148596888,0.9885140311,0.004865870055,0.007118677448
it is caused by CODE not loaded!!!,Investigation and Exploration,True,34,NONE,False,False,False,0.1044776119,0.0985915493,0.6842105263,0.2857142857,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
See details on the [deeplearn.js] URL  homepage.,Potential New Issues and Requests,False,48,MEMBER,False,False,False,0.7272727273,0.1095890411,0.6379310345,0.5,0.6919655619,0.3080344381,0.02124426926,0.001738227844
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5086206897,1.0,0.6052602943,0.3947397057,0.02541389144,0.01426214397
i was referring to the extreme case of tuning in performance guide or something.,Solution Discussion,False,80,CONTRIBUTOR,False,False,False,1.0,0.2258064516,0.6,0.9620253165,0.9212826815,0.07871731848,0.003961297135,0.01459087501
Which nightly build are you using?,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.1935483871,0.1276595745,0.5,0.2653846154,0.1394041083,0.8605958917,0.1326211964,0.006159641184
"The one that it appears to have hung on, and the one from the CODE.",Testing,True,67,NONE,True,False,False,0.4166666667,0.2,0.8,0.8305084746,0.08547570942,0.9145242906,3.24e-05,0.0002356611565
I have the same issue (with cuda 9.1 + tensorflow 1.5).,Bug Reproduction,False,55,NONE,False,False,False,0.4,0.07874015748,0.1759530792,0.25,0.2644014152,0.7355985848,0.2449173066,0.2378544464
"The first field captured is ""invalidByteCodeIndex"" which is a ""static const"" variable.",Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.8,0.1016949153,1.0,0.5212121212,0.4196774374,0.5803225626,0.0001321913482,0.0003516613975
So CODE,Usage,True,7,NONE,False,False,False,0.07692307692,0.007692307692,0.2034261242,0.3125,0.2234305404,0.7765694596,0.0068527403,0.007193130032
Still working on a solution,Social Conversation,False,27,NONE,False,False,False,0.625,0.007235890014,0.597359736,1.0,0.1804398016,0.8195601984,0.0413883417,0.002511347281
And you are 100% sure that not compiling CODE will not have this issue ?,Investigation and Exploration,True,72,CONTRIBUTOR,False,False,False,1.0,0.175,1.0,0.8529411765,0.9534085342,0.04659146584,0.005270216391,0.01437384465
"As it sounds complicated and the exact cause of the error is still obscure, I speculate it's probably a complication interweaved by incomplete MKL library loading and scikit-learn dependent libraries (possibly numpy?).",Investigation and Exploration,False,218,NONE,False,False,False,1.0,0.4647887324,0.7426900585,0.7777777778,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
"JCL knows the info if a Jar file is open or not, and used to provide such info to the JVM.",Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.7777777778,0.1532846715,0.75,0.7918215613,0.0447813626,0.9552186374,0.0005201258903,0.0006439456684
"I guess it is not worth storing the whole CML,  Also there is an option -Dsun.java.launcher.pid, which will be different from run to run.",Solution Discussion,False,137,CONTRIBUTOR,False,False,False,0.6944444444,0.1712328767,0.75,0.2681564246,0.0285314246,0.9714685754,0.04266521959,0.0006509267927
"However, it appears that sometimes when doing this the JVM just freezes, and nothing happens anymore. CODE gives no results.",Observed Bug Behaviour,True,124,NONE,True,True,False,0.6666666667,0.2666666667,0.5,0.02824858757,0.0,1.0,0.0,4.66e-05
"I don't know if they were there and installing gensim removed them since it updated numpy etc, but this is likely since the code worked before installing gensim.",Investigation and Exploration,False,161,NONE,False,False,False,1.0,0.2886597938,0.674556213,0.9090909091,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
"-         What do you mean by ""crashes""?",Investigation and Exploration,False,40,MEMBER,False,False,False,0.3888888889,0.07216494845,0.02958579882,0.3333333333,2.176489976e-05,0.9999782351,5.796890697e-05,0.0007141221038
"I don't think any other exceptions would be thrown from the VM normally, and the CODE may be a ClassFormatError instead of a VerifyError.",Investigation and Exploration,True,137,CONTRIBUTOR,False,False,False,1.0,0.1804511278,1.0,0.1424936387,0.01296304619,0.9870369538,0.002394157552,0.003545658632
hmm my Windows 10 box is not showing a slowdown with CODE.,Investigation and Exploration,True,58,CONTRIBUTOR,False,False,False,0.4615384615,0.08759124088,0.2,0.6319702602,0.02581807522,0.9741819248,0.0002654464138,9.32e-05
"thanks,",Social Conversation,False,7,NONE,False,False,False,0.05882352941,0.01030927835,0.6124260355,1.0,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
"Instrumented the test - the problem is at the throw, not the catch:

 [ERR] throw: 10021b00de0 0 catch: 10021b00de0 6

The thrower has detected the wrong catch PC.",Investigation and Exploration,False,167,CONTRIBUTOR,False,False,False,1.0,0.453125,0.5,0.6453900709,0.9451349562,0.05486504379,0.1782796443,0.003207393836
"(I will do this when I'm available, aha)",Contribution and Commitment,False,40,CONTRIBUTOR,False,False,False,0.1538461538,0.1095890411,0.7607758621,0.75,0.7054919778,0.2945080222,0.0002671302531,0.0550485294
Will check other platforms.,Task Progress,False,27,CONTRIBUTOR,False,False,False,0.2,0.05970149254,0.75,0.1560693642,0.003377117413,0.9966228826,4.75e-06,0.0007383085446
Thankfully we now have a very reproducible environment in which we can drive progress.,Task Progress,False,86,CONTRIBUTOR,False,False,False,0.4375,0.1052631579,0.7142857143,0.903307888,0.859885377,0.140114623,0.0001189516558,0.06424166071
Is there anything strange about the C:\Users\Jani\AppData\Local\javasharedresources directory?,Investigation and Exploration,False,94,CONTRIBUTOR,False,False,False,1.0,0.05839416058,0.5,0.594795539,0.02546512762,0.9745348724,5.09e-05,4.93e-05
"In other versions of the code I get ""ValueError: Variable conv1/beta already exists, disallowed. Did you mean to set reuse=True in VarScope?"" which seem to indicate that I am trying to relearn the parameter...",Usage,False,209,NONE,False,False,False,1.0,0.1346153846,0.1156316916,0.2608695652,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"Execution failed: CODECODECODE
The VM has [(0.29.1)",Investigation and Exploration,True,52,MEMBER,True,False,False,0.275862069,0.08695652174,0.4,0.5220125786,0.5013662667,0.4986337333,0.009822949607,0.01749005949
Any suggested solutions/to_do_list ?,Solution Discussion,False,36,NONE,False,False,False,0.25,0.05633802817,0.8538011696,0.5,0.6456750725,0.3543249275,3.473434042e-05,0.0001660605916
"1) The issue with **getmacros** has been resolved after adding one dependency entry for  jvmtitest to /runtime/ddr/module.xml as follows:
CODE

2) After deleting /closed/make/lib/LibCommon.gmk  (FindSrcDirsForLib no longer exists at make/lib/LibCommon.gmk since JDK11),  the build currently fails when compiling the ddr classes:
CODE
It looks like the jobs of both building ddr classes and creating .dll",Solution Discussion,True,408,CONTRIBUTOR,False,False,False,1.0,0.5847457627,0.5,0.6181818182,0.5174086874,0.4825913126,0.2645202125,0.01501286261
Use of batch_norm with tf.placeholder CODE,Usage,True,42,MEMBER,False,False,False,1.0,0.02307692308,0.2826552463,1.0,0.2263056848,0.7736943152,0.002735597126,3.074160625e-05
"In this docker container, it seems to ignore the CODE :-/",Testing,True,57,NONE,True,False,False,0.3055555556,0.1466666667,1.0,0.8361581921,0.08547570942,0.9145242906,3.24e-05,0.0002356611565
ValueError: Attempt to reuse RNNCell <tensorflow.contrib.rnn.python.ops.core_rnn_cell_impl.GRUCell object at 0x7fba0683de90> with a different variable scope than its first use.,Bug Reproduction,False,176,NONE,False,False,False,0.4736842105,0.02604920405,0.1749174917,0.5,0.04574248984,0.9542575102,0.0977297843,0.03037586316
I believe this is just very intermittent issue.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,1.0,0.08791208791,0.5,0.1923076923,0.3545450984,0.6454549016,0.01011234657,0.0005314990198
OMR PR: https://github.com/eclipse/omr/pull/5590,Solution Discussion,False,48,CONTRIBUTOR,False,False,False,1.0,0.06382978723,1.0,0.9807692308,0.7710198967,0.2289801033,0.1968967087,0.2393844938
"@priidukull, could you please provide the output of: CODE and of:CODE",Investigation and Exploration,True,69,MEMBER,False,False,False,1.0,0.1764705882,0.5650406504,0.3333333333,0.5703414647,0.4296585353,0.001821873532,0.0110293102
I wonder is this test does some class unloading or redefinition.,Investigation and Exploration,False,64,CONTRIBUTOR,True,False,False,1.0,0.0582010582,1.0,0.06857142857,0.1331240796,0.8668759204,0.002813570532,0.001175011289
It is not supposed to change during a compilation.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,1.0,0.04761904762,0.3333333333,0.5142857143,0.4466728826,0.5533271174,0.001023944321,0.001615795728
I've ran 2 10 iteration grinders on two seperate aix machines and couldn't reproduce the error.,Bug Reproduction,False,95,NONE,True,False,False,0.9444444444,0.1868131868,0.5,0.03146853147,0.002719058434,0.9972809416,0.003086545757,0.005933531811
P.S. https://github.com/scikit-learn-contrib/categorical-encoding ?,Task Progress,False,67,NONE,False,False,False,0.1,0.03125,0.9816176471,1.0,0.9997898183,0.0002101816893,0.3072525155,0.0009246776239
That will be easier for handling English's settings or parameters.,Solution Discussion,False,66,NONE,False,False,False,0.2325581395,0.06535947712,0.2572347267,0.8947368421,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
But there are also some interesting results in there too.,Potential New Issues and Requests,False,57,MEMBER,False,False,False,0.3333333333,0.2631578947,0.2116788321,0.4444444444,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"New information - I just hit the same issue on linux (Ubuntu 19.10) - though I did not have the same environment set there to capture debug:

Again
CODE
CODE",Bug Reproduction,True,161,NONE,True,False,False,1.0,0.2330827068,1.0,0.1348600509,0.01253116711,0.9874688329,0.0001921212309,9.24e-05
"by the way, default is 32 heaps (max as well) without :n.",Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,1.0,0.1935483871,1.0,0.1012658228,0.004025957579,0.9959740424,0.000481306353,0.007003736688
"We need a way to reproduce the error, or we will need to skip the tests / lower the condition on certain architectures.",Investigation and Exploration,False,119,MEMBER,False,False,False,1.0,0.3235294118,0.08536585366,1.0,0.1254523425,0.8745476575,0.1410011326,0.4013025222
"[log.txt.6.1.71914.20211109.153154.1.zip] URL 

I had to wait for 1.5 hours of load to reproduce.",Bug Reproduction,False,99,CONTRIBUTOR,False,False,False,0.8235294118,0.175,0.6,0.8235294118,0.9506093286,0.04939067138,0.0226844032,0.006464895429
"Looking at methods that are compiled very late (since the problem happens after 20-25 minutes of load) I found this HashMap method:
CODE",Investigation and Exploration,True,137,CONTRIBUTOR,False,False,False,1.0,0.3125,1.0,0.6862745098,0.878158142,0.121841858,0.003956649389,0.006483743521
"Just to be sure we are on the same page, the fix I suggested in #9340 consists in having CODE in a CODE I added in this same PR.",Solution Discussion,True,128,CONTRIBUTOR,False,False,False,0.8787878788,0.4264705882,0.9024390244,0.5,0.6430448609,0.3569551391,0.0004678996657,0.0002096052377
Everyone worked hard to figure out the underlying problem and it showed great collaboration across teams as the investigation progressed!,Social Conversation,False,137,CONTRIBUTOR,False,False,False,0.9090909091,0.2150537634,1.0,0.8918918919,0.8409579034,0.1590420966,0.004353145679,0.0215829485
Thanks for mentioning this â I'll keep this open until we update the docs.,Action on Issue,False,74,MEMBER,False,False,False,1.0,0.3684210526,0.05109489051,1.0,0.002517369573,0.9974826304,0.003237761122,0.0005265343115
So it is a bit a trade-off of potential build up of number of classes vs number of keyword arguments in a single class.,Solution Discussion,False,119,CONTRIBUTOR,True,True,False,0.5,0.390625,0.06985294118,0.7916666667,0.0,1.0,0.0,0.0007774126438
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6336206897,1.0,0.6907849003,0.3092150997,0.01609443176,0.02124426926
"As long as we know theindices of the fist and last characters of the token in the input text, sothat we can look it up if we need to, I don't find saving the token instring store particularly necessary.",Solution Discussion,False,202,CONTRIBUTOR,False,False,False,1.0,0.6290322581,0.436123348,1.0,0.2159596248,0.7840403752,0.01198979712,0.001341566856
So I will try to disable optimizing these two RAT specific methods & other XLST related methods to see how it goes.,Solution Discussion,False,115,CONTRIBUTOR,False,False,False,0.35,0.1578947368,1.0,0.4045801527,0.4761982657,0.5238017343,0.01656125888,0.01584223495
"I think SCREEN_NAME  is right: the problem of serializing such that pickle can work is basically the same as the problem of loading from disk, so there's no reason to believe unpickling the classes would be faster than just loading them as new objects.",Solution Discussion,False,252,MEMBER,False,False,False,1.0,0.2941176471,0.498392283,0.4,0.1362602962,0.8637397038,0.0654089151,0.02443361297
"As @pshipton suggested, I would not even try to recognize various -Xm? options (or any other option).",Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.3777777778,0.1164383562,0.125,0.312849162,0.03208549702,0.967914503,0.0001774088301,4.2e-05
after upgrading my Nvidia stuff my older versions of TF in separate conda env's no longer work as the older TF wants : ImportError: libcublas.so.8.0: cannot open shared object file: No such file or directory,Bug Reproduction,False,207,NONE,False,False,False,1.0,0.2755905512,0.4134897361,0.2857142857,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
For Java9 it has been updated to recognise the Unsafe methods in both the old and new packages.,Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.5625,0.2686567164,0.5,0.905027933,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"I think, in theory, that delegate could modify the environment if it wanted to.",Solution Discussion,False,79,NONE,True,False,False,0.3333333333,0.1414141414,0.4,0.9157894737,0.9035334291,0.09646657091,0.002703173696,0.005495507544
"Too late for the 0.16 release now, moving to the next release.",Action on Issue,False,62,CONTRIBUTOR,False,False,False,0.5217391304,0.06896551724,0.5,0.04779411765,0.6715171808,0.3284828192,0.02235494254,0.1010162401
https://github.com/eclipse-openj9/openj9/pull/14023 is the new fix (no change to 64-bit platforms).,Solution Discussion,False,99,CONTRIBUTOR,False,False,False,1.0,0.1057692308,1.0,0.3038674033,0.1110082448,0.8889917552,0.00345613271,0.0326248414
"Also, it can't be reproduced with the locally compiled build or personal build with the latest changes.",Bug Reproduction,False,103,CONTRIBUTOR,False,False,False,0.3863636364,0.1278195489,0.3333333333,0.3511450382,0.4557884115,0.5442115885,0.03394128121,0.003566914598
Yesterday I set up the test framework to run with the smallest subset of test cases to reproduce that failure.,Bug Reproduction,False,110,MEMBER,False,False,False,0.625,0.2173913043,0.1666666667,0.7232704403,0.5963082563,0.4036917437,0.01338731827,0.03227550175
"I still have to have a look at how that is handled in SGD and ENet, though...",Social Conversation,False,77,MEMBER,False,False,False,1.0,0.2394366197,0.4492753623,1.0,0.0398305434,0.9601694566,1.859928177e-06,1.158068488e-06
I would've thought that it just affected the next JVM instance.,Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.3157894737,0.08759124088,1.0,0.936802974,0.07033383167,0.9296661683,0.001788553918,0.0004054165976
"Then we can safely change the code to:
CODE",Solution Discussion,True,44,CONTRIBUTOR,False,False,False,0.5555555556,0.08474576271,1.0,0.4848484848,0.4195028092,0.5804971908,6.41e-05,0.0004100015372
"that it only crashed on JDK11 JRE

That is not the case.",Investigation and Exploration,False,58,NONE,True,False,False,0.5,0.1313131313,0.1428571429,0.5473684211,0.1993600534,0.8006399466,0.003371874835,0.005835937215
I'm okay with SCREEN_NAME 32bit here.,Potential New Issues and Requests,False,37,MEMBER,False,False,False,0.375,0.08823529412,0.2967479675,0.5714285714,0.3553526876,0.6446473124,0.003096425316,0.01032797867
I tried this section as well from the nvidia [doc] URL CODE and the tests pass here in CODE,Solution Discussion,True,91,NONE,False,False,False,1.0,0.1496062992,0.3607038123,0.8333333333,0.3589581559,0.6410418441,0.02559963321,0.2554187912
"and I feed CODE and CODE through the feed_dict, but now I get the error CODE",Usage,True,76,NONE,False,False,False,1.0,0.06153846154,0.6531049251,1.0,0.5704865867,0.4295134133,0.007710664466,0.0001103857016
"*         If it does not freeze then you are not using Accelerate, and we would need a stand-alone snippet to investigate.",Investigation and Exploration,False,122,MEMBER,False,False,False,0.7857142857,0.2268041237,0.6301775148,1.0,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
There may be some mid-point between the two.,Solution Discussion,False,44,MEMBER,False,False,False,0.4090909091,0.1343283582,0.2246879334,1.0,0.04913573011,0.9508642699,0.0009069948543,0.001568663379
Upcasting from 32 bit to 64 bit is platform specific (the new bits are not necessarily set to zero) and can explain the non deterministic behaviour with observed on some platforms / machines.,Solution Discussion,False,191,MEMBER,False,False,False,1.0,0.4705882353,0.8943089431,0.8333333333,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
If you open an issue with OpenJDK please can you drop a link here?,Social Conversation,False,66,CONTRIBUTOR,False,False,False,0.6666666667,0.2089552239,0.5714285714,0.6201117318,0.1116231029,0.8883768971,0.0008696566537,6.55e-05
https://travis-ci.org/MacPython/scikit-learn-wheels,Bug Reproduction,False,51,MEMBER,False,False,False,0.06666666667,0.01470588235,0.0325203252,0.75,0.01562830973,0.9843716903,0.01958514047,0.0006046437747
I can image two options.,Solution Discussion,False,24,NONE,False,False,False,0.2380952381,0.07462686567,0.9181692094,0.6666666667,0.9479523715,0.05204762849,0.2620248075,0.005625200409
The hints for initial heap sizing would come from internal API and have no relationship with the options.,Solution Discussion,False,105,CONTRIBUTOR,False,False,False,0.4,0.1232876712,0.75,0.3407821229,0.03208549702,0.967914503,0.0001774088301,4.2e-05
"Currently, I'm working on isolating and producing a trace of the compiled method we're crashing in, once that is done I hope to have a genuine core and stack trace.",Task Progress,False,164,CONTRIBUTOR,False,False,False,1.0,0.6382978723,1.0,0.3230769231,0.3215728023,0.6784271977,0.9710937657,0.01822418003
Minimum set of options to reproduce the bug.,Bug Reproduction,False,44,CONTRIBUTOR,False,False,False,0.5714285714,0.04232804233,0.25,0.2,0.3084971878,0.6915028122,0.0005070055754,0.000545910493
Sounds like we wanted this problem to be bigger than it actually was.,Social Conversation,False,69,CONTRIBUTOR,False,False,False,1.0,0.1428571429,0.3333333333,0.958041958,0.9227873075,0.07721269245,0.2377056189,0.1633866501
I've confirmed internally that commit resolves the issue by running the jdk_nio test suite about 60 times on ppc64le (JDK8).,Solution Discussion,False,124,CONTRIBUTOR,False,False,False,1.0,0.2307692308,0.25,0.9685314685,0.952674969,0.04732503098,0.1633866501,0.04052333396
It's really flying now!,Social Conversation,False,23,CONTRIBUTOR,False,False,False,0.1538461538,0.02919708029,1.0,0.750929368,0.04439590305,0.9556040969,9.23e-05,1.04e-05
and do we need to fix the other test failures for scikit-learn 0.19 to shipwith Debian?,Task Progress,False,87,MEMBER,False,False,False,1.0,0.25,0.1300813008,1.0,0.2743059878,0.7256940122,0.004433478825,0.001495897677
"@AlenBadel I agree this isn't a user-focused issue so I'm fine with moving it out of 0.11.0.

I've moved it to the 0.12.0 release for now.",Action on Issue,False,140,MEMBER,False,False,False,1.0,0.2265625,1.0,0.8611111111,0.216865584,0.783134416,0.0001546049072,0.003365233479
Or we could store the entire command line.,Solution Discussion,False,42,CONTRIBUTOR,True,False,False,0.5333333333,0.05479452055,0.6666666667,0.1340782123,0.01031718851,0.9896828115,0.0001215876069,0.003457386912
"No, we didn't do anything about r2 in trampoline.",Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.5,0.0703125,0.5,0.6444444444,0.04071707575,0.9592829243,0.0001090823512,0.0001623351525
Is there a problem to set the default to CODE?,Investigation and Exploration,True,46,CONTRIBUTOR,True,False,False,1.0,0.1612903226,1.0,0.4556962025,0.3024339148,0.6975660852,0.01957604203,0.001607271518
core1 is the earlier one.,Investigation and Exploration,False,25,NONE,True,True,False,0.09803921569,0.04807692308,0.9166666667,0.06077348066,0.0,1.0,0.0,0.01118041169
"As far as I'm concerned we can close this issue, I just like to know whether obtaining the JNIEnv will be async-safe.",Action on Issue,False,117,NONE,True,False,False,0.9583333333,0.2211538462,0.6666666667,0.9226519337,0.3217031432,0.6782968568,0.005051300017,0.0136228909
We can also easily address 2.,Solution Discussion,False,29,MEMBER,False,False,False,0.2608695652,0.09677419355,0.1806167401,0.6666666667,0.02336154952,0.9766384505,0.01526654747,0.6482365618
"Since this basically tests that in CODE we can disable the CODE functionality (enabled by default) and it doesn't validate any new functionality, it might be OK to skip it on failure on 32 bit?",Potential New Issues and Requests,True,193,MEMBER,False,False,False,0.9722222222,0.5147058824,0.2764227642,0.9,0.3543056001,0.6456943999,0.009464004531,0.003096425316
This suggests that there's an overflow issue.,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.3043478261,0.1489361702,1.0,0.55,0.5030540536,0.4969459464,0.01535044408,0.005154978519
"My understanding is that:
1) the Eclipse IDE is launched with Hotspot JDK8
2) the demo2 application is launched with Hotspot JDK8
3) OpenJ9 application is launched with OpenJ9/JDK11

Given that all these steps are correct in terms of setup and nothing happens from our side, the crash might be triggered by something else instead of simply following the steps.",Investigation and Exploration,False,365,CONTRIBUTOR,False,False,False,1.0,0.6565656566,1.0,0.3192982456,0.1148232942,0.8851767058,0.002853124861,0.002074999899
"And the vlog does show AOT compilations happening:
CODE

This will verify that you're able to at least get AOT compilations going.",Investigation and Exploration,True,133,CONTRIBUTOR,False,False,False,0.8571428571,0.1751824818,1.0,0.09665427509,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
"I personally would already as much as possible provide the attributes of the new interface, even in legacy mode.",Solution Discussion,False,112,CONTRIBUTOR,True,False,False,0.4318181818,0.296875,0.4044117647,0.09523809524,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"Looking at it in kca:
CODE",Investigation and Exploration,True,27,CONTRIBUTOR,False,False,False,0.0752688172,0.0752688172,0.5,0.38996139,0.3937305493,0.6062694507,0.03688423691,0.3568236584
"Repro rate with following command was 9/10:

CODE

Console:

CODE",Bug Reproduction,True,71,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.7786259542,0.7971427113,0.2028572887,4.17e-05,0.00412079602
"I have some experience in Node, and will take a  look at this.",Contribution and Commitment,False,62,NONE,False,False,False,1.0,0.1917808219,0.4396551724,1.0,0.5130292502,0.4869707498,0.0001876772615,0.009961501816
0 failures in 100 runs.,Testing,False,23,CONTRIBUTOR,False,False,False,0.1041666667,0.05376344086,1.0,0.7335907336,0.5618996987,0.4381003013,0.004800769914,0.1957833797
"Looks like at the same time as tf 1.2, since we will rely on some newfeatures of that release.",Task Progress,False,94,CONTRIBUTOR,False,False,False,1.0,0.02749638205,0.5643564356,1.0,0.1451502414,0.8548497586,0.004494533216,0.02814194594
"The problem lies in the fact that if the inferred categories are simply a consecutive range (0, 1, 2, 3, ... max), there is no difference between the new and old (legacy) behaviour, and we don't necessarily need to raise a deprecation warning.",Solution Discussion,False,243,CONTRIBUTOR,True,False,False,0.9545454545,0.65625,0.4154411765,0.2380952381,0.07430334202,0.925696658,0.1302436707,0.0003197521392
@act65 we are more than keen to get to the bottom of this but we haven't been able to reproduce and it seems like we are getting mixed reports from users so far unfortunately.,Task Progress,False,175,MEMBER,False,False,False,0.4788732394,0.4788732394,0.3070175439,0.2,0.3240071752,0.6759928248,0.0003023686606,0.0002259807885
Need use bothTensorflow andTSNEin Jupyter notebook ....,Motivation,False,55,NONE,False,False,False,0.4375,0.0985915493,0.8567251462,0.75,0.6456750725,0.3543249275,3.473434042e-05,0.0001660605916
"The reason for the change is recorded as CODE, so in theory we are losing this stack execution protection by removing the flag.",Solution Discussion,True,127,CONTRIBUTOR,False,False,False,0.92,0.132183908,1.0,0.6397058824,0.772822397,0.227177603,8.08e-05,0.0002421616125
[jitlog_withCFR.zip] URL,Investigation and Exploration,False,25,CONTRIBUTOR,False,False,False,0.06060606061,0.01503759398,1.0,0.6284987277,0.6090585554,0.3909414446,0.03283597098,0.001209954986
"Otherwise we may need to only start 4 JVMs.

SharedClasses.SCM01.MultiThread_0
SharedClasses.SCM23.MultiThread_0",Solution Discussion,False,115,CONTRIBUTOR,True,False,False,0.7142857143,0.2419354839,1.0,0.6329113924,0.4809708382,0.5190291618,0.001055956968,0.005901107588
"Yep, this should work: https://github.com/honnibal/spaCy/blob/master/spacy/vocab.pyx#L320",Solution Discussion,False,89,MEMBER,False,False,False,0.3571428571,0.1315789474,0.04379562044,0.5,0.002517369573,0.9974826304,0.003237761122,0.0005265343115
"and with this change, 80/80 passed on plinux (CODE & CODE) and 
100/100 passed on xlinux (CODE) when JIT compiled methods are disabled during CODE call.",Testing,True,153,CONTRIBUTOR,False,False,False,1.0,0.2826086957,0.6666666667,0.6477987421,0.5584159107,0.4415840893,0.0004086462498,0.04419068659
I'll instrument the test to gather core at the point of failure so we can see what the stack maps look like.,Testing,False,108,CONTRIBUTOR,False,False,False,1.0,0.34375,1.0,0.5815602837,0.8477298922,0.1522701078,0.07112047202,0.0001851344268
I suspect that the compilation threads are somewhere executing DLT related logic.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.5217391304,0.1318681319,0.875,0.9195804196,0.8779153049,0.1220846951,0.01532565869,0.003869158807
Ok I'll give that a shot.,Social Conversation,False,25,NONE,True,False,False,0.3333333333,0.08955223881,0.3333333333,0.5530726257,0.005492387743,0.9945076123,0.0001990987978,0.0006886577466
"Got this error in version 1.7.3: Traceback (most recent call last):File ""<stdin>"", line 1, in <module>File ""/home/ktyao/anaconda3/envs/python27/lib/python2.7/site-packages/spacy/language.py"", line 350, in __call__proc(doc)File ""spacy/syntax/parser.pyx"", line 207, in spacy.syntax.parser.Parser.__call__ (spacy/syntax/parser.cpp:7730)spacy.syntax.parser.ParserStateError: Error analysing doc -- no valid actions available. This should never happen, so please report the error on the issue tracker. Here's the thread to do so --- reopen it if it's closed:https://github.com/spacy-io/spaCy/issues/429Please include the text that the parser failed on, which is:u'Meet Linux.Mirai Trojan, a DDoS nightmare'",Potential New Issues and Requests,False,701,NONE,False,False,False,1.0,1.0,0.9368421053,0.5,0.4570840766,0.5429159234,0.2723202982,0.165555169
"Yes, I should say -Xgc and -Xgcpolicy",Solution Discussion,False,37,CONTRIBUTOR,False,False,False,1.0,0.04794520548,1.0,0.374301676,0.03211540022,0.9678845998,1.07e-05,2.02e-05
I am not sure I seen that in all the commits.,Social Conversation,False,45,CONTRIBUTOR,False,False,False,1.0,0.171875,1.0,0.5319148936,0.7949455725,0.2050544275,0.01235591973,0.01296902725
"*         SCREEN_NAME : From our initial experiments, the *peak* performance of the benchmark input pipeline is still slightly higher than what you get from using the CODE API.",Solution Discussion,True,176,CONTRIBUTOR,True,False,False,0.5744680851,0.4029850746,0.5492371706,0.8214285714,0.4592244679,0.5407755321,0.003916059713,0.008479027653
A segfault via the Python API (as opposed to the Cython API) is always a bug.,Potential New Issues and Requests,False,77,MEMBER,False,False,False,1.0,0.1684210526,0.7368421053,0.6666666667,0.1887683728,0.8112316272,1.863208436e-05,0.0002408449665
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.05603448276,1.0,0.0008181729925,0.999181827,0.002999516421,0.0001887838491
What happens with -Xint?,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,1.0,0.08510638298,1.0,0.5153846154,0.4575266371,0.5424733629,0.006494528739,0.0009359677821
"Checked the range in CODE as follows:
CODE
Now keep narrowing down to the range in CODE (16 methods) to see how it goes.",Investigation and Exploration,True,122,CONTRIBUTOR,False,False,False,1.0,0.1954887218,1.0,0.4452926209,0.5165784272,0.4834215728,0.1422289823,0.06976085403
Cons,Solution Discussion,False,4,NONE,False,False,False,0.03571428571,0.006535947712,0.1479099678,0.8,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Great job debugging the issue by the way!,Social Conversation,False,41,MEMBER,False,False,False,0.4,0.1126760563,0.4883040936,0.3333333333,0.4162752766,0.5837247234,0.0005175555106,0.2109192312
"1. How come these two different compilations are sharing the same methodHandleLocation, or CODE
2. When and where do details get created and its methodHandleLocation assigned
3. It looks like since wrappedCompile is called both on the Server and the Client, we are doing CODE twice, is this even valid?",Investigation and Exploration,True,304,CONTRIBUTOR,False,False,False,1.0,0.2751322751,0.8333333333,0.36,0.3964911687,0.6035088313,0.005060536466,0.02642430283
@vijaysun-omr the only limit is the size of the cache.,Solution Discussion,False,54,CONTRIBUTOR,True,False,False,0.5238095238,0.07534246575,0.3333333333,0.687150838,0.2631528405,0.7368471595,0.0001740403081,4.81e-05
And the opposite while Testing.,Usage,False,31,NONE,False,False,False,0.25,0.01923076923,0.9186295503,0.8,0.7489109604,0.2510890396,0.04599776246,0.3206669123
fyi the web helper to build -Xdump options https://www.eclipse.org/openj9/tools/xdump_option_builder.html,Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,1.0,0.09782608696,1.0,0.3459119497,0.3664330454,0.6335669546,0.0008075588312,0.01162451737
Did you mean it can be directly executed on the command line ?,Investigation and Exploration,False,62,NONE,True,False,False,0.2857142857,0.1212121212,0.125,0.6807017544,0.2144667264,0.7855332736,0.001641357342,0.00438505838
"Got it, investigating.",Social Conversation,False,22,CONTRIBUTOR,False,False,False,1.0,0.0447761194,0.5,0.748603352,0.1144140946,0.8855859054,0.0009299896227,0.0003094219412
In case of Stacking the estimators might be completely different (say to you want to merge forests with svms).,Motivation,False,110,MEMBER,False,False,False,1.0,0.2676056338,0.9456521739,0.5,0.07863322684,0.9213667732,1.645860972e-05,1.933623445e-05
That chunking experiment is fantastic.,Social Conversation,False,38,NONE,False,False,False,1.0,0.1315789474,0.2919708029,0.5,0.003865952984,0.996134047,1.244572143e-05,4.667145537e-06
"Moving this out to 0.26.  A failure has not been seen since adding the new instrumentation to help us narrow this down, and the workaround has been committed to the 0.25 branch already.",Action on Issue,False,185,CONTRIBUTOR,False,False,False,1.0,0.5483870968,1.0,0.693989071,0.8999451168,0.1000548832,0.2302537485,0.1265062135
(2) data can be generated from different machines if the pre-processing is too heavy for a single CPU.,Motivation,False,102,CONTRIBUTOR,False,False,False,0.6333333333,0.2835820896,0.1151178918,0.7692307692,0.008365735399,0.9916342646,0.03692313957,0.0188753671
It's been consistently running for over two hours and timing out on Windows for the past 3-4 days.,Investigation and Exploration,False,98,CONTRIBUTOR,True,False,False,1.0,0.2835820896,1.0,0.06358381503,0.002012283436,0.9979877166,2.82e-06,7.29e-06
but for me it's not an issue.,Social Conversation,False,29,NONE,True,False,False,0.152173913,0.06730769231,0.4444444444,0.8066298343,0.3145189828,0.6854810172,0.0006521105157,0.006311966217
"On Mac, you'll need to do a little more work (#267).",Solution Discussion,False,52,NONE,False,False,False,0.5,0.07189542484,0.6881028939,0.9166666667,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"@pshipton @zl-wang Sure, here is AIX crypto performance and compare for CODE, CODE, CODE .  )",Investigation and Exploration,True,93,NONE,False,False,False,1.0,0.2580645161,0.5,0.2742616034,0.2188871415,0.7811128585,0.257542654,0.01185472132
"If you've already run jextract on the same machine with the same JVM and provided those files, we don't need a second copy.",Investigation and Exploration,False,123,CONTRIBUTOR,False,False,False,1.0,0.32,1.0,0.5028248588,0.0375592212,0.9624407788,0.001119226384,1.62e-05
The stackwalk isn't walking inlines so this line https://github.com/eclipse/openj9/blob/82275daf0c7145f8ce63878ca43961b8b2e17039/runtime/codert_vm/CodertVMHelpers.cpp#L334 should return the data for the method that has inlined the catcher?,Solution Discussion,False,239,MEMBER,False,False,False,1.0,0.328125,0.5,0.9503546099,0.9833151366,0.01668486342,0.0004760599547,0.0005409772213
"In the core, the stack is completely walkable, which makes it look like the CODE value was incorrect at the time the cache computation took place.",Investigation and Exploration,True,146,CONTRIBUTOR,False,False,False,1.0,0.25,0.375,0.138121547,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
**more info:**,Social Conversation,False,14,NONE,False,False,False,0.07142857143,0.0206185567,0.6686390533,0.7272727273,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
"@pshipton  it will compile with 2017, but  with optimizations disabled.",Solution Discussion,False,71,CONTRIBUTOR,False,False,False,0.48,0.1016949153,0.75,0.09696969697,0.3881725553,0.6118274447,7.34e-05,0.003403174815
"I understand that we all have the desire to support this case but can only deduct that on github's closest thing to ""vote"" functionality is implemented with ""reactions"" not with a count of comments in the thread...",Social Conversation,False,214,NONE,False,False,False,1.0,0.5068493151,0.7047413793,0.6666666667,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
"-         handle_unknown='error' -> Problem, values in range are still ignored, values above range error",Solution Discussion,False,104,CONTRIBUTOR,True,False,False,0.3023255814,0.203125,0.3492647059,0.4166666667,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
The JIT recognises most of the methods in Unsafe so that it can generate fast inline equivalents instead of making expensive JNI calls.,Investigation and Exploration,False,135,CONTRIBUTOR,False,False,False,0.71875,0.3432835821,0.4166666667,0.8994413408,0.3165978639,0.6834021361,0.4477852629,0.1312948834
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4181034483,1.0,0.4954541332,0.5045458668,0.02346784644,0.1182638968
"
REFERENCE",Social Conversation,False,10,NONE,False,False,False,0.5,0.02739726027,0.3405172414,1.0,0.3832590974,0.6167409026,0.08062287604,0.1116482733
We could keep the 0.9 threshold and stabilize this test by:,Solution Discussion,False,59,MEMBER,False,False,False,0.44,0.1617647059,0.9471544715,0.25,0.6536608828,0.3463391172,0.005246346584,1.0
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.2952586207,1.0,0.3005730729,0.6994269271,0.16554905,0.122190955
**Terminal:**CODE,Bug Reproduction,True,17,NONE,False,False,False,0.05555555556,0.01408450704,0.8304093567,0.7333333333,0.6456610805,0.3543389195,1.0,4.677373331e-05
-         See #267 and #266 for info on using OpenMP on OS X.,Solution Discussion,False,61,NONE,False,False,False,1.0,0.08496732026,0.8649517685,0.5,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
I assume there is more copying/handling going on in the background than would be necessary.,Solution Discussion,False,91,NONE,False,False,False,0.5,0.2388059701,0.1317614424,1.0,0.01422300953,0.9857769905,0.003307324671,0.2125437083
This would make it easier to coordinate multiple elements of a model that all want to read from the iterator before advancing it one step.,Motivation,False,138,CONTRIBUTOR,False,False,False,0.9259259259,0.3731343284,0.6948682386,1.0,0.5288165167,0.4711834833,0.05557964708,0.1827564093
right now there are two very divergent paths to getting data into Tensorflow: feed_dict and queues.,Solution Discussion,False,99,NONE,False,False,False,0.4571428571,0.2388059701,0.2024965326,0.125,0.04335363766,0.9566463623,0.005164577321,0.043809073
"They're also POS-tagged and lemmatized, but I don't know whether that's needed here.",Solution Discussion,False,84,NONE,False,False,False,0.7777777778,0.2333333333,0.3965517241,1.0,0.2903576062,0.7096423938,0.409548798,0.4682936827
"Anyway i should have checked this thread before, wasted 5 hours of my time on this.",Social Conversation,False,83,NONE,False,False,False,0.8421052632,0.1649484536,0.2544378698,0.2857142857,0.6343054009,0.3656945991,1.0,0.005493875023
"@chao.shan@ibm.com  could you compare on AIX crypto performance test cases between MALLOCOPTIONS=multiheap vs. MALLOCOPTIONS=multiheap,buckets?",Task Progress,False,143,CONTRIBUTOR,False,False,False,1.0,0.2903225806,1.0,0.2700421941,0.1814908453,0.8185091547,0.2076384777,0.257542654
(which in that run was not compiled or inlined).,Solution Discussion,False,48,CONTRIBUTOR,False,False,False,0.4090909091,0.09677419355,0.3333333333,0.6254826255,0.5537917672,0.4462082328,0.003696630136,0.001219776039
"This instruction shifts the lower 32 bits, which limits the size of the memory region to a size contained by an int(32-bits), rather than the long(64-bits) we expect.",Solution Discussion,False,166,CONTRIBUTOR,False,False,False,0.9677419355,0.6382978723,0.9259259259,0.8269230769,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"On the XlinuxXL front, I'm checking if there are similar assumptions taken (I.e size of data treated as an int), otherwise there's very little I can do without being able to reproduce the failure.",Investigation and Exploration,False,196,CONTRIBUTOR,False,False,False,0.8095238095,0.7234042553,1.0,0.6884615385,0.6425349507,0.3574650493,0.005132080224,0.00304547315
Here is a statically linked xlc 16 build https://140-211-168-230-openstack.osuosl.org/artifactory/ci-eclipse-openj9/Build_JDK13_ppc64_aix_Personal/36/OpenJ9-JDK13-ppc64_aix-20191018-143648.tar.gz,Task Progress,False,195,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.9889705882,0.7984975672,0.2015024328,0.0007994877042,0.0006807694502
"The standard output/error is:

CODE",Investigation and Exploration,True,37,NONE,True,True,False,0.137254902,0.06730769231,1.0,0.06629834254,0.0,1.0,0.0,0.01118041169
"If it is needed as input, it would also be simple to stash this in TLS during thread startup to avoid the CODE call in the handler.",Solution Discussion,True,131,CONTRIBUTOR,False,False,False,1.0,0.2596153846,1.0,0.9005524862,0.318512894,0.681487106,1.18e-05,0.005051300017
I took the time and installed AcmeAir MS to reproduce the problem.,Bug Reproduction,False,66,CONTRIBUTOR,False,False,False,0.2448979592,0.15,0.3333333333,0.4019607843,0.4050676222,0.5949323778,0.667871978,0.07448040886
"So since there is only a shuffling between the 3 examples in the buffer, the first samples (same for batches) will all have samples only of one class.",Solution Discussion,False,150,NONE,False,False,False,0.7,0.4179104478,0.653259362,0.7916666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
@keithc-ca can you please help look at the writeCrashDataToConsole problem.,Contribution and Commitment,False,75,CONTRIBUTOR,False,False,False,0.275,0.2340425532,1.0,0.5076923077,0.4135966372,0.5864033628,0.001585706885,0.2342152039
The issue is arising because the entity recogniser's push-down automaton finds itself in a state with no continuations.,Investigation and Exploration,False,119,MEMBER,False,False,False,0.4523809524,0.2,0.3157894737,0.3333333333,0.1453780739,0.8546219261,0.07593267665,0.03116866066
Or since I am doing tf.get_variable_scope().reuse_variables() it takes care of itself?,Usage,False,86,NONE,False,False,False,0.4230769231,0.04230769231,0.2226980728,0.875,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"If we want to completely remove any impact on normal production builds, the changes need only apply if the exception catch/throw events are hooked.",Solution Discussion,False,147,CONTRIBUTOR,False,False,False,1.0,0.390625,0.5,0.1985815603,0.118326912,0.881673088,0.5770832432,0.0003654601672
The child for the size of the data to write was an CODE which is expected.,Investigation and Exploration,True,74,CONTRIBUTOR,False,False,False,0.5,0.3404255319,0.4,0.6653846154,0.6412149142,0.3587850858,0.008463782054,0.002100918508
I'm currently finalising testing the solution.,Task Progress,False,46,CONTRIBUTOR,True,False,False,0.8571428571,0.046875,0.5,0.8111111111,0.2033334187,0.7966665813,0.009658941575,0.01920965971
This way different co-existing back-ends can be provided.,Solution Discussion,False,57,NONE,False,False,False,0.3333333333,0.07874015748,0.9442815249,0.5,0.928984049,0.07101595102,0.001770336874,0.003939258366
If there is a difference so there is a race between hook handler and table modification (which is wrong to fix by switching from one hook to another because of just reducing time window for race condition).,Solution Discussion,False,206,CONTRIBUTOR,False,False,False,1.0,0.4065934066,0.6,0.5839160839,0.854897081,0.145102919,0.001362640241,0.002579695967
@sguada we should consider the right course of action here before 1.0.,Social Conversation,False,70,MEMBER,False,False,False,0.4,0.04615384615,0.4561027837,0.5,0.3808921239,0.6191078761,0.003059753667,0.001631435738
I think the above was both to verify if the crash was specific to count=0 and to assess severity.,Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.8260869565,0.4042553191,0.2,0.3692307692,0.3601897468,0.6398102532,0.1462886158,0.02184783511
"I don't know TF as well as others here, so please take my comments with some skepticism:",Social Conversation,False,88,CONTRIBUTOR,False,False,False,0.3695652174,0.2537313433,0.1872399445,0.09090909091,0.04271149234,0.9572885077,0.001149776305,0.005164577321
"So the boot app is running with OpenJ9-DKD/JRE-11, and the Eclipse process is running with Oracle-JDK-8.",Investigation and Exploration,False,104,NONE,True,False,False,0.5277777778,0.1919191919,1.0,0.4666666667,0.1964587946,0.8035412054,0.004535009544,0.001033447215
"(I didnt find a methodHandle with this address)
- then go back even further, we see that CODE was used to store another methodHandle (CODE) which is a valid methodHandle.",Investigation and Exploration,True,171,CONTRIBUTOR,False,False,False,0.5961538462,0.164021164,0.3333333333,0.3428571429,0.3964911687,0.6035088313,0.005060536466,0.02642430283
This one it's with CODE.,Investigation and Exploration,True,24,CONTRIBUTOR,False,False,False,0.1315789474,0.02645502646,0.75,0.3885714286,0.4100880548,0.5899119452,0.0008687385329,0.003375208545
you meant the xlc16 build link you gave above is supposed to be built with static linking already?,Solution Discussion,False,98,CONTRIBUTOR,False,False,False,1.0,0.1034482759,1.0,0.9742647059,0.7981884335,0.2018115665,2.53e-05,6.67e-05
Many non-experts are using the following code http://stackoverflow.com/questions/33949786/how-could-i-use-batch-normalization-in-tensorflow?answertab=votes#tab-top.,Motivation,False,164,CONTRIBUTOR,True,True,False,0.5294117647,0.03461538462,0.004282655246,0.6666666667,0.0,1.0,0.0,0.0003713342537
+1 <3,Social Conversation,False,5,NONE,False,False,False,1.0,0.02739726027,0.463362069,1.0,0.5536523222,0.4463476778,0.0276259601,0.01532070569
How does one modify this to get the updated position of the iterator in each dataset?,Usage,False,85,NONE,False,False,False,0.4444444444,0.2388059701,0.7073509015,1.0,0.551539804,0.448460196,0.1827564093,0.002095453319
Then: aptitude update,Workarounds,False,21,NONE,False,False,False,0.5,0.02362204724,0.2815249267,0.8333333333,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
"There are several evaluators that are able to generate both mainline and out of line which includes jitInstanceOf, ArrayCHK, checkcast, jitMonitorExit and jitMonitorEntry.",Solution Discussion,False,171,CONTRIBUTOR,True,False,False,0.1796875,0.1796875,0.8421052632,0.9611111111,0.3076445993,0.6923554007,0.1283873506,1.0
"Finally I had a core on MacOS
CODE

The file is 7.2GB which surprised me - please advise how you want it made available... or what should be run on it.",Investigation and Exploration,True,154,NONE,True,False,False,0.7857142857,0.2481203008,0.5,0.2748091603,0.2279219658,0.7720780342,0.0366849359,0.0001733178764
"And if LabelEncoder had fast paths for intsin range [0, n_values-1], if justified, that would be good enough.",Solution Discussion,False,109,MEMBER,False,False,False,1.0,0.28125,0.7536764706,1.0,0.1246419028,0.8753580972,0.001078451553,0.1409809963
"There's a lot of potential state, and guaranteeing that 100% of it is saved is difficult.",Testing,False,89,MEMBER,False,False,False,0.8888888889,0.1045751634,0.2958199357,0.6666666667,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"@zl-wang While investigating all this,  I came across:

https://github.com/eclipse/omr/blob/master/util/omrutil/unix/linux/ppc/64le/gettoc.s#L31

Should that not be CODE rather than CODE?",Investigation and Exploration,True,191,CONTRIBUTOR,False,False,False,0.4468085106,0.1640625,0.3333333333,0.7388888889,0.08206856421,0.9179314358,0.002818533349,0.002348920944
"I'd love to have fast, parallel GPU compute power at my fingertips with the ease and composability of JS.",Motivation,False,105,NONE,False,False,True,20.0,0.2739726027,0.9762931034,2.0,1.0,0.0,0.5674118797,0.0
"Any new news, Cathy?",Task Progress,False,20,NONE,False,False,False,1.0,0.03007518797,1.0,0.9312977099,0.9027078598,0.09729214018,0.005186864467,0.04177124329
i.e. it can still be the **training** set even though we are not training?,Usage,False,74,NONE,False,False,False,0.7,0.05384615385,0.1884368308,0.6666666667,0.2219186371,0.7780813629,0.02579900529,0.002721595999
Would CODE be acceptable?,Solution Discussion,True,25,CONTRIBUTOR,True,False,False,0.125,0.05633802817,0.09420289855,0.7272727273,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
Have you guys solved this problem?,Task Progress,False,34,NONE,False,False,False,0.1578947368,0.02307692308,0.8972162741,0.75,0.7414423331,0.2585576669,0.006199252888,0.001298350941
"From what I've seen they all support a length which could be long, or int.",Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.4210526316,0.3404255319,0.3888888889,0.8923076923,0.7299060094,0.2700939906,0.01554507959,0.00748487997
maybe it's a very basic question,Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.1034482759,0.06593406593,0.2857142857,0.6118881119,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
Having a fix to multiprocessing be dependent on the scikit-learn version is symptomatic of the problems of vendoring....,Solution Discussion,False,120,MEMBER,False,False,False,1.0,0.206185567,0.3964497041,1.0,0.8145775242,0.1854224758,0.002707513489,0.0004532620224
"At the global entry, two instructions are used to calculate the TOC-base off r12.",Solution Discussion,False,81,CONTRIBUTOR,False,False,False,1.0,0.1171875,0.6666666667,0.5,0.03782700625,0.9621729938,3.78e-05,0.001226532263
SED is a misnomer to me.,Solution Discussion,False,24,CONTRIBUTOR,False,False,False,0.8571428571,0.03448275862,0.5,0.6985294118,0.7729468852,0.2270531148,1.44e-05,0.0005238959763
We can close this one once https://github.com/eclipse-openj9/openj9/pull/14105 is merged.,Action on Issue,False,89,CONTRIBUTOR,False,False,True,1.0,0.09677419355,1.0,1.0,1.0,0.0,0.02585402974,0.0
Just what I was searching for.,Social Conversation,False,30,NONE,False,False,False,0.1935483871,0.08219178082,0.0150862069,0.1428571429,0.0002226393863,0.9997773606,0.0002084811089,0.0003691576323
It seems the way to use MultiRNNCell is correct:,Bug Reproduction,False,48,NONE,False,False,False,0.2368421053,0.01302460203,0.1650165017,0.2,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"Sorry for all the long text, but it's quite complex :)",Social Conversation,False,54,CONTRIBUTOR,True,False,False,0.171875,0.171875,0.4926470588,1.0,0.07437602253,0.9256239775,0.0003197521392,0.006398297259
"But when I run on the local pycharm through the remote interpreter, I encounter the problem: CODE",Bug Reproduction,True,97,NONE,False,False,False,1.0,0.1338582677,0.8709677419,1.0,0.8611457952,0.1388542048,0.06974861068,0.3262189553
Support for compiling Windows on VS2017,Motivation,False,39,CONTRIBUTOR,True,True,False,0.2608695652,0.05084745763,0.5,0.006060606061,0.0,1.0,0.0,1.0
"@amueller, are you persuaded by the issue that we ultimately want different additional parameters (e.g. drop_first, nan handling) depending on the encoding, and that justifies having a different discrete encoder for each encoding format?",Motivation,False,237,MEMBER,False,False,False,1.0,0.53125,0.7573529412,1.0,0.1566872592,0.8433127408,0.1409809963,0.4169661461
"@jdmcclur could you please try with CODE
If the problem disappears I will deliver a fix soon.",Solution Discussion,True,94,CONTRIBUTOR,False,False,False,0.3673469388,0.225,1.0,0.4117647059,0.4050676222,0.5949323778,0.667871978,0.07448040886
"<229600         Method: java/lang/invoke/MethodHandleImpl.makeIntrinsic(Ljava/lang/invoke/MethodType;Ljava/lang/invoke/LambdaForm;Ljava/lang/invoke/MethodHandleImpl$Intrinsic;)Ljava/lang/invoke/MethodHandle; !j9method 0x0000000000151F50
<229600         Bytecode index = 10
<229600",Investigation and Exploration,False,268,MEMBER,True,False,False,0.6444444444,0.3152173913,0.1666666667,0.4025157233,0.4974555645,0.5025444355,0.09933594565,0.0006447716188
Still segfaults after a some tries and still no dumps.,Investigation and Exploration,False,54,NONE,True,False,False,0.3846153846,0.101010101,0.8,0.6596491228,0.2124151465,0.7875848535,0.004198632607,0.0008429687088
"For the moment, the issues  that were already fixed cover script/code bugs in JDK11, OpenJ9 and OMR (not yet submitted for review, depending on the final result of compilation and how many issues left to be fixed):
1) JDK11:
https://github.com/ChengJin01/openj9-openjdk-jdk/commit/313973a59a5e69e0ee2e6b85bf936d7b965b80cf
Note: CoreLibraries.gmk copied with minor changes to specify the source of libjava: LIBJAVA_SRC_DIRS += $(call FindSrcDirsForLib, java.base, java

2) OpenJ9:
https://github.com/ChengJin01/openj9/commit/2d26ff4dc6bfe8f391fdba9fd7f86af0e5ccda19
CODE
3) OMR:
https://github.com/ChengJin01/omr/commit/d7b6d0c754f26fd4c147d4a626c22742a0ac9232
Note: configure generated by configure.ac",Task Progress,True,711,CONTRIBUTOR,False,False,False,1.0,0.686440678,1.0,0.6060606061,0.4321547048,0.5678452952,0.004460705601,0.0001798820974
What other pain points have we missed?,Motivation,False,38,CONTRIBUTOR,True,True,False,0.1489361702,0.1044776119,0.0374479889,0.9,0.0,1.0,0.0,0.000766008561
Hopefully we can get to the bottom of this one soon as we are inching closer.,Task Progress,False,77,CONTRIBUTOR,False,False,False,0.8888888889,0.1203007519,1.0,0.9185750636,0.8710433064,0.1289566936,0.06424166071,0.006658022574
The OP only has a single CPU.,Investigation and Exploration,False,29,CONTRIBUTOR,False,False,False,0.3181818182,0.05109489051,0.6666666667,0.4200743494,0.02061974402,0.979380256,7.91e-05,4.56e-06
@fjeremic is 3/6 sufficiently reproducible for you to make progress on this?,Investigation and Exploration,False,76,MEMBER,False,False,False,1.0,0.09022556391,1.0,0.7302798982,0.7800902679,0.2199097321,0.0003568549673,0.0003413217614
Could you also add CODE to the original command-line options please and report what happens?,Solution Discussion,True,92,CONTRIBUTOR,False,False,False,1.0,0.1720430108,0.5,0.4864864865,0.5355668046,0.4644331954,0.003498929432,0.003129639439
No SCC | Tput,Testing,False,13,NONE,True,False,False,0.3,0.0375,0.6666666667,0.07843137255,0.04138087714,0.9586191229,0.03316104244,0.3318641488
Just my 2 cents.,Social Conversation,False,16,NONE,False,False,False,0.1,0.05970149254,0.2843273232,0.25,0.2323183319,0.7676816681,1.0,0.07410076703
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_OMR_testList_1/20
cmdLineTester_CryptoTest_0",Testing,False,125,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.495412844,0.6725967376,0.3274032624,0.7240121827,0.04001375293
One thing I notice is that the arguments CODE and CODE from CODE are missing in CODE; does that mean no parallel processing is possible?,Usage,True,136,CONTRIBUTOR,False,False,False,1.0,0.3731343284,0.6796116505,0.6,0.5120684655,0.4879315345,0.0002672122887,0.0005771785436
What about setting r12?,Solution Discussion,False,23,CONTRIBUTOR,False,False,False,0.4,0.03125,0.6666666667,0.3222222222,0.03688589167,0.9631141083,0.0004075557136,8.8e-05
"There are methods to create TensorFlowDataFrames from csv files, dicts, numpy arrays, TFRecords, as well as from pandas.",Solution Discussion,False,120,NONE,False,False,False,0.6428571429,0.2686567164,0.4618585298,0.6666666667,0.4033300428,0.5966699572,0.0004494256208,0.0005059219333
"If not, we need a third way to refit a given model.",Solution Discussion,False,51,MEMBER,False,False,False,0.5,0.1690140845,0.365942029,0.6666666667,0.03956355713,0.9604364429,5.930714377e-06,6.344811593e-05
#8168,Motivation,False,5,CONTRIBUTOR,False,False,False,0.02173913043,0.01492537313,0.1914008322,0.3636363636,0.04271149234,0.9572885077,0.001149776305,0.005164577321
@babsingh I have added core.20210316.184837.7.0246.dmp.zip to the aforementioned share that you gave.,Social Conversation,False,101,NONE,True,False,False,1.0,0.16,1.0,0.3276836158,0.01516958734,0.9848304127,0.007066552505,0.01017150312
"In terms of the trade-offs, my perspective is that we're happy to take on implementation complexity.",Solution Discussion,False,100,MEMBER,False,False,False,0.4146341463,0.1111111111,0.1800643087,0.5,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
CODE,Usage,True,4,MEMBER,False,False,False,0.02272727273,0.003846153846,0.2462526767,1.0,0.2257503846,0.7742496154,0.003439914719,0.0006169627313
"-         I *think* this will be a common case when using OneHotEncoder with integer data, and a case where the user actually does not need to worry about our refactoring, so it would be nice to not bother him/her with a warning",Solution Discussion,False,228,CONTRIBUTOR,True,False,False,0.9772727273,0.671875,0.4301470588,0.4285714286,0.07430334202,0.925696658,0.1302436707,0.0003197521392
Using gcc5 compilation seems to be working fine but then at the end I always get an error and the build is unsuccessful.,Solution Discussion,False,120,NONE,True,False,False,0.6216216216,0.1811023622,0.7126099707,0.9,0.5094864043,0.4905135957,0.02165076149,0.03664686068
I will try to generate and view core files on my local machine.,Social Conversation,False,63,CONTRIBUTOR,False,False,False,0.40625,0.1733333333,1.0,0.2542372881,0.003598175951,0.996401824,0.0004813876919,5.86e-05
I've also confirmed that it no longer hangs in the full version of the bench.,Solution Discussion,False,77,NONE,True,False,True,1.0,0.2388059701,0.5,0.9944134078,1.0,0.0,0.02467101294,0.0
sorry for joining the discussion so late.,Social Conversation,False,41,MEMBER,False,False,False,0.0985915493,0.0985915493,0.1920289855,0.125,0.03938378832,0.9606162117,0.0001259136283,6.155309477e-05
"3.         The CODE, for tokens that are part of CODE, CODE and CODE patterns.",Investigation and Exploration,True,78,MEMBER,False,False,False,0.652173913,0.2419354839,0.1718061674,0.4444444444,0.02336154952,0.9766384505,0.01526654747,0.6482365618
I can check.,Contribution and Commitment,False,12,MEMBER,False,False,False,0.2307692308,0.03092783505,0.1360946746,0.6666666667,0.009494210283,0.9905057897,4.98635903e-06,1.797870487e-05
The main issue I ran into when doing the VM side of the work  was that bytecode PC information is stored in the JIT exception handler data only in FSD mode.,Observed Bug Behaviour,False,156,CONTRIBUTOR,False,False,False,0.5,0.5,0.09090909091,0.0780141844,0.000716727624,0.9992832724,0.003714710253,0.00734286415
that strategy sounds mostly good.,Social Conversation,False,33,MEMBER,False,False,False,0.2380952381,0.078125,0.3823529412,0.3333333333,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
[javacore.20210316.184647.7.0245.txt.gz] URL,Investigation and Exploration,False,45,NONE,True,False,False,0.0350877193,0.02666666667,0.5714285714,0.1751412429,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
Here some examples of what I would like to see available in TensorFlow:,Expected Behaviour,False,71,NONE,False,False,False,0.4333333333,0.1940298507,0.1692094313,0.7714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
The TensorFlow team wants the NodeJS community to benefit from TensorFlow.,Motivation,False,74,MEMBER,False,False,False,0.3142857143,0.1506849315,0.5969827586,0.8888888889,0.6506314731,0.3493685269,0.01305197974,0.05278600034
Me too.,Social Conversation,False,7,CONTRIBUTOR,False,False,False,0.03636363636,0.0202020202,0.6666666667,0.3438596491,0.1181145134,0.8818854866,0.003554247873,0.004838964607
That's it!,Social Conversation,False,10,NONE,False,False,False,0.07692307692,0.0157480315,0.5982404692,0.6666666667,0.4583755089,0.5416244911,0.04654492211,0.008440528439
Do you have some code to train a model in portuguese?,Solution Discussion,False,53,NONE,False,False,False,1.0,0.1833333333,0.9137931034,1.0,0.8007808704,0.1992191296,1.0,0.0001095095445
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_x86-64_linux_Nightly/43
jdk_util_1
-Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:-UseCompressedOops
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java
CODE",Testing,True,304,CONTRIBUTOR,False,False,False,1.0,0.2934782609,1.0,0.358490566,0.4030543532,0.5969456468,0.1016715226,0.09102607801
"The existing methods will remain until TF 2.0 (at least), but we are planning to add a new set of methods for loading and manipulating datasets.",Solution Discussion,False,144,CONTRIBUTOR,True,True,False,0.5531914894,0.3880597015,0.02357836338,0.5666666667,0.0,1.0,0.0,0.000766008561
Will switch it to ATLAS and see what happens.,Investigation and Exploration,False,45,NONE,False,False,False,0.9,0.09278350515,0.6834319527,0.6666666667,0.8498870015,0.1501129985,0.0001657418063,0.0001597224167
"I'm saying that because before playing with Spacy on apache-storm, I painfully implemented a serializable nlp pipeline in scala on Spark.",Solution Discussion,False,137,NONE,False,False,False,0.3859649123,0.1437908497,0.4726688103,0.4285714286,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
"The moving mean and moving variance are changed when I used batchnorm like this: def batch_norm_layer(self, x,train_phase, scope_bn):bn_train = batch_norm(x, decay=0.9, center=False, scale=True,updates_collections=None,is_training=True,reuse=None,variables_collections= [UPDATE_OPS_COLLECTION],trainable=True,scope=scope_bn)bn_inference = batch_norm(x, decay=0.9, center=False, scale=True,updates_collections=None,is_training=False,reuse=True,variables_collections= [UPDATE_OPS_COLLECTION],trainable=True,scope=scope_bn)z = tf.cond(train_phase, lambda: bn_train, lambda: bn_inference)return z",Usage,False,592,NONE,False,False,False,1.0,0.2269230769,0.8758029979,0.6666666667,0.7250706706,0.2749293294,0.02303946421,0.09747656054
![captura de pantalla de 2018-05-25 17-54-59] URL ,Observed Bug Behaviour,False,50,NONE,False,False,False,0.2619047619,0.1134020619,0.9408284024,0.8571428571,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
You basically want it to be: legacy mode is active if categories isnot set *and* if the data is all integers?,Solution Discussion,False,109,MEMBER,False,False,False,1.0,0.328125,0.3897058824,0.6666666667,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
"(As a side point, SCREEN_NAME , I note there seems to be a lot more joblibparallelisation overhead in master -- on OS X at least -- that wasn't therein 0.14...)",Potential New Issues and Requests,False,160,MEMBER,False,False,False,1.0,0.2989690722,0.09763313609,1.0,0.0003255784354,0.9996744216,9.25754306e-06,0.02437524994
*         [iter_shuffle_batch_window] URL ,Expected Behaviour,False,42,NONE,False,False,False,0.1,0.0447761194,0.1789181692,0.9714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"Yet, in another experiment I used HotSpot for booking, customer and auth services, and OpenJ9 for the flight service.",Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,0.3220338983,0.2375,0.875,0.7941176471,0.9391761414,0.06082385865,0.06820979376,0.04955018304
I copied the core to triage/openj9-7684,Task Progress,False,39,CONTRIBUTOR,False,False,False,0.6153846154,0.06015037594,1.0,0.3078880407,0.2305198431,0.7694801569,0.006261517055,1.0
a cleaner solution must exist; maybe we are missing something?,Workarounds,False,62,NONE,False,False,False,0.5882352941,0.01447178003,0.2937293729,0.8,0.06821665651,0.9317833435,0.0002230832021,5.707607458e-05
"Another different behavior but much easier to explain:
- CODE the valid object pointer at CODE
- JITClient
CODE

- JITServer
CODE",Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,1.0,0.126984127,1.0,0.4285714286,0.4136590312,0.5863409688,0.001724646721,0.0007909286976
"It is to assert if it finds an entry with the same unloaded classloader, which was to be removed during the onClassUnloading routine.",Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,1.0,0.2527472527,0.25,0.9020979021,0.8779153049,0.1220846951,0.01532565869,0.003869158807
"In addition, the error message CODE is misleading as it doesn't reflect the real problem captured in the constant pool (the problem is a class name string stored in the constant pool is invalid rather than the class name of this class to be verified).",Investigation and Exploration,True,251,CONTRIBUTOR,False,False,False,1.0,0.3383458647,0.5,0.4605597964,0.5404640453,0.4595359547,0.0001761792565,0.002429720419
The JIT retries the compilation again at warm.,Investigation and Exploration,False,46,CONTRIBUTOR,False,False,False,0.170212766,0.1,0.5,0.1960784314,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
where does JIT-ed code call C code directly except JNI targets?  that is the question to be answered.,Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,1.0,0.15625,1.0,0.4,0.03704197969,0.9629580203,4.38e-05,0.000131199442
"Reopen, please",Action on Issue,False,14,NONE,False,False,False,0.3333333333,0.02816901408,0.2631578947,1.0,0.268566054,0.731433946,0.1743374667,0.0859712289
Thanks in advance.,Social Conversation,False,18,NONE,False,False,False,0.1363636364,0.004341534009,0.1089108911,1.0,0.005573211817,0.9944267882,0.01544625718,0.04704112764
That would be a further improvement / different feature.,Potential New Issues and Requests,False,56,MEMBER,False,False,False,0.5333333333,0.05839416058,0.5,0.9107806691,0.06881100469,0.9311889953,0.0002285903595,0.0005002484678
"It appears to be progressing, so will look out for the originally reported problem and see if we get a core.........",Task Progress,False,116,NONE,True,False,False,1.0,0.1654135338,1.0,0.272264631,0.2215502762,0.7784497238,0.005021721962,0.0366849359
"The fastest option would be to create a TensorFlow op that maintains state, takes actions as input, and generates the training data.",Solution Discussion,False,132,MEMBER,False,False,False,1.0,0.328358209,0.2205270458,0.25,0.04913573011,0.9508642699,0.0009069948543,0.001568663379
Note that this only work for RandomForest and ExtraTrees.,Workarounds,False,57,MEMBER,False,False,False,0.9,0.1267605634,0.1123188406,0.5,0.02519381881,0.9748061812,2.526694882e-06,0.004244671937
Then a suggestion:,Solution Discussion,False,18,NONE,False,False,False,0.075,0.0447761194,0.6380027739,0.3333333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
I guess it might take me 1 - 2 more days for the first set of VM code change.,Task Progress,False,77,CONTRIBUTOR,False,False,False,1.0,0.1232876712,0.5,0.4078212291,0.1063240967,0.8936759033,0.0001989032092,7.84e-05
"@sguada Thanks, I build a network with bathnorm which is implemented as you mentioned above",Usage,False,91,NONE,False,False,False,0.05769230769,0.05769230769,0.7601713062,0.2,0.617232977,0.382767023,0.005602480188,0.0279240315
"Since python is still the most robust, developer-friendly, and full featured wrapper around the Tensorflow API, rather than trying to ""re-create"" the python API for js, why not create bindings directly TO the python API?",Solution Discussion,False,220,NONE,False,False,False,0.9487179487,0.5068493151,0.7349137931,0.1818181818,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
It's working for the other two examples as well.,Investigation and Exploration,False,48,NONE,False,False,False,0.5294117647,0.01302460203,0.2871287129,0.4,0.06821665651,0.9317833435,0.0002230832021,5.707607458e-05
I couldn't use the commandline exactly the same.,Investigation and Exploration,False,48,NONE,True,False,False,0.25,0.08080808081,0.4444444444,0.7263157895,0.2160643057,0.7839356943,0.001276611266,0.001471142506
"Just to make sure I'm following, it's the pending push slot from the J2I transition that's the problematic one we're trying to diagnose, right?
 <22dc00 Pending stack starting at 0x0000000000321568 for UDATA(0x0000000000000001) slots
 <22dc00 O-Slot: p0[0x0000000000321568] = 0x000000000000000E

As far as I can tell, yes",Investigation and Exploration,False,325,CONTRIBUTOR,False,False,False,1.0,0.5161290323,1.0,0.5482625483,0.5374372543,0.4625627457,0.001592796234,0.03390753575
"Before each group, SC was wiped.",Testing,False,32,CONTRIBUTOR,False,False,False,0.1052631579,0.04109589041,0.6666666667,0.9162011173,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"If you pass differentdata to an ensemble estimator, and use the 'warm_start' to fit moreestimators, you will get nonsens.",Solution Discussion,False,121,MEMBER,False,False,False,0.5757575758,0.2676056338,0.6413043478,0.75,0.06511199992,0.9348880001,0.000167358443,3.516317045e-05
The loop terminates when the counter reaches to 0.,Investigation and Exploration,False,50,CONTRIBUTOR,False,False,False,0.3103448276,0.1914893617,0.4166666667,0.5692307692,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"They will certainly have different command line options, and even though there might be single anonymous shared cache, then while starting slave (after starting master)  the hints will not be used.",Solution Discussion,False,197,CONTRIBUTOR,False,False,False,0.4923076923,0.2191780822,0.5,0.5810055866,0.253235282,0.746764718,0.002218893623,0.000737706338
This corresponds to the commandline that eclipse used to launch the app.,Investigation and Exploration,False,72,NONE,True,False,False,0.2857142857,0.1212121212,0.75,0.698245614,0.2144667264,0.7855332736,0.001641357342,0.00438505838
I'm concerned that 100% correctness seems difficult to achieve here.,Testing,False,68,MEMBER,False,False,False,0.5555555556,0.06535947712,0.2861736334,0.3333333333,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"Additionally, there weren't as many failures in the compile run.",Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.3225806452,0.07299270073,1.0,0.1933085502,0.001895336849,0.9981046632,1.49e-05,5.26e-05
I believe we need keep GC policy as well,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,1.0,0.06164383562,1.0,0.3575418994,0.0320994129,0.9679005871,4.2e-05,3.75e-05
CODE,Solution Discussion,True,4,NONE,False,False,False,0.05555555556,0.007874015748,0.991202346,1.0,0.9758786978,0.02412130216,0.05092861342,0.2966697109
the other factor for me is that everyone thinks the current auto mode inOneHotEncoder is weird.,Motivation,False,95,MEMBER,False,False,False,0.7272727273,0.25,0.7169117647,0.25,0.1237414412,0.8762585588,0.004649423917,0.002792339292
My pipeline looks as follows: CODE,Usage,True,34,NONE,False,False,False,0.1176470588,0.08955223881,0.9556171983,0.5,0.9935262739,0.006473726055,0.0468741252,0.02821456383
"The VerifyError is flagging a problem in:
CODE",Investigation and Exploration,True,47,MEMBER,False,False,False,0.5294117647,0.06766917293,0.5,0.03307888041,0.0001260919359,0.9998739081,5.15e-05,1.64e-05
Can you provide a stand-alone snippet to reproduce the problem ?,Bug Reproduction,False,64,CONTRIBUTOR,False,False,False,1.0,0.1134020619,0.8639053254,0.5,0.954654517,0.04534548295,0.0005450428142,0.001193905199
There are many to choose from.,Solution Discussion,False,30,CONTRIBUTOR,False,False,False,0.375,0.03921568627,0.7009646302,0.6,0.1684338854,0.8315661146,0.003166981448,0.08051496432
The one without the filter should dump a core for any systhrow.,Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.75,0.09022556391,0.5,0.1730279898,0.01412833163,0.9858716684,0.002938228528,0.0009773656664
"If so, there is no way to fix them in our script/setting from the compilation perspective  (This is the only issue left here).",Solution Discussion,False,126,CONTRIBUTOR,False,False,False,0.2252252252,0.2118644068,0.5,0.8848484848,0.6347909793,0.3652090207,0.02864940725,0.006974193286
Note: I triedCODEto make TSNE work well with Tensorflow deactivated.,Solution Discussion,True,68,NONE,False,False,False,0.5555555556,0.1408450704,0.8216374269,0.5333333333,0.6456610805,0.3543389195,1.0,4.677373331e-05
1. In AOT it's possible to get different values based on the semantics of the CODE API.,Solution Discussion,True,87,CONTRIBUTOR,False,False,False,0.34,0.2741935484,0.75,0.8797814208,0.9695596396,0.03044036043,7e-05,0.07716070228
"Also curious if this issue is already solved already, I will test updating my version (currently 0.100.6) to see if that helps at all",Task Progress,False,133,NONE,False,False,False,1.0,0.3870967742,0.2158590308,1.0,0.192583873,0.807416127,5.170680801e-06,0.03459730626
Any other ideas?,Contribution and Commitment,False,16,NONE,False,False,False,0.1764705882,0.004341534009,0.2607260726,0.6666666667,0.06771955093,0.9322804491,0.0061573337,0.001820264
"In contrast, if I maintain is_training_ph=True for test time, it works great.",Usage,False,77,NONE,False,False,False,0.4193548387,0.05,0.3940042827,0.9,0.3712524908,0.6287475092,0.06886363297,0.000473907732
But you could hide it from the user.,Solution Discussion,False,36,NONE,False,False,False,0.1860465116,0.0522875817,0.2218649518,0.3157894737,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
I'd like to see two things improved though:,Expected Behaviour,False,43,NONE,False,False,False,0.5625,0.1343283582,0.8987517337,0.2,0.9153731312,0.08462686876,0.125435556,0.2620248075
"#8055 is merged, DDR is enabled on AIX Java 13+, this is now complete, although #7579 is still open,",Action on Issue,False,100,CONTRIBUTOR,False,False,True,1.0,0.1091954023,1.0,1.0,1.0,0.0,0.5397305107,0.0
"4 group of tests, with 4-6 sequential runs within each group.",Testing,False,61,CONTRIBUTOR,False,False,False,0.2105263158,0.08219178082,0.5555555556,0.9106145251,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"1.         A decent way to make custom preprocessing of the data, whether it be based on queue's or not, the idea of being able to foresee all possible data input needs is doomed.",Motivation,False,179,NONE,False,False,False,0.7906976744,0.5074626866,0.3439667129,0.25,0.2977348857,0.7022651143,0.1209962692,0.001143668596
"Maybe there is another place where we allocate it...
6) not being able to rebuild VM quickly (in both JDK8 and JDK 13) seriously hinders the investigation

Also, please note that as a part of this work, we need to make sure we can do debug builds with the new compiler, in addition to all the functional and performance testing.",Investigation and Exploration,False,331,CONTRIBUTOR,False,False,False,1.0,0.3563218391,1.0,0.1470588235,0.7262039141,0.2737960859,0.01330093329,0.008601580477
"Currently the compilation fails at omrcfg.h and j9cfg.h when generating jvmtitest.res as follows:
CODE`

jvmtitest.rc:
#include <windows.h>
#include <",Investigation and Exploration,True,155,CONTRIBUTOR,False,False,False,0.4782608696,0.186440678,0.5,0.5636363636,0.4287428931,0.5712571069,0.02758701478,0.006132428413
Sorry for the confusion.,Social Conversation,False,24,CONTRIBUTOR,True,False,False,0.09090909091,0.0625,0.2647058824,0.5714285714,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
Can you guys please help me?,Contribution and Commitment,False,28,NONE,False,False,False,0.6,0.008683068017,0.798679868,1.0,0.2899624105,0.7100375895,0.05776988707,0.0002065892845
It can achieve avg. GPU utilization >90% and quad-core CPU utilization >95%.,Solution Discussion,False,76,NONE,False,False,False,0.7222222222,0.1940298507,0.8224687933,0.4,0.7158615465,0.2841384535,0.6886518758,0.01649590529
The right way to do testing is to define different behaviors for train and test as you mentioned.,Usage,False,97,NONE,False,False,False,0.6923076923,0.06923076923,0.8543897216,1.0,0.7209968564,0.2790031436,0.007196275213,0.000558929072
"Anytime a GC occurs, the GlobalReference may be updated to point to the new location of the object.",Investigation and Exploration,False,99,MEMBER,False,False,False,0.6923076923,0.09523809524,0.3333333333,0.7257142857,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
"imported OpenJ9.zip as an existing project
6) changed the workspace JRE to JDK11/OpenJ9
![image] URL 
7) Repeatedly started OpenJ9.zip via boot dashboard
![image] URL 

However, it still ended up with the same outputs as previously and nothing wrong occurred during the execution.",Investigation and Exploration,False,286,CONTRIBUTOR,False,False,False,0.7741935484,0.4848484848,0.6666666667,0.4350877193,0.1951791301,0.8048208699,0.1924076078,0.004535009544
"Again, this is different from the tree/ensemble case.",Solution Discussion,False,53,MEMBER,False,False,False,0.3461538462,0.1267605634,0.3550724638,0.8888888889,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
Maybe it's somehow related to conda,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,0.4615384615,0.08450704225,0.4707602339,1.0,0.4155863901,0.5844136099,0.0001185949392,0.0004713353126
To make those unique I had to set a scope per layer.,Usage,False,52,NONE,False,False,False,0.3428571429,0.04615384615,0.1327623126,0.6086956522,0.2164964176,0.7835035824,0.06906725807,0.007698692487
I just cannot see how this comes by.,Social Conversation,False,36,CONTRIBUTOR,False,False,False,0.2727272727,0.0703125,1.0,0.1722222222,0.02843923671,0.9715607633,0.0002282569671,0.0003038415884
"And if we choose for that route, I agree the option should rather be CODE rather than CODE/CODE",Solution Discussion,True,95,CONTRIBUTOR,True,False,False,0.6551724138,0.296875,0.2279411765,1.0,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
Anyone opposed to using CODE?,Solution Discussion,True,29,MEMBER,False,False,False,0.25,0.07042253521,0.4456521739,1.0,0.03982883009,0.9601711699,3.790042324e-06,1.859928177e-06
"ArrayletAllocateTest

CODE",Testing,True,28,CONTRIBUTOR,False,False,False,1.0,0.01587301587,1.0,0.16,0.3019410161,0.6980589839,0.0001241646307,0.01265320363
Thanks @pshipton,Social Conversation,False,16,CONTRIBUTOR,False,False,False,1.0,0.01149425287,1.0,0.3455882353,0.7628549115,0.2371450885,0.000268149688,0.000382851603
https://stackoverflow.com/questions/44132579/feed-data-into-a-tf-contrib-data-dataset-like-a-queue,Usage,False,98,NONE,False,False,False,0.07692307692,0.01492537313,0.5908460472,0.6666666667,0.488896746,0.511103254,0.1856733495,0.06171840406
[Link to IntrinsicMethodHandle's constructor](https://github.com/ibmruntimes/openj9-openjdk-jdk17/blob/dee9f348efd3bf8b70478a56ae93eea912f23123/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java#L1249).,Investigation and Exploration,False,218,CONTRIBUTOR,False,False,False,0.6666666667,0.1956521739,0.4,0.5534591195,0.5070196757,0.4929803243,0.01749005949,7.94e-05
"@prashantserai - see what happens if you remove the MultiRNNCell line from above, effectively making your network just one layer.",Investigation and Exploration,False,129,NONE,False,False,False,0.4871794872,0.02749638205,0.2409240924,0.2,0.06622159454,0.9337784055,0.0006557222206,0.0061573337
"There was an attempt to allocate a ridiculous amount of memory, the trace history shows
CODE",Investigation and Exploration,True,93,CONTRIBUTOR,False,False,False,1.0,0.1634615385,1.0,0.1104972376,0.008412831628,0.9915871684,0.0001490711459,0.004865870055
Then what would be really great if you could try with the 0.18 release candidate which is straightforward to install (highly recommended to do it in a separate virtualenv or conda env): CODE **Edited: 0.18 has been released so you can just use (no need to use CODE):** CODE and re-run the snippet to see whether it is fixed in 0.18 as some users have reported in this thread already.,Solution Discussion,True,383,MEMBER,False,False,False,1.0,1.0,0.3157894737,0.8,0.3240071752,0.6759928248,0.0003023686606,0.0002259807885
"This will allow us to have a method CODE that can be called from the CODE, CODE etc instances.",Solution Discussion,True,94,MEMBER,False,False,False,0.7307692308,0.3064516129,0.5066079295,0.7058823529,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"Ok, so back the original question then, how does OpenJ9 bypass SED in order to create a working code cache?",Investigation and Exploration,False,107,CONTRIBUTOR,False,False,False,1.0,0.1149425287,1.0,0.8198529412,0.7733440416,0.2266559584,1.41e-05,2.84e-06
"-         TSNE works well with one setup (where Tensorflow is de-activated, Python-3.x), however,",Bug Reproduction,False,97,NONE,False,False,False,0.7777777778,0.1971830986,0.8070175439,0.2,0.6456610805,0.3543389195,1.0,4.677373331e-05
I would like to propose an additional instance method to the ensemble estimators to fit additional sub-estimators.,Expected Behaviour,False,114,CONTRIBUTOR,True,True,False,0.5625,0.2535211268,0.007246376812,0.2857142857,0.0,1.0,0.0,0.02323685476
I've tried creating a stripped-down version of the agent along with a sample application and that hasn't reproduced the issue.,Task Progress,False,126,NONE,True,False,False,1.0,0.2115384615,0.4,0.2430939227,0.08429996571,0.9157000343,0.002473459958,0.0181710758
@pshipton  sorry for my ambiguity.,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.4285714286,0.09677419355,0.2,0.9535864979,0.9212826815,0.07871731848,0.003961297135,0.01459087501
I suspect that sometimes the symlink in the LD_LIBRARY_PATH doesn't work either when I switch versions on the /usr/local/cuda link.,Solution Discussion,False,131,NONE,False,False,False,0.4,0.1732283465,0.07331378299,0.6,0.1316640267,0.8683359733,0.562496811,0.05368173129
"Darwin-16.7.0-x86_64-i386-64bit('Python', '2.7.13 |Anaconda custom (x86_64)| (default, Dec 20 2016, 23:05:08) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]')('NumPy', '1.13.1')('SciPy', '0.19.0')('Scikit-Learn', '0.18.1')",Solution Discussion,False,232,NONE,False,False,False,0.88,0.3098591549,0.9883040936,0.6,0.9998782054,0.0001217945808,0.8838761808,0.0007094938778
Had a similar problem and it went away when I used the fused version,Usage,False,68,NONE,False,False,False,1.0,0.05384615385,0.8094218415,1.0,0.6353055948,0.3646944052,0.07061844097,0.0001878991907
"I did all my testing using jdk8, assuming the problem would be the same across versions.",Testing,False,88,CONTRIBUTOR,True,False,False,1.0,0.2580645161,0.3333333333,0.3164556962,0.2913636962,0.7086363038,0.1726343793,0.001977731559
"In any case,  openjdk9 runs the bench without issue.",Solution Discussion,False,52,NONE,True,False,False,0.2777777778,0.1492537313,1.0,0.8044692737,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
"Interesting, it's a only on a combo of numpy 1.12.1 and 32 bit python...",Observed Bug Behaviour,False,72,MEMBER,False,False,False,0.9333333333,0.2058823529,0.0243902439,0.25,0.01562830973,0.9843716903,0.01958514047,0.0006046437747
"This is all I can get from running both: 
CODE
and
CODE

[compareAndSwapObject.log] URL ",Investigation and Exploration,True,93,NONE,True,False,False,0.6,0.2686567164,0.3333333333,0.251396648,0.003039155028,0.996960845,0.0004990398439,0.0003309694301
"Before I reinstalled miniconda, I also had the problem in macOS Sierra.",Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,0.4285714286,0.1690140845,0.6461988304,0.6666666667,0.4587137632,0.5412862368,3.099797711e-05,4.884949071e-05
But I want to leave all the values over 1024 as numerical as I don't think those specific values mean much.,Potential New Issues and Requests,False,107,NONE,False,False,False,1.0,0.328125,0.8860294118,1.0,0.2637770953,0.7362229047,7.119163405e-05,0.0001159406612
"At this point, could I summarize the scenarios as follows?
1) same code base (let's limit to OpenJ9 and OMR), disregarding JCL and related natives;
2) on same machine with same compiler (xlC13)
3) essentially same makefile(s) ???",Investigation and Exploration,False,232,CONTRIBUTOR,False,False,False,1.0,0.2298850575,0.6666666667,0.4632352941,0.7662829103,0.2337170897,0.0002229068111,4.94e-05
@gita-omr is there a particular change that seems suspect that I should remove and re-try?,Solution Discussion,False,90,CONTRIBUTOR,False,False,False,1.0,0.09770114943,1.0,0.3970588235,0.7655270019,0.2344729981,0.0001942018005,4.91e-05
On closer inspection it does seem to work.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,1.0,0.05479452055,0.5,0.6648044693,0.2548612619,0.7451387381,0.0009966013216,0.02486675089
But instantiating English() in every function call makes it super slow and practically useless.,Solution Discussion,False,95,CONTRIBUTOR,False,False,False,0.7777777778,0.09150326797,0.7266881029,0.8571428571,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
This happens both with JRE and JDK I tried both of em.,Observed Bug Behaviour,False,54,NONE,True,False,False,0.3870967742,0.1212121212,0.6363636364,0.0701754386,0.09912996542,0.9008700346,0.005467138405,0.004133788861
"So we set in the code the default of CODE to None (without changing the semantics of its default), so we know if the user set it explicitly, and in that way it is a nice way to indicate CODE without needing that extra keyword.",Solution Discussion,True,226,CONTRIBUTOR,True,False,False,1.0,0.703125,0.5220588235,1.0,0.07586856219,0.9241314378,0.0001680122564,0.000726968286
"CODE

I see the cmdline tester for cmdLineTester_locales is run with CODE.",Investigation and Exploration,True,76,CONTRIBUTOR,True,False,False,0.5652173913,0.224137931,0.5714285714,0.7339449541,0.9939440574,0.006055942622,0.006864019174,0.0128898379
CODE,Observed Bug Behaviour,True,4,NONE,False,False,False,0.02325581395,0.01030927835,0.4349112426,1.0,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
I'm unsure of the origins of this core.,Social Conversation,False,39,CONTRIBUTOR,False,False,False,0.2162162162,0.170212766,0.4,0.4461538462,0.3704340031,0.6295659969,0.007316005049,0.001912007579
"I use 1.6 now, did not try older versions yet because of some performance degradation in one-thread mode, which is critical for us now.",Observed Bug Behaviour,False,135,NONE,False,False,False,0.9615384615,0.4032258065,0.8986784141,0.75,0.6577461677,0.3422538323,0.0002666834826,0.0002101432121
"Machine used is a P7.
CODE",Investigation and Exploration,True,27,CONTRIBUTOR,False,False,False,0.3684210526,0.04022988506,1.0,0.05882352941,0.7075671106,0.2924328894,0.1010162401,0.003001622719
I did it like this:,Usage,False,19,NONE,False,False,False,0.1428571429,0.01923076923,0.1349036403,0.652173913,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"No active profile set, falling back to default profiles: default

***** errexit on line 22 ./use-apis.sh

***** errexit on line 22 ./use-apis.sh

***** errexit on line 22 ./use-apis.sh

***** errexit on line 22 ./use-apis.sh

***** errexit on line 22 ./use-apis.sh

***** errexit on line 22 ./use-apis.sh
2021-12-01 15:45:03.672  WARN 70202 --- [           main] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.omsee]' package.",Investigation and Exploration,False,472,CONTRIBUTOR,False,False,False,0.7115384615,0.7115384615,0.1842105263,0.4419889503,0.1325438863,0.8674561137,6.47e-05,3.39e-05
"Easiest way I can think of is to send CODE to the process periodically, that will cause the JVM to dump javacore files, which are text files that contain Java backtraces for every application thread, the state of locks, etc.",Investigation and Exploration,True,224,MEMBER,False,False,False,1.0,0.5970149254,0.5,0.04469273743,0.0005659745819,0.9994340254,0.00144281986,0.002326266906
"I've even tried to add CODE in order to get more core context and that causes EOF issues with the test, none of the iterations have crashed using CODE.",Task Progress,True,151,CONTRIBUTOR,False,False,False,1.0,0.6382978723,0.6666666667,0.1307692308,0.06121166501,0.938788335,0.05286071254,0.04938589637
"With CODE, the statistics converge (biase<0.001) within within 100 steps of learning/updates.",Solution Discussion,True,93,CONTRIBUTOR,False,False,False,0.5909090909,0.05,0.4839400428,1.0,0.3866792137,0.6133207863,0.001443840919,0.0004998808382
"Vijay also saw some suspicious transformations done in escape analysis which could result in some null objects in the pending push slots, and I tested further to confirm if the failure is reproducible with the option to disable escape analysis that would have prevented that, and can conclude that it is not reproducible with that option.",Solution Discussion,False,338,MEMBER,False,False,False,1.0,0.6086956522,0.625,0.8553459119,0.6292129541,0.3707870459,0.06952239071,0.0005499522631
"I'm trying with latest release jdk-11.0.6+10_openj9-0.18.1 from https://adoptopenjdk.net/archive.html?variant=openjdk11&jvmVariant=openj9 , also with the flags Cheng has requested.",Task Progress,False,180,NONE,False,False,False,0.85,0.1278195489,0.5,0.6819338422,0.6953049426,0.3046950574,0.004019012644,0.2346732222
I believe CODE is only triggered for exceptions the JVM throws internally.,Investigation and Exploration,True,74,CONTRIBUTOR,False,False,False,1.0,0.1304347826,0.6666666667,0.2767295597,0.36603667,0.63396333,0.0001080772833,4.77e-05
"-         I think CODE-like solutions are not optimal for passing big chunks of data to the train function, like a batch of images, since they're basically a pause in the execution graph to force TF to interact with _python's runtime_.",Solution Discussion,True,235,CONTRIBUTOR,False,False,False,0.8913043478,0.6119402985,0.1955617198,0.6363636364,0.04271149234,0.9572885077,0.001149776305,0.005164577321
Will review.,Potential New Issues and Requests,False,12,MEMBER,False,False,False,0.2857142857,0.05263157895,0.7664233577,1.0,0.004412303027,0.995587697,0.0002779711734,1.589171419e-05
@AlenBadel can we close this?,Action on Issue,False,29,CONTRIBUTOR,False,False,False,1.0,0.0390625,1.0,0.9888888889,0.9966558697,0.003344130284,1.0,0.00485352044
"feature request: control mechanism for queues, especially in combination with TFRecordReader's/TextFileReader's read() method, which automatically dequeues.",Expected Behaviour,False,156,NONE,False,False,False,1.0,0.2537313433,0.2746185853,0.5,0.07945996255,0.9205400374,0.03685646374,0.2293928428
Thoughts?,Solution Discussion,False,9,MEMBER,False,False,False,0.02222222222,0.006535947712,0.5080385852,1.0,0.1362602962,0.8637397038,0.0654089151,0.02443361297
@ivan-krukov I bit the bullet today and installed an El Capitan VM.,Bug Reproduction,False,67,MEMBER,False,False,False,0.9285714286,0.1830985915,0.1257309942,0.3333333333,0.1559873107,0.8440126893,0.007793915485,0.0003311524965
3) set the project JRE back to the previous JDK11 build and segment fault occurred after a couple of runs.,Testing,False,106,CONTRIBUTOR,False,False,False,0.3773584906,0.202020202,0.5,0.9859649123,0.9328124714,0.06718752859,0.07945790628,0.2381062384
"Unfortunately, that's not the issue here (although it should be fixed):compute_gradient is only ever called with stop=-1.",Potential New Issues and Requests,False,121,MEMBER,False,False,False,1.0,0.25,0.6951219512,1.0,0.5829696883,0.4170303117,0.007944280229,0.01255525015
can we have a comparison on Liberty for example?,Investigation and Exploration,False,48,CONTRIBUTOR,False,False,False,0.5625,0.1451612903,0.5,0.7552742616,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
Meanwhile the entry was not removed from the table.,Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,0.2432432432,0.0989010989,0.4,0.4895104895,0.8536703555,0.1463296445,0.2634355634,0.0006108387286
"You'd have to run with CODE

> Can we first fail remembering a class but later succeed?",Solution Discussion,True,89,CONTRIBUTOR,False,False,False,0.2903225806,0.2903225806,0.75,0.4808743169,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"To do that, shouldn't they be only initialized once and then reused in all training steps?",Usage,False,90,CONTRIBUTOR,False,False,False,0.8421052632,0.06153846154,0.3725910064,0.8,0.3603780918,0.6396219082,0.3882282375,0.06886363297
Looks to be hanging only on Non XL releases of PPC64LE JDK15.,Investigation and Exploration,False,61,CONTRIBUTOR,False,False,False,0.6,0.2553191489,0.3333333333,0.2538461538,0.1152004789,0.8847995211,0.005424033477,0.1326211964
Is that easier to reproduce to debug?,Bug Reproduction,False,37,MEMBER,False,False,False,1.0,0.1129032258,1.0,0.09289617486,0.103219821,0.896780179,0.003777918314,0.007925534914
"Hi, firstly thanks for this API, Im very keen on using it.",Social Conversation,False,58,NONE,False,False,False,0.3611111111,0.1940298507,0.6962552011,0.1111111111,0.551539804,0.448460196,0.1827564093,0.002095453319
Some other ideas I jotted down while brainstorming my own class:,Expected Behaviour,False,64,NONE,False,False,False,0.1803278689,0.1641791045,0.08183079057,0.6428571429,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
The error dump as the following:CODE,Bug Reproduction,True,36,NONE,False,False,False,0.5833333333,0.01013024602,0.6468646865,0.6,0.2038763093,0.7961236907,0.028390304,0.04042101496
Please support reading hdf5 file directly.,Expected Behaviour,False,42,NONE,False,False,False,1.0,0.08955223881,0.1248266297,1.0,0.01381178845,0.9861882115,0.02492556229,0.003307324671
@r30shah this may be of interest to you.,Social Conversation,False,40,CONTRIBUTOR,False,False,False,1.0,0.1194029851,1.0,0.9608938547,0.7884096926,0.2115903074,0.07147905412,0.3605162089
FYI @fjeremic,Contribution and Commitment,False,13,CONTRIBUTOR,False,False,False,0.04545454545,0.01503759398,1.0,0.3613231552,0.4557884115,0.5442115885,0.03394128121,0.003566914598
"+1 Can't wait, Python is great, Node and JS is great too",Social Conversation,False,56,NONE,False,False,False,1.0,0.1643835616,0.4439655172,1.0,0.5240131664,0.4759868336,0.1876779255,0.2086234161
Terminated after 150 minutes of inactivity during parallel execution of a simple function,Potential New Issues and Requests,False,89,MEMBER,False,False,False,0.8666666667,0.1911764706,0.512195122,1.0,0.5662694188,0.4337305812,0.009345907346,0.003751139534
Tensorflow 1.5 does not work with Cuda 9.1.,Solution Discussion,False,43,NONE,False,False,False,0.8888888889,0.06299212598,0.3079178886,1.0,0.3429538677,0.6570461323,0.0006411370384,0.03386342376
I'm not sure we can feasibly make progress given how long it takes to run this and the fact that we cannot reliably reproduce it.,Investigation and Exploration,False,129,CONTRIBUTOR,False,False,False,0.65,0.1954887218,0.6153846154,0.6641221374,0.6946068931,0.3053931069,9.44e-05,0.004019012644
So it seems  OpenJ9 VM (Java 11) loaded the Oracle dll (java.dll) as Oracle VM (Java 8) was on the path.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.4,0.2222222222,0.8333333333,0.8456140351,0.803200419,0.196799581,0.3518178539,0.2306492075
"If my theory is correct, then CODE should fix the issue.",Solution Discussion,True,56,CONTRIBUTOR,False,False,False,0.55,0.1375,0.3333333333,0.2205882353,0.1242931708,0.8757068292,0.0007858204357,0.07018304397
-Xmn is relevant in Balanced as much as in Gencon (although they have a bit differen meaning: total Nursery for Gencon which is both Allocate and Survivor vs only Allocate (actually called Eden) in Balanced).,Solution Discussion,False,208,CONTRIBUTOR,False,False,False,0.2397260274,0.2397260274,0.1666666667,0.08379888268,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
it's because I need a CODE directive).,Solution Discussion,True,38,CONTRIBUTOR,False,False,False,0.06306306306,0.0546875,0.3076923077,0.6833333333,0.08012656297,0.919873437,0.0570348239,0.002818533349
ValueError: Attempt to reuse RNNCell,Observed Bug Behaviour,False,36,NONE,True,True,False,0.06329113924,0.007235890014,0.009900990099,0.2727272727,0.0,1.0,0.0,0.0005278053632
"Hm none of the links at CODEtest_preserve_trustworthyness_approximatelyCODE above have failures for that, right?",Investigation and Exploration,True,112,MEMBER,False,False,False,1.0,0.1911764706,0.4308943089,0.5,0.5348493196,0.4651506804,0.0520553054,4.558136965e-05
"Instead, it would be significantly faster to use a single Python process and spacy's CODE multithreading API.",Solution Discussion,True,109,NONE,False,False,False,0.7727272727,0.1111111111,0.6816720257,0.75,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Also tried copying j9vm_jdk11/jdk11_jvm.lib & .exp to vm/lib/jvm.lib & .exp and an exception occurred when running ""java -version"":
CODE
CODE
From the result,  it suggests that copying j9vm_jdk11/jdk11_jvm.lib & .exp is correct to some extent.",Solution Discussion,True,246,CONTRIBUTOR,False,False,False,1.0,0.3389830508,1.0,0.7696969697,0.5625565659,0.4374434341,0.0004072234353,0.0002067370823
The inputs for this program would be [ops.pbtxt] URL  and all the other pbtxt files in [api_def/base_api] URL .,Solution Discussion,False,111,MEMBER,False,False,False,0.6060606061,0.2739726027,0.9181034483,0.5,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"Typically this does within a few hundred thread dumps, although I have had it once generate almost 3000.",Bug Reproduction,False,104,NONE,True,True,False,0.6,0.24,0.7,0.0395480226,0.0,1.0,0.0,4.66e-05
It sounds like you know too much about your variable for a generictransform to be the sort of thing you need.,Potential New Issues and Requests,False,109,MEMBER,False,False,False,1.0,0.328125,0.8897058824,1.0,0.263803449,0.736196551,0.0001159406612,0.0004458630338
"The problem is it returns LocIsConstant  for both ""const"" and ""static const"" variables, in which case there is no easy way to tell whether the current field is static or not.",Investigation and Exploration,False,174,CONTRIBUTOR,False,False,False,1.0,0.2711864407,1.0,0.4242424242,0.4190648965,0.5809351035,0.00192059444,0.0003428640749
Pickle is heavyweight.,Solution Discussion,False,22,CONTRIBUTOR,False,False,False,0.1875,0.01960784314,0.6977491961,0.4,0.1684338854,0.8315661146,0.003166981448,0.08051496432
@hzongaro would be worth getting compilePerformance and inlining vlog for both platforms before and after.,Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.9375,0.223880597,0.5,0.450867052,0.005340441676,0.9946595583,3.62e-05,4.18e-05
The final result was that spacy used an additional 278.6 MB after tokenizing the raw tweets and 60.99 MB of additional memory when tokenizing the pre-processed tweets.,Observed Bug Behaviour,False,167,NONE,True,True,False,0.4912280702,0.4516129032,0.03524229075,0.4705882353,0.0,1.0,0.0,0.0008157310994
At most it will create a worker thread to conduct a test and waits for it to finish.,Testing,False,84,CONTRIBUTOR,False,False,False,0.75,0.3829787234,1.0,0.4115384615,0.3641770197,0.6358229803,0.02184783511,0.004874474413
"Hi SCREEN_NAME  First of all, thank you for this great tool, we use it as part of NLP in our product.",Social Conversation,False,101,NONE,False,False,False,0.5945945946,0.3548387097,0.8325991189,0.1111111111,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
"I was also asking for the help from SCREEN_NAME  to make my personal repository to be supported officially, there are few things we have to do like building some example models especially RNN cases, but unfortunately I'm got to work on other fields and have no time for these few months, if someone is interested in making this be happened, email to me, I'd love to guide you how to start.",Potential New Issues and Requests,False,389,CONTRIBUTOR,False,False,False,1.0,1.0,0.7284482759,0.8333333333,0.7054246115,0.2945753885,0.001234509156,0.0009450258333
"| Class | Instance | Changes if | Frequently changes? | Size | Description || --- | --- | --- | --- | --- | --- || CODE | CODE | Any unseen token is processed | Yes | 9mb | Mapping table of strings to integers. Serialized as list of strings. || CODE | CODE | User writes Lexeme properties | Maybe | 80mb | Pre-computed attributes for every lexical type in the vocabulary. || CODE | CODE | User updates word vectors | Maybe | 200mb to 1gb | Word vectors. || CODE | CODE | User adds to gazetteer | Yes | <1mb | User-custom entity recognition behaviour. || CODE | CODE | Shouldn't, but must check. | Think no? | Small | I think the serializer reads data off the vocab. But need to double check. || CODE | CODE | Training | No | 490mb | Parser's statistical model. Immutable in normal use. || CODE | CODE | Training | No | 38mb | NER statistical model. Immutable in normal use. || CODE | CODE | Training | No | 12mb | POS statistical model. Immutable in normal use. |",Solution Discussion,True,963,MEMBER,False,False,False,1.0,1.0,0.09646302251,0.4285714286,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
@ppwwyyxx well I am doing CODE or is one just supposed to do a CODE and change that outside of the graph when needed?,Usage,True,117,NONE,False,False,False,1.0,0.09230769231,0.03640256959,1.0,0.173527174,0.826472826,2.587164882e-05,0.0001056172017
"But, as @pshipton reminded me privately, the build jdk *is* used so the option is relevant.",Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,1.0,0.09195402299,1.0,0.7830882353,0.7732788255,0.2267211745,0.0001379730553,2.15e-05
"I haven't figured out what I did wrong, I'm planning to use TensorBoard to monitor the parameters.",Usage,False,98,CONTRIBUTOR,False,False,False,0.2833333333,0.06538461538,0.4025695931,0.75,0.3713273265,0.6286726735,0.000473907732,0.001356181686
"After fixing the setting issues with jre-image, paths to MSVC, etc,  I am currently working on other issues in config/mk scripts captured during compilation.",Task Progress,False,157,CONTRIBUTOR,False,False,False,1.0,0.2288135593,1.0,0.0303030303,0.3765881138,0.6234118862,0.07735508958,0.0357099532
"For linear models, the problem is convex.",Solution Discussion,False,41,MEMBER,False,False,False,0.2916666667,0.0985915493,0.5833333333,0.3333333333,0.04325255159,0.9567474484,0.0006227250095,0.0001494961139
"This is what I have now, and it handles what I wanted.",Usage,False,54,NONE,False,False,False,1.0,0.1791044776,0.7142857143,0.6666666667,0.5523403498,0.4476596502,0.004343090399,0.001784978089
This resulted in both a performance issue (the Unsafe call didn't get properly optimised) and the functional problem that causes the test to hang.,Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,0.75,0.3582089552,0.75,0.9217877095,0.3165978639,0.6834021361,0.4477852629,0.1312948834
I was thinking the signature would be something like CODE where CODE is updated as so.,Expected Behaviour,True,86,CONTRIBUTOR,True,True,False,0.5,0.2253521127,0.01449275362,0.5714285714,0.0,1.0,0.0,0.02323685476
"Okay, thanks.",Social Conversation,False,13,MEMBER,False,False,False,0.2,0.01307189542,0.2668810289,0.5,0.006723480804,0.9932765192,0.0006598181736,0.003579172558
Optimization IDs are linear and incremental.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.1818181818,0.04511278195,0.5882352941,0.5394402036,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
"it is done in three phases:
   1) GC walks all RAM (CODE) classes and do preparation to it's unloading for each one:
        * set ""unloaded"" flag to j9class
        * replace pointer to class object to -1
        * remove class from active classes list (and re-assign ""previous"" and ""next"" to itself)
         * issues a hook ""class unloading"" about each class about to be unloaded
       At the end of the walk issues ""classes unloaded"" summary hook **with list of classes about to be unloaded**
    2) Classloader unloading logical changes.",Investigation and Exploration,True,550,CONTRIBUTOR,False,False,False,1.0,1.0,0.3214285714,0.6888111888,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"I am on platform ""Windows-7-6.1.7601-SP1"".",Observed Bug Behaviour,False,42,NONE,True,False,False,0.1666666667,0.0618556701,0.0650887574,0.5454545455,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
@keithc-ca I heard you looked at the 'java -version' crash.,Social Conversation,False,59,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.5,0.08088235294,0.7182331717,0.2817668283,0.0106775552,7.05e-05
"However, if the recompilation is triggered by the native code itself, we'll have to dig deeper.",Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,0.7619047619,0.2,1.0,0.25,0.1355154653,0.8644845347,0.0007191271884,0.01574975534
Ha!,Social Conversation,False,3,MEMBER,False,False,False,0.0625,0.01470588235,0.2845528455,0.1428571429,0.3553526876,0.6446473124,0.003096425316,0.01032797867
"When GC happens, is the globalreference's value changed through CODE?",Investigation and Exploration,True,69,CONTRIBUTOR,False,False,False,0.3703703704,0.05291005291,0.5,0.7028571429,0.448572496,0.551427504,0.0001183702813,0.0002582624319
suggestion from: https://stackoverflow.com/questions/48428415/importerror-libcublas-so-9-0-cannot-open-shared-object-file,Solution Discussion,False,121,NONE,False,False,True,3.0,0.02362204724,1.0,3.0,1.0,0.0,0.2966697109,0.0
"Like PyTorch, whose Tensors share memory buffers with underlying numpy arrays",Solution Discussion,False,77,CONTRIBUTOR,False,False,False,0.5789473684,0.1641791045,0.185852982,1.0,0.04256853321,0.9574314668,0.01543061897,0.001149776305
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2090517241,1.0,0.07899212462,0.9210078754,0.0073712015,0.001621150873
"Hmm, that thread is sat at 
CODE
Edit: wild cards weren't showing up

Would it be possible to run a test with the following?
CODE",Investigation and Exploration,True,134,CONTRIBUTOR,False,False,False,1.0,0.4328358209,1.0,0.1452513966,0.00206509722,0.9979349028,0.0005464443196,0.0002508127713
Or is this a TODO?,Task Progress,False,18,CONTRIBUTOR,False,False,False,0.2,0.07462686567,0.680998613,0.8,0.5120684655,0.4879315345,0.0002672122887,0.0005771785436
Maybe it depends on the minor version of OSX.,Investigation and Exploration,False,45,MEMBER,False,False,False,0.3913043478,0.1267605634,0.1900584795,0.75,0.1683691658,0.8316308342,9.769898141e-05,0.000240649474
"@DanlanChen but then, I guess it is preffered to use the latest version.",Social Conversation,False,72,NONE,False,False,False,1.0,0.1023622047,0.5747800587,0.3333333333,0.4315385746,0.5684614254,0.0001996620535,0.2835245529
"After thinking more about it, I'd recommend broadcasting English (unless you think it will grow far beyond 1GB in the future).",Solution Discussion,False,126,NONE,False,False,False,0.5348837209,0.1503267974,0.2540192926,0.8421052632,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
That kind of error could be something like being unable to grow the stack or unable to satisfy a native memory request...,Investigation and Exploration,False,121,CONTRIBUTOR,False,False,False,0.9565217391,0.4680851064,1.0,0.3846153846,0.3601897468,0.6398102532,0.1462886158,0.02184783511
"*         SCREEN_NAME  ([link](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-325698349)) and SCREEN_NAME  ([link](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-308845375)): The Dataset API includes methods for prefetching, so it shouldn't be necessary to add a queue here, and you can retain the other advantages of Datasets (like reinitialization etc.).",Usage,False,394,CONTRIBUTOR,True,False,True,43.0,0.6417910448,0.9708737864,4.0,1.0,0.0,0.02385162338,0.0
You can see examples of pretty much all of this in the CODE and CODE classes: Python API:,Solution Discussion,True,89,MEMBER,False,False,False,0.5454545455,0.4736842105,0.3211678832,0.2307692308,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"As Gita has mentioned, r12 and r2 aren't used much in production builds and I wasn't able to find any instances where they would used in a way as they contained an expected value, or they're being used as a TOC.",Investigation and Exploration,False,211,CONTRIBUTOR,True,False,False,0.5189873418,0.3203125,0.8571428571,0.2666666667,0.03198961031,0.9680103897,0.001540680846,0.006548591463
Some possibilities to do in this specific case:,Solution Discussion,False,47,CONTRIBUTOR,True,False,False,0.1818181818,0.125,0.4191176471,0.2857142857,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"I pulled the 14.2 build for Linux just to see if there was any sign of the regression on that platform, but I'm not seeing it.",Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,1.0,0.1897810219,1.0,0.7286245353,0.04275652898,0.957243471,0.0004207387775,0.002371624979
Then I set is_training_ph to True for training and False for testing.,Usage,False,69,NONE,False,False,False,0.3870967742,0.04615384615,0.3875802998,0.6,0.3712524908,0.6287475092,0.06886363297,0.000473907732
The question is whether this work-flow is really important.,Solution Discussion,False,59,MEMBER,False,False,False,0.3225806452,0.06535947712,0.0578778135,0.8333333333,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
I agree with you that this is unlikely to be an OpenJ9 issue but I am wondering if there is still an indication of a Liberty issue.,Investigation and Exploration,False,131,CONTRIBUTOR,False,False,False,0.75,0.3375,0.25,0.9558823529,0.9705973268,0.02940267322,0.001040994599,0.001009097829
I have attached both javacore files.,Task Progress,False,36,NONE,True,False,False,0.1052631579,0.08,0.2857142857,0.1638418079,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
The first 20:CODE,Investigation and Exploration,True,17,MEMBER,False,False,False,0.08333333333,0.04411764706,0.8211382114,0.2307692308,0.6243074007,0.3756925993,0.05176800464,0.02547446062
The issues I ran into were outside of spacy in doing the word count.,Solution Discussion,False,68,NONE,False,False,False,0.6666666667,0.09150326797,0.6270096463,0.6666666667,0.1671416964,0.8328583036,7.983490974e-07,0.0004388490277
I just thought I'd ask in case the situation has changed.,Social Conversation,False,57,CONTRIBUTOR,False,False,False,0.9230769231,0.1304347826,1.0,0.4968553459,0.4979218088,0.5020781912,0.000135264426,0.0008332355771
Then: aptitude install cuda-9-0,Workarounds,False,31,NONE,False,False,False,0.8333333333,0.03937007874,0.284457478,1.0,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
When can this happen?,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.06451612903,0.06451612903,0.08333333333,0.4371584699,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"One idea to move forward is like this:
1) since xlC13 can build java13, as you mentioned above and as it is used to, for both AIX and Linux;
2) Linux obviously didn't have this problem (I assumed it is gcc build);
3) Going back to ""older"" code base (of both OMR and OpenJ9 repositories  ... before any commits were made for xlclang++ build) to level-set the code base;
4) Build on both AIX and Linux using xlC13
5) See where these end up;",Investigation and Exploration,False,443,CONTRIBUTOR,False,False,False,1.0,0.5172413793,1.0,0.2610294118,0.7581195127,0.2418804873,0.02794923017,2.06e-05
"@gita-omr   I suspected it is PPCCodeSync.inc not compiled correctly, such that generated instructions are not synchronized (with iCache and IBUF).",Investigation and Exploration,False,147,CONTRIBUTOR,False,False,False,1.0,0.1264367816,0.2,0.1066176471,0.7188702831,0.2811297169,0.0002320026376,0.00724878302
"[1] https://docs.microsoft.com/en-us/visualstudio/debugger/debug-interface-access/locationtype
[2] https://docs.microsoft.com/en-us/visualstudio/debugger/debug-interface-access/idiasymbol-get-locationtype",Investigation and Exploration,False,205,CONTRIBUTOR,False,False,False,0.3333333333,0.04237288136,1.0,0.4181818182,0.418446316,0.581553684,0.006630634685,0.00192059444
https://github.com/eclipse/openj9/blob/450399bbd37af823f4360f033ac0e48dbdcd1d6c/runtime/compiler/p/codegen/PPCPrivateLinkage.cpp#L1977-L1980,Solution Discussion,False,140,MEMBER,False,False,False,0.02325581395,0.0078125,1.0,0.5888888889,0.040055736,0.959944264,0.001397241848,3.37e-05
https://ibm.ent.box.com/f/6400941f71d8467b89239b383afddbb2:,Social Conversation,False,59,CONTRIBUTOR,False,False,False,0.05882352941,0.01333333333,0.6,0.209039548,0.002600687443,0.9973993126,0.0006595011379,0.00112141451
"We don't find it spectacularly difficult to write a multithreaded data loader ourselves in Python, and generally we don't find it overly difficult to ensure that our data loading and preprocessing runs sufficiently quickly that it doesn't actually bottleneck training.",Motivation,False,268,CONTRIBUTOR,False,False,False,1.0,0.5970149254,0.2496532594,0.375,0.05005721213,0.9499427879,5.700528826e-05,0.0003781690105
"https://ci.eclipse.org/openj9/job/Build_JDK11_x86-64_mac_OMR/820
CODE",Testing,True,70,CONTRIBUTOR,False,False,False,1.0,0.04838709677,1.0,0.6775956284,0.8503805891,0.1496194109,0.03199201883,0.02798952788
"The following assert is failing, which seems to be timing related.",Investigation and Exploration,False,66,CONTRIBUTOR,True,False,False,0.5,0.1896551724,0.2,0.9541284404,0.9996774263,0.000322573672,0.005742138251,0.001861415604
"I expect that if CODE didn't work, then the version with the filter won't work either.",Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,1.0,0.1203007519,0.25,0.1704834606,0.01412833163,0.9858716684,0.002938228528,0.0009773656664
related OMR issue: https://github.com/eclipse/omr/issues/3775,Investigation and Exploration,False,61,MEMBER,False,False,False,1.0,0.02298850575,1.0,0.02573529412,0.2089514462,0.7910485538,0.3169477336,0.2738098908
If AArch64-specific I can farm it out for investigation.,Contribution and Commitment,False,56,CONTRIBUTOR,False,False,False,0.2857142857,0.1075268817,1.0,0.9845559846,0.9848191545,0.01518084546,0.007389530069,0.03826814184
@andrew-m-leonard  can this be closed?,Action on Issue,False,38,CONTRIBUTOR,False,False,False,1.0,0.170212766,1.0,0.9961538462,0.9972100059,0.00278999405,1.0,0.01528747377
Hmm.,Social Conversation,False,4,MEMBER,False,False,False,0.1111111111,0.01052631579,0.6736842105,0.5,0.1887398302,0.8112601698,4.080282041e-06,4.264436363e-05
"I put the truncated test code here: https://github.com/EricYangIBM/openj9/tree/crash
The crash occurs even if I redefine a class to itself as long as I start ~20+ redefine threads.",Testing,False,181,CONTRIBUTOR,True,False,False,1.0,0.3010752688,1.0,0.05405405405,0.01176228509,0.9882377149,0.004424019516,0.2864869704
Now when the field is resolved how that compile-time resolve could fail is a bit of a mystery.,Investigation and Exploration,False,94,CONTRIBUTOR,False,False,False,0.6551724138,0.3064516129,0.2857142857,0.2240437158,0.4886807048,0.5113192952,0.2303004492,0.01077464908
So timestamp checking is slowing things down (from 4s to 13s).,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3548387097,0.0802919708,0.25,0.8289962825,0.06284506069,0.9371549393,0.007031224118,0.002372867318
But to suggest that there's a JIT issue after the execution of the JVM just because the problem is intermittent is unfair.,Social Conversation,False,122,CONTRIBUTOR,False,False,False,0.7333333333,0.3793103448,1.0,0.2201834862,0.0208416062,0.9791583938,6.43e-05,5.63e-06
It also explains why the java.dll from Java 8 got loaded when launching Java 11 (because it loaded the library based on a relative path in which case there is no way to tell whether it is from Java 11 or from Java 8).,Investigation and Exploration,False,217,CONTRIBUTOR,False,False,False,0.8301886792,0.4444444444,1.0,0.9929824561,0.9328124714,0.06718752859,0.07945790628,0.2381062384
Just to get enlightened: it seems great idea but does that mean that SpaCy and gensim will work together?,Potential New Issues and Requests,False,105,NONE,False,False,False,1.0,0.5,0.7737226277,0.5,0.004424658886,0.9955753411,1.589171419e-05,0.0004120470569
"According to the test results, it is hard to see it can be easily reproduced but I did see the  CODE 3 times out of 6 runs as follows:
CODE",Bug Reproduction,True,140,CONTRIBUTOR,False,False,False,1.0,0.2406015038,1.0,0.727735369,0.7800282869,0.2199717131,0.007400755077,0.0003568549673
"at that point, you have to write a C++ op (doable, but a context switch + it makes a very inflexible pipeline) or pop back into Python land (slower, but very easy and flexible).",Solution Discussion,False,177,NONE,False,False,False,0.9428571429,0.4925373134,0.2052704577,0.375,0.04335363766,0.9566463623,0.005164577321,0.043809073
@pawni You have to use a Python boolean for CODE.,Usage,True,49,CONTRIBUTOR,False,False,False,1.0,0.03846153846,0.03211991435,0.5,0.1735230886,0.8264769114,4.717771256e-05,2.587164882e-05
"After around 8 attempts I had another failure
with
CODE
CODE
Also CODE shows
CODE",Bug Reproduction,True,86,NONE,True,False,False,0.7142857143,0.1503759398,0.5,0.1145038168,0.005061994847,0.9949380052,0.002785757849,0.005541266823
Ok.,Social Conversation,False,3,MEMBER,False,False,False,0.0625,0.01408450704,0.134057971,0.5,0.03646640003,0.9635336,0.0001465833962,0.0001586202898
Maybe running with verbose stack walk will show which of the exceptions gets thrown.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,1.0,0.175,0.5,0.5392156863,0.5905396583,0.4094603417,1.59e-05,0.00531516184
That would be great.,Social Conversation,False,20,MEMBER,False,False,False,0.1142857143,0.0412371134,0.7603550296,0.9,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
I've not tried any of these and they might not be efficient to use / run but it looks like there are things that exist to potentially solve those issues.,Solution Discussion,False,153,NONE,False,False,False,1.0,0.4109589041,0.3987068966,0.375,0.4752476502,0.5247523498,0.0635462371,0.3197097642
"On branch remotes/origin/r1.1 it has the ""different variable scope"" error.",Bug Reproduction,False,74,NONE,False,False,False,0.2352941176,0.01736613603,0.3795379538,0.6666666667,0.0726530785,0.9273469215,0.003490777468,0.02085163436
I don't think we intend to handle that kind of mixed case,Solution Discussion,False,57,MEMBER,False,False,False,1.0,0.1875,0.7977941176,1.0,0.2574560174,0.7425439826,0.003308173532,0.009666196666
Note that it doesn't always happen here.,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,0.1458333333,0.03703703704,1.0,0.6228571429,0.447477842,0.552522158,0.001615795728,8.48e-05
"Gensim will give us the word2vec implementation, and would be a good way to handle the boot-strapping problem: if getting spaCy to work on a new language initially depends on processing a bunch of unannotated data with spaCy, then things are awkward.",Solution Discussion,False,250,MEMBER,False,False,False,0.7166666667,0.7166666667,0.2586206897,0.96,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
But it seems that for training computer vision networks queues are still the way to go (unfortunately) as the performance boost is immense.,Solution Discussion,False,139,NONE,False,False,False,0.6216216216,0.3432835821,0.7891816921,1.0,0.6090011473,0.3909988527,0.000271284095,0.000261613555
Have you read https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-264029983 and https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-264087057 ?,Solution Discussion,False,179,MEMBER,False,False,False,0.2068965517,0.08450704225,0.9093567251,0.25,0.654594251,0.345405749,0.006016236851,0.8667419106
SharedClasses.SCM23.MultiCL_0 times out on Windows,Testing,False,50,CONTRIBUTOR,True,True,False,0.4,0.08955223881,0.25,0.005780346821,0.0,1.0,0.0,8.68e-08
@andrew-m-leonard please see https://github.com/eclipse/openj9/issues/5074#issuecomment-541123269,Social Conversation,False,97,CONTRIBUTOR,False,False,False,0.2307692308,0.03448275862,1.0,0.7095588235,0.7731338493,0.2268661507,0.0005238959763,0.0001229708481
"Yes, they should be two separate tests.",Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,1.0,0.1044776119,1.0,0.3519553073,0.003847207149,0.9961527929,5.6e-05,0.0004662876607
"Suggest the official guys to modify the installation guide ""https://www.tensorflow.org/install/install_linux#InstallingAnaconda"", step 4 of Anaconda installing, from ""pip install --ignore-installed --upgrade tfBinaryURL"" to ""conda install -c anaconda tensorflow-gpu""",Solution Discussion,False,266,NONE,False,False,False,1.0,0.2283464567,0.8592375367,1.0,0.8547530627,0.1452469373,0.09933113212,0.008876087511
Though I have noticed that **it only occurs for a subset of my dataset and not with the whole thing**.,Investigation and Exploration,False,102,NONE,False,False,False,0.8333333333,0.2816901408,0.1052631579,0.75,0.154639826,0.845360174,0.1585619872,5.56302982e-05
"e.g. use hashing to map OOV tokens to ints, keep reference to the text string in the CODE object, and obtain CODE strings by indexing on it.",Solution Discussion,True,140,CONTRIBUTOR,False,False,False,1.0,0.435483871,0.5418502203,0.75,0.2185494447,0.7814505553,0.008439281707,0.0010422294
*         See #7945 and [many Stack Overflow questions] URL  for some examples of users who have been bitten by this problem.,Motivation,False,125,CONTRIBUTOR,True,True,False,0.4680851064,0.328358209,0.01941747573,0.4666666667,0.0,1.0,0.0,0.000766008561
Thank you in advance.,Social Conversation,False,21,NONE,False,False,False,0.1379310345,0.01538461538,0.6359743041,1.0,0.5678279549,0.4321720451,0.377195146,0.003001821466
"If you need, I've a lot of resources for Portuguese (word2vec, Stanford NE Extractor, ConLL Floresta SintÃ¡tica, POS Tagger (trigram, bigram, n-gram)...) that I've trained for my project.",Solution Discussion,False,187,NONE,False,False,False,1.0,0.5166666667,0.3017241379,1.0,0.1699172444,0.8300827556,0.426740286,7.712870506e-05
"Disable with -Xjit:disableJProfiling

None of these is likely to happen for various reasons, but let's disable them all with 
CODE and see if the regression still persists.",Investigation and Exploration,True,175,CONTRIBUTOR,False,False,False,1.0,0.375,1.0,0.3431372549,0.2368541409,0.7631458591,0.02640472652,0.01413316902
"So, thx, not sure where I went wrong yesterday, but it was clearly on me.",Social Conversation,False,73,NONE,False,False,False,0.6818181818,0.02170767004,0.1452145215,1.0,0.02030719624,0.9796928038,0.00388105441,0.005971272817
Was this ever fixed?,Social Conversation,False,20,CONTRIBUTOR,False,False,False,1.0,0.04347826087,1.0,0.9937106918,0.9999940872,5.91e-06,1.0,1.83e-05
"doncat99: if you do, please ensure your code queries the tensorflow versionand raises a flag if the version is lower than the master branch version.",Solution Discussion,False,148,CONTRIBUTOR,False,False,False,1.0,0.03617945007,0.09240924092,0.5,0.001815445769,0.9981845542,0.0002569016662,0.01544625718
"*         Python 3.6.5,*         scikit-learn 0.19.1,*         Arch Linux,*         CPU cores: 8.",Observed Bug Behaviour,False,97,NONE,False,False,False,0.3333333333,0.1443298969,0.9289940828,0.2857142857,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
If you simply use the swig bindings then you will have synchronous blocking code in an async environment.,Solution Discussion,False,105,NONE,False,False,False,0.5,0.2465753425,0.3125,0.5,0.3441984002,0.6558015998,0.02043978005,0.1292799766
We need to understand the reason of that.,Social Conversation,False,41,CONTRIBUTOR,False,False,False,0.6666666667,0.05839416058,0.75,0.1226765799,0.001150317102,0.9988496829,0.0001051846944,0.0001896637403
"WOW, yes!",Social Conversation,False,9,NONE,False,False,False,0.02985074627,0.02816901408,0.6812865497,0.1428571429,0.4588221835,0.5411778165,9.354746662e-05,0.001079117078
It is STS 4 snapshot based on latest Eclipse 4.9 release.,Investigation and Exploration,False,57,NONE,True,False,False,0.6111111111,0.1111111111,0.25,0.101754386,0.1103553327,0.8896446673,0.02087158101,0.006411425468
"-ljli_static 

JDK13 link command:

( /opt/freeware/bin/rm -f /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/BUILD_LAUNCHER_java_link.log && /usr/vacpp/bin//xlc_r **-b64 -brtl -bnorwexec -bnolibpath -bexpall -bernotok -btextpsize:64K -bdatapsize:64K -bstackpsize:64",Investigation and Exploration,False,319,CONTRIBUTOR,False,False,False,0.2298850575,0.2298850575,0.6666666667,0.5404411765,0.766404827,0.233595173,1.59e-05,0.0001754195096
Testing is not.,Usage,False,15,NONE,False,False,False,0.08571428571,0.01153846154,0.1113490364,0.1739130435,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"I wanted to be able to obtain some compilation logs from a failing run, and this helps with that.",Investigation and Exploration,False,97,MEMBER,False,False,False,0.59375,0.2065217391,0.5,0.7358490566,0.5963082563,0.4036917437,0.01338731827,0.03227550175
"Linux-3.0.101-0.47.71-default-x86_64-with-SuSE-11-x86_64('Python', '2.7.12 |Anaconda 2.3.0 (64-bit)| (default, Jul  2 2016, 17:42:40) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]')('NumPy', '1.12.1')('SciPy', '0.19.1')('Scikit-Learn', '0.18.1')",Bug Reproduction,False,240,NONE,False,False,False,1.0,0.3521126761,0.9941520468,1.0,0.9998782054,0.0001217945808,0.8838761808,0.0007094938778
It must be a VM run that will read values (and expand on them) after the previous run updated the values for the process of converging to make progress.,Solution Discussion,False,152,CONTRIBUTOR,False,False,False,0.90625,0.198630137,0.8571428571,0.5474860335,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
"Yes, you would need OpenMP to enable multithreading.",Solution Discussion,False,52,NONE,False,False,False,0.6153846154,0.0522875817,0.8585209003,0.1666666667,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
Hadoop was the reason we added the CODE option.,Solution Discussion,True,47,CONTRIBUTOR,False,False,False,0.2307692308,0.06164383562,1.0,0.748603352,0.2657961135,0.7342038865,0.005993563236,0.00238876338
eclipse/omr#6255 is a better temporary workaround than #13978.,Workarounds,False,62,MEMBER,False,False,False,0.2368421053,0.09782608696,0.25,0.893081761,0.6349174086,0.3650825914,0.01709802761,0.01374259717
However CODE,Observed Bug Behaviour,True,12,NONE,True,True,False,0.1538461538,0.02816901408,0.01169590643,0.8,0.0,1.0,0.0,0.0002726161379
"Both the entries of J9Method_HT, as well as the DLTRecordTable contains references to J9Methods that are either candidates to be DLT compiled, or DLT compiled methods respectively.",Investigation and Exploration,False,180,CONTRIBUTOR,False,False,False,1.0,0.2967032967,0.3333333333,0.5524475524,0.8546478187,0.1453521813,0.002043575217,0.001362640241
"Failure link
------------
https://github.com/ibmruntimes/openj9-openjdk-jdk11/blob/f4e1e81163ae8ead82ac546d7f8d2e7a3ed24871/test/jdk/java/nio/charset/coders/BashStreams.java#L1 fails on JDK11-openj9 AIX
- test category, openjdk 
- OS/architecture, ppc64_aix
CODE

Optional info
-------------
- New test

Failure output (captured from console output)",Testing,True,360,NONE,True,True,False,1.0,0.3956043956,0.6666666667,0.006993006993,0.0,1.0,0.0,0.003603409297
"Since this change may not make it to the 0.15.0 release, we can change the code to check the timestamp only once for each jar during the startup phase for the 0.15.0 release.",Solution Discussion,False,174,CONTRIBUTOR,False,False,False,1.0,0.2408759124,0.6,0.9814126394,0.1882122667,0.8117877333,0.002992794434,1.0
Created https://github.com/eclipse/openj9/pull/11285,Action on Issue,False,52,CONTRIBUTOR,True,False,True,1.0,0.03448275862,1.0,1.0,1.0,0.0,0.001861415604,0.0
For my problem performing grid search over n_estimators isn't really an option because it takes so long.,Solution Discussion,False,104,CONTRIBUTOR,True,False,False,0.53125,0.2394366197,0.1050724638,1.0,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
Then I had to spend more time figuring out that by default the variables tracking the moments don't update unless you use a contrib function for optimization.,Usage,False,158,NONE,False,False,False,0.7714285714,0.1038461538,0.6852248394,0.6,0.5724926046,0.4275073954,0.005970364889,0.0005567984656
"In this scenario, some data is being stored in the SCC during the first run which allows subsequent runs to always pass.",Investigation and Exploration,False,120,CONTRIBUTOR,False,False,False,0.511627907,0.2365591398,0.5384615385,0.2123552124,0.3402178482,0.6597821518,0.06293969756,0.0116494207
"There are many additional classes loaded for modularity on jdk11+, and additional native structures used to manage it.",Investigation and Exploration,False,118,CONTRIBUTOR,True,False,False,0.9473684211,0.2903225806,0.6666666667,0.4092827004,0.2975409256,0.7024590744,0.006977483614,0.001055956968
"Plus, multiheap,buckets used more memory and failed this PR's test case.",Testing,False,72,CONTRIBUTOR,False,False,False,0.1935483871,0.1935483871,0.6,0.2911392405,0.2206084978,0.7793915022,0.01185472132,0.2853709122
Please confirm that fullcore attribute is set. CODE.,Investigation and Exploration,True,52,CONTRIBUTOR,False,False,False,0.4210526316,0.08791208791,0.25,0.1258741259,0.1134912755,0.8865087245,0.008570999411,0.04891716703
@dmitripivkine @dsouzai @mpirvu could you confirm that the monitor above is the right one (used for class unloading by GC and compilation thread) ?,Solution Discussion,False,147,CONTRIBUTOR,False,False,False,1.0,0.2527472527,0.5,0.9335664336,0.8789792843,0.1210207157,0.001947289162,0.001105363904
"Ah, thanks, I missed that, as it was in an example about text processing.",Social Conversation,False,73,CONTRIBUTOR,False,False,False,1.0,0.2089552239,0.6879334258,0.5,0.5121578228,0.4878421772,0.0001414952691,0.07840110346
"I would say that aside from the steep learning curve of input pipeline which can be overcome with documentation too, the key missing points are:",Expected Behaviour,False,144,NONE,False,False,False,0.5813953488,0.3731343284,0.3425797503,0.125,0.2977348857,0.7022651143,0.1209962692,0.001143668596
"In some instances, such as the path that involves CODE the GC reserves the mutex much later on, and closer to calling the hook.",Investigation and Exploration,True,127,CONTRIBUTOR,False,False,False,0.8,0.2637362637,0.6666666667,0.3671328671,0.7687454681,0.2312545319,0.8023255008,0.03674198804
Then my tensorflow is able of finding the libcublas.so.9.0,Solution Discussion,False,58,NONE,False,False,False,0.9,0.07086614173,0.5571847507,1.0,0.4120996726,0.5879003274,0.001728185996,0.2379527984
"The reason is because of this code:

https://github.com/eclipse/openj9/blob/2293207e22e09b24f1d385c5bc7f9f5a479211a1/runtime/compiler/env/VMJ9.cpp#L318-L351",Solution Discussion,False,158,CONTRIBUTOR,False,False,False,0.28125,0.0989010989,1.0,0.9545454545,0.8793047766,0.1206952234,5.93e-05,0.2377056189
CODE CODE,Investigation and Exploration,True,9,NONE,False,False,False,1.0,0.02941176471,0.5772357724,1.0,0.5740711375,0.4259288625,0.0110293102,0.006827881986
#589 issue still exists.,Potential New Issues and Requests,False,24,NONE,False,False,False,0.3636363636,0.06451612903,0.7885462555,0.2,0.5871184167,0.4128815833,1.0,0.09855593002
I'm wholly unfamiliar with Windows development...,Social Conversation,False,49,NONE,False,False,False,0.4615384615,0.03921568627,0.8745980707,1.0,0.1977996988,0.8022003012,8.955394223e-06,0.0009535759306
-         This is possible to detect (with a little bit of extra code complexity) as we are already in fit anyhow,Solution Discussion,False,113,CONTRIBUTOR,True,False,False,0.4772727273,0.328125,0.4264705882,0.380952381,0.07430334202,0.925696658,0.1302436707,0.0003197521392
This failure seems very likely a CODE issue,Investigation and Exploration,True,43,CONTRIBUTOR,False,False,False,0.7272727273,0.1290322581,0.5,0.04371584699,0.0009310392468,0.9990689608,0.0004165850335,0.110942232
I'm continuing the limiting now.,Task Progress,False,32,CONTRIBUTOR,False,False,False,0.4545454545,0.03759398496,1.0,0.8778625954,0.840649683,0.159350317,0.000959379849,0.00441061294
so it would take arbitrary CODE or just CODE?,Solution Discussion,True,45,MEMBER,False,False,False,0.375,0.1267605634,0.652173913,0.6666666667,0.06514439128,0.9348556087,3.516317045e-05,0.0003479469411
I think the key lies in the large number of compilation failures.,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,1.0,0.08759124088,0.25,0.1152416357,0.001150317102,0.9988496829,0.0001051846944,0.0001896637403
Thanks!,Social Conversation,False,7,MEMBER,False,False,False,0.06666666667,0.015625,0.9411764706,1.0,0.7468790146,0.2531209854,1.0,0.6154659147
But also that can be solved separately by in such a case raising a warning that the user should set CODE manually to keep the existing behaviour.,Solution Discussion,True,145,CONTRIBUTOR,True,False,False,0.6136363636,0.421875,0.2830882353,0.9285714286,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"I've reviewed the code, and it seems reasonable.",Task Progress,False,48,CONTRIBUTOR,False,False,False,0.1475409836,0.140625,0.5,0.8581560284,0.9596665979,0.04033340207,0.006489322312,0.1158821295
Feed dict overhead is essentially the cost of doing an extra memcpy (Python->TensorFlow CPU->TensorFlow GPU) vs. using native ops like queues which do (TensorFlow CPU->TensorFlow GPU).,Solution Discussion,False,184,CONTRIBUTOR,False,False,False,1.0,0.3880597015,0.3037447989,0.5,0.2777249108,0.7222750892,0.001660279021,0.0007705893431
Will most likely wait until TF 2.0 to try something like this again.,Social Conversation,False,68,NONE,False,False,False,0.4814814815,0.05,0.7451820128,1.0,0.6158890256,0.3841109744,0.00136237059,0.002840605583
"My main advice would be to not assume that Spark, Hadoop etc are automatically better than using a single machine and using multiple processes with spaCy's CODE method for multithreading.",Solution Discussion,True,187,MEMBER,False,False,False,0.75,0.1960784314,0.807073955,0.8421052632,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
I had no idea it worked differently on 64-bit and 32-bit...,Potential New Issues and Requests,False,59,MEMBER,False,False,False,0.6875,0.1617647059,0.2886178862,0.2857142857,0.3553526876,0.6446473124,0.003096425316,0.01032797867
"Given that UMA_DO_NOT_OPTIMIZE_CCODE expands to
CODE",Investigation and Exploration,True,53,CONTRIBUTOR,True,False,False,0.08860759494,0.0546875,0.4285714286,0.25,0.03198961031,0.9680103897,0.001540680846,0.006548591463
It worked fine in Jupyter Notebook and command-line.,Bug Reproduction,False,52,NONE,False,False,False,0.8181818182,0.09278350515,0.8816568047,1.0,0.9706052871,0.02939471292,0.04128957575,0.0165742005
++@gacholio: for insights + updated CODE last ([history] URL .,Contribution and Commitment,True,62,CONTRIBUTOR,False,False,False,0.1333333333,0.1066666667,1.0,0.4463276836,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
"Something may have happened because of the Spyder install, but then why would it work for a day and then suddenly stop??",Investigation and Exploration,False,120,NONE,False,False,False,0.9166666667,0.2268041237,0.5591715976,1.0,0.848593974,0.151406026,0.0001585701904,6.418695628e-05
"When saving and restoring using:saver = tf.train.Saver()it works, but when saving using:saver = tf.train.Saver(tf.trainable_variables() + [global_step])so that I can save storage space (by not saving the gradients etc)on restore there is an error:""uninitialized value unpool4/convc/bn/moving_mean""",Usage,False,297,NONE,False,False,False,1.0,0.1384615385,0.5374732334,0.4,0.4918247108,0.5081752892,0.0300603195,0.001170108729
"So, I wasn't able to get very far because I couldn't get the build that the assert was triggered in.",Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,0.6060606061,0.3225806452,0.3333333333,0.07103825137,0.1024999691,0.8975000309,0.0006590192892,0.003777918314
"-         handle_unknown='ignore'  -> fine, no change in behaviour",Solution Discussion,False,66,CONTRIBUTOR,True,False,False,0.1860465116,0.125,0.3455882353,0.3333333333,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
"It is potentially the most elegant solution to this problem, side-stepping all of the JS talking to Python talking to C++, you know.",Solution Discussion,False,132,NONE,False,False,False,0.5714285714,0.3287671233,0.7887931034,0.2222222222,0.7855057516,0.2144942484,0.4412746119,0.2066977323
"https://github.com/eclipse/openj9/issues/6361#issuecomment-508929509 has two different ranges, both of which only affect aarch64.",Observed Bug Behaviour,False,129,CONTRIBUTOR,False,False,False,0.8461538462,0.1896551724,1.0,0.1100917431,0.02062527793,0.9793747221,0.0002366406152,0.0009727685091
"I'm also reading pull requests about adding of a German support, do you think the work for adding of Russian support is going to be kind of similar?",Solution Discussion,False,148,NONE,False,False,False,1.0,0.4666666667,0.7844827586,1.0,0.4575489558,0.5424510442,0.04109506146,0.1027852809
"But I also like the ""CategoricalEncoder"" name, that would indeed be sad.",Social Conversation,False,72,CONTRIBUTOR,True,False,False,0.5217391304,0.1875,0.125,0.6666666667,0.001108978882,0.9988910211,0.001496651552,0.0039907996
what if you just formalized that?,Solution Discussion,False,33,NONE,False,False,False,0.1714285714,0.08955223881,0.2094313454,0.75,0.04335363766,0.9566463623,0.005164577321,0.043809073
Sounds to me like there's a race condition somewhere.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.4285714286,0.04761904762,0.3333333333,0.1714285714,0.308244607,0.691755393,0.01265320363,0.0005070055754
Perhaps the corpora from http://corporafromtheweb.org/ are useful here.,Solution Discussion,False,71,NONE,False,False,False,0.4444444444,0.1333333333,0.3793103448,0.3333333333,0.2903576062,0.7096423938,0.409548798,0.4682936827
Relative noob here looking for a recommendation.,Social Conversation,False,48,CONTRIBUTOR,False,False,False,0.2692307692,0.04575163399,0.5305466238,0.2222222222,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
"But from the looks of it, it is just a completely empty boot app which basically does nothing.",Investigation and Exploration,False,94,NONE,True,False,False,1.0,0.1818181818,0.375,0.1964912281,0.1140182149,0.8859817851,0.003967626759,0.002853124861
They were very useful in adding batch normalization to my convolution network.,Social Conversation,False,78,NONE,False,False,False,0.3428571429,0.04615384615,0.1070663812,0.08695652174,0.2164964176,0.7835035824,0.06906725807,0.007698692487
Is it just a file?,Motivation,False,18,NONE,False,False,False,0.1666666667,0.07462686567,0.1525658807,0.4285714286,0.04064994448,0.9593500555,0.2125437083,0.01543061897
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6056034483,1.0,0.6539432171,0.3460567829,0.006803964682,0.04791701478
The complication with CODE is that the first object resides on JITServer and second object resides on JITClient.,Solution Discussion,True,112,CONTRIBUTOR,False,False,False,0.2465753425,0.09523809524,0.2,0.9485714286,0.5018185814,0.4981814186,0.001953523523,1.0
"i.e. even if it works for 13.0.1,, it may not work for 13.0.2 in January.",Solution Discussion,False,73,CONTRIBUTOR,False,False,False,0.625,0.08620689655,0.6666666667,0.9154411765,0.7942021981,0.2057978019,0.006755954606,0.002545177611
The build needs to work in order to get to the next step and the final build.,Solution Discussion,False,77,CONTRIBUTOR,False,False,False,0.6296296296,0.09770114943,1.0,0.6066176471,0.7689727487,0.2310272513,0.0003819065821,0.01062274398
Can I expect tempfiles and tempdirs to work?,Solution Discussion,False,44,MEMBER,False,False,False,0.7272727273,0.0522875817,0.2733118971,0.5,0.007984246554,0.9920157534,0.003579172558,0.0004078869671
"From my offline discussions with them, they have not been able to reproduce a 2 hour timeout using the development machines we have here at IBM.",Bug Reproduction,False,144,CONTRIBUTOR,False,False,False,0.5416666667,0.3880597015,0.2222222222,0.6300578035,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"@ry Updated the license to MIT and SCREEN_NAME  joined the group, thanks for the invitation :)",Action on Issue,False,94,CONTRIBUTOR,False,False,False,1.0,0.2328767123,0.6228448276,1.0,0.6567561288,0.3432438712,0.000624336739,0.2551138181
"I am not completely against adding a function, but I wouldn't like it to be to specific to the ensembles.",Solution Discussion,False,105,MEMBER,False,False,False,0.8695652174,0.2816901408,0.6992753623,0.125,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
You need CUDA 9.0 and CuDNN 7.0.4,Solution Discussion,False,33,NONE,False,False,False,1.0,0.05511811024,0.6686217009,1.0,0.5066956151,0.4933043849,0.001849462207,0.01267336397
@dsouzai I created a reduced example for you to test yourself:,Bug Reproduction,False,62,NONE,True,False,False,0.1896551724,0.0802919708,0.25,0.2973977695,0.01108575056,0.9889142494,0.006010021534,0.009079840981
@syw2014 Did you fix your issue?,Task Progress,False,32,NONE,False,False,False,1.0,0.008683068017,0.7887788779,1.0,0.2755582421,0.7244417579,0.005351860947,0.001438293347
That is very interesting.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.1666666667,0.02919708029,0.125,0.5167286245,0.02511107793,0.9748889221,0.006018717906,8.32e-05
What I took from it is that fork() NOT followed by exec() call is bad.,Investigation and Exploration,False,70,NONE,False,False,False,0.8823529412,0.1546391753,0.6035502959,0.5714285714,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
@zhongyuk depends which library you have installed.,Investigation and Exploration,False,51,MEMBER,False,False,False,0.175,0.0985915493,0.5409356725,0.25,0.4545783063,0.5454216937,7.597272067e-05,4.179191556e-05
Bizarre.,Social Conversation,False,8,NONE,False,False,False,0.1666666667,0.01408450704,0.1461988304,1.0,0.1563439049,0.8436560951,0.001746127121,0.05890874943
"Interesting, without using a SCC, the regression almost goes away.",Solution Discussion,False,66,NONE,True,False,False,1.0,0.125,0.1666666667,0.0637254902,0.04138087714,0.9586191229,0.03316104244,0.3318641488
At this point I think we'll need a log for further investigation.,Investigation and Exploration,False,65,CONTRIBUTOR,True,False,False,0.3076923077,0.1875,0.3333333333,0.6879432624,0.948495458,0.05150454195,0.001656592469,8.9e-05
[info] java.util.concurrent.TimeoutException: Futures timed out after [20000 milliseconds],Observed Bug Behaviour,False,90,CONTRIBUTOR,False,False,False,0.3333333333,0.1343283582,1.0,0.7653631285,0.1145354715,0.8854645285,0.0003094219412,0.0001922036014
the FAQ link above?,Investigation and Exploration,False,19,NONE,False,False,False,0.1818181818,0.0412371134,0.5207100592,0.6666666667,0.8484995377,0.1515004623,5.939925697e-06,1.996530209e-05
"-         Send it to workers, with new state preserved",Solution Discussion,False,54,MEMBER,False,False,False,0.2903225806,0.05882352941,0.04180064309,0.4166666667,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"@gacholio I think @AlenBadel meant some specifics within JIT, e.g. AIX linkage code is taking different path, extra testing etc.",Social Conversation,False,128,CONTRIBUTOR,False,False,False,1.0,0.15625,0.5,0.8666666667,0.2191842677,0.7808157323,0.003365233479,0.1283873506
"The biggest increase comes from warm compilations which, even though they are substantially fewer now, they are way more expensive (20x).",Investigation and Exploration,False,137,CONTRIBUTOR,False,False,False,0.4772727273,0.3134328358,0.6666666667,0.9132947977,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
Fitting additional estimators for ensemble methods,Expected Behaviour,False,50,CONTRIBUTOR,True,True,False,0.1875,0.08450704225,0.003623188406,0.1428571429,0.0,1.0,0.0,0.02323685476
"Still failing with the same report, managing RAT.",Bug Reproduction,False,49,NONE,True,False,False,0.380952381,0.06015037594,0.8333333333,0.0737913486,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
Do you recall which C function was responsible for the divergence?,Investigation and Exploration,False,66,MEMBER,False,False,False,0.6470588235,0.1617647059,0.6260162602,0.5555555556,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
Removing the JIT resolve frame build and stack walk still results in a crash due to vmThread corruption.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,1.0,0.1730769231,1.0,0.6629834254,0.1406067693,0.8593932307,0.0002200465847,0.215915693
I'm going to rerun the bench a bunch of times with CODE and see if I can't manage to get a trace for CODE with inlining enabled.,Investigation and Exploration,True,128,NONE,True,False,False,0.9642857143,0.4029850746,0.8333333333,0.5027932961,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
"FYI, I can not reproduce on my OSX version with the same numpy version, Accelerate as well.",Bug Reproduction,False,91,MEMBER,False,False,False,1.0,0.25,0.3780487805,1.0,0.4620220291,0.5379779709,0.003789469322,0.1520017818
It was fine.,Solution Discussion,False,12,CONTRIBUTOR,False,False,False,0.08823529412,0.01724137931,0.2222222222,0.5698529412,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
"Avoid combining a regular type bound with a ClassObject location in VP] URL  which closed [JDK17 jsr292_MethodHandleAPI_Test_JitCount1_0_FAILED - NullPointerException: Cannot read field ""rtype"" because ""this"" is null] URL .",Solution Discussion,False,223,MEMBER,True,False,False,1.0,0.3152173913,0.6,0.5283018868,0.5013662667,0.4986337333,0.009822949607,0.01749005949
Compilation queue grows up to 370 entries in the first 100 ms.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3428571429,0.08759124088,0.6,0.2862453532,0.007087055447,0.9929129446,0.006822511181,0.006010021534
"CODE should be super cheap, so don't stress about trying to call it as late as possible.",Workarounds,True,88,MEMBER,False,False,False,0.5151515152,0.2741935484,0.6696035242,0.5625,0.288728579,0.711271421,0.1151253204,0.02221386295
"Sure, I'll make a stripped-down version of the agent.",Social Conversation,False,53,NONE,True,False,False,1.0,0.09615384615,0.5,0.2044198895,0.02423213548,0.9757678645,9.99e-05,0.03981237336
For now the following work-around could help:,Workarounds,False,45,MEMBER,False,False,False,0.3636363636,0.2105263158,0.6569343066,0.3333333333,0.00407883792,0.9959211621,4.078315706e-05,0.0001509211005
Consider thefollowing example: CODE can reuse the fitted weights from clf it might converge more quickly# under the hood,Solution Discussion,True,120,MEMBER,False,False,False,0.6785714286,0.2676056338,0.3079710145,0.6,0.03951545499,0.960484545,4.948110811e-06,1.193161472e-05
This is still in progress.,Task Progress,False,26,NONE,False,False,False,0.2380952381,0.06849315068,0.5538793103,0.6666666667,0.6333018978,0.3666981022,0.001457597222,0.003508325412
The test is run with CODE.,Testing,True,26,CONTRIBUTOR,False,False,False,0.2608695652,0.06451612903,0.1111111111,0.05791505792,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"The concern is that the change may impact a user, in that something that was working may start failing due to OOM.",Solution Discussion,False,114,CONTRIBUTOR,True,False,False,0.7096774194,0.3548387097,0.5714285714,0.5611814346,0.4797361547,0.5202638453,0.003593754102,0.003640426233
"Might be worth combining a run which logs anything from sun/misc/Unsafe with a verbose log so we can confirm what did get compiled during the run:
CODE
This might get large, but at least in the one verbose log I have there was only one method compiled from Unsafe, so hopefully it will be ok.",Investigation and Exploration,True,294,CONTRIBUTOR,False,False,False,1.0,0.8805970149,1.0,0.3016759777,0.003490514685,0.9965094853,0.0002499508717,0.0003395884257
That usually means that system is running on the brink of memory/paging space exhaustion.,Investigation and Exploration,False,89,CONTRIBUTOR,False,False,False,0.4545454545,0.2419354839,0.6666666667,0.641350211,0.4818277043,0.5181722957,0.005901107588,0.002228594265
"So we shouldn't currently have this same bug for string peepholes, though IMO it would be an improvement to explicitly skip the attempt to find patterns and transform, e.g. here:
https://github.com/eclipse-openj9/openj9/blob/0f92184aec12c9963f3efd588a2f91ed258e287d/runtime/compiler/optimizer/StringPeepholes.cpp#L217-L223

FYI @vijaysun-omr, @0xdaryl",Solution Discussion,False,354,CONTRIBUTOR,False,False,False,0.4352941176,0.3978494624,1.0,0.833976834,0.6236466175,0.3763533825,0.04747801046,0.02028856842
"@mrry One ""data set"" can be composed of anything between ~500-30,000 dynamically generated samples.",Motivation,False,99,CONTRIBUTOR,False,False,False,0.46875,0.223880597,0.120665742,0.3333333333,0.01071263196,0.989287368,0.0188753671,0.02492556229
"Already checked STS4 B1362 on the original VM image as follows:
1) set the project JRE to the previous JDK11 build and hit segment fault intermittently
2) set the project JRE to the latest **nightly** build & repeated launching the OpenJ9 project over 20 times
   and no thing wrong was detected.",Testing,False,299,CONTRIBUTOR,False,False,False,1.0,0.5353535354,0.25,0.9824561404,0.9328124714,0.06718752859,0.07945790628,0.2381062384
I've trained a model on one month of Reddit comments.,Potential New Issues and Requests,False,53,MEMBER,False,False,False,0.3666666667,0.2894736842,0.197080292,0.3333333333,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
#10580 is a failure in the same test and it has a link to rerun the test with target CODE.,Investigation and Exploration,True,90,CONTRIBUTOR,False,False,False,1.0,0.4255319149,0.25,0.04615384615,0.003497287056,0.9965027129,0.005864825644,0.0004608281741
seems like we are failing to allocate memory?,Investigation and Exploration,False,45,CONTRIBUTOR,False,False,False,0.3333333333,0.170212766,0.1428571429,0.3884615385,0.3641770197,0.6358229803,0.02184783511,0.004874474413
I have a branch,Social Conversation,False,15,CONTRIBUTOR,False,False,False,0.1739130435,0.03389830508,0.6,0.6424242424,0.5222439948,0.4777560052,0.01501286261,0.003822899709
Thank you so much everyone...!!!!!,Social Conversation,False,34,NONE,False,False,False,0.1162790698,0.007235890014,0.4422442244,0.2,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
"Maybe, until this is fully resolved, it may be worthwhile to raise a more specific exception/warning if the gradient contains infs with a note about this problem?",Solution Discussion,False,162,CONTRIBUTOR,False,False,False,1.0,0.3943661972,0.5204678363,1.0,0.4541253359,0.5458746641,0.005172233894,9.742221376e-05
@PatWie thanks for pointing this out!,Social Conversation,False,37,NONE,False,False,False,0.6666666667,0.08955223881,0.8335644938,0.3333333333,0.7197506803,0.2802493197,0.01478320176,0.1554452775
"i hit the same problem and was scratching my head for two days, until finally i discovered that local copy of libcudnn.so was used by conda, under:/miniconda3/lib/libcudnn.so which pointed to libcudnn.so.7 which pointed to libcudnn.so.7.0.5",Investigation and Exploration,False,240,NONE,False,False,False,1.0,0.2834645669,0.7683284457,0.5,0.5795291024,0.4204708976,0.1256221876,1.0
But will set OPENJ9_JAVA_OPTIONS,Solution Discussion,False,32,NONE,True,False,False,0.1666666667,0.03007518797,1.0,0.1272264631,0.006144993941,0.9938550061,0.0006940890429,0.03656966316
CODE,Investigation and Exploration,True,4,NONE,False,False,False,0.05882352941,0.01030927835,0.7840236686,1.0,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
"@vincentvanhoucke in our distributed setting we usually do millions of updates so it is ok, however in other cases like the one here which does only a few hundreds of updates it makes a big difference:For example using decay=0.999 has a 0.36 bias after 1000 updates, but that bias goes down to 0.000045 after 10000 updates and to 0.0 after 50000 updates.",Solution Discussion,False,354,MEMBER,False,False,False,1.0,0.2423076923,0.4646680942,1.0,0.3811497473,0.6188502527,0.001631435738,0.03294891445
@Oktai15 doesn't CODE delete your system?,Solution Discussion,True,41,NONE,False,False,False,0.2608695652,0.04724409449,0.6275659824,0.5,0.4654191009,0.5345808991,0.003653815579,5.398270335e-05
"https://github.com/AlenBadel/omr/commit/0b9653c23ba22247f66c11ad6df8a3b46c2c4738

I'll be taking a look on xLinuxXL to see if it's a similar story.",Investigation and Exploration,False,149,CONTRIBUTOR,False,False,False,1.0,0.3404255319,1.0,0.6153846154,0.5145384234,0.4854615766,0.04264807325,0.3869983485
"- After the SCC is cleared and if the first run does not use CODE, then subsequent runs with CODE will always pass.",Investigation and Exploration,True,115,CONTRIBUTOR,False,False,False,0.511627907,0.2365591398,0.4615384615,0.2084942085,0.3402178482,0.6597821518,0.06293969756,0.0116494207
"I stored results locally, so if somebody needs core files for previous or this one ask me",Social Conversation,False,89,CONTRIBUTOR,False,False,False,1.0,0.1868131868,1.0,0.09090909091,0.08866283535,0.9113371647,0.0006539748809,0.0636581768
Managed to fix this issue by installing older version of Tensorflow:CODE,Solution Discussion,True,72,NONE,False,False,False,1.0,0.01736613603,0.5280528053,0.5,0.1269177248,0.8730822752,0.002197250879,0.03407322991
We'll need a trace log from a failing run and a trace log from a passing run to compare.,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,0.6551724138,0.1428571429,0.75,0.6055979644,0.5847405612,0.4152594388,0.0002035667511,0.1071746243
@jdekonin Raised https://github.com/AdoptOpenJDK/openjdk-infrastructure/issues/1189 for the fullcore enabling.,Task Progress,False,110,NONE,True,False,False,0.7777777778,0.07692307692,0.5,0.1398601399,0.1224394958,0.8775605042,0.04891716703,0.8694307183
"However, we still need to map _all_ strings, even rare ones, to integers.",Solution Discussion,False,73,MEMBER,False,False,False,0.325,0.2096774194,0.3259911894,0.3611111111,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
It would be nice so see something in this flavor: CODE,Expected Behaviour,True,54,CONTRIBUTOR,False,False,False,0.5,0.1641791045,0.7628294036,0.8,0.5836373245,0.4163626755,0.004980837062,0.00636830506
[jitdump.20210316.184837.7.0249.dmp.gz] URL,Investigation and Exploration,False,44,NONE,True,False,False,0.0350877193,0.02666666667,0.8571428571,0.186440678,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
"As such, I think the problem is in CODE; I don't think there's anything wrong in the AOT code for CODE,",Investigation and Exploration,True,103,CONTRIBUTOR,False,False,False,0.2258064516,0.2258064516,1.0,0.4131274131,0.3937305493,0.6062694507,0.03688423691,0.3568236584
What has been described so far certainly doesn't prevent that case.,Solution Discussion,False,67,CONTRIBUTOR,False,False,False,1.0,0.0802919708,1.0,0.9516728625,0.07116288655,0.9288371134,4.6e-05,0.002656948816
Does your scorer use joblib / n_jobs anywhere?,Investigation and Exploration,False,46,MEMBER,False,False,False,0.4666666667,0.07216494845,0.1863905325,0.5,0.2578282109,0.7421717891,8.343708337e-07,0.000173866989
"On my MacBook Pro, each Python worker process uses between 800MB and 1.5GB.",Solution Discussion,False,75,NONE,False,False,False,0.6818181818,0.09803921569,0.6623794212,0.25,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
"Probably we should turn this feature off if user specified any of -Xmns/-Xmnx/-Xmn/-Xmos/-Xmox/-Xmo

Agreed.",Solution Discussion,False,110,CONTRIBUTOR,True,False,False,0.5769230769,0.102739726,0.9090909091,0.2458100559,0.01440399469,0.9855960053,0.001770078156,0.04266521959
-         [product](https://docs.python.org/2/library/itertools.html#itertools.product),Expected Behaviour,False,87,CONTRIBUTOR,False,False,False,0.5,0.0447761194,0.4743411928,1.0,0.4356293768,0.5643706232,0.01344561339,0.0007517572389
"I don't want to have 3 different gan classes: each with their own create graph and fit methods, simply because one dataset doesn't fit in memory, the other is an np.array, and the other is generated on the fly.",Motivation,False,210,NONE,False,False,False,0.6393442623,0.5820895522,0.07628294036,0.3571428571,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"Put printfs into both JDK8 and JDK 13 builds and neither set PROT_EXEC bit when running 'java -version' (but JDK 8 works of course)
4) enforcing setting the bit did not help either
5) I am actually not sure that mprotect() is even applied to the code cache.",Investigation and Exploration,False,259,CONTRIBUTOR,False,False,False,0.8064516129,0.2873563218,0.75,0.1433823529,0.7262039141,0.2737960859,0.01330093329,0.008601580477
"However, the ValueError should be resolved by the code snippet.",Usage,False,63,NONE,False,False,False,0.5263157895,0.03846153846,0.1605995717,0.75,0.2177340353,0.7822659647,0.0001386923292,0.0001955084991
The thing we need from TR::Node is the offsets.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.1232876712,0.04761904762,0.4,0.96,0.5018185814,0.4981814186,0.001953523523,1.0
"On my Ubuntu machine for example, I get this: CODE",Investigation and Exploration,True,50,MEMBER,False,False,False,0.25,0.1408450704,0.5467836257,0.75,0.4545783063,0.5454216937,7.597272067e-05,4.179191556e-05
Here is the output for the first 100 iterations (it is still too big for the gist)[output.text] URL ,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,0.5625,0.2647058824,0.8008130081,1.0,0.6038167374,0.3961832626,0.002100196138,0.008826555982
"If I want to use the f1 score as evaluation method, I have to cancel out the parallel execution by setting n_jobs = 1.",Investigation and Exploration,False,118,NONE,True,True,False,1.0,0.2371134021,0.01479289941,0.7142857143,0.0,1.0,0.0,5.796890697e-05
I'll provide a link to the build when it's ready.,Task Progress,False,49,CONTRIBUTOR,False,False,False,0.9090909091,0.05747126437,1.0,0.9852941176,0.798212252,0.201787748,6.67e-05,0.0007994877042
This will not apply to MH JCL code.,Investigation and Exploration,False,35,CONTRIBUTOR,False,False,False,0.6666666667,0.08695652174,1.0,0.2830188679,0.36603667,0.63396333,0.0001080772833,4.77e-05
Seconding bwesons's comment.,Social Conversation,False,28,NONE,False,False,False,0.1666666667,0.02362204724,0.1231671554,0.25,0.2151249515,0.7848750485,0.01902853319,0.002231038575
How many CPUs are in use in these runs for the different services respectively ?,Investigation and Exploration,False,80,CONTRIBUTOR,False,False,False,0.175,0.175,1.0,0.931372549,0.9666406206,0.03335937939,0.04562398057,0.02395737432
Tried again with a customized link https://ci.adoptopenjdk.net/view/Test_grinder/job/Grinder/3064/,Task Progress,False,98,NONE,True,False,False,1.0,0.07692307692,1.0,0.993006993,0.9722687603,0.02773123974,0.02407305416,0.1515981559
It is now fully working,Solution Discussion,False,23,NONE,False,False,False,0.1923076923,0.007235890014,0.504950495,1.0,0.08979967049,0.9102003295,0.01683649271,0.03567836101
**Where was this code generated?,Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.1612903226,0.1063829787,0.4814814815,0.7807692308,0.6986733294,0.3013266706,0.2919761514,0.1217072968
Updated results in the previous comment.,Task Progress,False,40,CONTRIBUTOR,True,False,False,1.0,0.09677419355,1.0,0.2616033755,0.1129178387,0.8870821613,0.4459959687,0.2646134818
hmm ... /#/ caused big faces of char(s),Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,1.0,0.04022988506,1.0,0.7352941176,0.773186039,0.226813961,2.33e-05,2.01e-05
Would that cause any issue?,Solution Discussion,False,27,CONTRIBUTOR,False,False,False,0.2941176471,0.078125,0.6666666667,0.4468085106,0.7598910366,0.2401089634,0.001158893425,0.0002837124983
"Observed in JDK17 CODE release at CODE
CODECODEmain' threw exception: java.lang.BootstrapMethodError: bootstrap method initialization exception
11:36:46  --------------------------------------------------
11:47:44  Test results: passed: 885; failed: 1
11:47:51  Report written to /home/jenkins/workspace/Test_openjdk17_j9_sanity.openjdk_s390x_linux_Personal/jvmtest/openjdk/report/html/report.html
11:47:51  Results written to /home/jenkins/workspace/Test_openjdk17_j9_sanity.openjdk_s390x_linux_Personal/aqa-tests/TKG/output_16317110381189/jdk_util_1/work
11:47:51  Error: Some tests failed or other problems occurred.
11:47:51  
11:47:51  jdk_util_1_FAILED
CODE`
Re-open.",Testing,True,683,MEMBER,True,False,False,1.0,0.902173913,0.5,0.07547169811,0.3061735033,0.6938264967,0.116554805,0.06814608357
Sample failure link:,Testing,False,20,CONTRIBUTOR,True,True,False,0.125,0.03225806452,0.4285714286,0.01158301158,0.0,1.0,0.0,0.03406420424
"Precisely looks this is the owner of the Monitor. 

CODE

Same as: https://github.com/eclipse/openj9/issues/8652#issuecomment-614666959

> this thread should be mutator thread initiated GC (and became GC Master Thread for this GC).",Solution Discussion,True,237,CONTRIBUTOR,False,False,False,1.0,0.3516483516,1.0,0.9405594406,0.8791814841,0.1208185159,0.001105363904,0.0006146901707
"For me this typically happens really quickly, between 2-40 core dumps get created before it hangs.",Bug Reproduction,False,98,NONE,True,False,False,0.4146341463,0.2266666667,0.6,0.7683615819,0.08541061734,0.9145893827,2.19e-06,2.98e-05
"Needed to do a build today and hit the issue again - those options are set but I still see no evidence of a core?
CODE",Solution Discussion,True,119,NONE,True,False,False,1.0,0.1954887218,1.0,0.1297709924,0.01249666222,0.9875033378,0.03656966316,6.54e-06
"Edit: Sorry, it totally works.",Social Conversation,False,30,NONE,False,False,False,0.3333333333,0.07462686567,0.5048543689,0.1666666667,0.4431919084,0.5568080916,0.01145704499,0.1250288844
It will be updated once it is done.,Task Progress,False,35,NONE,False,False,False,0.5333333333,0.1290322581,1.0,0.8987341772,0.7701023622,0.2298976378,0.1778324879,1.0
I see a 👍 on the post,Social Conversation,False,21,MEMBER,False,False,False,0.4666666667,0.0752688172,0.6666666667,0.1698841699,0.3239595955,0.6760404045,1.0,0.005733320402
"It also calls CODE which would've succeeded because 1. CODE returned true, and",Solution Discussion,True,78,CONTRIBUTOR,False,False,False,0.2258064516,0.2258064516,0.4166666667,0.4590163934,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"Main-line/Out-of-line
Within the CHelper evaluators, within J9TreeEvaluator.cpp compilation can take two routes Main-Line or Out-of-line.",Solution Discussion,False,138,CONTRIBUTOR,True,False,False,0.1796875,0.1796875,0.6842105263,0.9444444444,0.3076445993,0.6923554007,0.1283873506,1.0
I would suggest removing it.,Investigation and Exploration,False,28,CONTRIBUTOR,False,False,False,0.2777777778,0.04807692308,1.0,0.7182320442,0.2975828095,0.7024171905,9.84e-05,8.01e-05
@jimfleming - like your approach (we're both using ffi ... I did it to get started quickly).,Solution Discussion,False,92,NONE,False,False,False,0.8823529412,0.2054794521,0.1314655172,0.5,0.02901004364,0.9709899564,0.01651736955,0.001724506158
When parsing things like social media where there are many tokens that occur only once (e.g. links) storing them in the StringStore causes memory bloat.,Investigation and Exploration,False,152,NONE,True,False,False,0.6097560976,0.4032258065,0.1321585903,0.5,0.01937624511,0.9806237549,0.02003548886,0.01526654747
Oh good timing!,Social Conversation,False,15,NONE,False,False,False,0.04918032787,0.0447761194,0.07073509015,0.07142857143,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"Repro rate with following command was 3/4:

CODE

Console:

CODE",Bug Reproduction,True,70,CONTRIBUTOR,False,False,False,1.0,0.0977443609,1.0,0.8091603053,0.8172894479,0.1827105521,0.003360486467,0.002753056363
Please reopen if it reoccurs.,Action on Issue,False,29,MEMBER,False,False,False,0.3846153846,0.05263157895,0.4947368421,1.0,0.1763449807,0.8236550193,0.03531242178,0.02657364924
"Would love to replace standard vector file and in-memory loading with my own Redis (or any other ""shared-memory-system"") interface to allow a distributed cluster of spacy nodes to share the same ""file"".",Expected Behaviour,False,202,NONE,True,True,False,1.0,0.9210526316,0.02919708029,0.8,0.0,1.0,0.0,0.003237761122
"not sure if that's the same issue

More diagnostic information is required to confirm that the CODE and CODE hangs are the same.",Investigation and Exploration,True,130,CONTRIBUTOR,False,False,False,0.4,0.32,0.1428571429,0.4124293785,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
Not consider this anymore.,Investigation and Exploration,False,26,CONTRIBUTOR,False,False,False,0.08333333333,0.02298850575,0.6,0.5073529412,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
@lhlmgr The way i understand that example is that iterator needs to be reinitialized every time you switch between train and validation.,Solution Discussion,False,136,NONE,False,False,False,0.7857142857,0.328358209,0.5839112344,0.25,0.4658107767,0.5341892233,0.02260310577,0.1856733495
ie. CODE doesn't have any java code that throw an exception.,Investigation and Exploration,True,60,CONTRIBUTOR,False,False,False,0.55,0.1195652174,0.6666666667,0.2955974843,0.3660520758,0.6339479242,4.77e-05,0.0001236847171
"The only way to have a problem here is if you hold onto the integer representation, release all of the documents, and later want to recover the string.",Solution Discussion,False,151,MEMBER,False,False,False,0.7,0.4516129032,0.422907489,0.9722222222,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
I kinda had wanted to deprecate it but then we didn't...,Social Conversation,False,56,MEMBER,False,False,False,0.7333333333,0.171875,0.7426470588,1.0,0.1243761474,0.8756238526,0.002792339292,9.071848224e-05
"I think the CODE method isn't actually to blame here â rather, it reports on an error condition thrown by the CODE method, while the CODE method fails silently in the same situation.",Investigation and Exploration,True,182,MEMBER,False,False,False,0.7857142857,0.3473684211,0.2947368421,0.1111111111,0.1453780739,0.8546219261,0.07593267665,0.03116866066
"Repro rate with following command was 1/2 (killed early to make progress):

CODE

Console:

CODE

Looks like we're basically just down to inlining now.",Bug Reproduction,True,159,CONTRIBUTOR,False,False,False,1.0,0.2180451128,0.5,0.8829516539,0.8417096079,0.1582903921,0.001691893138,0.03111464651
@sguada SCREEN_NAME 90CODE,Usage,True,26,NONE,False,False,False,0.1363636364,0.01153846154,0.7301927195,0.5,0.6156738908,0.3843261092,0.003360169166,0.00136237059
Once we have more information this could lift the blocker status.,Action on Issue,False,65,CONTRIBUTOR,False,False,False,0.3928571429,0.1182795699,1.0,0.3513513514,0.3836938821,0.6163061179,0.000634134332,0.0045844182
# +1,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.5301724138,1.0,0.6121150438,0.3878849562,0.01192259641,0.03009940477
@andrewcraik here is the latest log where the exception occurred.,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,0.303030303,0.07518796992,0.1666666667,0.6157760814,0.6090585554,0.3909414446,0.03283597098,0.001209954986
"Hence, I think we should make OpenMP support on Windows optional for now.",Solution Discussion,False,73,CONTRIBUTOR,False,False,False,0.5652173913,0.08496732026,0.9453376206,1.0,0.201368343,0.798631657,0.00591569739,0.00137409764
I am totally new to this.,Social Conversation,False,25,NONE,False,False,False,0.2727272727,0.008683068017,0.8283828383,0.25,0.2924079275,0.7075920725,0.008897341264,0.000137172437
I was thinking Spark because of the benchmarking on this [blog post] URL  suggested I'd be at it for about half a year (although I also may have misinterpreted the results).,Solution Discussion,False,173,CONTRIBUTOR,False,False,False,1.0,0.2156862745,0.6173633441,0.6666666667,0.1671414152,0.8328585848,4.685962093e-06,7.983490974e-07
"The benefit of sticking with ""multiheap(:32)"" is better perf out of the box, and a user may not necessarily go looking for how to change the environment to get better perf.",Solution Discussion,False,172,CONTRIBUTOR,True,False,False,1.0,0.5,0.8571428571,0.5696202532,0.4797361547,0.5202638453,0.003593754102,0.003640426233
Which objects inside of CODE's state are easy to serialize and which ones aren't?,Solution Discussion,True,81,CONTRIBUTOR,False,False,False,0.875,0.09150326797,0.08681672026,1.0,0.003550731773,0.9964492682,0.004147527693,5.522493104e-05
I don't use pylab.,Observed Bug Behaviour,False,18,NONE,False,False,False,0.1818181818,0.0412371134,0.2278106509,0.8333333333,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
"If you are all using compiled version on master branch, I believe that we are the same issue caused by the [recent commit] URL .",Investigation and Exploration,False,128,NONE,False,False,False,0.6486486486,0.03473227207,0.04620462046,0.2222222222,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
I should admit passing of the list use to be broken but I fixed it about eight years ago.,Social Conversation,False,89,CONTRIBUTOR,False,False,False,0.2087912088,0.2087912088,0.8214285714,0.7377622378,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"And I can't shuffle the filenames again and create a new dataset from them, once inside the session or am I wrong?",Workarounds,False,114,NONE,False,False,False,0.5945945946,0.328358209,0.7850208044,0.625,0.6090011473,0.3909988527,0.000271284095,0.000261613555
"@kratzert it is certainly possible to re-shuffle the filenames for every epoch, I'm doing exactly that for my own training.",Workarounds,False,123,NONE,False,False,False,1.0,0.3134328358,0.8030513176,0.3333333333,0.6147419151,0.3852580849,0.02902485329,0.001498933696
we should not have merged GC maps belonging to catch blocks.,Solution Discussion,False,60,CONTRIBUTOR,True,False,False,0.3793103448,0.171875,0.75,0.4255319149,0.759681792,0.240318208,0.005380920094,0.001158893425
Would disabling write access after the code is produced allow execution?,Solution Discussion,False,72,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.5,0.6838235294,0.7729156893,0.2270843107,1.18e-05,7.3e-05
4.         set CODE to appropriate value.,Usage,True,41,NONE,False,False,False,0.2413793103,0.02692307692,0.9421841542,0.5294117647,0.7995481369,0.2004518631,0.3206669123,0.722664447
@asimshankar Would like to know that in your above comment you mean that we should downgrade cuda to 9.0 and tensorflow 1.5 doesn't work with cuda 9.1 ?,Solution Discussion,False,152,NONE,False,False,False,1.0,0.2125984252,0.08211143695,0.3333333333,0.1360287232,0.8639712768,0.05368173129,0.001267484295
We provide guarantee to the user that if he provides the same data again with warm_start=true he will get the same results (just faster).,Solution Discussion,False,137,MEMBER,False,False,False,0.3731343284,0.3521126761,0.4094202899,0.5,0.03980022095,0.960199779,0.0001056298833,3.439112479e-06
Does the following CODE easily pass for you?,Solution Discussion,True,44,MEMBER,False,False,False,0.8,0.1176470588,0.8699186992,0.6666666667,0.6329218471,0.3670781529,0.02547446062,0.02946766485
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3556034483,1.0,0.4034789996,0.5965210004,0.123263681,0.2128875408
"The relevant snippet is:
CODE

I don't see anything incorrect in the generated code.",Investigation and Exploration,True,87,CONTRIBUTOR,False,False,False,0.1720430108,0.1720430108,0.6666666667,0.3976833977,0.3937305493,0.6062694507,0.03688423691,0.3568236584
https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/143/,Testing,False,95,CONTRIBUTOR,True,True,False,0.06666666667,0.01492537313,1.0,0.02312138728,0.0,1.0,0.0,8.68e-08
http://scikit-learn.org/stable/faq.html#why-do-i-sometime-get-a-crash-freeze-with-n-jobs-1-under-osx-or-linux for more details.,Investigation and Exploration,False,127,MEMBER,False,False,False,0.1481481481,0.0412371134,0.3579881657,0.6,0.8123980581,0.1876019419,2.677933057e-05,1.887267362e-06
"It also occurred to me  it would’ve been segmentation fault, not illegal instruction.",Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,1.0,0.08620689655,0.6666666667,0.1875,0.7325733414,0.2674266586,7.65e-05,0.004173448668
We didn't do that either.,Solution Discussion,False,25,CONTRIBUTOR,False,False,False,0.2631578947,0.0390625,0.8571428571,0.5555555556,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
"The documentation for CODE at [1] suggests that it ought to fail with CODE when the flags include CODE set at [2], but it seems to just ignore CODE as it's not listed as a supported flag (it lists only 'subset of the access permissions that apply to files').",Solution Discussion,True,258,CONTRIBUTOR,False,False,False,1.0,0.2816091954,0.5,0.6764705882,0.7729114737,0.2270885263,7.44e-06,1.18e-05
What I have tried and failed to accomplish is build from source.,Solution Discussion,False,64,NONE,True,False,False,0.3243243243,0.09448818898,0.706744868,0.7,0.5094864043,0.4905135957,0.02165076149,0.03664686068
How is this even possible ?,Solution Discussion,False,27,NONE,False,False,False,0.25,0.01923076923,0.8029978587,0.8,0.6241540904,0.3758459096,0.007173142915,0.07061844097
"There are some deeper explorations needed across other optimizations as @vijaysun-omr suggested, though not necessarily as part of this particular fix.",Investigation and Exploration,False,151,CONTRIBUTOR,False,False,False,1.0,0.2365591398,1.0,0.7915057915,0.6108952372,0.3891047628,0.001283189472,0.002338836625
"Looking through the remainder of the Unsafe methods, we can see that we tend use the underlying array evaluators.",Solution Discussion,False,113,CONTRIBUTOR,False,False,False,0.5,0.4042553191,0.3333333333,0.8884615385,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"The version of the rat plugin is current, and has been around for about a year.",Social Conversation,False,79,NONE,True,False,False,0.5,0.1203007519,1.0,0.1577608142,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
[1] https://github.com/eclipse/omr/pull/6208,Solution Discussion,False,44,MEMBER,True,False,False,0.2222222222,0.02173913043,1.0,0.4779874214,0.4977312427,0.5022687573,0.0002080991169,0.000454293798
Maybe somekind of cleaning of the environment that the launcher could do?,Solution Discussion,False,73,NONE,True,False,False,0.5454545455,0.1212121212,0.5,0.8912280702,0.9020662178,0.09793378223,0.00534555638,0.002496484253
Do you have an outlook for completion?,Solution Discussion,False,38,CONTRIBUTOR,True,False,False,0.5384615385,0.04794520548,1.0,0.7709497207,0.6555901245,0.3444098755,1.0,0.7369047902
Might I suggest updating the benchmarks in accordance with this API and vice versa?,Solution Discussion,False,83,NONE,False,False,False,0.3888888889,0.2089552239,0.5173370319,1.0,0.4587375589,0.5412624411,0.1250288844,0.003916059713
"6x, same JVMs, no failures
0.15: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/457
head: https://ci.eclipse.org/openj9/view/Test/job/Test-Grinder/462/",Testing,False,163,CONTRIBUTOR,True,False,False,1.0,0.1896551724,1.0,0.4311926606,0.02452352376,0.9754764762,0.006110333228,0.06240341433
"Most likely the J9Class that the J9Method belongs to was valid at some point, and since has been freed at some point.",Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,0.5945945946,0.2417582418,0.2,0.486013986,0.8536703555,0.1463296445,0.2634355634,0.0006108387286
"This is true, an ArraySet does normally allocate an array length of type int due to indexing limitations.",Solution Discussion,False,105,CONTRIBUTOR,False,False,False,0.4736842105,0.3829787234,0.2222222222,0.8807692308,0.7299060094,0.2700939906,0.01554507959,0.00748487997
It prints the squared norm of the gradient and the error at each iteration so we can see which part of the code is diverging.,Investigation and Exploration,False,125,CONTRIBUTOR,False,False,False,0.78125,0.3676470588,0.7967479675,0.8333333333,0.6038167374,0.3961832626,0.002100196138,0.008826555982
"The crash doesn't happen with our agent in the stack trace, but it happens only if the AGCT functionality is being used.",Investigation and Exploration,False,120,NONE,True,True,False,0.431372549,0.2115384615,0.5833333333,0.03867403315,0.0,1.0,0.0,0.01118041169
"That would be great, I currently don't have the cycles to do that myself.",Social Conversation,False,73,MEMBER,False,False,False,1.0,0.02026049204,0.3696369637,0.6666666667,0.07180384202,0.928196158,3.547972203e-05,0.003490777468
"First of all - deeplearn.js is a library that only mirrors to some extent ""the style of TensorFlow API"" and operates purely in the browser and the other would be a direct API to whole Tensorflow goodness.",Potential New Issues and Requests,False,204,NONE,False,False,False,1.0,0.4931506849,0.6551724138,0.375,0.6969145374,0.3030854626,0.0871107993,0.1143443634
Typically it shuffles the data before calling partialfit.,Solution Discussion,False,57,MEMBER,False,False,False,0.6153846154,0.1126760563,0.5072463768,0.6666666667,0.04251459753,0.9574854025,1.684463255e-06,1.965207131e-06
"If the maven project is correctly setup then m2e should properly select the right JRE to use (i.e. it should pick a JRE...

Already tried this way to let maven to chose the JDK11 and OpenJ9 still works good.",Investigation and Exploration,False,209,CONTRIBUTOR,False,False,False,1.0,0.404040404,0.5,0.5368421053,0.1984085961,0.8015914039,0.003898730278,0.003371874835
I edited the OpenJ9 project launch config to switch between these two to try them both.,Investigation and Exploration,False,87,NONE,True,False,False,0.3265306122,0.1616161616,0.3333333333,0.3578947368,0.1194799462,0.8805200538,0.004838964607,0.001815624911
"I'd share the VM somehow, but 

a) its a really big file (as VM images tend to be)
b) I'd have to spend some time to make sure all the secret stuff like github access tokens are removed from it first.",Investigation and Exploration,False,203,NONE,True,False,False,1.0,0.4545454545,0.8571428571,0.4140350877,0.1209219988,0.8790780012,0.003294872886,0.07075263326
The without Peeking version was delivered early Jan so by default builds after Jan shouldn't have this issue.,Task Progress,False,109,CONTRIBUTOR,False,False,False,0.7826086957,0.1353383459,0.6,0.9745547074,0.950729363,0.04927063696,0.001789180059,0.03518393768
I've been trying to think of a way of improving the assert message but haven't found one yet.,Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,0.5757575758,0.3064516129,1.0,0.08196721311,0.1024999691,0.8975000309,0.0006590192892,0.003777918314
will try to reproduce with minimal code. CODE,Bug Reproduction,True,45,NONE,False,False,False,1.0,0.0824742268,0.6331360947,1.0,0.8491379548,0.1508620452,3.508330696e-05,0.000108726466
"no, not aware of that.",Social Conversation,False,22,CONTRIBUTOR,False,False,False,0.625,0.08064516129,0.3333333333,0.03797468354,0.001432063395,0.9985679366,0.004372595291,0.003310804307
Won't be caused by this.,Investigation and Exploration,False,24,CONTRIBUTOR,False,False,False,0.2631578947,0.08064516129,0.5,0.8415300546,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
All I require is that I can always (regardless of FSD) locate an accurate stack map at the catch point which contains the correct bytecode PC.,Solution Discussion,False,142,CONTRIBUTOR,False,False,False,0.40625,0.40625,0.9090909091,0.1418439716,0.000716727624,0.9992832724,0.003714710253,0.00734286415
We are tying to test if they are the same.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.7692307692,0.15625,0.5,0.8085106383,0.9556814013,0.04431859867,0.01198084219,0.01558254832
@eaplatanios one relevant PR for zip/unzip is https://github.com/tensorflow/tensorflow/issues/10837,Solution Discussion,False,99,NONE,False,False,False,1.0,0.1343283582,0.9306518724,1.0,0.9572585742,0.04274142579,0.001667404682,0.08326284019
We can try to find a balance between parameters that matter and parameters that don't.,Solution Discussion,False,86,CONTRIBUTOR,True,False,False,0.3658536585,0.102739726,0.75,0.2905027933,0.02874696135,0.9712530387,0.0006509267927,0.009905059007
"but you don't have accesses at all, no help.",Social Conversation,False,44,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.8566176471,0.7733855658,0.2266144342,2.66e-05,1.04e-05
"Btw, I wouldn't hash CODE and CODE .",Solution Discussion,True,36,MEMBER,False,False,False,0.4666666667,0.0985915493,0.0615942029,0.5,0.0214071977,0.9785928023,2.210858022e-06,0.003908726797
"Since this is related to BLAS, my hunch is that something goes wrong in this [line](https://github.com/scikit-learn/scikit-learn/blob/46fc1be145bf952a916ef5abd06efec105105c2e/sklearn/manifold/_barnes_hut_tsne.pyx#L660) causing the gradient to have some non-finite values.",Investigation and Exploration,False,271,MEMBER,False,False,False,1.0,0.4507042254,0.6198830409,1.0,0.4572983615,0.5427016385,0.001200894845,0.004204377413
"In terms of API, one could (roughly) implement such ensembles in the following way:",Solution Discussion,False,83,MEMBER,False,False,False,0.4666666667,0.1971830986,0.8188405797,0.2727272727,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
Are the instructions from https://github.com/eclipse/openj9/issues/7684#issuecomment-575807566 still valid to reproduce?,Investigation and Exploration,False,120,CONTRIBUTOR,False,False,False,0.375,0.06766917293,0.4,0.4681933842,0.5408860557,0.4591139443,0.002429720419,0.000914006537
"On MacOS, that had zero effect ie
CODE
^^^ that first line is our app starting up

On linux (where I did also see issues)
CODE",Investigation and Exploration,True,131,NONE,True,False,False,1.0,0.2255639098,1.0,0.2086513995,0.02091116901,0.979088831,0.01135477352,0.03206912113
"They are not, but which one is incorrect?",Solution Discussion,False,41,CONTRIBUTOR,False,False,False,0.6153846154,0.125,0.6666666667,0.8156028369,0.9556814013,0.04431859867,0.01198084219,0.01558254832
A simple way to achieve this is to extend the CODE so that the mapping is split in two.,Solution Discussion,True,87,MEMBER,False,False,False,0.475,0.3064516129,0.3744493392,0.6666666667,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"This portion of code in routine TR:CompilationInfo::compilationEnd() might be worth a look: especially CODE

CODE",Investigation and Exploration,True,115,CONTRIBUTOR,False,False,False,1.0,0.08994708995,1.0,0.24,0.3241275036,0.6758724964,0.02292741294,0.002117006954
Thanks for doing the runs.,Social Conversation,False,26,CONTRIBUTOR,False,False,False,0.25,0.03759398496,0.2857142857,0.5750636132,0.5844415189,0.4155584811,9.4e-05,0.001518166493
please try use reactions button --> http://www.geekwire.com/2016/github-adds-reactions-keep-comments-track/ no more +1 comments xD,Social Conversation,False,130,NONE,False,False,False,1.0,0.1643835616,0.2435344828,1.0,0.1489326993,0.8510673007,0.02199475699,0.3160527134
"Closing, since Java 11 Windows is now compiling with MSVC 2017.",Action on Issue,False,63,CONTRIBUTOR,True,False,True,1.0,0.09322033898,1.0,1.0,1.0,0.0,0.2816210502,0.0
"I do not see any failures in the 3x grinder links you shared (450/451), can you share a link to the grinders that reported problems?",Social Conversation,False,132,CONTRIBUTOR,False,False,False,1.0,0.4310344828,1.0,0.3577981651,0.02114326685,0.9788567331,0.0002379509176,0.0003140794877
"Clearly the RAT plugin is the cause, yet I've never seen this with hotspot, nor with earlier J9 builds which I've been using intermittently since macOS came out from adoptopenjdk.",Investigation and Exploration,False,179,NONE,True,False,False,1.0,0.2406015038,0.8333333333,0.155216285,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
Is it possible for us do this in anyway?,Contribution and Commitment,False,40,NONE,False,False,False,0.2432432432,0.07086614173,0.4838709677,0.75,0.4048451,0.5951549,0.1167490581,0.001195753854
"Haven't seen this in a while, assuming fixed.",Task Progress,False,45,CONTRIBUTOR,True,False,False,1.0,0.1379310345,1.0,0.4495412844,0.1348199682,0.8651800318,0.5740636644,1.0
"I have some work to do on the PR  URL , so don't review that yet in detail (you can look at it to have an idea of what we propose however).",Contribution and Commitment,False,139,CONTRIBUTOR,True,False,False,0.6153846154,0.5,0.9558823529,0.5714285714,0.8867760579,0.1132239421,0.6154659147,0.1194514257
"However, multiheap RSS  have two cases:
    2a) intensive multi-thread malloc/free:  it is more than 5x of no-setting RSS (e.g.  this PR test case)
    2b) sporadic malloc/free:  no impact ... in the same ballpark as no-setting (e.g. DT7 test)",Investigation and Exploration,False,245,CONTRIBUTOR,False,False,False,0.96,0.7741935484,0.3333333333,0.9113924051,0.9167594621,0.08324053794,0.01000533813,0.01893430022
"More specifically, we currently have a use case where we employ two queues; an outer one, using a string_input_producer (with shuffling), where each string denotes/points to a ""data set"", and the inner queue is then produced by generating a variable amount of samples from each ""data set"".",Motivation,False,289,CONTRIBUTOR,False,False,False,1.0,0.7164179104,0.04438280166,0.1666666667,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
Perhaps we need to check whether a field is static before worrying about its offset.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,1.0,0.1271186441,0.8,0.4121212121,0.418446316,0.581553684,0.006630634685,0.00192059444
"We never reproduced this problem partially because we were using the recent version of STS4 (sts-4.0.2.CI-B1373) (the older one was already removed on the downloading site)

@kdvolder ,  could you please try with the latest version of STS4 to see whether the issue is reproducible on your VM image?",Bug Reproduction,False,300,CONTRIBUTOR,False,False,False,0.9272727273,0.5151515152,1.0,0.8526315789,0.803200419,0.196799581,0.3518178539,0.2306492075
"I tried to read it but there is only the logs after iteration 200 (""QuadTree"" is way too verbose and I think we lose the beginning as the log growth too big).",Investigation and Exploration,False,158,CONTRIBUTOR,False,False,False,1.0,0.4705882353,0.7845528455,0.3333333333,0.6038167374,0.3961832626,0.002100196138,0.008826555982
We shouldn't enable the feature by default until this has been resolved.,Solution Discussion,False,72,CONTRIBUTOR,True,False,False,0.48,0.08219178082,0.5,0.8770949721,0.9683408493,0.03165915068,0.01210021257,4.2e-05
A GC occurs on the client and moves the object.,Investigation and Exploration,False,47,MEMBER,False,False,False,0.2857142857,0.05291005291,0.8,0.8742857143,0.4980531694,0.5019468306,0.09504926646,0.001840119827
"I am only starting to read into the new API, but I want to share two problems that I had with the old Input Queues in concurrence with using MonitoredSession with SessionRunHooks.",Motivation,False,179,NONE,False,False,False,0.5245901639,0.4776119403,0.6047156727,0.1,0.5012181902,0.4987818098,0.02428476177,0.003761840049
"So I think you could implement your logic for sampling from a ""data set"" in one of these CODE functions.",Usage,True,104,CONTRIBUTOR,True,False,False,0.4347826087,0.2985074627,0.06796116505,0.875,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
"I think he is right, that extending the documentation and providing better tutorials is highly important.",Motivation,False,105,NONE,False,False,False,0.5714285714,0.2388059701,0.2995839112,0.8571428571,0.2770987131,0.7229012869,0.2860540634,0.003376036402
I know there are multiple ways of approaching this however I strongly recommend node-gyp for performance.,Solution Discussion,False,105,NONE,False,False,False,0.68,0.2328767123,0.07112068966,0.6666666667,0.001454209969,0.99854579,0.004261247633,0.002175772592
I think the root cause for unresolved external symbol  to JVM_BeforeHalt/JVM_AreNestMates is that these natives not exported via **j9vm/module.xml**.,Investigation and Exploration,False,149,CONTRIBUTOR,False,False,False,0.8148148148,0.186440678,0.2,0.8424242424,0.6154962774,0.3845037226,0.01905847349,0.0312575819
"Still no luck to reproduce this, but based on analysis around stack trace seen from https://github.com/eclipse/openj9/issues/12224#issuecomment-805125591 I have made an attempt to fix Concurrent Scavenger aspect of it (but could be more than just that).",Solution Discussion,False,253,CONTRIBUTOR,False,False,False,1.0,0.4666666667,0.5,0.9152542373,0.365168355,0.634831645,0.05174676994,0.005131592796
"So, we're legitimately going to need to handle the possibility a null class chain.",Solution Discussion,False,82,CONTRIBUTOR,False,False,False,0.3043478261,0.2258064516,1.0,0.7595628415,0.9240498584,0.07595014165,0.1265062135,0.2372754111
Please share your results :),Social Conversation,False,28,NONE,False,False,False,0.08771929825,0.01923076923,0.3426124197,1.0,0.2839932351,0.7160067649,3.449553176e-05,0.07063994994
"This means we're expecting to be able to unpack an array of ints and understand some of them as strings, without ties to a particular CODE object.",Solution Discussion,True,146,MEMBER,False,False,False,0.54,0.435483871,0.5594713656,0.4285714286,0.2188215168,0.7811784832,0.0010422294,0.002309046196
"The client is executing this code:
CODE

with the CODE received from the server.",Investigation and Exploration,True,83,CONTRIBUTOR,True,False,False,1.0,0.08465608466,0.5,0.09142857143,0.1341075982,0.8658924018,0.0001651389588,5.38e-05
"When it hangs, is it with high cpu or idle?",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,1.0,0.1492537313,1.0,0.0782122905,0.001532594253,0.9984674057,0.0001379039292,0.0001732418111
This gives: CODE,Expected Behaviour,True,16,NONE,False,False,False,0.1071428571,0.046875,0.7867647059,0.75,0.2567040608,0.7432959392,0.02304981706,0.003308173532
"Anyhow... from the looks of things, it's all working as it should for you.",Expected Behaviour,False,74,NONE,True,False,False,0.7777777778,0.1414141414,1.0,0.2140350877,0.1140182149,0.8859817851,0.003967626759,0.002853124861
Take a look at the documentation here [here](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/data#creating-an-iterator).,Usage,False,144,NONE,False,False,False,1.0,0.2537313433,0.7101248266,0.6666666667,0.5518003453,0.4481996547,0.002095453319,0.004343090399
Running the test in https://github.com/eclipse/openj9/issues/12224#issuecomment-805239891 I was able to reproduce the issue with the old java very quickly.,Testing,False,155,NONE,True,False,False,0.6428571429,0.24,0.75,0.9378531073,0.3683619523,0.6316380477,0.005131592796,0.01360883005
Okay I think I misread and misunderstood something earlier.,Social Conversation,False,59,CONTRIBUTOR,False,False,False,0.25,0.04761904762,0.25,0.8228571429,0.4505337598,0.5494662402,0.002313600952,0.0001676222515
"Besides the OpenJ9 change to compile with xlc 13, this requires the harfbuzz fix which was applied to openjdk12 to be applied to openjdk13.",Solution Discussion,False,139,CONTRIBUTOR,False,False,False,1.0,0.1379310345,0.2222222222,0.9007352941,0.7942021981,0.2057978019,0.006755954606,0.002545177611
"Also, I managed to finally get a tracefile for compareAndSwapObject.",Task Progress,False,68,NONE,True,False,False,0.3571428571,0.1492537313,0.5,0.4916201117,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2456896552,1.0,0.1664974967,0.8335025033,0.3160527134,0.005033424479
"This is surprising, I wonder if the usage can be reduced.
CODE
344,595 bytes per allocation on average.",Investigation and Exploration,True,105,CONTRIBUTOR,True,False,False,1.0,0.3225806452,1.0,0.6624472574,0.4822563491,0.5177436509,0.0007234180335,0.0007438370909
Yes i did the same thing.,Social Conversation,False,25,NONE,False,False,False,0.5454545455,0.008683068017,0.8085808581,0.25,0.2900238703,0.7099761297,4.604057575e-05,0.0009023003557
@jdmcclur your thoughts on the above stack trace ?,Contribution and Commitment,False,50,CONTRIBUTOR,False,False,False,1.0,0.1,1.0,0.5735294118,0.5914685961,0.4085314039,0.0001232375222,0.3672811628
So I installed B1373 & followed the same steps before to import/launch OpenJ9.zip on both a new fyre Windows machine and the original VM image.,Investigation and Exploration,False,143,CONTRIBUTOR,False,False,False,0.3246753247,0.2525252525,0.25,0.8631578947,0.9005578376,0.09944216237,0.1143762639,0.00534555638
"If people think this would be a useful addition I would be willing to put together a PR, it seems like it should be straightforward to implement and add tests/docs for.",Contribution and Commitment,False,168,CONTRIBUTOR,True,True,False,1.0,0.4507042254,0.02536231884,1.0,0.0,1.0,0.0,0.02323685476
-         prefetching is totally parallel and can be done at any/multiple machine,Solution Discussion,False,81,NONE,False,False,False,0.4193548387,0.1940298507,0.3633841886,0.7272727273,0.2978770854,0.7021229146,0.001143668596,0.01002173327
The experiment above was done with initialOptLevel=noOpt (disableInlining also remained on the command line).,Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,1.0,0.1875,0.5,0.887254902,0.9562543243,0.04374567572,0.002453151618,0.01999637537
"After making sure CODE loaded up, the error disappeared in the virtual env with CODE.",Investigation and Exploration,True,85,NONE,False,False,False,0.4545454545,0.2112676056,0.7339181287,0.4444444444,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
"When using CODE, this is very simple, and this is what I'm used to.",Motivation,True,67,NONE,False,False,False,0.28,0.2089552239,0.427184466,0.4,0.4000653979,0.5999346021,0.1106294504,0.0001180823828
Is there something that STS could do in its Boot App launcher to avoid this problem?,Solution Discussion,False,84,NONE,True,False,False,0.7272727273,0.1616161616,0.25,0.8877192982,0.9020662178,0.09793378223,0.00534555638,0.002496484253
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4418103448,1.0,0.513582866,0.486417134,0.009961501816,0.1876779255
Others that have been hitting this: https://discussions.udacity.com/t/assignment-5-error-in-the-main-code-valueerror-array-must-not-contain-infs-or-nans/178187/7,Observed Bug Behaviour,False,161,NONE,False,False,False,0.2592592593,0.0985915493,0.5029239766,1.0,0.4524825225,0.5475174775,0.2109192312,0.004397699618
There'snothing about the average=macro option in 0.14 that suggests it should bemore likely to hang than the default average (weighted).,Investigation and Exploration,False,136,MEMBER,False,False,False,1.0,0.2164948454,0.08875739645,0.6,0.0003221026152,0.9996778974,8.580113407e-05,9.25754306e-06
"The one that it appears to have hung on, and the one from the CODE.~

edit:
In my original testing, If I do a CODE at that point, then I get two additional dumps.",Testing,True,165,NONE,True,False,False,1.0,0.48,0.6,0.8248587571,0.08547570942,0.9145242906,3.24e-05,0.0002356611565
Ah then there is something I do not understand.,Social Conversation,False,47,MEMBER,False,False,False,1.0,0.1323529412,0.9105691057,0.5,0.6431157411,0.3568842589,0.0002096052377,0.002426517307
Seems to be failing in the j9shr component.,Investigation and Exploration,False,43,CONTRIBUTOR,True,False,False,0.380952381,0.1379310345,0.6,0.9266055046,0.9986823435,0.001317656456,0.002428514487,0.005742138251
"This is still failing although the build contains #14071
 https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_0/47/

@jdmpapin : can you take a look at the crash, at least to confirm whether it is or isn't related to the original problem?",Testing,False,295,CONTRIBUTOR,False,False,False,1.0,0.376344086,0.5,0.9806949807,0.9848191545,0.01518084546,0.007389530069,0.03826814184
"Thus CODE is a very cheap operation, any reason why it has to live on the server side?",Investigation and Exploration,True,86,CONTRIBUTOR,False,False,False,0.3913043478,0.09523809524,0.75,0.8057142857,0.4493209598,0.5506790402,0.0005637074234,0.0001208535739
"@rth could the CODE failure be because of floating point error (i.e. a small number was in Xt.data instead of 0, and so was not removed)?",Potential New Issues and Requests,True,137,MEMBER,False,False,False,1.0,0.3823529412,0.2276422764,1.0,0.3510789777,0.6489210223,0.06296237465,7.769551645e-05
"Since we still need to figure what's really going in, this issue should pushed back to the next release.",Action on Issue,False,104,CONTRIBUTOR,False,False,False,1.0,0.3064516129,1.0,0.3114754098,0.4967398914,0.5032601086,0.01288492485,0.6535899155
The vlog1 and vlog2 was then purely with cmd and no debuggers attached or anything.,Investigation and Exploration,False,83,NONE,True,False,False,0.625,0.1094890511,0.8333333333,0.2230483271,0.002019598648,0.9979804014,0.0001337584893,6.92e-05
"What is the difference between java11 and java8, re the environment?",Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,0.8461538462,0.1774193548,0.5,0.3924050633,0.2965277651,0.7034722349,0.003121198774,0.006977483614
a solution not viable for any reasonable size learning problems because of the extensive data transfer cost (time) between the processes.,Solution Discussion,False,137,NONE,False,False,False,0.5384615385,0.2876712329,0.7413793103,0.4545454545,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
Using XLA:GPU with CUDA 9 and CUDA 9.1 results in garbage results and/orCUDA_ILLEGAL_ADDRESS failures.,Motivation,False,102,NONE,False,False,False,0.3902439024,0.125984252,0.4340175953,0.2222222222,0.380459606,0.619540394,0.0006322631694,0.001605430808
"Thanks @hangshao0 

@0xdaryl",Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.08,0.06451612903,0.25,0.868852459,0.9695596396,0.03044036043,7e-05,0.07716070228
What fresh hell is this :-/,Social Conversation,False,27,MEMBER,False,False,False,1.0,0.09375,0.5330882353,1.0,0.1224141434,0.8775858566,0.2040466138,7.60733461e-05
I hope that the docker test helps the reproduction!,Social Conversation,False,51,NONE,True,False,False,0.6428571429,0.12,0.5,0.8700564972,0.08570829787,0.9142917021,7.46e-05,0.3961122692
"Longer story: 
1) the option is to be renamed soon  URL 
2) we'll likely introduce another option that will be documented just to enable/disable the feature
3) Balanced GC is not covered yet
4) we need to check/test if there is a race at startup between expand-due-to-hints vs first GC, and  potentially take some remedies
5) we continuously update the hints on every restart.",Solution Discussion,False,381,CONTRIBUTOR,False,False,False,1.0,0.5205479452,0.2222222222,0.4748603352,0.238226106,0.761773894,0.0005830751334,0.0001494982185
Is there a good and bad build wherein there are only JIT changes?,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,1.0,0.224137931,0.6666666667,0.1009174312,0.02062527793,0.9793747221,0.0002366406152,0.0009727685091
"Aha, that clarifies our misunderstanding :-)",Social Conversation,False,44,CONTRIBUTOR,True,False,False,0.1363636364,0.09375,0.2389705882,0.07142857143,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
I'm getting inlining logs for the two runs on Linux to see if I can spot where and why they diverge.,Investigation and Exploration,False,100,MEMBER,False,False,False,0.512195122,0.3134328358,1.0,0.612716763,0.0121839659,0.9878160341,0.0002903767183,0.005263769541
"What happens with -Xint?

Test Passes with CODE, and passes allocating smaller memory segments.",Investigation and Exploration,True,97,CONTRIBUTOR,False,False,False,1.0,0.3191489362,1.0,0.5192307692,0.4576974531,0.5423025469,0.0009359677821,0.01461769866
Running it on a pretty small input is taking a while.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.5789473684,0.07189542484,0.6398713826,0.4285714286,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5193965517,1.0,0.6112562198,0.3887437802,0.002226454305,0.000183250911
**Error**:CODE,Bug Reproduction,True,14,NONE,False,False,False,0.05555555556,0.01408450704,0.8362573099,0.8666666667,0.6456610805,0.3543389195,1.0,4.677373331e-05
"Now, I can run -version at least:

milan:[zlwang] j9.64/bin/java -version
openjdk version ""13-internal"" 2019-09-17
OpenJDK Runtime Environment (build 13-internal+0-adhoc.jenkins.openj9-openjdk-jdk13)
Eclipse OpenJ9 VM (build aixxlc16-2f6383c98, JRE 13 AIX ppc64-64-Bit Compressed References 20190923_000000 (JIT enabled, AOT enabled)
OpenJ9   - 2f6383c98
OMR      - 69029bae
JCL      - b4b82f558d based on jdk-13+33)",Solution Discussion,False,424,CONTRIBUTOR,False,False,False,1.0,0.3850574713,1.0,0.5625,0.7687524388,0.2312475612,0.006331049572,0.0002354283384
On the other hand it's harsh to assume we always need to write out the state.,Solution Discussion,False,77,MEMBER,False,False,False,0.347826087,0.1045751634,0.3954983923,0.4210526316,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
Good question.,Social Conversation,False,14,MEMBER,False,False,False,0.01307189542,0.01307189542,0.09003215434,0.1428571429,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
The problem is that I don't know if these results are going to be the best for my whole dataset.,Bug Reproduction,False,96,NONE,False,False,False,0.5263157895,0.206185567,0.9822485207,0.75,0.9999975983,2.401746992e-06,4.823458058e-05,1.350886112e-06
"Since TensorFlow 1.5 is expecting Cuda 9.0 ( NOT 9.1 ), as well as cuDNN 7",Solution Discussion,False,74,NONE,False,False,False,1.0,0.1102362205,0.1495601173,1.0,0.2153063504,0.7846936496,0.002231038575,0.01329083736
"-         Under the hood, English could broadcast itself (requiring pickling), or just load itself locally on each worker.",Solution Discussion,False,122,NONE,False,False,False,0.4186046512,0.1176470588,0.2379421222,0.5789473684,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
@fengxue-IS Can you provide an update on the current approach / next steps?,Task Progress,False,75,MEMBER,False,False,False,0.8666666667,0.1413043478,0.5,0.6037735849,0.5582425947,0.4417574053,0.00069427907,0.0001275446201
Has there been any progress on this issue?,Task Progress,False,42,NONE,True,False,False,0.5714285714,0.1066666667,0.5,0.8813559322,0.3322249522,0.6677750478,0.3961122692,0.0006376198792
The only way this can get fixed is if people having the issue invest some time in debugging the problem further.,Contribution and Commitment,False,112,MEMBER,False,False,False,1.0,0.2957746479,0.5116959064,1.0,0.4532374494,0.5467625506,0.004397699618,0.005172233894
"But there's also a rolling buffer, in which strings are interned, and then later freed.",Solution Discussion,False,87,MEMBER,False,False,False,0.375,0.2419354839,0.3832599119,0.7222222222,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
I'm going to reopen this item while we investigate.,Action on Issue,False,51,CONTRIBUTOR,False,False,False,0.375,0.140625,1.0,0.7872340426,0.9535181949,0.04648180506,0.0005193381324,0.01198084219
"[system_core_java_stacktrace_origin.txt] URL 
CODE",Bug Reproduction,True,51,CONTRIBUTOR,False,False,False,0.06666666667,0.03007518797,0.75,0.4020356234,0.4761982657,0.5238017343,0.01656125888,0.01584223495
"Then we want to run it faster, we would change the worker count to 20, 30, 40, ...",Motivation,False,82,CONTRIBUTOR,False,False,False,0.7727272727,0.2537313433,0.4812760055,0.3571428571,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
Any update on this ?,Task Progress,False,20,CONTRIBUTOR,False,False,False,1.0,0.05,1.0,0.6029411765,0.8078799082,0.1921200918,1.0,0.1280321867
"I probably wouldn't inject an additional ""if gradient contains inf raise error + message"" in the code in scikit-learn since it could be quite annoying performance-wise.",Solution Discussion,False,168,CONTRIBUTOR,False,False,False,1.0,0.3802816901,0.7192982456,0.875,0.459007429,0.540992571,0.001079117078,0.0009613524417
Any help is well appreciated.,Social Conversation,False,29,NONE,False,False,False,0.2941176471,0.007235890014,0.7821782178,0.875,0.2742562411,0.7257437589,0.006610382458,0.005351860947
The patch I asked you to try out addresses 3.,Solution Discussion,False,45,MEMBER,False,False,False,0.4347826087,0.1612903226,0.1762114537,0.5555555556,0.02336154952,0.9766384505,0.01526654747,0.6482365618
"OpenJ9 GC policies: https://www.eclipse.org/openj9/docs/xgcpolicy/. 

@amicic Can you confirm if the below analysis is correct?

### Java options
CODE

### Diagnostic Information

CODE

### Analysis

Across the five core files, the CODE keeps invoking CODE from CODE with a 1 millisecond timeout.",Solution Discussion,True,309,CONTRIBUTOR,False,False,False,1.0,0.6,0.5,0.581920904,0.08422071227,0.9157792877,0.02133685301,0.0006255851869
"xlclang++ might go down the path of
defined(__IBMC__)",Investigation and Exploration,False,54,CONTRIBUTOR,False,False,False,0.4090909091,0.05172413793,0.4,0.1102941176,0.7188702831,0.2811297169,0.0002320026376,0.00724878302
"based on logs, maybe the process of dumping does not have a proper lock and two are triggered at a time, deadlocking each other?
also, cpu usage is 0% if that matters",Investigation and Exploration,False,167,NONE,False,False,False,1.0,0.44,1.0,0.3559322034,0.02157802546,0.9784219745,2.65e-05,0.01898374244
@kirk86 after installing the whl you gave it throws a similar error for libmpi.so.40,Solution Discussion,False,84,NONE,False,False,False,1.0,0.1102362205,0.9325513196,0.5,0.9288401083,0.07115989167,0.00732168145,0.001770336874
(although they can be modeled by its primitives).,Motivation,False,49,CONTRIBUTOR,False,False,False,0.1666666667,0.1194029851,0.05131761442,0.5833333333,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
according to the message above,Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.625,0.08064516129,1.0,0.05485232068,0.001912806357,0.9980871936,0.003310804307,0.0009071895501
The behavior seems to be weird.,Observed Bug Behaviour,False,31,CONTRIBUTOR,False,False,False,0.2857142857,0.06060606061,0.6666666667,0.8070175439,0.7039263627,0.2960736373,0.374152472,0.3518178539
"Otherwise, for similar reasons as above, assumptions made in the JIT about the stability of the data structures could be violated and lead to a crash (even if the compiled body is thrown away in the end, the JIT could crash before compilation completes).",Solution Discussion,False,254,CONTRIBUTOR,False,False,False,1.0,0.7096774194,1.0,0.9453551913,0.9845135933,0.01548640667,0.001320457339,0.001947660621
Is that what you're seeing?,Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.2380952381,0.04237288136,1.0,0.4545454545,0.4194547902,0.5805452098,0.000275958121,8.5e-05
Is there a newer image to try?,Investigation and Exploration,False,30,NONE,True,True,False,0.09210526316,0.0875,1.0,0.02450980392,0.0,1.0,0.0,0.0188118453
@sguada I am not understanding the right way of using CODE specially concerning the flag CODE.,Usage,True,94,NONE,False,False,False,0.5,0.06153846154,0.3019271949,0.1666666667,0.2659544384,0.7340455616,0.1426765631,0.1141986754
"The ""mean target encoder"" is CODECountTransformerCODE, there's a PR for that ;)",Potential New Issues and Requests,True,79,MEMBER,False,False,False,1.0,0.1875,0.6507352941,1.0,0.1225886321,0.8774113679,7.770058345e-05,4.068093374e-05
i.e.  I highly suspected some commits (made for xlclang++) screwed something up somehow.,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,1.0,0.08045977011,1.0,0.2647058824,0.7581268479,0.2418731521,2.06e-05,0.0006493475044
@andrew-m-leonard @llxia What should be the target if I want to rerun the failed test?,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,1.0,0.3617021277,1.0,0.03846153846,0.00239821432,0.9976017857,0.00295674226,0.0001574257737
Thanks for your help.,Social Conversation,False,21,NONE,False,False,False,0.3636363636,0.02614379085,0.9935691318,1.0,0.8195353595,0.1804646405,0.5841431139,0.5123188737
@GaelVaroquaux does current scikit-learn give that error message?,Solution Discussion,False,65,MEMBER,False,False,False,1.0,0.09278350515,0.1124260355,0.5,0.009488780246,0.9905112198,4.648637502e-06,2.066061112e-06
I'd like to fix this and get t he changs from @0dvictor updated and merged.,Contribution and Commitment,False,75,CONTRIBUTOR,False,False,False,1.0,0.25,0.5,0.2695035461,0.4503871241,0.5496128759,1.0,0.0283808672
No explanation required.,Solution Discussion,False,24,MEMBER,False,False,False,0.1153846154,0.04225352113,0.6884057971,0.8181818182,0.06546491057,0.9345350894,0.0003479469411,5.393791714e-05
@mpirvu - There is a bit a difference outside of docker with the different options.,Investigation and Exploration,False,83,NONE,True,False,False,0.5185185185,0.175,0.1666666667,0.1176470588,0.09701181711,0.9029881829,0.01961071442,0.02610750661
Then 'arrow up' to get command history and press 'enter' to run again.,Investigation and Exploration,False,70,NONE,True,False,False,0.40625,0.1313131313,1.0,0.7438596491,0.2160643057,0.7839356943,0.001276611266,0.001471142506
However not related to this issue.,Social Conversation,False,34,CONTRIBUTOR,False,False,False,0.75,0.03174603175,1.0,0.4457142857,0.4140530572,0.5859469428,0.0007909286976,0.001985392445
"Freshly new observations:
On JITClient (output)
CODE

Comments:
- CODE(methodHandleLocation) contains a bad methodHandle
- the last bad value that caused the crash was 0xfec5f090
- before that 0x7f55b43b2a70 also contained another bad value 0xfec00870",Investigation and Exploration,True,258,CONTRIBUTOR,False,False,False,0.7307692308,0.2010582011,0.1666666667,0.3371428571,0.3964911687,0.6035088313,0.005060536466,0.02642430283
"I still wonder why the compilation threads can starve the process to that extent

When thread priorities are obeyed, if a compilation thread can run it will preempt any application thread.",Investigation and Exploration,False,190,CONTRIBUTOR,False,False,False,1.0,0.4776119403,1.0,0.7861271676,0.01725513791,0.9827448621,3.36e-06,0.0008600782261
"I had tried to reproduce it, albeit not with docker and tomcat, but still with fairly frequent GC cycles (that would exercise MM_Scavenger::shouldDoFinalNotify path), running for a few hours generating a few thousands for javacores but no luck.",Bug Reproduction,False,244,CONTRIBUTOR,False,False,False,1.0,0.5066666667,0.5,0.8926553672,0.3326217688,0.6673782312,0.0006376198792,1.25e-05
"It might be a test environment difference, but the syntax on the filters is finicky, so possibly a typo crept in to your run? CODE
Victor just dropped by and gave me an idea to test...",Solution Discussion,True,185,CONTRIBUTOR,False,False,False,1.0,0.552238806,1.0,0.8379888268,0.1150439695,0.8849560305,0.0009687751028,0.0002215081863
@pshipton what mode are the tests running in - is there a count=0 or disableAsyncCompilation in play?,Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.6153846154,0.2388059701,1.0,0.3005780347,0.005049779156,0.9949502208,1.72e-05,1.44e-05
"For using nightlies, you have to have CUDA 9.0 and cudnn 7 installed.",Solution Discussion,False,69,MEMBER,False,False,False,0.5416666667,0.1023622047,0.05571847507,0.5,0.05880703024,0.9411929698,0.02745205338,0.3335768717
"For example:
CODE
There will be some messages printed to stderr about the reason for those failures.",Investigation and Exploration,True,102,CONTRIBUTOR,False,False,False,0.6551724138,0.1386861314,1.0,0.1375464684,0.001311774784,0.9986882252,5.3e-05,0.0001602617194
"There, single string tensors come in (file names) and whole Datasets are emitted in the map function, so that seems pretty clear.",Usage,False,129,NONE,False,False,False,1.0,0.328358209,0.6851595007,0.6666666667,0.5121402298,0.4878597702,0.0005771785436,0.0001414952691
"@kratzert I, too, have experienced issues with getting GPUs to 100% usage and keeping them there.",Solution Discussion,False,97,NONE,False,False,False,0.3333333333,0.2388059701,0.7725381415,0.5,0.6088585046,0.3911414954,0.1964778875,0.0008759473312
Ideally we would get rid of all the weird behaviors.,Motivation,False,52,MEMBER,False,False,False,0.6666666667,0.15625,0.7389705882,0.75,0.1243761474,0.8756238526,0.002792339292,9.071848224e-05
"If you have already installed cuda 8.0, you only need to modify CODE (and CODE) environment variable to point to cuda 8.0 directory (i.e. CODE).",Solution Discussion,True,144,NONE,False,False,False,1.0,0.1968503937,0.1847507331,1.0,0.2644014152,0.7355985848,0.2449173066,0.2378544464
"And here javacore.txt with both CODE:

CODE
CODE

[javacore.20190529.191139.19200.0001.txt] URL ",Investigation and Exploration,True,101,NONE,True,False,False,1.0,0.09489051095,1.0,0.5130111524,0.02110659679,0.9788934032,5.22e-05,0.006018717906
"yes, we can try a few multiheap alone runs.",Solution Discussion,False,43,CONTRIBUTOR,False,False,False,1.0,0.1451612903,1.0,0.2362869198,0.04759185897,0.952408141,0.003690015373,0.00225193033
It appears it wasn't getObjectVolatile.,Solution Discussion,False,39,NONE,True,False,False,0.2631578947,0.07462686567,0.2,0.2122905028,0.002791329837,0.9972086702,0.0006464246683,0.0001327325319
"I can see it's not complete code, but I hope it gives some clue.",Social Conversation,False,64,NONE,False,False,False,0.6363636364,0.1443298969,0.724852071,0.4,0.8504261564,0.1495738436,8.045718754e-06,1.849522015e-05
"@priidukull, What did you mean by telling that the divergence happened in C code?",Investigation and Exploration,False,81,MEMBER,False,False,False,0.5185185185,0.2058823529,0.5853658537,0.4,0.5763800548,0.4236199452,0.006827881986,0.01015048758
"I have a preliminary performance tests of xlc13/16 builds (performance of C/C++ code, that is:  interpreter and JIT-compiler specifically).",Testing,False,139,CONTRIBUTOR,False,False,False,1.0,0.1264367816,0.3333333333,0.9522058824,0.7980912206,0.2019087794,0.004816889792,3.05e-05
"It looks like it's the same intermittent issue as this one https://github.com/eclipse/openj9/issues/6714

We have an intermittent bug with redefineClasses it seems.",Investigation and Exploration,False,166,CONTRIBUTOR,False,False,False,1.0,0.1164021164,0.5,0.02857142857,8.25e-05,0.9999175247,0.0001585168452,0.2625556309
"Wouldn't that require a mechanism to monitor the FS and pro-actively unload jitted code?

Wouldn't that be equivalent (in a non SCC run) to a JVM loading classes, and then someone modified the jars on disk?",Solution Discussion,False,208,CONTRIBUTOR,False,False,False,1.0,0.2773722628,0.3333333333,0.9293680297,0.07033383167,0.9296661683,0.001788553918,0.0004054165976
"Failure link
------------

From an internal build CODE (CODE):
CODE
[Rerun in Grinder] URL 

Optional info
-------------

Failure output (captured from console output)
---------------------------------------------
CODE

30x grinder at CODE.",Testing,True,254,MEMBER,True,True,False,1.0,0.4347826087,1.0,0.01257861635,0.0,1.0,0.0,0.005412926547
"However, during my debugging of this issue, I've noticed that the content of the global reference has been constantly changing during a compilation (so before the global reference gets deleted).  
CODE
As an example:
CODE
- the global reference in this case is CODE, and it's content has been constantly changing within the same compilation.",Investigation and Exploration,True,345,CONTRIBUTOR,False,False,False,1.0,0.3121693122,0.3333333333,0.4742857143,0.4461627725,0.5538372275,0.06246846736,0.001023944321
Not sure its a good idea.,Social Conversation,False,25,NONE,True,False,False,0.2727272727,0.06060606061,0.75,0.8947368421,0.9020662178,0.09793378223,0.00534555638,0.002496484253
"In that workaround, we prevent the problem simply by skipping creating an OSR path to take from CODE inlined callee methods, instead of unnecessarily adding HCR guards and also skipping creating the alternate OSR path like in #13978.",Workarounds,True,233,MEMBER,False,False,False,1.0,0.4130434783,0.5,0.8993710692,0.6349174086,0.3650825914,0.01709802761,0.01374259717
This is okay.,Solution Discussion,False,13,MEMBER,False,False,False,0.09090909091,0.07894736842,0.3649635036,0.6923076923,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
@zl-wang we need to finalize the setting to be used for the 0.20.0 release this week.,Task Progress,False,85,CONTRIBUTOR,True,False,False,0.7727272727,0.2741935484,0.25,0.9324894515,0.9195088035,0.08049119647,0.01893430022,0.008255133205
"However, the drawback of small decay is that its effective range is small: The result is dominated by a few recent samples thus it's not a good estimation of population mean/variance.",Usage,False,183,CONTRIBUTOR,False,False,False,1.0,0.1230769231,0.625267666,0.8333333333,0.5082642878,0.4917357122,0.001406808951,0.377195146
"If that still fails, try in a different virtualenv (or conda environment if you are using conda) to make sure something is not wrong in your Python environment.",Solution Discussion,False,160,MEMBER,False,False,False,1.0,0.3943661972,0.3684210526,1.0,0.4122144832,0.5877855168,0.01767922574,0.01555461885
Which is about 2.15GB.,Investigation and Exploration,False,22,CONTRIBUTOR,False,False,False,0.1724137931,0.1063829787,1.0,0.5961538462,0.5039948473,0.4960051527,0.005154978519,0.01512432343
"This test used to take 10 min, it got slow between

https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/142/
OpenJ9: 535e903
OMR: 640f1df
OpenJDK: 8bf2a81
CODE

and 

https://ci.eclipse.org/openj9/job/Test_openjdk11_j9_extended.system_x86-64_windows_Nightly/143/
OpenJ9: 82609ef
OMR: 20db4fb
OpenJDK: 502ab02
CODE

**IGNORE THIS, IT IS INCORRECT**
https://github.com/eclipse/openj9/compare/535e903...82609ef
https://github.com/eclipse/openj9-omr/compare/640f1df...20db4fb
https://github.com/ibmruntimes/openj9-openjdk-jdk11/compare/8bf2a81...502ab02
https://github.com/AdoptOpenJDK/openjdk-tests/compare/c91c600...7ced48a
https://github.com/AdoptOpenJDK/openjdk-systemtest/compare/7de3fbe...6fad604
https://github.com/eclipse/openj9-systemtest/compare/4facf81...79a666d

**IGNORE THIS, IT IS INCORRECT**
I suspect #7149.",Investigation and Exploration,True,884,CONTRIBUTOR,True,False,False,1.0,1.0,0.5,0.1791907514,0.004657816202,0.9953421838,0.0006332221901,0.0003635972979
"We need to know:
> 
> 1. Is the following true: J9Method's memory  can be freed **iff**",Investigation and Exploration,False,89,CONTRIBUTOR,False,False,False,0.1978021978,0.1978021978,0.07142857143,0.6643356643,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"Since it is clang, it must recognize the gcc asm inlining.",Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.5,0.0632183908,0.8,0.1176470588,0.7188702831,0.2811297169,0.0002320026376,0.00724878302
"Granted, we should probably wait until Charlie spins up his Windows box and tries this out.",Social Conversation,False,91,CONTRIBUTOR,False,False,False,0.6666666667,0.1167883212,1.0,0.3457249071,0.02006648971,0.9799335103,0.0002232068908,8.9e-05
"@kdavis-mozilla that sounds interesting, but the link appears to be dead.",Social Conversation,False,73,NONE,False,False,False,1.0,0.1791044776,0.4355062413,0.5,0.4011607218,0.5988392782,0.0005491848753,0.00137881541
"The thing is, TensorFlow 1.6 expects CUDA to be version 9.0, and cuDNN to be version 7.0.4 (yes, the 0.4 _does_ matter)",Solution Discussion,False,119,NONE,False,False,False,1.0,0.1732283465,0.6451612903,1.0,0.4727437799,0.5272562201,0.06170592737,0.4007313547
We're definitely not about to give up working on SpaCy!,Social Conversation,False,55,COLLABORATOR,False,False,False,1.0,0.2631578947,0.9416058394,0.5,0.02497576789,0.9750242321,0.001584253352,0.2540453279
"I believe that for the code to be used ""right out of the box"" the default should be None.",Usage,False,89,NONE,False,False,False,0.5588235294,0.07307692308,0.2762312634,0.6,0.225873701,0.774126299,0.0001639552333,0.002735597126
-         Run: CODE as suggested at the end of the installation instructions.,Solution Discussion,True,77,NONE,False,False,False,0.5217391304,0.09448818898,0.5073313783,0.8333333333,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
"And in the future when we want to load more advanced, and possible context dependant models, and on the fly language switching it would be even more necessary.",Motivation,False,159,NONE,True,False,False,0.8235294118,0.7368421053,0.6204379562,0.6,0.004047128885,0.9959528711,2.745084526e-05,4.078315706e-05
"The stack trace above is certainly not related to the crash within the compiled method
CODE.",Investigation and Exploration,True,93,CONTRIBUTOR,False,False,False,0.5666666667,0.3617021277,0.1111111111,0.2923076923,0.3215728023,0.6784271977,0.9710937657,0.01822418003
Main-line code is generated in a very optimised way.,Investigation and Exploration,False,52,CONTRIBUTOR,True,False,False,0.078125,0.078125,0.7368421053,0.95,0.3076445993,0.6923554007,0.1283873506,1.0
This class is being created dynamically by the XSLT processing as far as I can see (an area I'm unfamiliar with),Investigation and Exploration,False,112,NONE,True,False,False,1.0,0.1578947368,1.0,0.05597964377,0.0002110051991,0.9997889948,0.0001643249677,0.0008114056243
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.06666666667,0.01030927835,0.9733727811,1.0,0.9999794882,2.051181437e-05,1.015151181e-05,4.823458058e-05
How does one do that?,Usage,False,21,NONE,False,False,False,0.1388888889,0.07462686567,0.7045769764,0.7777777778,0.551539804,0.448460196,0.1827564093,0.002095453319
"As for Marks question, the failure has never been seen without those test options, however, I am not sure if that means this scenario would never be recreated without those options.",Investigation and Exploration,False,181,CONTRIBUTOR,False,False,False,1.0,0.3333333333,0.5,0.61003861,0.5529165945,0.4470834055,0.002801381667,0.003696630136
But such an approach also does not scale.,Solution Discussion,False,41,CONTRIBUTOR,True,True,False,0.16,0.125,0.04411764706,0.5,0.0,1.0,0.0,0.0007774126438
"From https://ci.eclipse.org/openj9/view/Test/job/Grinder/674 - multiheap:24,buckets javacore
CODE",Investigation and Exploration,True,98,CONTRIBUTOR,True,False,False,1.0,0.09677419355,1.0,0.2067510549,0.04644527641,0.9535547236,0.002409448773,0.00149059119
How do you suggest that I send the output to you?,Investigation and Exploration,False,49,NONE,False,False,False,0.6470588235,0.1617647059,0.7601626016,1.0,0.5911789386,0.4088210614,0.0005279841985,0.0004692809194
It might be off topic but SCREEN_NAME  mentioned with CODE we can see a lot of improvement in speed.,Solution Discussion,True,100,CONTRIBUTOR,False,False,False,1.0,0.1307189542,0.845659164,0.25,0.1977965443,0.8022034557,0.00195977348,8.955394223e-06
Do you mind sharing your data X with me?,Bug Reproduction,False,40,NONE,False,False,False,1.0,0.1267605634,0.02046783626,1.0,0.003713653838,0.9962863462,0.02136065067,0.0008763847724
i.e. runtime/j9vm_jdk11/module.xml creates j9vm_jdk11/jvm.dll and runtime/redirector/module.xml creates jvm_jdk11.dll. Both of these are copied (and jvm_jdk11.dll renamed to jvm.dll) into the correct places when building jdk11.,Investigation and Exploration,False,227,CONTRIBUTOR,True,False,False,1.0,0.2542372881,1.0,0.6909090909,0.5513287626,0.4486712374,5.32e-05,0.0008889926047
Shouldn't this issue be re-opened given the latest findings?,Action on Issue,False,60,NONE,False,False,False,0.3703703704,0.1408450704,0.4970760234,0.3333333333,0.4524825225,0.5475174775,0.2109192312,0.004397699618
"didn't see ""virtual memory""  (-v)  though.",Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,1.0,0.1290322581,1.0,0.2151898734,0.04666171664,0.9533382834,0.00149059119,0.001123048157
"For example, we might be reusing some code that normally accepts int length.",Investigation and Exploration,False,76,CONTRIBUTOR,False,False,False,0.8125,0.2765957447,1.0,0.7,0.6431414257,0.3568585743,0.0002776418192,0.002558884395
Does it still fail with the environment variable CODE?,Solution Discussion,True,54,CONTRIBUTOR,False,False,False,1.0,0.09677419355,1.0,0.7027027027,0.5584246186,0.4415753814,0.001749464716,0.0008281048336
"Output on JITClient
where CODE is a valid object pointer then it was changed to CODE
CODE

Output on JITServer
CODE
- when it was received on JITServer, it was already the wrong value",Observed Bug Behaviour,True,189,CONTRIBUTOR,False,False,False,1.0,0.2010582011,1.0,0.3942857143,0.4100880548,0.5899119452,0.0008687385329,0.003375208545
Else there's also [this free smaller treebank] URL  on his website.,Solution Discussion,False,67,NONE,False,False,False,0.3243243243,0.2,0.6379310345,0.6666666667,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"A multiJVM test... I used a fairly simple workload (single threaded, very few classes and methods).",Testing,False,99,CONTRIBUTOR,False,False,False,0.2807017544,0.1095890411,0.1111111111,0.8882681564,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
"The output is more than 1Mb in size, so I did not find a pastebin for that.",Investigation and Exploration,False,75,NONE,False,False,False,1.0,0.25,0.7520325203,0.5,0.5911789386,0.4088210614,0.0005279841985,0.0004692809194
"I think we should still check if EDO triggers a hot compilation with 0.26 and with 21.0.0.11 and if it does, try to understand what the exceptions are that are being thrown and reassure ourselves that all is working as designed.",Investigation and Exploration,False,228,CONTRIBUTOR,False,False,False,1.0,0.5125,1.0,0.4607843137,0.5127209182,0.4872790818,0.007489941643,0.0002740222552
"If performance is a primary concern then it should be tightly integrated with hardware, i.e. GPU/NVMe/RNIC, etc.",Solution Discussion,False,112,CONTRIBUTOR,False,False,False,0.6785714286,0.2835820896,0.7378640777,1.0,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
I've seen dozens and dozens of cases where (in the profiler; iirc MEMCpyWhatever) was really slow.,Motivation,False,98,CONTRIBUTOR,False,False,False,0.68,0.2537313433,0.09153952843,0.3333333333,0.003166427653,0.9968335723,0.02236439613,0.004893293226
What's the latest commit when you build your repo?,Solution Discussion,False,50,NONE,False,False,False,0.75,0.01302460203,0.2145214521,1.0,0.05414259275,0.9458574073,0.004152670075,0.04899488558
++@0xdaryl @nbhuiyan @jdmpapin for JIT insights.,Contribution and Commitment,False,48,CONTRIBUTOR,False,False,False,0.2608695652,0.06451612903,0.7777777778,0.08108108108,0.07958772392,0.9204122761,0.2864869704,0.001745734514
"For instance, GBRT and AdaBoost are (in my opinion) more suited to either CODE or CODE.",Solution Discussion,True,87,MEMBER,False,False,False,0.5333333333,0.2253521127,0.8768115942,1.0,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
"I use the function like this:conv_normed1 = tf.contrib.layers.batch_norm(conv1 + block1_layer3_1_biases, updates_collections=None, scale=True, decay=batch_norm_decay, center=True, is_training=is_training )",Usage,False,205,NONE,False,False,False,0.8636363636,0.07307692308,0.5267665953,0.4,0.4870778235,0.5129221765,0.5564473214,0.0300603195
"Actually, multiplying the data by 100 does not make the algorithm more stable with the PCA init, quite the opposite actually.",Investigation and Exploration,False,125,MEMBER,False,False,False,0.6363636364,0.3088235294,0.9227642276,0.2,0.6518867777,0.3481132223,0.02351100859,0.005246346584
So I need the CODE class so I can look at the bytecodes for the CODE method,Investigation and Exploration,True,75,MEMBER,False,False,False,1.0,0.1278195489,1.0,0.03562340967,0.0001260919359,0.9998739081,5.15e-05,1.64e-05
"That being said, I don't think it matters what the workspace default is, as long as the JRE used for the project is selected as expected.",Investigation and Exploration,False,137,NONE,True,False,False,0.5909090909,0.2626262626,1.0,0.4807017544,0.1967504071,0.8032495929,0.001033447215,0.001977734278
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly/97
osx1013-x86-3
cmdLineTester_loopReduction_0
CODE",Testing,True,142,CONTRIBUTOR,True,False,False,1.0,0.1551724138,1.0,0.05504587156,0.02057337005,0.97942663,0.05762474144,8.78e-06
"For example, such case as CODE[1] which uses the underlying CODE[2].",Solution Discussion,True,68,CONTRIBUTOR,False,False,False,0.2894736842,0.2340425532,0.4444444444,0.8961538462,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"I will also update ASGCT to accept the JNIEnv as an incoming parameter, though I may restrict actual use of the call to the current thread while I consider what extra effects inspecting other threads might have.",Solution Discussion,False,211,CONTRIBUTOR,False,False,False,1.0,0.3557692308,0.6666666667,0.9447513812,0.3303069516,0.6696930484,0.0136228909,0.0001988372754
"I would say:
Let's dig a little deeper into the javacore file:  what is the ulimit?",Social Conversation,False,84,CONTRIBUTOR,False,False,False,0.4390243902,0.2903225806,0.4,0.08438818565,0.003956069835,0.9960439302,0.01118964345,0.000481306353
"Then we started a map-reduce job, converted it into 10 tfrecord files, started 10 workers to read them, Perfect!",Motivation,False,112,CONTRIBUTOR,False,False,False,0.9090909091,0.2985074627,0.479889043,0.2857142857,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4913793103,1.0,0.5908235796,0.4091764204,0.0008416705489,0.01788489054
So we suspect it might not be a JIT related issue,Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,0.3142857143,0.1896551724,1.0,0.6972477064,0.9927545584,0.007245441552,0.02651069351,0.006864019174
"@andrewcraik Similarly to MethodHT, the DLT Record table is also not being updated when classes are unloaded.",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.85,0.1868131868,0.5,0.4055944056,0.775645764,0.224354236,0.0009798068887,0.1631008731
"So, the next immediate decision is about whether libc++ should be linked in statically.",Solution Discussion,False,87,CONTRIBUTOR,False,False,False,0.4117647059,0.08045977011,0.5555555556,0.5808823529,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
This could be one way to try and correlate back to the application logic.,Investigation and Exploration,False,73,CONTRIBUTOR,False,False,False,1.0,0.175,1.0,0.5441176471,0.5905396583,0.4094603417,1.59e-05,0.00531516184
Try giving the first comment a thumbs up,Social Conversation,False,40,NONE,False,False,False,0.5333333333,0.1095890411,0.8599137931,1.0,0.8186369424,0.1813630576,0.0004092161044,0.2335327035
IIRC this can be fixed by setting the CODE flag in the buildspec.,Solution Discussion,True,65,CONTRIBUTOR,False,False,False,0.52,0.1101694915,0.5,0.09090909091,0.3881725553,0.6118274447,7.34e-05,0.003403174815
"-         Store those big objects in broadcast variables (initialized on the driver in the constructor), which are then read when needed on the workers.",Solution Discussion,False,152,NONE,False,False,False,0.5581395349,0.1568627451,0.2475884244,0.7368421053,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
"The receiver comes from the stack, which is only modified by the current thread, so I don't see any possibility of a race in the above code.",Investigation and Exploration,False,140,CONTRIBUTOR,False,False,False,1.0,0.2934782609,0.5,0.5786163522,0.5070453341,0.4929546659,7.94e-05,0.07106417022
Thanks for the update.,Social Conversation,False,22,NONE,True,False,False,0.1428571429,0.03007518797,0.25,0.3256997455,0.4052567842,0.5947432158,5.07e-05,0.1962918967
"Even if add the ""reuse"" parameterCODE",Solution Discussion,True,37,NONE,False,False,False,0.3,0.008683068017,0.1518151815,1.0,0.02175988772,0.9782401123,0.005971272817,0.0008504453773
"CODEafter the operation, reopen the ipython or pycharm ,import tensorflow as  tf",Solution Discussion,True,80,NONE,False,False,False,0.3611111111,0.1023622047,0.8240469208,0.6666666667,0.7354114739,0.2645885261,0.4152157275,0.1560011388
"(maybe by commenting-out AGCT in openj9 you return something the agent didn't expect, or even violate the contract, and that causes stack corruption....)",Investigation and Exploration,False,153,NONE,True,False,False,1.0,0.2403846154,1.0,0.6906077348,0.2891215161,0.7108784839,0.01909072661,0.01291495446
"The code to determine the catching method and pc is at:

https://github.com/eclipse/openj9/blob/master/runtime/codert_vm/CodertVMHelpers.cpp#L323

The method is correct, but getCurrentByteCodeIndexAndIsSameReceiver is not returning the correct location.",Investigation and Exploration,False,257,CONTRIBUTOR,False,False,False,0.8965517241,0.40625,1.0,0.6524822695,0.9451349562,0.05486504379,0.1782796443,0.003207393836
Would a different serialization format help here?,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.4375,0.04575163399,0.6945337621,0.2,0.1684338854,0.8315661146,0.003166981448,0.08051496432
works for me now.,Solution Discussion,False,17,NONE,False,False,False,0.2857142857,0.005788712012,0.204620462,1.0,0.05313233101,0.946867669,0.03037586316,0.004152670075
(also seems like larger decay value would require the model to train longer to see validation accuracy change ),Usage,False,111,CONTRIBUTOR,False,False,False,0.45,0.06923076923,0.4368308351,1.0,0.3796199321,0.6203800679,0.003216099592,0.003984639748
"If I turns on CODE all the time, the model trains the same as without inserting batch norm layer.",Usage,True,97,CONTRIBUTOR,False,False,False,0.3166666667,0.07307692308,0.4004282655,0.5,0.3713273265,0.6286726735,0.000473907732,0.001356181686
-         the sender-code can be put into any place -- even directly in game-engines or render-engines,Solution Discussion,False,102,NONE,False,False,False,0.6129032258,0.2835820896,0.3647711512,0.8181818182,0.2978770854,0.7021229146,0.001143668596,0.01002173327
Maybe here is a good place to refer to my Dataset related questions:,Usage,False,68,NONE,False,False,False,1.0,0.1940298507,0.5894590846,0.3333333333,0.488896746,0.511103254,0.1856733495,0.06171840406
"However, I didn't leave a TODO and the status of it got lost.",Task Progress,False,61,MEMBER,False,False,False,0.2826086957,0.08496732026,0.3794212219,0.1578947368,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
The following code will make this similar mistake occure:(Piece of my code)CODE,Bug Reproduction,True,79,NONE,False,False,False,1.0,0.01736613603,0.6435643564,0.4,0.2038763093,0.7961236907,0.028390304,0.04042101496
"Just to make sure I'm following, it's the pending push slot from the J2I transition that's the problematic one we're trying to diagnose, right?
<22dc00>",Investigation and Exploration,False,153,CONTRIBUTOR,False,False,False,1.0,0.2795698925,0.25,0.5328185328,0.5370601617,0.4629398383,0.0003133369641,0.001592796234
"From the vlogs I looked at, the total time on CPU by compilation threads jumped from 2822 sec to 6509 sec.",Investigation and Exploration,False,106,CONTRIBUTOR,False,False,False,0.4772727273,0.3134328358,0.5,0.9075144509,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
"I could investigate this later, maybe in another issue.",Potential New Issues and Requests,False,55,CONTRIBUTOR,False,False,False,0.3333333333,0.09473684211,0.6526315789,0.75,0.1887379296,0.8112620704,7.438390269e-06,4.080282041e-06
So you're using it for a non-linear discretisation?,Potential New Issues and Requests,False,51,MEMBER,False,False,False,0.3214285714,0.140625,0.8602941176,0.3333333333,0.2637609133,0.7362390867,0.003516053103,7.119163405e-05
Where it ends up after CODE steps depends heavily on where you started.,Solution Discussion,True,71,MEMBER,False,False,False,0.619047619,0.1830985915,0.5543478261,0.3333333333,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
I did those two CODE and the CODE commands after CODE.,Solution Discussion,True,54,NONE,False,False,False,0.5789473684,0.08661417323,0.3548387097,0.5,0.3589581559,0.6410418441,0.02559963321,0.2554187912
"https://ci.eclipse.org/openj9/job/Build_JDKnext_ppc64_aix_OpenJDK/286
There is ~500MB of JIT output.
CODE",Testing,True,107,CONTRIBUTOR,False,False,False,1.0,0.1774193548,1.0,0.6010928962,0.7428539583,0.2571460417,0.1866343743,0.1252248285
"There are no ""errors"", just messages being printed and then interpreted by the cmdlinetester.",Investigation and Exploration,False,93,CONTRIBUTOR,True,False,False,0.6086956522,0.2413793103,1.0,0.2385321101,0.02084258259,0.9791574174,5.63e-06,1.18e-05
"I then tried to break it down to a specific sentence, but even after having removed this and succesively the follwoing sentences from my texts, the problem remained the same.",Investigation and Exploration,False,174,NONE,False,False,False,1.0,0.3157894737,0.2210526316,0.8,0.08711286573,0.9128871343,0.02247209918,0.04915356896
"Once we're able to reproduce this here, we can try instrumenting the VM to see if the external case gets used.",Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.28,1.0,0.8644067797,0.08566186188,0.9143381381,6.35e-05,7.46e-05
"Unless you need to change the behavior of the model dynamically, you don't need to use a placeholder for is_training.",Usage,False,117,MEMBER,False,False,False,0.9523809524,0.07692307692,0.6723768737,0.8,0.5709329897,0.4290670103,0.001836887066,0.003906111685
what is the converged fix?,Social Conversation,False,26,CONTRIBUTOR,False,False,False,0.1,0.08064516129,0.5,0.9156118143,0.9167594621,0.08324053794,0.01000533813,0.01893430022
"Coming back to the performance issue, does the current batch norm layer benfit at all from GPU usage?",Solution Discussion,False,101,NONE,False,False,False,1.0,0.06923076923,0.3447537473,0.5,0.2951481359,0.7048518641,0.07063994994,7.578871243e-05
"- the compilation returned, the compilation was queued.",Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.1458333333,0.03703703704,0.8235294118,0.6057142857,0.447477842,0.552522158,0.001615795728,8.48e-05
Include the entire stack traceabove this error message when asking for help.,Solution Discussion,False,76,NONE,False,False,False,0.09448818898,0.09448818898,0.6539589443,1.0,0.5053260144,0.4946739856,0.4007313547,0.01499535971
I had teh same situation.,Bug Reproduction,False,25,NONE,False,False,False,0.3571428571,0.03937007874,0.7390029326,0.25,0.5399330381,0.4600669619,0.1028511002,0.2627005402
"Already tried with
CODE
Now keep trying with CODE to see how it goes.",Investigation and Exploration,True,71,CONTRIBUTOR,False,False,False,1.0,0.1203007519,1.0,0.5623409669,0.5717653034,0.4282346966,0.0302145381,0.04854126846
(Prior failure rate was 1/20).,Observed Bug Behaviour,False,30,CONTRIBUTOR,False,False,False,0.2380952381,0.05494505495,0.5,0.972027972,0.952674969,0.04732503098,0.1633866501,0.04052333396
"What is the value of exclusiveAccessState?

CODE is set to CODE (CODE) across all five core files.
CODE",Investigation and Exploration,True,106,CONTRIBUTOR,False,False,False,1.0,0.2666666667,1.0,0.6610169492,0.08487925895,0.915120741,0.0003606031438,3.46e-05
I don't know what to make of SCREEN_NAME   analysis.,Social Conversation,False,52,MEMBER,False,False,False,0.3846153846,0.1408450704,0.3297101449,0.1111111111,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
"When it gets to the [Tokenizer](https://github.com/honnibal/spaCy/blob/master/spacy/tokenizer.pyx#L22), it doesn't seem to have a doesn't seem to have a CODE implemented.",Solution Discussion,True,170,CONTRIBUTOR,False,False,False,1.0,0.1633986928,0.3311897106,0.6666666667,0.01820665371,0.9817933463,0.01064935216,0.001404504327
I am not sure it is general enough to really do that (what if there is more than one parameter?) and it doesn't fulfil this requirement any more in SGDClassifier.,Potential New Issues and Requests,False,162,MEMBER,False,False,False,1.0,0.4225352113,0.5326086957,1.0,0.04254757077,0.9574524292,3.382963704e-05,1.965207131e-06
[The folder contains two files](https://github.com/eclipse/openj9/issues/5918#issuecomment-496664920).,Investigation and Exploration,False,102,NONE,True,False,False,0.2424242424,0.05839416058,1.0,0.6133828996,0.0254979151,0.9745020849,4.93e-05,0.0002157528574
Output: https://gist.github.com/priidukull/1453adb7cf2bca2093b2dd9d6646f64e,Investigation and Exploration,False,75,NONE,False,False,False,1.0,0.02941176471,0.7235772358,1.0,0.5901817124,0.4098182876,0.0003256305423,0.001873670543
"But, subsequent runs will fail.",Investigation and Exploration,False,31,CONTRIBUTOR,False,False,False,0.1162790698,0.05376344086,0.2307692308,0.1969111969,0.3402178482,0.6597821518,0.06293969756,0.0116494207
Ok after playing extensively with different random seeds and platforms (mkl vs openblas PCA for the init) I think that 0.9 is just too strict.,Investigation and Exploration,False,142,MEMBER,False,False,False,1.0,0.3676470588,0.9430894309,0.125,0.6536608828,0.3463391172,0.005246346584,1.0
"Looking at the disassembly in https://github.com/eclipse-openj9/openj9/issues/14014#issuecomment-982954463, it doesn't look like the startPC was patched.",Solution Discussion,False,153,CONTRIBUTOR,False,False,False,0.6363636364,0.1505376344,0.1111111111,0.6177606178,0.5537917672,0.4462082328,0.003696630136,0.001219776039
where multiple compilation threads got assigned with the same global reference.,Investigation and Exploration,False,79,CONTRIBUTOR,False,False,False,0.186440678,0.0582010582,0.6666666667,0.4914285714,0.4461627725,0.5538372275,0.06246846736,0.001023944321
"I have cuda-9-0 installed on the host, but when I try to run my docker container I get CODE",Bug Reproduction,True,91,NONE,False,False,False,1.0,0.157480315,0.5865102639,1.0,0.4545910844,0.5454089156,0.2835245529,0.04654492211
"However, our inliner currently can't handle the case where multiple callsites sharing the same bytecode info.",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.3555555556,0.1203007519,0.3333333333,0.9465648855,0.9208021236,0.07919787637,0.02945136717,0.001354250294
That fits - the 10x deficit made me wonder if we were running in the interpreter.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,1.0,0.1094890511,0.5,0.1635687732,0.001587299838,0.9984127002,3.35e-05,0.0002737286732
"sorry, @pshipton    i misremembered the ps command flag, although SZ and RSS are close mostly.",Testing,False,94,CONTRIBUTOR,False,False,False,1.0,0.2580645161,0.6666666667,0.7594936709,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
With tf.global_variables() the save files are much larger as I think it includes the gradients; in the end I used: saver = tf.train.Saver([x for x in tf.global_variables() if 'Adam' not in x.name]),Usage,False,197,NONE,False,False,False,1.0,0.1192307692,0.556745182,0.6666666667,0.4928558613,0.5071441387,0.00210016914,0.003858020855
"@fjeremic,  as mentioned earlier at https://github.com/eclipse/openj9/issues/7684#issuecomment-575807566,  the problem can be reproduced every time when the method is forced to be compiled by JIT with the steps as follow:
[vlog_jitfile_limit2.txt] URL 
CODE
The current JDK version I am running is CODE
CODE
If you need to repeat building the project, you'd better to remove the existing CODEfolder and clone a new one from the Gitub (or save the clone one somewhere and copy it from there every time when building the project) as the built project contains a bunch of generated garages that prevent the exception from being triggered.",Bug Reproduction,True,640,CONTRIBUTOR,False,False,False,1.0,0.7969924812,1.0,0.4783715013,0.5410448066,0.4589551934,0.000914006537,0.1072383922
"After we pop down to the CODE frame:

we run:

CODE

This means CODE is never actually invoked in the interpreter, and the return value comes from CODE

CODE

As expected CODE is 1 and CODE is 0xE",Investigation and Exploration,True,206,CONTRIBUTOR,False,False,False,0.8269230769,0.4623655914,0.5,0.5984555985,0.5522533709,0.4477466291,0.005248394148,0.002801381667
"Like, think trigram vectors, or vectors for subject/verb/object triples.",Motivation,False,72,MEMBER,False,False,False,0.44,0.2894736842,0.5839416058,0.6,0.004025785766,0.9959742142,7.249967297e-05,2.745084526e-05
@byronyi What I meant is to receive tensors from non-TF processes.,Solution Discussion,False,66,CONTRIBUTOR,False,False,False,0.4137931034,0.1791044776,0.7933425798,0.75,0.6090336754,0.3909663246,0.000261613555,0.0001603273732
I'm experimenting with both AdoptOpenJDK and openJ9,Task Progress,False,51,NONE,True,True,False,0.1891891892,0.05109489051,0.3,0.01115241636,0.0,1.0,0.0,5.34e-05
"If an executor dies, things are often recoverable, but more may be lost when the driver dies.",Solution Discussion,False,93,NONE,False,False,False,0.6071428571,0.1111111111,0.1446945338,0.7333333333,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Say you have an integer numeric feature which takes a large range of values.,Potential New Issues and Requests,False,76,NONE,False,False,False,0.4827586207,0.21875,0.8455882353,0.625,0.262961705,0.737038295,0.002558830732,0.003516053103
To all people working with Tensorflow I can add:,Solution Discussion,False,48,NONE,False,False,False,0.5,0.1267605634,0.216374269,0.6666666667,0.1785242968,0.8214757032,0.05891636054,0.0003516333028
The latest experiments seem to indicate that when we prevent transitions to the JIT after we have entered CODE the failure goes away.,Investigation and Exploration,True,133,CONTRIBUTOR,False,False,False,0.7666666667,0.25,0.25,0.6163522013,0.5582838217,0.4417161783,0.0001275446201,0.0004086462498
The JVM it finds and executes itself with is also the Oracle JDK 8.,Investigation and Exploration,False,67,NONE,True,False,False,0.3888888889,0.1414141414,0.75,0.4596491228,0.1964587946,0.8035412054,0.004535009544,0.001033447215
Here's a writeup on how to load and execute TensorFlow graphs using the C API: https://medium.com/jim-fleming/loading-tensorflow-graphs-via-host-languages-be10fd81876f (source code included),Solution Discussion,False,190,CONTRIBUTOR,False,False,False,1.0,0.2602739726,0.1206896552,1.0,0.02647440723,0.9735255928,0.001023814872,0.01847204594
Then I change the function embedding_attention_seq2seq in filetensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.pyto the one as SCREEN_NAME  suggested above.,Solution Discussion,False,160,NONE,False,False,False,1.0,0.02894356006,0.8910891089,0.6,0.3445264171,0.6554735829,0.04382956016,0.06892677638
@ebrevdo - I'll think about it.,Social Conversation,False,31,NONE,False,False,False,0.1162790698,0.007235890014,0.3168316832,0.25,0.07123442229,0.9287655777,0.0001133215202,0.0004233834388
"If we get a fix for this, temporarily disable the DDR support, and remove the CODE link option, we can get a build and test run.",Workarounds,True,128,CONTRIBUTOR,False,False,False,1.0,0.1494252874,1.0,0.875,0.7909652104,0.2090347896,0.02121193973,4.02e-05
:),Social Conversation,False,2,NONE,False,False,False,0.09090909091,0.01369863014,0.2004310345,0.5,0.07805322871,0.9219467713,0.004404440072,0.009522850481
Please don't give up working on SpaCy.,Social Conversation,False,38,NONE,False,False,False,0.2058823529,0.1842105263,0.9270072993,0.8571428571,0.02374400586,0.9762559941,0.01990868788,0.001584253352
Fuck Javascript.,Social Conversation,False,16,NONE,False,False,False,1.0,0.02739726027,0.5452586207,1.0,0.6324320163,0.3675679837,9.560917096e-05,0.001398505443
Extra encryption or compression maybe?,Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.625,0.03649635036,1.0,0.5985130112,0.02546512762,0.9745348724,5.09e-05,4.93e-05
-         All vectors in the same CODE must be the same length.,Solution Discussion,True,63,MEMBER,False,False,False,0.3636363636,0.3157894737,0.3430656934,0.4615384615,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"Instead, it should provide a complete 1-to-1 interface with the C API, [providing convenient JS abstractions] URL  as much as possible.",Solution Discussion,False,135,NONE,False,False,True,22.0,0.301369863,0.9913793103,9.0,1.0,0.0,0.5674118797,0.0
I expect jdk11 just uses more memory.,Expected Behaviour,False,37,CONTRIBUTOR,True,False,False,0.3684210526,0.1129032258,0.3333333333,0.4050632911,0.2975409256,0.7024590744,0.006977483614,0.001055956968
I'll retest this on a slower connection and see if openj9 works still...,Investigation and Exploration,False,72,NONE,True,True,False,0.2708333333,0.1940298507,1.0,0.03910614525,0.0,1.0,0.0,0.00144281986
You can use an initializable iterator together with a placeholder to achieve this.,Workarounds,False,82,NONE,False,False,False,0.619047619,0.1940298507,0.8044382802,0.6666666667,0.6147419151,0.3852580849,0.02902485329,0.001498933696
"@jdmcclur maybe you do an experiment outside docker, with 0.26, comparing one run with CODE to another run with CODE.",Investigation and Exploration,True,117,CONTRIBUTOR,False,False,False,0.7142857143,0.25,0.6,0.1029411765,0.09390786121,0.9060921388,0.3318641488,0.01961071442
"Fwiw, I think you need a kernel 2.6 or later, not a later glibc.",Solution Discussion,False,64,CONTRIBUTOR,False,False,False,1.0,0.1346153846,1.0,0.3425414365,0.1323187997,0.8676812003,0.000275039294,2.2e-05
I did not measure Hotspot as I do not believe it is required now since it looks like an issue with CODE.,Investigation and Exploration,True,104,CONTRIBUTOR,False,False,False,0.8461538462,0.1605839416,0.8,0.6431226766,0.02581807522,0.9741819248,0.0002654464138,9.32e-05
Work in progress for spaCy v2.0!,Task Progress,False,32,MEMBER,False,False,False,0.75,0.03921568627,0.9839228296,1.0,0.6137705859,0.3862294141,1.0,0.5841431139
This allows binary searching through the compiled methods to find a small(er) set of methods that cause the failure.,Solution Discussion,False,116,MEMBER,False,False,False,0.4418604651,0.1428571429,0.6666666667,0.4096692112,0.478949853,0.521050147,0.01584223495,0.009466671463
"Also testing the performance with JDK8:

CODE",Testing,True,47,NONE,True,False,False,0.4,0.05839416058,0.5,0.04089219331,3.55e-05,0.9999644573,5.34e-05,0.0003018883551
its implementation converting coo to csr is alsoweird.,Motivation,False,54,MEMBER,False,False,False,0.3636363636,0.125,0.7205882353,0.5,0.1237414412,0.8762585588,0.004649423917,0.002792339292
"Sometimes it starts, sometimes it doesn't (mostly it doesn't).",Observed Bug Behaviour,False,62,NONE,True,True,False,0.09090909091,0.09090909091,0.4,0.00701754386,0.0,1.0,0.0,0.006553271164
"if I start to change the constants (increase) with fixed X_SIZE=1750, it fails too.",Investigation and Exploration,False,83,NONE,False,False,False,0.3888888889,0.1971830986,0.2953216374,1.0,0.2874590375,0.7125409625,0.02320572223,0.0448632062
The former I think.,Potential New Issues and Requests,False,19,MEMBER,False,False,False,0.05882352941,0.05882352941,0.3130081301,0.1666666667,0.358845198,0.641154802,0.01032797867,0.001373656731
I hope this gives a useful clue as to what causes this freeze.,Social Conversation,False,62,NONE,False,False,False,0.4642857143,0.1340206186,0.6627218935,0.5454545455,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
It seems to work sometimes but I am not too sure.,Usage,False,49,NONE,False,False,False,0.4074074074,0.04230769231,0.04925053533,0.6666666667,0.1735517668,0.8264482332,5.01199785e-05,0.00114464291
I don't know what to do.,Social Conversation,False,24,MEMBER,False,False,False,0.1363636364,0.08450704225,0.201754386,0.75,0.1684104767,0.8315895233,0.000240649474,0.05891636054
"I'm afraid I'm getting this, too, in version 1.5.0: CODE",Potential New Issues and Requests,True,56,NONE,False,False,False,0.5263157895,0.1052631579,0.9052631579,0.3333333333,0.3302372055,0.6697627945,0.03932243631,0.2723202982
"For instance in the benchmark [RecordInput](https://github.com/tensorflow/tensorflow/blob/e4296aefff97e6edd3d7cee9a09b9dd77da4c034/tensorflow/python/ops/data_flow_ops.py#L2074) is [split into minibatches](https://github.com/tensorflow/benchmarks/blob/master/scripts/tf_cnn_benchmarks/preprocessing.py#L356), which I tried to incorporate via #10143 just before I found this.",Solution Discussion,False,373,NONE,False,False,False,1.0,0.5373134328,0.5145631068,0.5,0.4587375589,0.5412624411,0.1250288844,0.003916059713
What is weird though it that the despite the CODE line I get different results for the output of CODE.,Investigation and Exploration,True,102,MEMBER,False,False,False,0.4761904762,0.2816901408,0.1666666667,0.6666666667,0.1679332519,0.8320667481,0.008272861908,0.002433479587
Do you get this error when running the test on the wheel version of scikit-learn 0.19?,Investigation and Exploration,False,86,MEMBER,False,False,False,0.85,0.25,0.7398373984,1.0,0.590815313,0.409184687,0.001873670543,0.0005473217492
"Sorry, CountFeaturizer #9614",Potential New Issues and Requests,False,28,MEMBER,False,False,False,1.0,0.046875,0.6617647059,1.0,0.1226039819,0.8773960181,2.684941627e-05,0.0002371698437
"So far it looks like the problem only occurs with the compareAndSwap calls, but I'll be doing some additional testing to verify that.",Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,0.71875,0.3432835821,0.8333333333,0.9273743017,0.3165978639,0.6834021361,0.4477852629,0.1312948834
"That's what I referred to when I said ""redoing this for consistency is not worth it"".",Motivation,False,85,MEMBER,False,False,False,1.0,0.25,0.5772058824,0.6666666667,0.1224653711,0.8775346289,4.637626447e-05,0.0002168293768
"I'll try this,
Thanks!",Social Conversation,False,23,NONE,True,False,False,0.1612903226,0.04807692308,1.0,0.7403314917,0.2976333762,0.7023666238,8.01e-05,0.0002211070502
Has this been confirmed now?,Social Conversation,False,28,MEMBER,False,False,False,0.3333333333,0.05376344086,0.3333333333,0.166023166,0.3239595955,0.6760404045,1.0,0.005733320402
"you should be using ""cell() for _ inrange(...)""",Solution Discussion,False,47,CONTRIBUTOR,False,False,False,1.0,0.01013024602,0.1584158416,1.0,0.02196678411,0.9780332159,0.0008504453773,0.0977297843
+1.0000000000000000000000001,Social Conversation,False,28,NONE,False,False,False,1.0,0.01369863014,0.3620689655,1.0,0.4279793688,0.5720206312,0.1150477105,0.001093308575
"The top post is still accurate and worth a read, and it summarizes the reasoning for not keeping CategoricalEncoder (which does not mean that we need to use OneHotEncoder instead of eg DummyEncoder, that's a separate question)",Solution Discussion,False,226,CONTRIBUTOR,True,False,False,1.0,0.578125,0.5698529412,1.0,0.1224548297,0.8775451703,3.539241235e-05,4.637626447e-05
"The moment is not needed in test, why are some ops under moment executed?",Solution Discussion,False,73,NONE,False,False,False,0.05384615385,0.05384615385,0.7687366167,1.0,0.617232977,0.382767023,0.005602480188,0.0279240315
"Created https://github.com/AdoptOpenJDK/openjdk-build/issues/2528
job/build-scripts/job/jobs/job/jdk11u/job/jdk11u-mac-x64-openj9-IBM/7
CODE",Testing,True,142,CONTRIBUTOR,False,False,False,1.0,0.2903225806,1.0,0.7759562842,0.9692607796,0.03073922042,0.2372754111,0.0002193629989
"@JamesKingdon only one of the runs produced a tracefile: 
[bench_1.zip] URL 

I'll try those @0dvictor.",Investigation and Exploration,False,106,NONE,True,False,False,1.0,0.2537313433,0.5,0.3407821229,0.003825230836,0.9961747692,0.0002215081863,5.6e-05
I guess may be it is does not matter what triggered table walk (hook for class unloading) but just asynchronous nature of event?,Investigation and Exploration,False,128,CONTRIBUTOR,False,False,False,1.0,0.2527472527,0.3333333333,0.8846153846,0.8690602234,0.1309397766,0.0003289131615,0.03308234769
Note that eclipse/omr#3153 is looking at a slightly different angle on the correctness issue.,Investigation and Exploration,False,93,CONTRIBUTOR,False,False,False,1.0,0.234375,1.0,0.6382978723,0.9129455943,0.08705440575,0.007612150589,0.1782796443
-         The issue seems to have been solved.,Solution Discussion,False,46,NONE,False,False,False,0.347826087,0.06299212598,0.5102639296,1.0,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
"An idea based on this:
CODE
I think that every time we generate a new node we bump the node count and this reflected by CODE.",Investigation and Exploration,True,127,CONTRIBUTOR,False,False,False,1.0,0.35,0.2,0.4950980392,0.5901481642,0.4098518358,0.0006727318859,0.002367610279
"Given my earlier observations (https://github.com/eclipse/openj9/issues/7684#issuecomment-591045254), the method which @ChengJin01 identified via the limitfile was not compiled the only time I've been able to observe the exception.",Investigation and Exploration,False,231,CONTRIBUTOR,False,False,False,1.0,0.2030075188,0.5,0.7353689567,0.780149551,0.219850449,0.0003413217614,0.02856760951
But Idon't know why this should be correlated with a custom metric.,Investigation and Exploration,False,67,MEMBER,False,False,False,0.5714285714,0.1237113402,0.08579881657,0.4,0.0003221026152,0.9996778974,8.580113407e-05,9.25754306e-06
"Or maybe just all the Windows machines except win2012r2-x86-3, which was rebooted yesterday.",Investigation and Exploration,False,92,CONTRIBUTOR,True,True,False,1.0,0.223880597,0.75,0.01734104046,0.0,1.0,0.0,8.68e-08
"Instead, it should [use a swig script] URL  to map the core data structures between Tensorflow/stdc++/V8/node and the rest will follow.",Solution Discussion,False,135,NONE,False,False,True,23.0,0.3150684932,0.9956896552,11.0,1.0,0.0,0.5674118797,0.0
will catch up with the latest commit and regenerate the model.,Task Progress,False,62,NONE,False,False,False,1.0,0.1833333333,0.7413793103,1.0,0.4484783114,0.5515216886,0.0001265968096,0.003118709101
"I already did, and i think the comment in #8186 was suggesting this issue is still present?",Task Progress,False,91,CONTRIBUTOR,False,False,False,1.0,0.08994708995,1.0,0.1485714286,0.3018791596,0.6981208404,0.0004358178538,0.0001241646307
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_sanity.openjdk_x86-64_windows_Nightly/29
jdk_util_0
-Xdump:system:none -Xdump:heap:none -Xdump:system:events=gpf+abort+traceassert+corruptcache -XX:+UseCompressedOops
java/util/stream/boottest/java.base/java/util/stream/SpinedBufferTest.java
CODE",Testing,True,306,CONTRIBUTOR,False,False,False,1.0,0.2934782609,1.0,0.08805031447,0.3282007401,0.6717992599,0.06814608357,0.0002148119917
I have not tried older versions.,Bug Reproduction,False,32,NONE,True,False,False,0.4615384615,0.08,1.0,0.07344632768,0.001117731832,0.9988822682,0.001749406635,0.001144827456
If you still have the error after downgrading to tf-gpu 1.4; maybe you don't have a Nvidia !,Solution Discussion,False,92,NONE,False,False,False,1.0,0.1417322835,0.9853372434,0.5,0.9758786978,0.02412130216,0.05092861342,0.2966697109
"In any case, this is a known problem with Accelerate and Python multiprocessing.",Investigation and Exploration,False,80,MEMBER,False,False,False,0.7222222222,0.1340206186,0.3846153846,0.6,0.8130688094,0.1869311906,2.145525001e-05,0.001310816446
"I can confirm that test performance is good when using is_training=False with small batches and even with batch_size=1, since it is not using statistic from the batch, but the statistic learnt during training.",Usage,False,209,MEMBER,False,False,False,1.0,0.1307692308,0.4753747323,0.5,0.3864512138,0.6135487862,0.0006233545505,0.001443840919
"GDB, as well as our internal debugging tools are not able to load the libraries even when given the prefix, and absolute path.",Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,1.0,0.4893617021,0.6666666667,0.1807692308,0.1072645887,0.8927354113,0.01345561023,0.009663080221
Completely agree.,Social Conversation,False,17,NONE,False,False,False,0.1428571429,0.007692307692,0.6980728051,0.3333333333,0.5731109328,0.4268890672,0.003358850219,0.01005818686
Second what SCREEN_NAME  said.,Social Conversation,False,30,NONE,False,False,False,0.2380952381,0.03267973856,0.6237942122,0.3333333333,0.1671416964,0.8328583036,7.983490974e-07,0.0004388490277
I am totally with you in supporting more ensemble methods.,Social Conversation,False,58,MEMBER,False,False,False,0.4347826087,0.1408450704,0.8876811594,0.2857142857,0.07858392862,0.9214160714,0.0001366871745,1.473905348e-05
One disadvantage is that IPC/socket has smaller bandwidth than RAM but usually it's not a bottleneck.,Solution Discussion,False,101,CONTRIBUTOR,False,False,False,0.5666666667,0.2537313433,0.1178918169,0.9230769231,0.008365735399,0.9916342646,0.03692313957,0.0188753671
"but it's Classloader is never unloaded, so it is out of context of your question)",Social Conversation,False,81,CONTRIBUTOR,False,False,False,0.1648351648,0.1648351648,0.6071428571,0.7167832168,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"Tried that, and this time my maven build failed in 27s which is pretty impressive.",Bug Reproduction,False,82,NONE,True,False,False,0.46875,0.1127819549,0.1666666667,0.1450381679,0.01357888034,0.9864211197,0.003545658632,0.0002252314856
Since my last update I have worked on collecting some verbose and compilation logs with CODE for CODE.,Task Progress,True,102,MEMBER,False,False,False,0.45,0.1956521739,0.09090909091,0.7610062893,0.6067408459,0.3932591541,0.03227550175,0.06952239071
Took days to generate since I have large corpus.,Solution Discussion,False,48,NONE,False,False,False,0.45,0.15,0.2931034483,1.0,0.08236964625,0.9176303537,0.3353511726,0.426740286
"But what it is important is that either you pass [updates_collections=None](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L142) so the moving_mean and moving_variance are updated in-place, otherwise you will need gather the update_ops and make sure they are run.",Usage,False,319,MEMBER,False,False,False,1.0,0.1692307692,0.2419700214,0.5,0.2257503846,0.7742496154,0.003439914719,0.0006169627313
"It isn't in the binaries downloaded from: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9_openj9-0.24.0/OpenJDK11U-jdk_x64_linux_openj9_11.0.10_9_openj9-0.24.0.tar.gz , nor is it in the debug build: https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9_openj9-0.24.0/OpenJDK11U-debugimage_x64_linux_openj9_11.0.10_9_openj9-0.24.0.tar.gz",Investigation and Exploration,False,404,NONE,True,False,False,1.0,0.2133333333,1.0,0.5197740113,0.0626179028,0.9373820972,0.04024904373,0.003794429075
"If your feeling is that spacy is really meant for batch processing and that I should use mini-batches if I want to approximate streaming, I can do that.",Usage,False,152,NONE,True,False,False,0.7073170732,0.4677419355,0.1453744493,0.8,0.01937624511,0.9806237549,0.02003548886,0.01526654747
"Note - I was able to use nightly builds from 28 Nov onwards on windows, mac, linux & no longer see this issue.",Task Progress,False,110,NONE,True,False,False,1.0,0.1578947368,0.3333333333,0.2290076336,0.1679274795,0.8320725205,0.4323046536,0.2641000633
"U32

It means it returns something else (e.g. LocIsThisRel, LocIsBitField, etc) for ""const"" variables instead of LocIsConstant.",Investigation and Exploration,False,129,CONTRIBUTOR,False,False,False,1.0,0.1525423729,0.5,0.4727272727,0.4195028092,0.5804971908,6.41e-05,0.0004100015372
One characteristic of enforcing SED is writable and executable cannot co-exist on the same page.,Solution Discussion,False,96,CONTRIBUTOR,False,False,False,0.7391304348,0.09770114943,0.2222222222,0.6470588235,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
"Without a core file, I don't really have a way of investigating this issue.",Investigation and Exploration,False,75,CONTRIBUTOR,False,False,False,0.7777777778,0.2258064516,1.0,0.1639344262,0.3655718406,0.6344281594,0.368564445,0.0002290380421
Although it looks like all the grinders passed anyway,Investigation and Exploration,False,53,NONE,True,False,False,1.0,0.0989010989,1.0,0.1433566434,0.1224394958,0.8775605042,0.04891716703,0.8694307183
Here is one more vlog no debuggers attached and with args: CODE.,Investigation and Exploration,True,64,NONE,True,False,False,0.4444444444,0.08759124088,0.5,0.2453531599,0.002201720709,0.9977982793,1.24e-06,2.07e-05
From what I 've been reading in this thread in the training phase I should be using reuse=None.,Usage,False,95,NONE,False,False,False,0.7307692308,0.07307692308,0.2162740899,0.6875,0.2234305404,0.7765694596,0.0068527403,0.007193130032
Maybe somebody knows how to check that memory was actually allocated with the EXECUTE permissions?,Task Progress,False,98,CONTRIBUTOR,False,False,False,1.0,0.08620689655,0.5,0.2095588235,0.7471930509,0.2528069491,0.0001206082958,0.0004931827962
We're not calling eliminate_zeros anywhere.,Potential New Issues and Requests,False,43,MEMBER,False,False,False,1.0,0.07352941176,0.3577235772,1.0,0.3598866805,0.6401133195,0.001263501754,0.2982430454
"Latest timeout is on win2012r2-x86-3

@Mesbah-Alam did something change with the SharedClasses.SCM23.MultiCL_0 test?",Investigation and Exploration,False,118,CONTRIBUTOR,True,False,False,0.9473684211,0.2686567164,0.5,0.05780346821,0.002012283436,0.9979877166,2.82e-06,7.29e-06
Yeah I understand.,Social Conversation,False,18,CONTRIBUTOR,False,False,False,0.06818181818,0.04838709677,0.449339207,0.5,0.2163151642,0.7836848358,2.040170794e-05,0.0001196000951
"@nirmalthacker Yep, that's essentially what I meant.",Usage,False,52,NONE,False,False,False,0.3888888889,0.1044776119,0.7170596394,0.3333333333,0.5525622877,0.4474377123,0.001784978089,0.1924676673
"In dealing with RL problems and the training replay buffer, I couldn't find an easy way to use the Queues to speed up this feeding of samples through the feed_dict.",Motivation,False,164,CONTRIBUTOR,False,False,False,0.6,0.447761194,0.2274618585,0.2857142857,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"Assuming that the vlog for:
CODE
is:
CODE

The way to use the limit file is to figure out how many lines are in the file using a command like:
CODE
and then run the java application with CODE where CODE and CODE are used to specify the range of the lines to use.",Investigation and Exploration,True,269,MEMBER,False,False,False,1.0,0.4511278195,0.25,0.4300254453,0.4821785449,0.5178214551,0.009122488321,0.000823259913
"SET(TR_checkCast,                  (void *)jitCheckCast,              TR_CHelper);
SET(TR_checkCastForArrayStore, (void *)jitCheckCastForArrayStore, TR_CHelper);
SET(TR_instanceOf,                 (void *)fast_jitInstanceOf,        TR_CHelper);
SET(TR_checkAssignable, (void *)fast_jitCheckAssignable, TR_CHelper);
SET(TR_monitorEntry,               (void *)jitMonitorEntry,           TR_CHelper);
SET(TR_methodMonitorEntry,         (void *)jitMethodMonitorEntry,     TR_CHelper);
SET(TR_monitorExit,                (void *)jitMonitorExit,            TR_CHelper);
SET(TR_methodMonitorExit, (void *)jitMethodMonitorExit, TR_CHelper);
SET(TR_newObject,                  (void *)jitNewObject,              TR_CHelper);
SET(TR_newArray,                   (void *)jitNewArray,               TR_CHelper);
SET(TR_aNewArray,                  (void *)jitANewArray,              TR_CHelper);
SET(TR_newObjectNoZeroInit,        (void *)jitNewObjectNoZeroInit, TR_CHelper);
SET(TR_newArrayNoZeroInit,         (void *)jitNewArrayNoZeroInit,  TR_CHelper);
SET(TR_aNewArrayNoZeroInit, (void *)jitANewArrayNoZeroInit, TR_CHelper);
SET(TR_typeCheckArrayStore, (void *)jitTypeCheckArrayStoreWithNullCheck, TR_CHelper);

Within the codegen, CHelper calls are generated here
runtime/compiler/p/codegen/PPCPrivateLinkage.cpp - buildDirectDispatch

Therefore the best location to generate the instructions above will be within runtime/compiler/p/codegen/PPCPrivateLinkage.cpp - buildPrivateLinkageArgs.",Solution Discussion,False,1499,CONTRIBUTOR,True,False,False,1.0,1.0,0.5789473684,0.9333333333,0.3076445993,0.6923554007,0.1283873506,1.0
"After the SCC is cleared, the first run with -Xjit:disableAsyncCompilation will always pass.",Solution Discussion,False,92,CONTRIBUTOR,False,False,False,0.5833333333,0.1505376344,0.6,0.3281853282,0.3820724724,0.6179275276,5.6e-05,0.006214516454
"I ran it with the latest Java 14 release, and was not able to reproduce the failure.",Bug Reproduction,False,84,CONTRIBUTOR,False,False,False,1.0,0.3617021277,0.5,0.1153846154,0.05156448094,0.9484355191,0.01613471067,0.05286071254
-         Macos-         Anaconda-         scikit-learn 0.19.1-         scipy 1.0.1-         numpy 1.14.2CODE,Observed Bug Behaviour,True,109,NONE,False,False,False,0.6086956522,0.1443298969,0.8875739645,0.4,0.9768282061,0.02317179392,0.0165742005,0.01231978335
I had been disabling this plugin (-Drat.skip=true) but am now back at default configuration.,Task Progress,False,92,NONE,True,False,False,0.7142857143,0.1127819549,0.6666666667,0.2315521628,0.1679274795,0.8320725205,0.4323046536,0.2641000633
"Then again, SpaCy is open-source.",Solution Discussion,False,33,NONE,False,False,False,0.1621621622,0.1,0.6120689655,0.4166666667,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
"With the latest changes above (ibmruntimes/openj9-openjdk-jdk11#3 and #2374), the compilation ended up with a module related exception after copying/rename j9vm_jdk11/jdk11_jvm.lib & .exp to vm/lib:
CODE

CODE
If the merged fixes are correct, then the problem might be related to the module setting at java.base (e.g. src/java.base/share/classes/module-info.java)",Solution Discussion,True,367,CONTRIBUTOR,False,False,False,1.0,0.5,1.0,0.7939393939,0.5894417042,0.4105582958,0.01151175971,0.02070056321
Note the branch for the 0.20 release occurs on March 8.,Social Conversation,False,55,CONTRIBUTOR,False,False,False,0.55,0.1208791209,1.0,0.0979020979,0.1003075691,0.8996924309,0.0636581768,0.01551514965
"The concern is that if there's a guarantee that the Class, or respective Methods are still accessible after the class unloading, and during classloader unloading.",Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,0.9259259259,0.2747252747,0.7777777778,0.5664335664,0.8546478187,0.1453521813,0.002043575217,0.001362640241
Is there a way to reset the StringStore without reloading the model again ?,Workarounds,False,75,NONE,False,False,False,0.4193548387,0.2096774194,0.9559471366,0.6666666667,0.6824651873,0.3175348127,0.09426527661,0.02091540384
This suggests that this is a recent regression.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.4705882353,0.170212766,0.75,0.1192307692,0.05156448094,0.9484355191,0.01613471067,0.05286071254
I am not sure how well the planned Dataset/Iterator API would support this.,Solution Discussion,False,75,CONTRIBUTOR,False,False,False,0.2916666667,0.2089552239,0.05270457698,0.6666666667,9.524280238e-05,0.9999047572,0.000766008561,0.0015177658
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.03333333333,0.003846153846,0.2676659529,0.9090909091,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
"Following attachments contain the vlogs: 

[Generated by running the test on Windows] URL 

[Generated by running the test on Linux] URL 

@andrewcraik @mpirvu",Investigation and Exploration,False,165,CONTRIBUTOR,False,False,False,1.0,0.3880597015,1.0,0.3641618497,0.005161133189,0.9948388668,3.39e-05,1.17e-05
So maybe we don't need to worry about breaking user code that uses it?,Solution Discussion,False,70,CONTRIBUTOR,False,False,False,0.56,0.2258064516,0.5947136564,0.6666666667,0.2194242891,0.7805757109,0.002309046196,0.1481803025
"@vvekic, I experimented a bit with queues and the Dataset API after realising in horror that of the 0.8s/step in my inference loop, 0.2s is data fetching (with GPU at 0% utilization), raising to almost 2 seconds if the HDD is being used by something else at the same time.",Usage,False,272,NONE,False,False,False,1.0,0.7611940299,0.9542302358,0.25,0.9935262739,0.006473726055,0.0468741252,0.02821456383
"All compilation steps seem to be identical (using the same xlC 13 compiler for both)
2) enabled debug output in omrvmem.c. Again, code cache seems to be allocated in a similar way, with OMRPORT_VMEM_MEMORY_MODE_EXECUTE permissions:
[OUT8.txt] URL 
[OUT13.txt] URL 
3) tried to experiment with mixing object files from good and bad build, but  got into all kinds of make troubles
4) need to switch to an urgent PMR now",Task Progress,False,422,CONTRIBUTOR,False,False,False,1.0,0.4310344828,1.0,0.2058823529,0.7471500091,0.2528499909,0.03667212771,0.0001206082958
"Is it possible to run with 
CODE
i.e. without CODE to see if there are any OSR transitions in that case.",Solution Discussion,True,106,CONTRIBUTOR,False,False,False,1.0,0.247311828,0.5,0.4787644788,0.5347384373,0.4652615627,0.004039808715,0.003498929432
"But if there's an important trade-off to make, we don't want to have a silent default that just picks an option, and then the user gets a bad result and has to go back and figure out what went wrong.",Solution Discussion,False,199,MEMBER,False,False,False,1.0,0.2679738562,0.192926045,0.7857142857,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
In my three tests I got to see between 2 and 41 dumps before the hang.,Testing,False,70,NONE,True,False,False,0.8,0.2133333333,0.6666666667,0.7966101695,0.08544452514,0.9145554749,2.47e-05,1.77e-05
I'll look into this.,Contribution and Commitment,False,20,CONTRIBUTOR,False,False,False,0.1739130435,0.0625,1.0,0.9716312057,0.983412813,0.01658718703,0.0005409772213,0.02022533505
I tried now with just different CODE and CODE parameters:CODE,Usage,True,61,NONE,False,False,False,1.0,0.04230769231,0.6445396146,0.6666666667,0.5688734124,0.4311265876,0.003618682739,0.002504984351
"I would have preferred to leave it as a placeholder because this way I can do periodic testing during training without redefining the graph, but I decided to use it as a constant and define different behaviors for train vs test, and now the moments are not calculated at test time.",Usage,False,281,CONTRIBUTOR,False,False,False,1.0,0.1961538462,0.8436830835,1.0,0.7198604777,0.2801395223,0.09017334918,0.007196275213
"-         Use the CODE, CODE and CODE special methods.",Solution Discussion,True,54,MEMBER,False,False,False,0.2727272727,0.2368421053,0.3284671533,0.3076923077,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
Can you try to see if adding the CODEif __name__CODE helps?,Investigation and Exploration,True,59,MEMBER,False,False,False,0.8461538462,0.1134020619,0.9585798817,0.75,0.9999752665,2.473351871e-05,0.00109431708,1.092628473e-06
"Compiled_method=jdk/internal/foreign/NativeMemorySegmentImpl.makeNativeSegment(JJ)Ljdk/incubator/foreign/MemorySegment;

fyi @andrewcraik",Contribution and Commitment,False,139,MEMBER,False,False,False,1.0,0.2340425532,1.0,0.02307692308,0.001617789098,0.9983822109,0.006689164241,0.0003091269739
"unfortunately, that is a big increase (even for 18 heap).",Testing,False,57,CONTRIBUTOR,False,False,False,0.625,0.1612903226,0.1666666667,0.746835443,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
"Here are some of the code that does the printing:

On JITClient:
JITClient is handling requests from JITServer, CODE is equivalent to CODE for regular JIT compilation.

CODE

On JITServer
CODE

The change in value can happen any time.",Investigation and Exploration,True,244,CONTRIBUTOR,False,False,False,0.9375,0.2380952381,0.5882352941,0.5828571429,0.447477842,0.552522158,0.001615795728,8.48e-05
To confirm I understand the latest updates - the issue is with any call to clone() where the jit inlines the sequence directly that we later OSR out of?,Investigation and Exploration,False,152,MEMBER,False,False,False,1.0,0.3010752688,0.2857142857,0.9111969112,0.8498306174,0.1501693826,0.005725859998,0.01048932789
Thanks,Social Conversation,False,6,CONTRIBUTOR,False,False,False,0.04166666667,0.0125,1.0,0.3921568627,0.2985071133,0.7014928867,0.0007771213165,0.005374605821
3.         JavaScript only support 53bit precision.,Solution Discussion,False,51,NONE,False,False,False,0.3333333333,0.09589041096,0.3814655172,0.8333333333,0.4349495154,0.5650504846,0.003115708122,0.2584362368
I will glad for any help.,Social Conversation,False,25,NONE,False,False,False,0.2727272727,0.02307692308,0.5331905782,1.0,0.4870778235,0.5129221765,0.5564473214,0.0300603195
"If it returns LocIsConstant, then it fails.",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.4666666667,0.0593220339,0.6666666667,0.5151515152,0.4196774374,0.5803225626,0.0001321913482,0.0003516613975
"**Another important thing is, be sure to use CODE to create train op**.",Usage,True,71,CONTRIBUTOR,False,False,False,0.3333333333,0.05,0.5931477516,0.5454545455,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
"HI, i m having the same issue, so i did not want to open new one which could lead to almost identical thread.",Observed Bug Behaviour,False,109,NONE,False,False,False,1.0,0.2371134021,0.8846153846,0.2,0.9768282061,0.02317179392,0.0165742005,0.01231978335
@ChengJin01 what causes java.dll to get loaded in the failure case?,Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.44,0.1111111111,0.2,0.9438596491,0.9078950378,0.09210496222,0.001248242127,0.002277636608
it seems like a regression made in last few months...,Investigation and Exploration,False,53,NONE,False,False,False,0.3846153846,0.1333333333,1.0,0.3446327684,0.02149972431,0.9785002757,0.01017150312,9.93e-05
Also tried with 20 times but the exception didn't show up (there some dumps but has nothing to with CODE).,Bug Reproduction,True,106,CONTRIBUTOR,False,False,False,1.0,0.1503759398,0.1428571429,0.572519084,0.5844415189,0.4155584811,9.4e-05,0.001518166493
Please support node.js.,Social Conversation,False,23,NONE,False,False,False,0.25,0.04109589041,0.8103448276,1.0,0.7969930879,0.2030069121,0.2066977323,0.2701229087
"I know this is hackish, however, would resetting the _map and setting size to 0, or resetting the StringStore itself after a certain critical size is reached could cause any problems?",Workarounds,False,183,NONE,False,False,False,1.0,0.5,0.9471365639,0.3333333333,0.6824651873,0.3175348127,0.09426527661,0.02091540384
"Oh well, more data points fwiw.",Social Conversation,False,31,CONTRIBUTOR,False,False,False,0.5,0.04379562044,1.0,0.375464684,0.02020452776,0.9797954722,5.3e-05,9.03e-05
"Loading the spaCy models takes about as much time as processing 1,000 documents (at ~200 tokens each).",Solution Discussion,False,102,MEMBER,False,False,False,0.425,0.1111111111,0.7877813505,0.5263157895,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
The machines which generated this defect seem to be seeing the issue more regularly.,Investigation and Exploration,False,84,CONTRIBUTOR,False,False,False,0.2916666667,0.2089552239,0.6666666667,0.6531791908,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
@joelkuiper and SCREEN_NAME  do you confirm that scikit-learn master also work for you?,Solution Discussion,False,87,MEMBER,False,False,False,1.0,0.2112676056,0.2280701754,0.6666666667,0.1785846596,0.8214153404,0.0003516333028,0.0009277251719
"I think this is incorrect when involuntary OSR is enabled (since neither the CODE nor the calls appear verbatim in the bytecode), but I don't see any existing logic to back off in that case

This transformation would probably be applied here because CODE is final, so we should have a fixed-type constraint for the receiver within CODE, and that method calls CODE via CODE, i.e. a direct call",Solution Discussion,True,394,CONTRIBUTOR,False,False,False,1.0,0.7634408602,0.6666666667,0.7104247104,0.5586206714,0.4413793286,0.0008281048336,0.009049469938
I launched some Grinder runs to verify this avoids the problem while we continue investigating the root cause.,Task Progress,False,110,MEMBER,False,False,False,1.0,0.1956521739,1.0,0.8867924528,0.6293907182,0.3706092818,0.0005499522631,0.01709802761
"I'm also running in this issue on 1.8.2, nevertheless only after processing multiple documents in parallel:CODE",Potential New Issues and Requests,True,111,CONTRIBUTOR,False,False,False,0.85,0.1789473684,0.9578947368,0.3333333333,0.5341997205,0.4658002795,0.165555169,1.0
"We can force this to occur with the following:

CODE",Bug Reproduction,True,54,NONE,True,True,False,0.3666666667,0.1466666667,0.6,0.03389830508,0.0,1.0,0.0,4.66e-05
I agree with SCREEN_NAME 's analysis.,Social Conversation,False,37,MEMBER,False,False,False,1.0,0.07042253521,0.3260869565,1.0,0.03952835335,0.9604716466,2.070486084e-06,3.228554572e-05
"Therefore the clean up process entails, iterating through all entries in the table.",Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.4814814815,0.1428571429,0.4444444444,0.5559440559,0.8546478187,0.1453521813,0.002043575217,0.001362640241
Yet somehow it runs -version on the AdoptOpenJDK machine.,Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.8308823529,0.7733501543,0.2266498457,1.43e-05,8.27e-06
The segfault re-occurs after the SCC is destroyed and CODE is used in the first run.,Investigation and Exploration,True,84,CONTRIBUTOR,False,False,False,0.3953488372,0.1827956989,0.6153846154,0.2162162162,0.3402178482,0.6597821518,0.06293969756,0.0116494207
"Thanks for the update, but I think that will be rather tricky.",Social Conversation,False,62,NONE,True,False,False,0.2,0.09022556391,0.5,0.1017811705,0.001268374119,0.9987316259,0.003847329842,0.0003249710183
Any ideas how to fix here?,Potential New Issues and Requests,False,26,MEMBER,False,False,False,0.25,0.08823529412,0.2398373984,1.0,0.3511052513,0.6488947487,7.769551645e-05,0.009464004531
@gita-omr could someone with AIX skills have an initial look at this to find the right place to send it?,Contribution and Commitment,False,104,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.07692307692,0.005725705522,0.9942742945,0.003392350266,0.001958073201
I just suspect that *some* values are but I don't know which ones or how many there are.,Potential New Issues and Requests,False,88,NONE,False,False,False,0.8571428571,0.28125,0.8970588235,0.6666666667,0.2639047948,0.7360952052,0.0004458630338,0.03415611878
The API could potentially handle this under the hood.,Solution Discussion,False,53,NONE,False,False,False,0.2093023256,0.05882352941,0.2154340836,0.2105263158,0.006491059444,0.9935089406,0.002335900037,0.0006598181736
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6293103448,1.0,0.6898102734,0.3101897266,0.04966188215,0.00144254763
The only difference is to the output above it is running on an older kernel (CODE).,Investigation and Exploration,True,83,CONTRIBUTOR,False,False,False,0.2388059701,0.2253521127,0.4444444444,0.5714285714,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
or am I missing something?,Social Conversation,False,26,NONE,False,False,False,0.1351351351,0.06849315068,0.7068965517,0.8333333333,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
Here is the vlog file (changed the file type to CODE to make GitHub happy),Social Conversation,True,74,NONE,True,False,False,1.0,0.1094890511,0.5,0.04832713755,0.0002364004966,0.9997635995,0.0003018883551,0.0002111976147
"The detailed backtrace in java is as follows:
CODE

Looking at the code of ModuleInfo.doRead() in src/java.base/share/classes/jdk/internal/module/ModuleInfo.java
CODE

Looking at src/java.base/share/classes/module-info.java (packages exist in there)
CODE",Investigation and Exploration,True,261,CONTRIBUTOR,False,False,False,1.0,0.3644067797,0.3333333333,0.8,0.5961088928,0.4038911072,0.02070056321,0.01958885944
This is somewhat similar to iteratively growing the number of sub-estimators in a boosted ensemble model so we could decide to reuse CODE to adress that use case as well but if this API reveals cumbersome for boosted models it might be better to rethink it now that we have an additional use case.,Solution Discussion,True,297,MEMBER,False,False,False,1.0,0.7746478873,0.3224637681,1.0,0.03952644607,0.9604735539,1.193161472e-05,2.070486084e-06
"The smart condition in that case (as far as I am concerned) decides wether or not to update the moving averages, but the moments still get calculated.",Solution Discussion,False,150,CONTRIBUTOR,False,False,False,0.7297297297,0.1038461538,0.8629550321,1.0,0.7213435746,0.2786564254,0.001636711525,0.0005628859124
Take a simple scenario of master and slave JVM.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.1384615385,0.06164383562,0.3333333333,0.5754189944,0.253235282,0.746764718,0.002218893623,0.000737706338
"-         If they know they have only consecutive ranges as categories, they want to ignore the warning, so we can add to the warning message an explanation how to do this (add a code sample with filterwarnings they can copy paste)",Solution Discussion,False,231,CONTRIBUTOR,True,False,False,0.9318181818,0.640625,0.4375,0.5238095238,0.07430334202,0.925696658,0.1302436707,0.0003197521392
This option specifies an upper bound for the optimization ID which to perform.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.3939393939,0.0977443609,0.5294117647,0.5368956743,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5107758621,1.0,0.6060529205,0.3939470795,0.01426214397,0.00617188183
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5172413793,1.0,0.6111324834,0.3888675166,0.00674332368,0.002226454305
(!!!!):tada: :tada: :tada:,Social Conversation,False,26,MEMBER,False,False,False,1.0,0.04838709677,0.986784141,0.6666666667,0.7416075027,0.2583924973,0.2056416849,0.9898268541
"I created another new demo2 application with rest/web service and ran this demo2 before OpenJ9
CODECODE | \ \ \ \
 \\/  ___)",Investigation and Exploration,True,126,CONTRIBUTOR,False,False,False,0.3230769231,0.2121212121,0.03333333333,0.2175438596,0.1148232942,0.8851767058,0.002853124861,0.002074999899
"Can you point to some more information, more detail about what the problem is?",Investigation and Exploration,False,78,NONE,False,False,False,0.8235294118,0.1443298969,0.6094674556,0.8571428571,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
"When running the code with the Win 1.0.0/GPU Release, there is no issue.",Bug Reproduction,False,72,NONE,False,False,False,0.7222222222,0.01881331404,0.07920792079,1.0,0.001438113183,0.9985618868,0.002700374697,0.000477730304
vs specific versions?,Solution Discussion,False,21,NONE,False,False,False,0.08571428571,0.02362204724,0.42228739,0.7142857143,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
Could someone suggest some hooks to trace j9methods so we can see what that address was allocated to and when it was freed by the VM?,Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,0.4561403509,0.2857142857,0.8571428571,0.8566433566,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
then the crash might be triggered by something else.,Investigation and Exploration,False,52,NONE,True,False,False,0.25,0.09090909091,0.07142857143,0.4842105263,0.1973084735,0.8026915265,0.001977734278,0.003898730278
Do not use tf native CODE.,Usage,True,26,CONTRIBUTOR,False,False,False,0.1538461538,0.02307692308,0.5952890792,0.6363636364,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
"As for ""cold start"", as you see above in discussiion, decreasing BatchNorm running average decay (input param) from default 0.999 to something like 0.95 can speed-up start-up",Usage,False,174,CONTRIBUTOR,False,False,False,0.6444444444,0.1115384615,0.6145610278,1.0,0.5080421357,0.4919578643,0.008986491854,0.001406808951
@dsouzai for AOT insights.,Contribution and Commitment,False,26,CONTRIBUTOR,False,False,False,0.5714285714,0.04301075269,1.0,0.250965251,0.3460120034,0.6539879966,0.01282443431,0.1430196731
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2931034483,1.0,0.2913725965,0.7086274035,0.06129056889,0.16554905
I discussed the interference of CODE with compilation steps with @mikezhang1234567890 who will be investigating adjustments to the makefiles to avoid this problem.,Task Progress,True,163,CONTRIBUTOR,False,False,False,1.0,0.1949152542,0.2,0.6303030303,0.5222439948,0.4777560052,0.01501286261,0.003822899709
It looks beautiful when it utilizes all CPU cores.,Social Conversation,False,50,CONTRIBUTOR,False,False,False,0.3333333333,0.05882352941,0.884244373,0.1818181818,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
"I'll think more about this, and probably reach out to Radim about it.",Task Progress,False,69,MEMBER,False,False,False,0.2166666667,0.2166666667,0.2672413793,1.0,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
The same behavior can be obtained by using cold optLevel but disabling the compilation of CODE.,Bug Reproduction,True,95,CONTRIBUTOR,False,False,False,0.2711864407,0.2,0.25,0.7696078431,0.9391761414,0.06082385865,0.06820979376,0.04955018304
"The only possible cases that CODE could return 0 for classChian are:
1. Failed to startup the ByteDataManager.",Investigation and Exploration,True,111,CONTRIBUTOR,False,False,False,1.0,0.3064516129,0.1666666667,0.8306010929,0.9694790573,0.03052094273,0.0009261993286,0.0003529530185
"If anything in options changed, the hints would be invalidated.",Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.2222222222,0.06849315068,0.25,0.3184357542,0.03208549702,0.967914503,0.0001774088301,4.2e-05
Your suggestion of splitting the string store seems most in line with my thoughts on this.,Solution Discussion,False,90,NONE,True,False,False,0.2580645161,0.2580645161,0.7709251101,0.5,0.3260702381,0.6739297619,0.1206599722,1.0
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.07142857143,0.003846153846,0.5182012848,1.0,0.3990090727,0.6009909273,0.06578784903,0.001260202941
CODE,Solution Discussion,True,4,NONE,False,False,False,0.04545454545,0.001447178003,0.8382838284,1.0,0.2924079275,0.7075920725,0.008897341264,0.000137172437
"Current CODE provides such functionality, but it is rather hacky.",Motivation,True,65,NONE,False,False,False,0.2325581395,0.1492537313,0.346740638,0.5,0.2977348857,0.7022651143,0.1209962692,0.001143668596
"If so, then there must be something wrong with the copy operation.",Solution Discussion,False,66,CONTRIBUTOR,False,False,False,0.375,0.1016949153,1.0,0.7090909091,0.5516150872,0.4483849128,0.0008889926047,0.00606228134
CODE,Solution Discussion,True,4,CONTRIBUTOR,False,False,False,0.05555555556,0.006535947712,0.729903537,1.0,0.1967953314,0.8032046686,0.08051496432,8.504153429e-06
"I'm happy enough to say that at least this reproduction case is eliminated, or at worst made much more unlikely, by a significant margin.",Task Progress,False,137,NONE,True,False,False,0.5853658537,0.32,1.0,0.9604519774,0.3768312766,0.6231687234,0.01360883005,0.0001899293257
CODE,Investigation and Exploration,True,4,NONE,False,False,False,0.04166666667,0.01030927835,0.8047337278,1.0,0.850540769,0.149459231,7.813286879e-05,0.005705487359
"Yes, the system will timeout if it doesn't receive a response in 20 seconds.",Investigation and Exploration,False,76,NONE,True,False,False,0.3888888889,0.2089552239,0.1428571429,0.7709497207,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
The culprit method was compiled about 20 minutes into the run.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.6470588235,0.1375,0.8,0.8284313725,0.9506093286,0.04939067138,0.0226844032,0.006464895429
"It's certainly related, but not exactly a mean target encoding.",Potential New Issues and Requests,False,63,CONTRIBUTOR,True,False,False,0.3225806452,0.15625,0.6654411765,0.5,0.1226578912,0.8773421088,0.0002371698437,2.888346296e-05
Need to do some brain storming what could be different with JDK13 that would affect the VM.,Solution Discussion,False,91,CONTRIBUTOR,False,False,False,1.0,0.09770114943,1.0,0.3897058824,0.7654520476,0.2345479524,5.66e-05,1.58e-05
After doing that for a bit I switched JRE<->JDK and did the same thing again.,Investigation and Exploration,False,77,NONE,True,False,False,0.306122449,0.1515151515,0.7777777778,0.3719298246,0.1194799462,0.8805200538,0.004838964607,0.001815624911
I'm digging the new API.,Social Conversation,False,24,NONE,False,False,False,0.1315789474,0.07462686567,0.6269070735,1.0,0.5016859242,0.4983140758,0.003761840049,0.03050902669
"Unfortunately, I am unable to read the native stack in the core file:
CODE
I will have to view the core file on the same machine where it gets generated.",Social Conversation,True,155,CONTRIBUTOR,False,False,False,1.0,0.4266666667,0.5,0.2429378531,0.003598175951,0.996401824,0.0004813876919,5.86e-05
Thanks again,Social Conversation,False,12,NONE,False,False,False,0.2222222222,0.02985074627,0.8363384189,1.0,0.7197506803,0.2802493197,0.01478320176,0.1554452775
In which setting do you want to do that except for parallelization?,Motivation,False,67,MEMBER,False,False,False,0.6666666667,0.1690140845,0.9384057971,0.6666666667,0.07861806562,0.9213819344,1.133503399e-05,1.645860972e-05
java 15 version.,Observed Bug Behaviour,False,16,NONE,False,False,False,0.1153846154,0.04,0.6666666667,0.3389830508,0.02149972431,0.9785002757,0.01017150312,9.93e-05
@nmhkahn SCREEN_NAME  thanks for the code snippets.,Social Conversation,False,51,NONE,False,False,False,0.2285714286,0.03076923077,0.1049250535,0.04347826087,0.2164964176,0.7835035824,0.06906725807,0.007698692487
This sounds as fundamental problem missing respect for CODE when tables are modified.,Solution Discussion,True,85,CONTRIBUTOR,False,False,False,0.3513513514,0.1428571429,0.2,0.5769230769,0.854897081,0.145102919,0.001362640241,0.002579695967
"@vsebe yes, i knew.",Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.2857142857,0.02298850575,0.3333333333,0.2904411765,0.758888869,0.241111131,0.0004175811221,0.0001148200426
@vincentvanhoucke it's not even about node.js in the title.,Social Conversation,False,59,NONE,False,False,False,0.25,0.1232876712,0.650862069,0.125,0.6969145374,0.3030854626,0.0871107993,0.1143443634
Or better: in what use cases do you need a different interface for boosted ensembles and bagging?,Motivation,False,97,MEMBER,False,False,False,1.0,0.2394366197,0.9202898551,1.0,0.07859944544,0.9214005546,2.105579069e-06,8.878525073e-06
Pls compress the core file (it should compress nicely) and share it using your favorite file sharing service.,Solution Discussion,False,109,CONTRIBUTOR,False,False,False,1.0,0.1353383459,0.5,0.2875318066,0.2280802907,0.7719197093,0.0007382360491,0.001171121972
Without further input I'll go ahead with the test change today so we are using it for the weekend testing.,Testing,False,106,CONTRIBUTOR,True,False,False,1.0,0.2985074627,1.0,0.9537572254,0.02013836648,0.9798616335,0.0005708426721,2.11e-05
Fine with me.,Social Conversation,False,13,MEMBER,False,False,False,0.15,0.04225352113,0.4420289855,0.75,0.03982883009,0.9601711699,3.790042324e-06,1.859928177e-06
*         More iterators!,Expected Behaviour,False,25,NONE,False,False,False,0.1,0.0447761194,0.1400832178,0.1714285714,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"Given that the TOC setup in the C code is technically variable-sized, it's probably safer to load r12 rather than r2 on LE, and it leaves open the possibility of removing the inline load r12 if a trampoline is going to be used.",Solution Discussion,False,227,CONTRIBUTOR,False,False,False,0.3963963964,0.34375,1.0,0.7333333333,0.08012656297,0.919873437,0.0570348239,0.002818533349
"Can you try using the path: CODE?

Tried, still no dumps.",Investigation and Exploration,True,59,NONE,True,False,False,0.4615384615,0.1212121212,0.2,0.649122807,0.2124151465,0.7875848535,0.004198632607,0.0008429687088
"++Owner: @theresa-m, for insights.",Contribution and Commitment,False,34,CONTRIBUTOR,False,False,False,0.08333333333,0.06666666667,0.8571428571,0.4406779661,0.03360794113,0.9663920589,0.0003240614417,0.001877193186
@JamesKingdon not at all.,Social Conversation,False,25,NONE,True,False,False,0.1428571429,0.05970149254,0.1666666667,0.4804469274,0.005173900255,0.9948260997,0.0002266795837,0.000261155566
"I am not sure, if you really need something else and I do not understand why you really need CODE *in* the graph.",Solution Discussion,True,113,NONE,False,False,False,0.7419354839,0.3432835821,0.3675450763,1.0,0.2978770854,0.7021229146,0.001143668596,0.01002173327
"Dataset-style abstractions are pretty common in this space, and they're quite useful.",Solution Discussion,False,85,CONTRIBUTOR,False,False,False,0.1940298507,0.1940298507,0.3703190014,0.5,0.2991231524,0.7008768476,0.01002173327,0.1413171275
"@babsingh 

1. In production, where we see this in about 4-5% of our docker stacks, this happens with <10 kills.",Observed Bug Behaviour,False,114,NONE,True,False,False,1.0,0.2933333333,0.25,0.1355932203,0.002090300149,0.9979096999,0.0002669513564,0.000160608439
"Also, I think we wanted to disable throw->goto optimizations.",Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.8181818182,0.140625,0.75,0.524822695,0.7949455725,0.2050544275,0.01235591973,0.01296902725
"both builds with the xlc 16 changes reverted still get ""Illegal instruction"".",Bug Reproduction,False,77,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.4375,0.7658523659,0.2341476341,0.0003407981718,0.0005874486337
10K runs on Linux PPC LE with no issues.,Testing,False,40,CONTRIBUTOR,False,False,False,1.0,0.15625,0.5,0.5602836879,0.8348887032,0.1651112968,0.1984352534,0.07112047202
+1!,Social Conversation,False,3,NONE,False,False,False,0.04347826087,0.01369863014,0.04525862069,0.3333333333,0.0006346839938,0.999365316,0.004187991532,0.0001418645338
I expect the most useful bits to be the parts that are needed to run an existing graph.,Solution Discussion,False,87,MEMBER,False,False,False,0.8571428571,0.2465753425,0.2607758621,0.6,0.1857720333,0.8142279667,0.003082953128,0.02229862595
"[LocIsConstant_pdb_files.txt] URL 
I double-checked these fields which returns LocIsConstant by adding printing messages in code but none of them is a non-static.",Investigation and Exploration,False,163,CONTRIBUTOR,False,False,False,1.0,0.2118644068,0.5,0.5272727273,0.4197906997,0.5802093003,0.0003516613975,0.0001150597199
I am using the new api CODE now.,Social Conversation,True,32,NONE,False,False,False,0.380952381,0.1194029851,0.9112343967,0.1111111111,0.9479523715,0.05204762849,0.2620248075,0.005625200409
"I don't see why the global-entry pre-prologue (addis/addi based off r12) can be harmful, i.e. even if r2 is set to garbage by the pre-prologue, it will be corrected by the load mentioned above (before TOC is used in that routine).",Investigation and Exploration,False,230,CONTRIBUTOR,False,False,False,1.0,0.3515625,1.0,0.1555555556,0.02828196509,0.9717180349,0.0001303405259,0.0002282569671
An OSR catch block is not really a catch block that can catch Java exceptions and so we should not be adding in profiling instrumentation related to EDO to such a block.,Investigation and Exploration,False,169,CONTRIBUTOR,False,False,False,1.0,0.4,1.0,0.5245098039,0.5905229062,0.4094770938,0.002367610279,8.99e-05
ðPlease !,Social Conversation,False,9,NONE,False,False,False,1.0,0.01369863014,0.5150862069,1.0,0.6107577197,0.3892422803,0.07848406348,0.00674332368
+1...,Social Conversation,False,5,NONE,False,False,False,0.08333333333,0.01369863014,0.8060344828,0.3333333333,0.7969930879,0.2030069121,0.2066977323,0.2701229087
"make RSS unlimited and retry ...

Is there a particular setting I should try with RSS unlimited?

 the eventual fix can go: without ,buckets",Solution Discussion,False,144,CONTRIBUTOR,True,False,False,1.0,0.4032258065,0.5,0.223628692,0.04705605294,0.9529439471,0.001592686477,0.003690015373
"2.         If we split in multiple classes, we could (ideally?) use OneHotEncoder for the 'onehot' encoding, but this class already exists.",Solution Discussion,False,139,CONTRIBUTOR,True,False,False,0.44,0.34375,0.6911764706,0.4,0.1226846147,0.8773153853,8.868443556e-05,0.004649423917
"PS: Tensorflow works fine for me on Sierra, but I only do CPU and prototyping on my macs so I don't know about GPU issues related to Sierra",Investigation and Exploration,False,139,CONTRIBUTOR,False,False,False,1.0,0.3943661972,0.649122807,1.0,0.4587137632,0.5412862368,3.099797711e-05,4.884949071e-05
All operation above done under VM Exclusive Access and CODE entered for write.,Investigation and Exploration,True,78,CONTRIBUTOR,False,False,False,0.203125,0.1428571429,0.8,0.5384615385,0.8542739958,0.1457260042,0.001618376001,0.002043575217
-         This test generates training data as 32 bit float,Solution Discussion,False,59,MEMBER,False,False,False,0.3125,0.1470588235,0.8821138211,0.3333333333,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
"which is why the core files never end up being saved to disk

There is a core file, what I assume you are saying is that the core file is for the writeCrashDataToConsole issue and not the original issue.",Investigation and Exploration,False,205,CONTRIBUTOR,False,False,False,1.0,0.8510638298,0.5,0.5038461538,0.4135966372,0.5864033628,0.001585706885,0.2342152039
"For simultaneous VM starts, all of them read the same value, and all of them will update with their new value, but effectively only the slowest/last one that updated will 'win'.",Solution Discussion,False,177,CONTRIBUTOR,False,False,False,1.0,0.2191780822,1.0,0.5530726257,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
it's been 2 years and still no luck?,Task Progress,False,36,NONE,False,False,False,1.0,0.1095890411,0.5409482759,1.0,0.6324267028,0.3675732972,0.02364180201,9.560917096e-05
@nikhilk Thanks.,Social Conversation,False,16,CONTRIBUTOR,False,False,False,0.09523809524,0.02739726027,0.1379310345,0.3333333333,0.02910588399,0.970894116,0.001724506158,0.1562320249
"I've been playing with an extension of this idea, where noun chunks and named entities are also merged.",Potential New Issues and Requests,False,103,MEMBER,False,False,False,0.6333333333,0.5,0.1897810219,0.2777777778,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"CODE
- Ruled out GC
- Ruled out CODE
- The problem can only come from 
CODE
- potentially invalid _handleRef
CODE
CODE

Next step is to trace how CODE got initialized.",Investigation and Exploration,True,176,CONTRIBUTOR,False,False,False,1.0,0.1904761905,1.0,0.2342857143,0.3127054925,0.6872945075,0.007901423216,0.02292741294
But_ it would really good to know exactly why this problem was happening and what exactly fixed it.,Social Conversation,False,99,NONE,False,False,False,1.0,0.1353383459,1.0,0.6972010178,0.7360645869,0.2639354131,0.2346732222,0.004337443365
"but I'm too old to know if that means ""confirmed"" or ""agree we should confirm""",Social Conversation,False,78,MEMBER,False,False,False,1.0,0.1612903226,1.0,0.1737451737,0.3239595955,0.6760404045,1.0,0.005733320402
"https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationThread.cpp#L12597
https://github.com/eclipse/openj9/blob/27e93e6cae493f2a3945528330adf5faacec3e4b/runtime/compiler/control/CompilationThread.cpp#L12608

CODE

**J9Method_HT**",Investigation and Exploration,True,295,CONTRIBUTOR,False,False,False,0.137254902,0.07692307692,0.1904761905,0.4230769231,0.8054811495,0.1945188505,0.1631008731,0.2634355634
I have now opened a new issue at https://github.com/tensorflow/tensorflow/issues/17629.,Potential New Issues and Requests,False,87,NONE,False,False,False,1.0,0.07086614173,0.4926686217,1.0,0.404942323,0.595057677,0.001195753854,0.01097919447
Will trace it further.,Investigation and Exploration,False,22,CONTRIBUTOR,True,False,False,0.1904761905,0.06896551724,1.0,0.9449541284,0.9986823435,0.001317656456,0.002428514487,0.005742138251
"@gacholio - right and now I think that the answer is _probably_ that the when the hang occurs, it occurs before the dump is generated.",Investigation and Exploration,False,134,NONE,True,False,False,0.6153846154,0.32,0.25,0.8418079096,0.08562237087,0.9143776291,0.0002356611565,6.35e-05
Perhaps again this is the most likely scenario.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.347826087,0.08791208791,0.625,0.9125874126,0.8779153049,0.1220846951,0.01532565869,0.003869158807
I have not seen anything obviously wrong in the log so far.,Investigation and Exploration,False,59,MEMBER,False,False,False,0.3,0.1304347826,0.5454545455,0.7924528302,0.6067408459,0.3932591541,0.03227550175,0.06952239071
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3318965517,1.0,0.3667344851,0.6332655149,0.1014656753,0.06070739721
The problem can be triggered more readily through a carefully designed test case and JIT stress options.,Investigation and Exploration,False,104,CONTRIBUTOR,False,False,False,0.6538461538,0.1827956989,0.5555555556,0.8648648649,0.8399273015,0.1600726985,0.8852104953,0.004353145679
So it seems like this is happening when mixing numpy installed via pip and conda.,Investigation and Exploration,False,81,MEMBER,False,False,False,0.3191489362,0.2112676056,0.7719298246,0.5714285714,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
"At class unloading time, cleaning classloaders time GC trying to unload one of classloaders (I will try to find out which one).",Investigation and Exploration,False,127,CONTRIBUTOR,False,False,False,1.0,0.2417582418,0.25,0.04195804196,0.003804455496,0.9961955445,0.005933531811,0.005236420778
Is this 100% recreation rate pointing to a major clue about where this bug is?,Investigation and Exploration,False,78,NONE,False,False,False,1.0,0.1127819549,0.5,0.796437659,0.8159884149,0.1840115851,0.000908283777,6.58e-05
Then I installed Gensim.,Observed Bug Behaviour,False,24,NONE,False,False,False,0.1428571429,0.0412371134,0.6538461538,0.2727272727,0.8498247724,0.1501752276,0.001720552123,0.0001657418063
We're announcing this plan early because we want to collect feedback on what features you&mdash;as TensorFlow users&mdash;would like to see in an input pipeline API.,Motivation,False,165,CONTRIBUTOR,True,True,False,0.5319148936,0.3731343284,0.03606102635,0.8666666667,0.0,1.0,0.0,0.000766008561
"Without more details is impossible to know, my guesses are that you only train for a few iterations, so the moving_mean and moving_average haven't converge yet.",Usage,False,160,MEMBER,False,False,False,1.0,0.1,0.4132762313,0.5,0.3730683512,0.6269316488,0.007204899096,0.03827269103
So if I want to debug my application I either just use OpenJDK+HotSpot for that or suffer the performance loss with openJ9.,Expected Behaviour,False,123,NONE,True,False,False,1.0,0.1605839416,0.5,0.6765799257,0.02636609455,0.9736339055,9.69e-05,0.01430180553
Maybe I do it over the weekend.,Social Conversation,False,31,CONTRIBUTOR,False,False,False,0.1842105263,0.04575163399,0.9646302251,1.0,0.2018791345,0.7981208655,6.508280685e-05,4.380506786e-05
"It's probably still going to take a lot of time to figure this out, though.",Social Conversation,False,75,CONTRIBUTOR,False,False,False,0.625,0.2419354839,1.0,0.1256830601,0.1047688942,0.8952311058,0.0001562891595,1.0
Happy Anniversary TensorFlow !,Social Conversation,False,30,NONE,False,False,False,0.2727272727,0.04109589041,0.3426724138,0.2,0.3894640095,0.6105359905,0.1116482733,0.1289154667
"*AIX32/64 / Linux64 BE**

CODE

*",Solution Discussion,True,37,CONTRIBUTOR,False,False,False,0.05405405405,0.046875,0.6923076923,0.7111111111,0.08012656297,0.919873437,0.0570348239,0.002818533349
Another possibility is the core is going to an unexpected place.,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.6875,0.08270676692,0.75,0.1755725191,0.01412833163,0.9858716684,0.002938228528,0.0009773656664
"Yes, it may change during GC, and GC can occur during a compilation.",Social Conversation,False,68,CONTRIBUTOR,False,False,False,1.0,0.06878306878,0.6666666667,0.6685714286,0.4481962023,0.5518037977,0.0003017200526,0.0006369645556
This is the same solution employed in the 0.23 release.,Social Conversation,False,55,CONTRIBUTOR,False,False,False,0.4166666667,0.1612903226,0.8,0.5792349727,0.6994168402,0.3005831598,0.04797128298,0.008864014105
Do you have an old(er) Miniconda/Anaconda 2.7 distro installed?,Investigation and Exploration,False,63,CONTRIBUTOR,False,False,False,0.25,0.1408450704,0.8859649123,0.3333333333,0.6460796767,0.3539203233,0.0001352009984,0.00843712351
thanks though!,Social Conversation,False,14,NONE,False,False,False,1.0,0.002894356006,0.8481848185,0.6666666667,0.2925249869,0.7074750131,0.0003439990441,0.0001064391661
"I think ""dummy"" is what statisticians use and it's what pandas uses.",Solution Discussion,False,68,MEMBER,False,False,False,1.0,0.1875,0.5661764706,1.0,0.1224467849,0.8775532151,1.464513615e-05,3.539241235e-05
*         [cycle_range] URL ,Expected Behaviour,False,28,NONE,False,False,False,0.1,0.0447761194,0.1705963939,0.8,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"Maybe we should get a javacore when the livelock happens on all the services and check how many threads are active (since the Liberty thread pool can change the number of threads, it may be good to check on whether the thread count is unexpectedly high for example).",Investigation and Exploration,False,266,CONTRIBUTOR,False,False,False,0.6,0.6,0.8333333333,0.9264705882,0.9666406206,0.03335937939,0.04562398057,0.02395737432
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4525862069,1.0,0.5457754684,0.4542245316,0.1444971057,0.02000046477
"So, I setCODE in pycharm Environment variable field and it works.",Solution Discussion,True,65,NONE,False,False,False,0.7857142857,0.08661417323,0.7536656891,1.0,0.5612924115,0.4387075885,0.2627005402,0.09867224734
What version of Linux is it?,Investigation and Exploration,False,28,CONTRIBUTOR,False,False,False,0.2727272727,0.04511278195,0.5,0.2111959288,0.02648115249,0.9735188475,0.03206912113,0.05548420273
Most of it isn't specific to any xlc version.,Solution Discussion,False,45,CONTRIBUTOR,False,False,False,0.6,0.05172413793,1.0,0.4227941176,0.7657208376,0.2342791624,9.33e-06,4.25e-06
I don't think fit_extend is a particularly great name so I'd welcome other suggestions.,Expected Behaviour,False,87,CONTRIBUTOR,True,True,False,0.46875,0.2112676056,0.01811594203,0.7142857143,0.0,1.0,0.0,0.02323685476
"With the current behaviour of the OneHotEncoder, if the unseen values are within the range(0, max), it will not raise an error even if CODE (the default).",Solution Discussion,True,154,CONTRIBUTOR,True,False,False,0.6136363636,0.421875,0.2794117647,0.8571428571,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
It will use the new API.,Solution Discussion,False,24,CONTRIBUTOR,False,False,False,0.4615384615,0.008683068017,0.5511551155,1.0,0.1355129749,0.8644870251,0.00125745356,0.03511934773
"Sounds like the JIT will not need to load r12 for helper calls, if r2 is loaded - we're not using the linker/loader, so the target C code will simply expect r2 to be loaded.",Solution Discussion,False,173,CONTRIBUTOR,False,False,False,1.0,0.2734375,0.5,0.4555555556,0.03751764127,0.9624823587,0.0001713537721,0.0003858680808
@ogrisel I will give it a try :),Contribution and Commitment,False,32,CONTRIBUTOR,False,False,False,1.0,0.1176470588,0.0406504065,1.0,0.01583277614,0.9841672239,0.0006046437747,0.00144962568
"Tried with tensorflow 1.5, it broke.",Solution Discussion,False,36,CONTRIBUTOR,False,False,False,0.75,0.04724409449,0.1906158358,0.6666666667,0.2837406291,0.7162593709,0.2378544464,0.001119586478
"I've managed to find the inlining branch that's responsible for the messed up constant pool entry which still involves 100 methods, unfortunately.",Investigation and Exploration,False,146,CONTRIBUTOR,False,False,False,1.0,0.1729323308,0.6666666667,0.9363867684,0.909962974,0.09003702602,0.04177124329,0.03295492264
"The test loads classes from a jar using a CODE, and after every thousand classes it checks whether ten minutes have passed - so the last batch of 1000 classes in the jar might finish being loaded after ten minutes have passed.",Investigation and Exploration,True,226,MEMBER,False,False,False,1.0,0.6119402985,0.6,0.7572254335,0.01724097253,0.9827590275,1.59e-05,1.18e-05
@xieqihuiPG See [StagingArea] URL  and [MapStagingArea] URL ,Solution Discussion,False,60,CONTRIBUTOR,False,False,False,1.0,0.1194029851,0.839112344,1.0,0.7401966204,0.2598033796,0.008995129102,0.1736946043
"Hi, Using the above CODE layer in CODE, I'm getting CODE as an output for validation graph while the train graph runs seamlessly.",Usage,True,129,NONE,False,False,False,1.0,0.08846153846,0.7708779443,0.25,0.6216425187,0.3783574813,0.0279240315,0.007914289561
This is what I'm attempting in the helpers.,Task Progress,False,43,CONTRIBUTOR,False,False,False,0.4210526316,0.0625,1.0,0.6,0.04007896426,0.9599210357,3.37e-05,0.0001975507147
"is wrong to fix by switching from one hook to another because of just reducing time window for race condition
 
 The proposed solution is that unless we have an explicit expectation, the JIT needs to clean up the table entries during the respective hooks.",Solution Discussion,False,257,CONTRIBUTOR,False,False,False,1.0,0.4945054945,0.5,0.6013986014,0.8563386878,0.1436613122,0.005301125006,0.003785967656
Is there any link related to node-gyp binding for tensor flow API ??,Solution Discussion,False,68,NONE,False,False,False,1.0,0.1780821918,0.3211206897,1.0,0.3513832036,0.6486167964,0.1292799766,0.003344771761
pip on the other hand will use wheels that are shipped with Accelerate (at the time of writing).,Investigation and Exploration,False,96,MEMBER,False,False,False,0.6666666667,0.1855670103,0.3609467456,0.8,0.8123980581,0.1876019419,2.677933057e-05,1.887267362e-06
CPU info: CODEPlatform info: CODE,Investigation and Exploration,True,33,NONE,False,False,False,0.1428571429,0.07042253521,0.6257309942,0.6666666667,0.4580201019,0.5419798981,0.004204377413,0.003934390567
"(This is what I was seeing, which caused the JWT to fail to create.",Investigation and Exploration,False,67,NONE,True,False,False,0.7368421053,0.175,0.4,0.5833333333,0.6496013347,0.3503986653,0.3672811628,1.0
My orginial code was:CODE,Bug Reproduction,True,25,NONE,False,False,False,0.1923076923,0.007235890014,0.4851485149,0.25,0.08979967049,0.9102003295,0.01683649271,0.03567836101
"@planetf1 , I am wondering whether it is possible to reproduce the issue locally (the specific steps to do so), in which case we are able to manually compile a build with debugging info/messages to figure out what really happened to the code (the problem should be independent of platforms).",Bug Reproduction,False,291,CONTRIBUTOR,False,False,False,1.0,0.3759398496,1.0,0.3384223919,0.4393881531,0.5606118469,0.000219099957,0.0233304665
"The failing tests don't block any promotion, they just fail every night in the testing.",Testing,False,87,CONTRIBUTOR,True,False,False,1.0,0.2419354839,0.2,0.5949367089,0.4808175087,0.5191824913,0.003806695701,0.001055956968
I doubt this is an issue stemming from OpenJ9 JIT compilation.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.2156862745,0.1375,1.0,0.9509803922,0.9704325596,0.02956744036,0.02395737432,0.001040994599
Glad to see that there's official progress on this.,Social Conversation,False,51,NONE,False,False,True,9.0,0.1232876712,0.974137931,1.0,1.0,0.0,0.5674118797,0.0
I didn't switch back and forth between hotspot and openj9.,Social Conversation,False,58,CONTRIBUTOR,False,False,False,0.2127659574,0.101010101,0.25,0.3824561404,0.1199922694,0.8800077306,0.001815624911,0.003294872886
However... the segmentation fault is not limited to JRE it happened to me on both Open J9 JRE and Open J9 JDK (but never with Hotspot).,Observed Bug Behaviour,False,135,NONE,True,False,False,1.0,0.2626262626,0.7142857143,0.5614035088,0.1993600534,0.8006399466,0.003371874835,0.005835937215
"Would need to dig more to find it.

> And I think the reason it does that is because CODE needs to be done on JITServer.",Investigation and Exploration,True,122,MEMBER,False,False,False,1.0,0.1375661376,0.6666666667,0.7371428571,0.4487252816,0.5512747184,4.84e-05,0.0001510669674
So basically the compile request keeps failing and it keeps requesting.,Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,0.4782608696,0.0582010582,0.5,0.4114285714,0.4127998443,0.5872001557,0.002068168866,0.001724646721
We're barely getting started.,Social Conversation,False,29,COLLABORATOR,False,False,False,0.4,0.1052631579,0.9489051095,1.0,0.02497576789,0.9750242321,0.001584253352,0.2540453279
I managed to reproduce the problem even at noOpt.,Bug Reproduction,False,49,CONTRIBUTOR,False,False,False,0.9,0.1125,0.5,0.8431372549,0.9525743718,0.04742562817,0.005950197542,0.005270216391
CODE,Usage,True,4,MEMBER,False,False,False,0.04761904762,0.003846153846,0.7580299786,1.0,0.6163482777,0.3836517223,6.767211672e-05,0.005602480188
"If the C code is called directly from the compiled code, you will need to follow the appropriate convention there.",Solution Discussion,False,114,CONTRIBUTOR,False,False,False,1.0,0.15625,1.0,0.1,0.02652741742,0.9734725826,0.0003156516855,0.00130769984
We need the bytecode to figure out what's going on,Investigation and Exploration,False,50,MEMBER,False,False,False,0.2040816327,0.07518796992,1.0,0.04834605598,0.000182464119,0.9998175359,0.0001463391504,0.0001643249677
"Starting Application on 736bb006f300 with PID 70202 (/team/gac/async/agct-crash-demo/binaries/oms-sb-mybatis-0.0.1-SNAPSHOT.jar started by j9build in /team/gac/async/agct-crash-demo)
2021-12-01 15:45:01.427  INFO 70202 --- [           main] com.omsee.",Investigation and Exploration,False,252,CONTRIBUTOR,False,False,False,0.3846153846,0.3846153846,0.1578947368,0.4364640884,0.1325438863,0.8674561137,6.47e-05,3.39e-05
This message gets printed out *after*,Solution Discussion,False,37,CONTRIBUTOR,False,False,False,0.2,0.09677419355,0.3333333333,0.7923497268,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"Since I had JDK 12 builds as well I tested them and they were pretty similar, except the OpenJ9 runs were all about 1 second slower.",Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,1.0,0.1897810219,0.5,0.3271375465,0.0199179817,0.9800820183,0.0002223786649,0.0002232068908
"https://openj9-jenkins.osuosl.org/job/Test_openjdk17_j9_extended.functional_ppc64le_linux_Personal/11/tapResults/
CODE
To reproduce, run CODE threads (e.g. in rc021.java) in a loop, adding and removing a static field from a class.",Testing,True,232,CONTRIBUTOR,True,True,False,1.0,0.2580645161,0.5714285714,0.01544401544,0.0,1.0,0.0,0.03406420424
Fixed my problem.,Solution Discussion,False,17,NONE,False,False,False,0.03092783505,0.03092783505,0.8284023669,1.0,0.8588999674,0.1411000326,0.005718638633,2.097846668e-05
-         n_values=value,Solution Discussion,False,24,CONTRIBUTOR,True,False,False,0.06976744186,0.046875,0.3639705882,0.75,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
Was looking at slightly older code...,Task Progress,False,37,CONTRIBUTOR,False,False,False,1.0,0.09375,1.0,0.5531914894,0.7990601361,0.2009398639,0.009819337652,0.1984352534
@kratzert https://www.tensorflow.org/performance/performance_models and the associated code shows how to use StagingArea.,Workarounds,False,121,NONE,False,False,False,1.0,0.1641791045,0.8016643551,1.0,0.6111330672,0.3888669328,0.006779557496,0.02902485329
The build is an interim build produced by the build process.,Solution Discussion,False,60,CONTRIBUTOR,False,False,False,0.4074074074,0.0632183908,0.6666666667,0.6029411765,0.7689727487,0.2310272513,0.0003819065821,0.01062274398
would be great to know if it's planned to be released anytime soon.. SCREEN_NAME ,Task Progress,False,81,NONE,False,False,False,0.7142857143,0.02170767004,0.8679867987,0.6666666667,0.2925639875,0.7074360125,5.387222008e-05,7.23833794e-05
Cheers.,Social Conversation,False,7,NONE,False,False,False,0.02631578947,0.006535947712,0.5948553055,1.0,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
I'm not comfortable with that being considered a sufficient workaround for this issue,Workarounds,False,85,MEMBER,False,False,False,0.4814814815,0.1397849462,1.0,0.1158301158,0.08056887105,0.9194311289,0.002398519856,0.002025499661
Are each data item (input/target) couple?,Motivation,False,41,NONE,False,False,False,0.2333333333,0.1044776119,0.1567267684,0.5142857143,0.04064994448,0.9593500555,0.2125437083,0.01543061897
just a suggestion..,Social Conversation,False,19,NONE,False,False,False,0.1142857143,0.03149606299,0.4252199413,0.8571428571,0.3804081986,0.6195918014,0.00183836987,0.0006322631694
"@dsouzai it is an intermittent problem, the first occurrence of the failure probably didn't line up with the change that caused the problem.",Investigation and Exploration,False,140,CONTRIBUTOR,True,False,False,1.0,0.3965517241,0.5,0.119266055,0.02079385367,0.9792061463,0.0009727685091,3.3e-05
"Then let's binary search on that number, try 100 next and see if we pass/fail, then continue searching.",Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,0.5757575758,0.1428571429,0.8823529412,0.5521628499,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
"We will provide methods for creating datasets from tensors, and deriving them from another dataset (e.g. by slicing its elements, repeating its elements, shuffling its elements, batching its elements, mapping a function over its elements, etc.).",Usage,False,245,CONTRIBUTOR,True,True,False,0.7659574468,0.5373134328,0.02912621359,0.7,0.0,1.0,0.0,0.000766008561
No solution yet!?,Task Progress,False,17,NONE,False,False,False,1.0,0.02362204724,0.8005865103,1.0,0.6998853104,0.3001146896,0.1641710142,0.02172323142
Can we switch from SVM to non-SVM in a compilation?,Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,1.0,0.1774193548,0.75,0.4262295082,0.65955413,0.34044587,0.001387996583,0.0005831074118
Another thing that would be cool would be the ability for Session's to return Futures that could then be used as input to other Session runs.,Expected Behaviour,False,141,CONTRIBUTOR,False,False,False,1.0,0.3880597015,0.3938973648,0.25,0.3322165772,0.6677834228,0.03860581352,0.04548767515
It's strange that the error shows such a long time after the compilation of the method.,Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.9411764706,0.2,1.0,0.8333333333,0.9506093286,0.04939067138,0.0226844032,0.006464895429
"We always need two remote messages to complete the ""runFEMacro_invokeILGenMacrosInvokeExactAndFixup"" request.",Investigation and Exploration,False,109,CONTRIBUTOR,False,False,False,0.5238095238,0.0582010582,0.5,0.1771428571,0.308244607,0.691755393,0.01265320363,0.0005070055754
I've downloaded it and confirmed that it doesn't hang with the test case you provided.,Testing,False,86,CONTRIBUTOR,False,False,False,0.6666666667,0.2388059701,0.6666666667,0.9832402235,0.990322308,0.009677692014,0.1542127927,0.02467101294
"so if I do .fit([[5]]).transform([[4]]), for which values of n_values,categories and handle_umknown will that raise an error?",Usage,False,125,MEMBER,False,False,False,1.0,0.28125,0.3235294118,1.0,0.01313797378,0.9868620262,0.00316172217,0.0002831392988
Is thatwhat you are suggesting?,Social Conversation,False,31,MEMBER,False,False,False,0.2272727273,0.078125,0.3308823529,1.0,0.0132023321,0.9867976679,0.0002831392988,0.1378318852
Any update on this @Leonardo2718?,Task Progress,False,33,MEMBER,False,False,False,0.3846153846,0.08064516129,0.5,0.131147541,0.2953108514,0.7046891486,1.0,0.0001270779714
Please open a new issue for related bugs.,Action on Issue,False,41,NONE,False,False,True,8.0,0.1333333333,1.0,2.0,1.0,0.0,0.9680205697,0.0
Something very weird.,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.25,0.0447761194,0.5,0.5363128492,0.005282091334,0.9947179087,1.47e-05,0.0003370027271
@neighthan: yes this is something that SCREEN_NAME  has planned as well :),Task Progress,False,74,CONTRIBUTOR,False,False,False,1.0,0.1940298507,0.4327323162,1.0,0.4000800799,0.5999199201,0.0001180823828,0.008142085681
"Taking a look at the trees for the sequence of generated instructions[3], we can see that the compiled method is calling CODE, which is a recognized method[4].",Investigation and Exploration,True,159,CONTRIBUTOR,False,False,False,0.8709677419,0.5744680851,0.5555555556,0.7884615385,0.6986733294,0.3013266706,0.2919761514,0.1217072968
**The set up where TSNE does not work:**,Bug Reproduction,False,40,NONE,False,False,False,0.4444444444,0.1126760563,0.8274853801,0.6666666667,0.6456610805,0.3543389195,1.0,4.677373331e-05
I notice the same type of memory issues on my systems that analyze streaming Twitter data - note I've not yet narrowed it down to spacy yet but my first cursory look found this ticket to be the most relevant possibility,Observed Bug Behaviour,False,219,NONE,False,False,False,1.0,0.6612903226,0.2114537445,1.0,0.1925825232,0.8074174768,0.6482365618,5.170680801e-06
"It seems like the pickler tries to pickle a Vocab, Tokenizer, Tagger, Parser, and Matcher object.",Solution Discussion,False,97,CONTRIBUTOR,False,False,False,0.64,0.1045751634,0.3279742765,0.5,0.01820665371,0.9817933463,0.01064935216,0.001404504327
Thanks for the clarification @jdmpapin and apologies @babsingh - I misread the original comment.,Social Conversation,False,96,MEMBER,False,False,False,1.0,0.1397849462,1.0,0.1351351351,0.08355911787,0.9164408821,0.008601845704,0.01254839937
-         This seems like the biggest argument---the cost of dev time.,Solution Discussion,False,70,NONE,False,False,False,0.4642857143,0.08496732026,0.1318327974,0.4666666667,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
Since they are afraid that might interfere with other users' settings and environments.,Solution Discussion,False,87,NONE,True,False,False,0.52,0.1023622047,0.2316715543,0.75,0.3332287349,0.6667712651,0.02958178195,0.02419682242
It's a result of CODE being the same as CODE on a machine with 1 core.,Potential New Issues and Requests,True,70,MEMBER,False,False,False,1.0,0.2352941176,0.1382113821,1.0,0.2748118407,0.7251881593,0.001495897677,0.0001153346778
"Seems we aren't copying the jvm.lib file (but should be), only the jvm.dll files.",Solution Discussion,False,81,CONTRIBUTOR,True,False,False,1.0,0.1186440678,0.5,0.7151515152,0.5535676125,0.4464323875,0.00606228134,0.0004840842543
@huxuanlai Works for me as well.,Social Conversation,False,32,NONE,False,False,False,1.0,0.008683068017,0.9108910891,1.0,0.3748855098,0.6251144902,0.05363264296,0.05261488518
Depending on how to interpret EAGAIN.,Social Conversation,False,37,CONTRIBUTOR,False,False,False,0.4,0.09677419355,1.0,0.2025316456,0.04609541414,0.9539045859,4.38e-05,0.002409448773
Unfortunately it means we have a lot of code to look at to figure out what's going on.,Investigation and Exploration,False,86,CONTRIBUTOR,False,False,False,0.6,0.2686567164,0.5,0.8603351955,0.1409452519,0.8590547481,0.06580775503,0.4477852629
"Comparison of these windbg results indicates:
Java 11 VM loaded java.dll from Java 8 because the path includes Java 8 as follows: (from STS4_windbg_java11_jre_Xint.txt)
CODECODE425f0000 00007ff7CODE11db0000 00007ffdCODE10130000 00007ffdCODEf5530000 00007ffcCODEf8dc0000 00007ffcCODE5d880000 00000000CODECODE",Investigation and Exploration,True,309,CONTRIBUTOR,False,False,False,0.6,0.3333333333,0.75,0.8421052632,0.803200419,0.196799581,0.3518178539,0.2306492075
We see that the underlying arrayCopyEvaluator does support sizes of long[3].,Solution Discussion,False,76,CONTRIBUTOR,False,False,False,0.2894736842,0.2340425532,0.5,0.9,0.7299060094,0.2700939906,0.01554507959,0.00748487997
Next time that happens I'll use the --no-deps option.,Solution Discussion,False,53,NONE,False,False,False,0.303030303,0.1030927835,0.5473372781,1.0,0.8485344376,0.1514655624,7.298758198e-05,0.0001585701904
"Ran again, excluding CODE and the problem still reproduces.",Bug Reproduction,True,59,CONTRIBUTOR,False,False,False,0.4090909091,0.1125,0.5,0.8578431373,0.9556836058,0.04431639422,0.01437384465,0.001152633296
"Single cpu, but it was 8 cores I think?",Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,0.6923076923,0.06569343066,0.5,0.43866171,0.02066300145,0.9793369986,6.05e-05,6e-05
"Tried the same code on Linux using Python 2.7.6 and 0.17, and it works.",Bug Reproduction,False,71,NONE,False,False,False,1.0,0.1971830986,0.07894736842,1.0,0.09826375851,0.9017362415,0.008713891162,0.07295885932
The question is how frequently users have such consecutive integers as categories without having used LabelEncoder as the previous step ..,Motivation,False,138,CONTRIBUTOR,True,False,False,0.4772727273,0.328125,0.4742647059,1.0,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"Also observing my CPU/GPU resources/workload I can see, that the GPU workload drops to zero often (I guess in between batches).",Solution Discussion,False,127,NONE,False,False,False,0.575,0.3432835821,0.6366158114,0.2916666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
So it probably never was a valid handleRef.,Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,0.2666666667,0.04232804233,0.6666666667,0.2514285714,0.3251821571,0.6748178429,0.002117006954,0.0005752961223
"The pre-NOP I'm generating seems unnecessary, but the C compiler is generating the post-NOP (perhaps to reload r2 if necessary after the call in some situations?).",Solution Discussion,False,163,CONTRIBUTOR,False,False,False,0.2522522523,0.21875,0.4615384615,0.6944444444,0.08012656297,0.919873437,0.0570348239,0.002818533349
but I am open to other suggestions.,Social Conversation,False,35,CONTRIBUTOR,False,False,False,0.5833333333,0.1489361702,1.0,0.4846153846,0.3707829483,0.6292170517,0.001912007579,0.2098027598
Failing at a rate of 100% on this particular machine.,Bug Reproduction,False,53,CONTRIBUTOR,False,False,False,0.4347826087,0.2127659574,0.3333333333,0.1730769231,0.1072645887,0.8927354113,0.01345561023,0.009663080221
Hopefully I can explain this well enough to not get to that point.,Social Conversation,False,66,CONTRIBUTOR,False,False,False,0.2708333333,0.06878306878,0.2352941176,0.5485714286,0.447477842,0.552522158,0.001615795728,8.48e-05
The latest crash shows that we got different results calling CODE.,Investigation and Exploration,True,66,CONTRIBUTOR,False,False,False,1.0,0.1774193548,0.25,0.4153005464,0.65955413,0.34044587,0.001387996583,0.0005831074118
"I'm using that and following your sense2vec implementation, with a few changes, to attempt the [word clustering that is mentioned on Google Code word2vec page] URL .",Motivation,False,165,CONTRIBUTOR,False,False,False,1.0,0.1699346405,0.5530546624,1.0,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
Andrew @andrewcraik asked me off-line to check whether the difference in compile-time accounts for the entire difference in execution time for these tests.,Contribution and Commitment,False,155,MEMBER,False,False,False,0.390625,0.3731343284,0.3333333333,0.7919075145,0.018058256,0.981941744,0.0008600782261,0.001167361543
(just removed a lot of the previous comment as I was repeating myself).,Social Conversation,False,71,MEMBER,False,False,False,1.0,0.1830985915,0.5362318841,1.0,0.04254938106,0.9574506189,1.965207131e-06,8.618836988e-05
We'll plan to have an announcement when it's released.,Task Progress,False,54,CONTRIBUTOR,False,False,False,1.0,0.01302460203,0.6105610561,0.5,0.1826155768,0.8173844232,0.005664414752,0.04210161464
I really need to write a blog post/tutorial on working with large jobs.,Social Conversation,False,71,MEMBER,False,False,False,0.35,0.09150326797,0.7588424437,0.05263157895,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"It worked as well in my notebook (Xubuntu 18.04, GT 840m).",Solution Discussion,False,58,NONE,False,False,False,0.3870967742,0.09448818898,0.7829912023,0.75,0.6608360282,0.3391639718,1.0,0.07077280307
"Tried with CODE
still failed with same error",Bug Reproduction,True,45,CONTRIBUTOR,False,False,False,1.0,0.09782608696,1.0,0.5911949686,0.5300158002,0.4699841998,0.07106417022,0.08663149456
Also SCREEN_NAME  and SCREEN_NAME  can you please check that you can reproduce the problem on the current state of the scikit-learn master branch?,Bug Reproduction,False,146,MEMBER,False,False,False,1.0,0.3661971831,0.1549707602,1.0,0.1664711706,0.8335288294,8.593635617e-05,0.0002442474535
"From my case, which is running the [ptb tutorial] URL , the solution is just to add a parameter named with CODE like this at line 112:",Solution Discussion,True,134,NONE,False,False,False,0.7027027027,0.03762662808,0.06930693069,1.0,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
"It's the cmdline tester which is responsible for the following (which always shows the correct result), and then optionally returning an exit code.",Investigation and Exploration,False,147,CONTRIBUTOR,True,False,False,1.0,0.3965517241,0.4285714286,0.7247706422,0.9939440574,0.006055942622,0.006864019174,0.0128898379
Here's the bit of code where the memory growth is occuring:,Observed Bug Behaviour,False,59,MEMBER,False,False,False,0.275,0.1774193548,0.3348017621,0.4166666667,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"but the NPE did get caught by JCL code and wrapped into a CODE, would that affect how xdump work?",Investigation and Exploration,True,97,CONTRIBUTOR,False,False,False,1.0,0.2173913043,1.0,0.3018867925,0.3660520758,0.6339479242,4.77e-05,0.0001236847171
Is that an acceptable usage pattern?,Solution Discussion,False,36,MEMBER,False,False,False,1.0,0.08450704225,0.6050724638,1.0,0.04551519476,0.9544848052,0.002306767149,3.860228292e-06
(There seem to be two places containing some amount of separate documentation: either on [GitHub] URL  or on [tensorflow.org](https://www.tensorflow.org/versions/r1.2/api_docs/python/tf/contrib/data/Dataset#flat_map)),Usage,False,217,CONTRIBUTOR,False,False,False,0.8,0.2985074627,0.6782246879,0.4,0.5120684655,0.4879315345,0.0002672122887,0.0005771785436
"If anyone has experience with SWIG, I'd love to collaborate, as it seems like a huge amount of the python SWIG interfaces are custom overrides etc. and I'm keen not to reproduce their work.",Contribution and Commitment,False,189,NONE,False,False,False,0.9210526316,0.4794520548,0.2219827586,0.6,0.1037013205,0.8962986795,0.265083066,0.07059453633
You can do: CODE,Potential New Issues and Requests,True,16,MEMBER,False,False,False,0.2222222222,0.04210526316,0.6105263158,0.8,0.1887344648,0.8112655352,8.377216225e-06,7.438390269e-06
"2) The exceptions above (FindException, etc) seem to be a red herring because the compiled build failed to initialize the library jclse11_29.dll at stage 14 (JCL_INITIALIZED) with JIT off as follows:

CODE
If so, it is likely jclse11_29.dll was not generated correctly during compilation or there are still problems with the corresponding config/setting for the library generation.",Investigation and Exploration,True,384,CONTRIBUTOR,False,False,False,1.0,0.5084745763,1.0,0.8242424242,0.6024180265,0.3975819735,0.01958885944,0.02154742127
"This was when attempting to reproduce #7539 (my environment doesn't yet have the fix), but I had also cleaned up my build environment by removing all of my ~/.m2 - as well as pulled current updates from master.",Investigation and Exploration,False,210,NONE,True,True,False,0.3894736842,0.2781954887,0.875,0.01781170483,0.0,1.0,0.0,0.0001794494051
in both cases python-numpy is CODE (i.e. 1.12.1 numpy) and passed ok with numpy 1.8.2 in Debian jessie.,Observed Bug Behaviour,True,103,MEMBER,True,True,False,0.8636363636,0.2794117647,0.0162601626,1.0,0.0,1.0,0.0,0.02663056991
Issue opened at Adopt for the Hotspot crash https://github.com/AdoptOpenJDK/openjdk-build/issues/1327,Bug Reproduction,False,101,CONTRIBUTOR,False,False,False,1.0,0.05172413793,1.0,0.8786764706,0.7909795436,0.2090204564,4.02e-05,0.002178863875
"Sure, we will look into it",Contribution and Commitment,False,26,CONTRIBUTOR,False,False,False,1.0,0.03448275862,1.0,0.09191176471,0.7182795439,0.2817204561,5.94e-05,0.001423319644
This will need to be fixed.,Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.75,0.03174603175,0.6666666667,0.44,0.4140530572,0.5859469428,0.0007909286976,0.001985392445
"I don't think that should cause an issue - if I can locate a map with the correct BCI using the catch address (well, catch address + 1 techinically), then we're fine.",Solution Discussion,False,166,CONTRIBUTOR,False,False,False,1.0,0.46875,0.5,0.4609929078,0.7599422624,0.2400577376,0.0002837124983,0.01003572854
Is there anything I can help out with straight away or you just want me to wait until you push your initial ideas?,Contribution and Commitment,False,114,NONE,True,False,False,0.6388888889,0.6052631579,0.5620437956,1.0,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
@amueller I didn't use the CODE.,Observed Bug Behaviour,True,32,NONE,False,False,False,0.6,0.0618556701,0.9467455621,0.5,0.9995643962,0.0004356038077,0.0002286970723,0.00109431708
"One more potential difference:

> After switching back and forth between the demo and OpenJ9, I didn't detect any crash in the Eclipse ID

I didn't switch back and forth between hotspot and openj9.",Investigation and Exploration,False,201,NONE,True,False,False,0.7142857143,0.3535353535,0.1111111111,0.350877193,0.1194799462,0.8805200538,0.004838964607,0.001815624911
Your current way might have problems as well.,Usage,False,45,CONTRIBUTOR,False,False,False,0.32,0.03076923077,0.04068522484,0.5,0.1735438522,0.8264561478,0.0001056172017,5.01199785e-05
see our FAQ,Solution Discussion,False,11,MEMBER,False,False,False,0.2727272727,0.03092783505,0.8727810651,1.0,0.9551027785,0.04489722149,0.001193905199,0.04128957575
The script hangs forever and the CPU utilization is low.,Observed Bug Behaviour,False,56,NONE,False,False,False,0.2857142857,0.1030927835,0.3165680473,1.0,0.8123334347,0.1876665653,1.255529445e-05,3.933462502e-05
Amazing work!.,Social Conversation,False,14,NONE,False,False,False,0.1052631579,0.002894356006,0.8613861386,1.0,0.2925508814,0.7074491186,0.0001064391661,5.387222008e-05
"Given previous results, I suspect the following will work

https://ci.eclipse.org/openj9/view/Test/job/Grinder/701 - multiheap:32 x 3 - failed (as expected)",Social Conversation,False,158,CONTRIBUTOR,True,False,False,1.0,0.2741935484,1.0,0.3628691983,0.2944218145,0.7055781855,0.0006679948777,0.001306819673
"What I meant was:  if we're dealing with JIT frames, perhaps 13167 fixes the problem, not causes it.",Solution Discussion,False,100,CONTRIBUTOR,False,False,False,1.0,0.2065217391,1.0,0.4842767296,0.4978780866,0.5021219134,0.000454293798,0.000135264426
I will try using Keras instead.,Solution Discussion,False,31,NONE,False,False,True,6.0,0.0618556701,0.9970414201,2.0,1.0,0.0,5.045956947e-06,0.0
Do you think it has something to do with the compileMethodHandleThunk request being queued instead of compiling synchronously?,Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,0.75,0.09523809524,0.6666666667,0.6342857143,0.4475201106,0.5524798894,8.48e-05,3.48e-05
"Sorry about this, I should have mentioned about this in the setup.",Social Conversation,False,66,NONE,True,False,False,0.5,0.08759124088,1.0,0.2267657993,0.002019598648,0.9979804014,0.0001337584893,6.92e-05
This could lead to severe slowdowns depending on the importance of these methods.,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.4814814815,0.09489051095,1.0,0.1598513011,0.001564982309,0.9984350177,0.0001569488156,3.35e-05
I don't know enough about the XSLT processing to know how to dump the generated files.,Investigation and Exploration,False,86,MEMBER,False,False,False,0.7619047619,0.1203007519,0.5,0.05852417303,0.0003519356568,0.9996480643,0.0008114056243,0.0007002205715
"Yeah.. I am starting to think that

> If it is still slow then there is likely some sort of issue with how the file is being read on your system.",Investigation and Exploration,False,147,NONE,True,False,False,0.9696969697,0.2335766423,0.25,0.6022304833,0.0254979151,0.9745020849,4.93e-05,0.0002157528574
"However, the error remained appearing in the env with CODE.",Investigation and Exploration,True,59,NONE,False,False,False,0.303030303,0.1408450704,0.7368421053,0.5555555556,0.4591724587,0.5408275413,0.0009613524417,0.007162331701
That may be it (and it's unnecessary as AGCT tells you the JNI context if there is one).,Investigation and Exploration,False,88,CONTRIBUTOR,False,False,False,1.0,0.1730769231,0.5,0.7127071823,0.2975828095,0.7024171905,9.84e-05,8.01e-05
"To clarify java version is a nightly build 
CODE
I can of course update/revert to GA, but it's taken a while to get the dump you asked for, and here it is...

Have moved for safety:
CODE",Solution Discussion,True,191,NONE,True,False,False,1.0,0.3157894737,1.0,0.2773536896,0.2279219658,0.7720780342,0.0366849359,0.0001733178764
I still need to play with is a bit to see how it works but this looks really great.,Social Conversation,False,83,NONE,True,False,False,0.8636363636,0.3064516129,0.8149779736,0.4,0.6128462627,0.3871537373,0.09855593002,0.1714850105
"Data doesn't just appear in the graph without reading it from disk, regardless of whether you do it via Python or TensorFlow's execution engine.",Solution Discussion,False,144,CONTRIBUTOR,False,False,False,0.8571428571,0.3582089552,0.3273231623,0.6666666667,0.2826429201,0.7173570799,0.0005756516163,0.0003837677442
1.         Text format,Solution Discussion,False,22,CONTRIBUTOR,False,False,False,0.1818181818,0.05970149254,0.4909847434,0.8571428571,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
It should already work that way.,Solution Discussion,False,32,CONTRIBUTOR,True,False,False,1.0,0.04109589041,0.5,0.6536312849,0.2545312644,0.7454687356,0.002648299987,0.0009966013216
"We should make feed_dict faster (likely by not copying the numpy.arrays like SCREEN_NAME  mentioned), but that's orthogonal to this change.",Potential New Issues and Requests,False,139,MEMBER,False,False,False,1.0,0.3134328358,0.213592233,0.5,0.04880070327,0.9511992967,0.043809073,0.001787522968
I agree that this should be changed.,Social Conversation,False,36,MEMBER,False,False,False,0.175,0.1129032258,0.2775330396,0.05555555556,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"I guess shmget() one...
CODE is described in https://www.ibm.com/support/knowledgecenter/en/ssw_aix_71/filesreference/mode.h.html as CODE",Investigation and Exploration,True,138,CONTRIBUTOR,False,False,False,0.3636363636,0.06896551724,0.75,0.2463235294,0.7477267944,0.2522732056,0.0003712750967,0.001172416587
What about extra params which can be used while training progress to customise loss for given input?,Expected Behaviour,False,100,NONE,False,False,False,1.0,0.2537313433,0.6920943135,1.0,0.5219059395,0.4780940605,0.07840110346,0.05557964708
File timestamps are not atomically updated and are not guaranteed to be updated for any given file update.,Solution Discussion,False,106,CONTRIBUTOR,False,False,False,0.4864864865,0.1313868613,0.5,0.9553903346,0.0729306553,0.9270693447,0.002656948816,0.170274971
For tensorflow 1.5 you must have installed the Cuda 9.0 and for tensorflow 1.4 you must use cuda 8.0.,Solution Discussion,False,101,NONE,False,False,False,1.0,0.1496062992,0.2961876833,0.6666666667,0.3428688502,0.6571311498,0.00239742362,0.0004045005306
"There seems to exist a workaround  URL , but it's not something I'd like to put in our getting-started install guide.",Solution Discussion,False,117,CONTRIBUTOR,False,False,False,1.0,0.1503267974,0.9421221865,0.75,0.201368343,0.798631657,0.00591569739,0.00137409764
The first run is expected to be slower because the cache is empty (non-existent).,Investigation and Exploration,False,81,CONTRIBUTOR,False,False,False,0.7142857143,0.1094890511,1.0,0.5576208178,0.02521770612,0.9747822939,5.8e-05,2.73e-05
Javascript happens to be to most prevalent language currently in existance..,Motivation,False,76,NONE,False,False,False,0.8,0.1643835616,0.8232758621,0.375,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
will try to create a minimal example that reproduces the problem.,Bug Reproduction,False,65,NONE,False,False,False,0.6470588235,0.1134020619,0.5946745562,0.1428571429,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4137931034,1.0,0.4933773423,0.5066226577,0.006507399198,0.01390095377
My feeling is we are the first ones who are trying to build DEBUG VM on PPC LE :),Social Conversation,False,81,CONTRIBUTOR,False,False,False,1.0,0.1484375,1.0,0.1277777778,0.028192159,0.971807841,1.78e-05,0.0001303405259
"I'm not sure why Eigen was not written to handle unaligned first and last ""packets"" so it wouldn't matter.",Potential New Issues and Requests,False,106,CONTRIBUTOR,False,False,False,0.4418604651,0.2835820896,0.3855755895,1.0,0.3228761377,0.6771238623,0.04972082678,0.01426913622
"@magick93 your issue seems to be something else, not the CUDA version.",Potential New Issues and Requests,False,70,NONE,False,False,False,1.0,0.09448818898,0.633431085,1.0,0.46542349,0.53457651,5.398270335e-05,0.02832686897
Otherwise everything should be the same.,Investigation and Exploration,False,40,MEMBER,False,False,False,0.75,0.0618556701,0.2130177515,1.0,0.2582333528,0.7417666472,0.0009051930247,0.0005513005954
I'm sure it's a real problem and we should continue to diagnose it and fix it.,Motivation,False,78,CONTRIBUTOR,False,False,False,0.2051282051,0.1720430108,0.25,0.667953668,0.5547508363,0.4452491637,0.002831223282,0.01376817541
"the origin code:from tensorflow.contrib import rnninputs = tf.placeholder(dtype=tf.int32, shape=[None, None], name=""inputs"")keep_prob = tf.placeholder(dtype=tf.float32, name=""keep_prob"")cell = rnn.GRUCell(10)cell = rnn.DropoutWrapper(cell=cell, input_keep_prob=keep_prob)cell = rnn.MultiRNNCell([cell for _ in range(5)], state_is_tuple=True) outs, states = tf.nn.dynamic_rnn(cell=cell, inputs=look_up, dtype=tf.float32)",Bug Reproduction,False,419,NONE,False,False,False,0.2481751825,0.0492040521,0.9537953795,0.6666666667,0.4233801806,0.5766198194,0.06521718752,0.3845326686
Is theinput to TSNE._tsne identical on both platforms?,Investigation and Exploration,False,54,MEMBER,False,False,False,0.4705882353,0.1176470588,0.6300813008,0.6666666667,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
"I will save the new/old space sizes as well as the following info:
main module/main class  (sun.java.command)
-Xgc and -Xgcpolicy
-Xmx
-Xms
-Xsoftmx
-Xmoi
java.class.path
jdk.module.path

Do you see any GC options that are missing here ?",Solution Discussion,False,247,CONTRIBUTOR,False,False,False,1.0,0.3287671233,0.5,0.3016759777,0.0320267529,0.9679732471,0.009905059007,0.0001774088301
"Finally, I get seq2seq model worked.",Solution Discussion,False,36,NONE,False,False,False,0.2857142857,0.008683068017,0.6732673267,0.3333333333,0.226528822,0.773471178,0.005343317335,0.08527687651
@gacholio Can you clarify what is it exactly that you comment out?,Investigation and Exploration,False,66,NONE,True,False,False,0.48,0.1153846154,0.3333333333,0.679558011,0.2891215161,0.7108784839,0.01909072661,0.01291495446
2.         Dynamical changing and resizing methods:,Expected Behaviour,False,51,NONE,False,False,False,0.4666666667,0.1044776119,0.8446601942,0.5714285714,0.7617931948,0.2382068052,0.1736946043,0.06663052939
"Options used:
CODE
Compilation log:
[log.txt.3.1.82666.20211109.183106.1.zip] URL ",Investigation and Exploration,True,85,CONTRIBUTOR,False,False,False,1.0,0.125,1.0,0.8480392157,0.9525743718,0.04742562817,0.005950197542,0.005270216391
I reproduced the issue with OpenJ9 for the flight service and HotSpot for auth/booking/customer services.,Bug Reproduction,False,105,CONTRIBUTOR,False,False,False,1.0,0.2125,0.2,0.8137254902,0.9506093286,0.04939067138,0.0226844032,0.006464895429
"There's a diversity of visions out there on friendly modern high-level idiomatic JS and ML APIs, each catering to different use cases.",Motivation,False,134,MEMBER,False,False,False,0.696969697,0.3150684932,0.9310344828,0.8333333333,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"But the verbose output you have sent had substantial discrepancy with what it should, and not just in the numbers.",Investigation and Exploration,False,114,MEMBER,False,False,False,1.0,0.2941176471,0.7317073171,0.5,0.590815313,0.409184687,0.001873670543,0.0005473217492
"Scenario:

1. CODE called (CODE), say now CODE = 2 
2. CODE called (GC happened) which increments CODE to 3
3. another CODE called (CODE), so now CODE = 3
4. CODE called and since 3 == 3 we don't fail the compilation.",Investigation and Exploration,True,222,CONTRIBUTOR,False,False,False,1.0,0.2328042328,0.5,0.2228571429,0.3087691503,0.6912308497,0.000545910493,0.007901423216
"It turns out this flaw is not in openj9 specifically, and is actually endemic to openjdk9!",Investigation and Exploration,False,90,NONE,True,False,False,0.5714285714,0.2388059701,0.5,0.5865921788,0.1112819629,0.8887180371,0.2689971282,0.0008696566537
I can pick up pytorch's dataset API in 5 minutes and it's good enough for all the popular academic datasets.,Motivation,False,108,NONE,False,False,False,1.0,0.2985074627,0.2385575589,0.4285714286,0.05000253453,0.9499974655,0.00540277799,0.0003827497926
", performance impact of specific setting is much less;
3) there are algorithms (eckeyGeneration ones) that the performance variation is so big that no conclusion can be drawn.",Task Progress,False,176,CONTRIBUTOR,False,False,False,1.0,0.4516129032,0.6666666667,0.5358649789,0.4792143262,0.5207856738,0.01177304509,0.003593754102
"In this situation, you'll be out of luck --- but we'll at least know to use an OOV symbol when you try to look up your string.",Solution Discussion,False,126,MEMBER,False,False,False,0.675,0.435483871,0.4273127753,1.0,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"The only way we can investigate, is that you post a fully standalone snippet which we can just copy and paste in an IPython sesion and see if we can reproduce the problem.",Bug Reproduction,False,171,MEMBER,False,False,False,1.0,0.3402061856,0.5917159763,1.0,0.849068871,0.150931129,0.0005769674315,0.0001106335994
"I hope to discuss what kinds of behaviour people expect from such ""vector stores"", so we can design a sane API.",Potential New Issues and Requests,False,111,CONTRIBUTOR,False,False,False,1.0,0.5526315789,0.8467153285,1.0,0.005237570315,0.9947624297,0.0006334939121,0.003893704171
"They make a copy of the cell, then pass the cell argument along to the attention decoder embedding function, then to the attention decoder itself.",Investigation and Exploration,False,146,NONE,False,False,False,0.6756756757,0.03617945007,0.2772277228,0.8,0.06816238482,0.9318376152,0.001820264,0.0002230832021
"What we've verified:
-> The J9Method_HT Entry was invalid prior to entering CODE.",Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,0.7777777778,0.1538461538,0.7142857143,0.3076923077,0.6101453274,0.3898546726,0.05114946292,0.001708499748
"For instance, if you want to just recognise entities and store them in textual form, you don't care that the CODE instances can diverge between your shards.",Motivation,True,156,MEMBER,False,False,False,0.7714285714,0.1764705882,0.4565916399,0.6666666667,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
I really like Spacy's simple and all in one approach.,Motivation,False,53,CONTRIBUTOR,False,False,False,0.5555555556,0.06535947712,0.8295819936,0.5,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
The symlink exists,Solution Discussion,False,18,NONE,False,False,False,0.2307692308,0.02362204724,0.9765395894,0.75,0.9717378488,0.02826215116,0.5218093819,0.05092861342
"It shouldn't, and that could maybe cause problems (though I think joblib should detect that).",Investigation and Exploration,False,93,MEMBER,False,False,False,1.0,0.1546391753,0.1893491124,1.0,0.2578282109,0.7421717891,8.343708337e-07,0.000173866989
Which thread is that?,Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.5714285714,0.05333333333,1.0,0.6779661017,0.08501162193,0.9149883781,0.000178113446,9.19e-06
+1.,Social Conversation,False,3,NONE,False,False,False,0.07142857143,0.01369863014,0.4375,0.5,0.5130292502,0.4869707498,0.0001876772615,0.009961501816
"I have in my system installed cuda-8.0, cuda-9.0, cuda-9.1.",Bug Reproduction,False,59,NONE,True,False,False,0.2432432432,0.07086614173,0.6920821114,0.2,0.5094864043,0.4905135957,0.02165076149,0.03664686068
"While that's happening, I figured we might as well try adding the extra info to the assert message, so I've opened #11279.",Investigation and Exploration,False,122,CONTRIBUTOR,False,False,False,1.0,0.3709677419,1.0,0.4043715847,0.6418388943,0.3581611057,0.01517828221,0.09158488929
decay value is 0.9,Usage,False,18,NONE,False,False,False,0.1818181818,0.01538461538,0.5289079229,0.6,0.4870778235,0.5129221765,0.5564473214,0.0300603195
"There is a decent possibility the bug has been fixed in 0.18.0, and even if it is not and is somehow hidden it should pop up in some other test eventually where it will be much easier to track down.",Task Progress,False,198,CONTRIBUTOR,False,False,False,1.0,0.3007518797,1.0,0.6768447837,0.6946068931,0.3053931069,9.44e-05,0.004019012644
My results above (https://github.com/eclipse/openj9/issues/5918#issuecomment-497107621) were using a development driver I had on my laptop.,Testing,False,139,CONTRIBUTOR,False,False,False,0.7777777778,0.102189781,0.6666666667,0.6988847584,0.0410907045,0.9589092955,0.007829219811,0.0005884545304
It really is Writable Execution Disable (WED).,Solution Discussion,False,46,CONTRIBUTOR,False,False,False,1.0,0.04022988506,1.0,0.7022058824,0.7729468852,0.2270531148,1.44e-05,0.0005238959763
(I realized that the error line was pasted incorrectly above - I edited in the post above.),Social Conversation,False,91,NONE,False,False,False,0.7272727273,0.1649484536,0.224852071,0.6666666667,0.2584403431,0.7415596569,0.0005513005954,0.001083708651
Hmm - now that is odd - why is windows so much slower?,Social Conversation,False,54,CONTRIBUTOR,False,False,False,0.5238095238,0.1641791045,0.3333333333,0.387283237,0.005219068791,0.9947809312,4.36e-05,5.27e-05
"Exposing an CODE property would be possible, but it would be tricky to make it work in the way you suggest, because (to avoid an exception being raised) you'd need to guard the training subgraph with a CODE.",Solution Discussion,True,207,CONTRIBUTOR,True,False,False,0.829787234,0.5820895522,0.5395284327,0.5714285714,0.4592244679,0.5407755321,0.003916059713,0.008479027653
"Not exactly apples to apples, but the result is consistent with the previous runs, and difference is so big I don't think it matters.",Investigation and Exploration,False,133,CONTRIBUTOR,True,False,False,1.0,0.3870967742,0.5,0.8185654008,0.6606657803,0.3393342197,0.6866637302,0.007715486688
"-         The hash will be non-reversible, and it won't be possible to iterate over the keys and get back a useful representation of the integer key.",Solution Discussion,False,149,MEMBER,False,False,False,0.8181818182,0.7105263158,0.3576642336,0.6153846154,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"There is  a slightly related function in SGD, CODE.",Solution Discussion,True,51,MEMBER,False,False,False,0.5882352941,0.1408450704,0.05072463768,0.7777777778,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
With cuda 9.2 and tensorflow-gpu 1.8 I cannot build tensorflow,Solution Discussion,False,62,NONE,False,False,False,0.9230769231,0.09448818898,0.9706744868,0.25,0.9717378488,0.02826215116,0.5218093819,0.05092861342
After that I should also have time again to work on it.,Contribution and Commitment,False,55,CONTRIBUTOR,True,False,False,0.5,0.1875,0.9227941176,1.0,0.2716685717,0.7283314283,0.03415611878,0.7749660924
and the follow up question.,Solution Discussion,False,27,CONTRIBUTOR,True,False,False,0.2631578947,0.07462686567,0.5,0.936416185,0.01960532883,0.9803946712,6.97e-06,0.0005708426721
It's using MKL as well.,Investigation and Exploration,False,23,NONE,False,False,False,0.3571428571,0.07042253521,0.6666666667,0.3333333333,0.4588061247,0.5411938753,7.500403389e-05,9.354746662e-05
I'm trying to minimize the information you need to know to be able to answer the question but it's pretty difficult to do LOL.,Social Conversation,False,126,CONTRIBUTOR,False,False,False,1.0,0.126984127,0.3333333333,0.6285714286,0.4475201106,0.5524798894,8.48e-05,3.48e-05
@andrewcraik @0dvictor,Social Conversation,False,22,CONTRIBUTOR,False,False,False,0.08333333333,0.03125,0.25,0.7659574468,0.9535181949,0.04648180506,0.0005193381324,0.01198084219
Error message: AssertionError: 0.89166666666666661 not greater than 0.9,Bug Reproduction,False,71,NONE,False,False,False,0.3636363636,0.1176470588,0.3658536585,0.5,0.4607405818,0.5392594182,0.2982430454,0.003789469322
"The link from Microsoft at https://msdn.microsoft.com/en-us/library/abx4dbyh.aspx says:

The CRT Library has been refactored into a two different binaries, a Universal CRT (ucrtbase), which contains most of the standard functionality, and a VC Runtime Library (vcruntime140), which contains the compiler-related functionality, such as exception handling, and intrinsics. 

CODE

The website of mingw-w64 at https://mingw-w64.org/doku.php#mingw-w64
shows the latest version already provides support on Windows 10 and UCRT in stdio.h

CODE

Given that the stuff with ""stdio.h"" was categorized to UCRT since VS2015, it might be worthy to try installing Cygwin with  the latest mingw-w64 packages + VS2017 (plus Windows 10 SDK ? )",Expected Behaviour,True,737,CONTRIBUTOR,False,False,False,1.0,0.9152542373,0.6666666667,0.2,0.3956745592,0.6043254408,0.007845128228,0.003533051078
The new input pipeline do not have queues.,Solution Discussion,False,42,CONTRIBUTOR,False,False,False,0.2580645161,0.1194029851,0.7766990291,0.6666666667,0.6089674168,0.3910325832,0.0008759473312,0.000271284095
well -- for unstable Debian -- no.,Task Progress,False,34,MEMBER,True,False,False,0.1944444444,0.1029411765,0.1788617886,0.8,0.2807260694,0.7192739306,0.007023674687,0.0006692173817
"The problem here is that we then need to add additional keyword arguments to CODE that are or are not active depending on what you passed for CODE kwarg, which is not the nicest API design.",Motivation,True,189,CONTRIBUTOR,True,True,False,0.72,0.5625,0.03676470588,0.4166666667,0.0,1.0,0.0,0.0007774126438
"It would be better to either disable them, or only store a subset of the command line which doesn't change.",Solution Discussion,False,107,CONTRIBUTOR,True,False,False,1.0,0.1369863014,0.6666666667,0.7318435754,0.2638115076,0.7361884924,0.001870010978,0.005993563236
"I have also tried switching to HotSpot for booking, customer, flight and auth services.",Investigation and Exploration,False,87,CONTRIBUTOR,False,False,False,0.2372881356,0.175,0.5,0.7794117647,0.9391761414,0.06082385865,0.06820979376,0.04955018304
@sebmayou  should add  the CODE path  to itï¼ the ***.so files  are in the  lib64,Solution Discussion,True,81,NONE,False,False,False,1.0,0.157480315,0.8416422287,1.0,0.7713040428,0.2286959572,0.2854442666,0.7490188829
And this a native method btw.,Investigation and Exploration,False,29,CONTRIBUTOR,False,False,False,0.1304347826,0.1276595745,1.0,0.3615384615,0.3332060485,0.6667939515,0.0003119892607,0.001565670877
"The nearest neighbour of CODE turns out to be a misspelling, that the POS tagger seems to often tag correctly: CODE",Potential New Issues and Requests,True,115,MEMBER,False,False,False,0.7,0.5526315789,0.2335766423,0.6111111111,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
You can find it [here] URL !,Solution Discussion,False,28,NONE,True,False,False,0.2857142857,0.04724409449,0.8064516129,1.0,0.7016515596,0.2983484404,0.02172323142,0.4152157275
"In regards to the current projects that have been started, and specifically the challenges of working with the C API, I have a suggestion on implementation that has worked well for me.",Solution Discussion,False,184,NONE,False,False,False,0.8205128205,0.4383561644,0.7327586207,0.09090909091,0.7054771319,0.2945228681,0.0009450258333,0.0002671302531
"as long as it is the right target of helper for JIT-ed code, it is the helper's responsibility to restore the TOC if it is needed.",Solution Discussion,False,130,CONTRIBUTOR,False,False,False,1.0,0.2109375,0.6666666667,0.35,0.03695143384,0.9630485662,7.09e-06,1.33e-05
We know this is highly intermittent issue.,Social Conversation,False,42,CONTRIBUTOR,False,False,False,0.4666666667,0.07692307692,0.5,0.1573426573,0.2820037137,0.7179962863,0.002857770092,0.01329594867
"You're welcome, but I just realized I forgot to mention http://universaldependencies.org/ which also covers Dutch, and seems to overlap with Lassy.",Solution Discussion,False,147,NONE,False,False,False,1.0,0.35,0.6896551724,0.5,0.3958022492,0.6041977508,0.01190727487,0.2563539137
"Also, in such a framework, computation of an ensemble could easily be distributed over several machines: build your estimators; pickle them; then recombine them into one single meta-estimator.",Solution Discussion,False,192,MEMBER,False,False,False,0.9666666667,0.4084507042,0.8623188406,0.8181818182,0.07843535507,0.9215646449,0.003576957722,2.460018212e-05
Not that that's easy to do without at least a VM of the target machine.,Investigation and Exploration,False,71,MEMBER,False,False,False,1.0,0.2205882353,0.2235772358,1.0,0.3297876142,0.6702123858,0.03928665156,0.06296237465
I rebooted this one too since it was idle in jenkins.,Task Progress,False,53,CONTRIBUTOR,False,False,False,1.0,0.1641791045,1.0,0.08092485549,0.002019093939,0.9979809061,7.29e-06,0.001425190268
I didn't change the STS.ini file to point JDK 8 but let it pick it up from my path.,Social Conversation,False,83,CONTRIBUTOR,False,False,False,0.3454545455,0.1919191919,0.3333333333,0.3403508772,0.1181145134,0.8818854866,0.003554247873,0.004838964607
Let me try a nightly build to see what happens.,Task Progress,False,47,CONTRIBUTOR,False,False,False,1.0,0.101010101,1.0,0.9649122807,0.9085686056,0.09143139443,0.0001094238228,0.006460058278
"However, for CODE I did notice that JITServer has split it into two remote messages:
In regular JIT, we acquire vmaccess and then do what we need to do
For JITServer, we send a first remote message to client to read the globalreference's value, then after some operation send a second remote message to finish the rest of the work.",Investigation and Exploration,True,333,CONTRIBUTOR,False,False,False,1.0,0.328042328,0.5,0.6857142857,0.4485135262,0.5514864738,0.0006369645556,0.0001183702813
Would you also do that via CODE?,Solution Discussion,True,32,MEMBER,False,False,False,0.3043478261,0.0985915493,0.7173913043,0.75,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
The tests for the most part are single threaded.,Testing,False,48,CONTRIBUTOR,False,False,False,0.375,0.1914893617,0.8571428571,0.4076923077,0.3641770197,0.6358229803,0.02184783511,0.004874474413
"And if the available dataset of images is huge, increasing the buffer_size is often not a solution.",Solution Discussion,False,99,NONE,False,False,False,0.425,0.2537313433,0.6560332871,0.875,0.5054793089,0.4945206911,0.03050902669,0.04958391229
I think a semantic is defined by giving the user some guarantee of what will happen.,Solution Discussion,False,84,MEMBER,False,False,False,0.64,0.2253521127,0.3949275362,0.4,0.03970291757,0.9602970824,8.078405027e-05,0.0001056298833
I'm guessing the problem is JIT/AOT related.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.6153846154,0.1379310345,0.3333333333,0.1376146789,0.0207995758,0.9792004242,3.3e-05,8.67e-05
"I'm asking for an example non-static field for which PdbScanner would encounter offset type CODE, thereby *preventing* the creation of superset.dat.",Investigation and Exploration,True,148,CONTRIBUTOR,False,False,False,1.0,0.186440678,0.6666666667,0.496969697,0.4196348615,0.5803651385,0.0004100015372,0.0001321913482
Will it close in time for the 0.11.0 release?,Action on Issue,False,45,MEMBER,False,False,False,1.0,0.0703125,1.0,0.7833333333,0.1928965305,0.8071034695,0.1292651629,0.000130769984
Or?.,Social Conversation,False,4,NONE,False,False,False,0.04761904762,0.001447178003,0.7293729373,0.8,0.2668032658,0.7331967342,0.00251122862,0.02402499291
"- information on the valid methodHandle
CODE

A couple of things confuses me that I need to figure out.",Investigation and Exploration,True,106,CONTRIBUTOR,False,False,False,0.3846153846,0.1058201058,0.6666666667,0.3542857143,0.3964911687,0.6035088313,0.005060536466,0.02642430283
A slightly more tricky solution is to do some reference counting.,Solution Discussion,False,65,MEMBER,False,False,False,0.275,0.1774193548,0.3964757709,0.8055555556,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"2. HCR means that even without AOT, it's possible to get different values (specifically non-NULL one time and NULL every time after) if classes get redefined; because J9Classes are redefined in place, we can end up with a different J9ROMClass that's not necessarily going to be in the SCC.",Solution Discussion,False,289,CONTRIBUTOR,False,False,False,1.0,0.8064516129,1.0,0.8852459016,0.9695596396,0.03044036043,7e-05,0.07716070228
The compilation at hot fails due to insufficient memory.,Investigation and Exploration,False,56,CONTRIBUTOR,False,False,False,0.1914893617,0.1125,0.375,0.1911764706,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
"No, we kind of dropped the ball on this one, we're avoiding AGCT when using OpenJ9.",Solution Discussion,False,83,NONE,True,False,True,1.0,0.1538461538,0.5,0.9944751381,1.0,0.0,0.0003947203969,0.0
I'll have to check it and see if I missed something.,Task Progress,False,52,CONTRIBUTOR,False,False,False,1.0,0.0632183908,0.6,0.3602941176,0.7636365775,0.2363634225,0.00180747065,0.0005973713534
"Several of us (Mark, Leo, Andrew, Liqun, myself) have looked at this code and we haven't been able figure out how the call to CODE can return NULL one time and non-NULL a second time, given that both CODE and CODE both call CODE with the same parameters.",Investigation and Exploration,True,254,CONTRIBUTOR,False,False,False,1.0,0.7903225806,0.1666666667,0.6284153005,0.8310912867,0.1689087133,0.008832756273,0.001165656648
"It seems the only way to use the official batch_norm is to build two graphs, one for train and one for evaluation, with CODE and CODE, respectively.",Usage,True,148,NONE,False,False,False,0.9310344828,0.1038461538,0.9443254818,0.5882352941,0.7995481369,0.2004518631,0.3206669123,0.722664447
"If I check for cuda 9, I get the following:CODE",Observed Bug Behaviour,True,47,NONE,True,True,False,0.7333333333,0.08661417323,0.01173020528,0.6666666667,0.0,1.0,0.0,0.001987007177
"In my user home dir, in the tmp dir, in the process working dir.",Investigation and Exploration,False,64,NONE,True,False,False,0.4516129032,0.1414141414,0.8181818182,0.07719298246,0.09912996542,0.9008700346,0.005467138405,0.004133788861
@gacholio Is there an API on the VM we can query - TR_disableThrowToGoto is used to control opt and there are Xjit options to enable/disable that opt which should not change the GC Map layout in cases where throwToGoto may be turned off for debug in a non-FSD mode?,Solution Discussion,False,265,CONTRIBUTOR,False,False,False,1.0,0.78125,1.0,0.2127659574,0.1183928978,0.8816071022,0.0003654601672,0.004712512683
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.6961206897,1.0,0.7051952318,0.2948047682,0.0003645099643,0.0001865706739
*         [x] CODE (fixed in #9544),Potential New Issues and Requests,True,35,MEMBER,False,False,False,0.3157894737,0.08823529412,0.4227642276,1.0,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
So far it has passed 80/80 with this change.,Testing,False,44,CONTRIBUTOR,False,False,False,0.3,0.09782608696,0.5,0.6226415094,0.5582838217,0.4417161783,0.0001275446201,0.0004086462498
"Would be good to find a more light-weight example maybe, to add this particular case to the travis tests.",Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,1.0,0.2816901408,0.4005847953,0.5555555556,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
I suggest using the 0.18.1 release JVM to run the tests.,Investigation and Exploration,False,56,CONTRIBUTOR,True,False,False,1.0,0.1774193548,1.0,0.8143459916,0.5609592665,0.4390407335,0.002861585044,0.6866637302
"maxObjectCount;
it shows in superset.dat:
F|_maxObjectCount|_maxObjectCount|U64|const U64",Investigation and Exploration,False,91,CONTRIBUTOR,False,False,False,0.5,0.07627118644,1.0,0.4424242424,0.4193659102,0.5806340898,0.0005917357025,0.000275958121
"My guess is that you're looking for something that can be done completely in Python, though.",Solution Discussion,False,92,MEMBER,False,False,False,0.7272727273,0.2388059701,0.2233009709,0.75,0.04913573011,0.9508642699,0.0009069948543,0.001568663379
Investigate cmdLineTester_jvmtitests_debug_5 failure in JITServer mode,Investigation and Exploration,False,70,CONTRIBUTOR,True,True,False,0.1276595745,0.03174603175,0.3333333333,0.005714285714,0.0,1.0,0.0,7.04e-06
Is there some limit on the number of different command lines that we can store GC hints for in a given SCC ?,Solution Discussion,False,108,CONTRIBUTOR,False,False,False,1.0,0.1506849315,0.5,0.6759776536,0.2630952118,0.7369047882,0.02486675089,0.0001740403081
"This occurs during the DDR stage, when it uses the built jdk.",Observed Bug Behaviour,False,61,CONTRIBUTOR,True,True,False,0.3428571429,0.09375,0.6666666667,0.02222222222,0.0,1.0,0.0,0.009802165843
It also includes implicit options induced by JCL.,Solution Discussion,False,49,CONTRIBUTOR,False,False,False,0.25,0.05479452055,0.2857142857,0.5251396648,0.2382756083,0.7617243917,0.0001494982185,0.04295972467
"i was looking at  ""J9THREAD_ERR_OS_ERRNO_SET 0x40000000""   ...  implying 4 seemed.",Investigation and Exploration,False,82,CONTRIBUTOR,False,False,False,1.0,0.1935483871,1.0,0.07172995781,0.002298671413,0.9977013286,0.00175020492,0.0002246096314
Thank you very much for looking into those!,Social Conversation,False,43,MEMBER,True,False,False,0.2222222222,0.1176470588,0.1666666667,0.2,0.2807260694,0.7192739306,0.007023674687,0.0006692173817
mark,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.4827586207,1.0,0.5764051917,0.4235948083,0.05162917363,0.1112315324
Because otherwise the people will stick with feed_dict inputs until TensorFlow 3.0 and moan about bad performance of TF,Motivation,False,119,NONE,False,False,False,0.6785714286,0.2835820896,0.3009708738,1.0,0.2770987131,0.7229012869,0.2860540634,0.003376036402
That sucks.,Solution Discussion,False,11,MEMBER,False,False,False,0.03333333333,0.03333333333,0.1896551724,0.64,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
Would you be able to get the log mentioned by @mpirvu above?,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.9230769231,0.1791044776,1.0,0.3468208092,0.005097603246,0.9949023968,2.67e-05,3.41e-05
"(Note: the problem has nothing to do with Windows 10)

Will keep investigating as there are still other issues during compilation.",Investigation and Exploration,False,132,CONTRIBUTOR,False,False,False,0.4,0.186440678,1.0,0.2424242424,0.3976562389,0.6023437611,0.002619750082,0.026079663
"CODE is the sort of method that could lead to a livelock in theory I believe, since the method will keep attempting to do the update as long as it takes (inside a loop presumably) until it successfully updates the value atomically.",Investigation and Exploration,True,231,CONTRIBUTOR,False,False,False,1.0,0.525,0.25,0.8676470588,0.9558660429,0.04413395706,0.001152633296,0.002453151618
"make RSS unlimited and retry ...

the eventual fix can go:  without  ,buckets.  need to confirm with performance benefit/data of "",buckets"" from security test cases.",Solution Discussion,False,167,CONTRIBUTOR,False,False,False,1.0,0.4677419355,1.0,0.2194092827,0.04682478804,0.953175212,0.001123048157,0.001592686477
"*         Once you reach the end of a pipeline, it becomes closed and you can never use it again in the same session.",Motivation,False,117,CONTRIBUTOR,True,True,False,0.4893617021,0.3432835821,0.008321775312,0.2,0.0,1.0,0.0,0.000766008561
The rasdump code is potentially using the external thread exclusive.,Investigation and Exploration,False,68,CONTRIBUTOR,False,False,False,1.0,0.1333333333,0.5,0.7231638418,0.0852248734,0.9147751266,2.91e-05,3.85e-05
"However, I ran the same code snippet on Linux system, I didn't get an error.",Testing,False,76,NONE,False,False,False,0.4411764706,0.2112676056,0.3596491228,0.75,0.409179596,0.590820404,0.4852296023,0.01767922574
We are working hard at getting a proper NPM build and will release it soon!,Task Progress,False,75,CONTRIBUTOR,False,False,False,1.0,0.2054794521,0.9482758621,1.0,0.9554426769,0.04455732307,0.5087182506,0.0005732123907
I also tried on macOS (El Capitan) with Accelerate and could not reproduce either.,Bug Reproduction,False,82,MEMBER,False,False,False,1.0,0.2058823529,0.3821138211,1.0,0.5134229685,0.4865770315,0.1520017818,0.0001312190945
This might prove to be problematic.,Testing,False,35,MEMBER,False,False,False,0.3333333333,0.03921568627,0.3022508039,0.8888888889,0.008127924991,0.991872075,0.0004078869671,0.01796302825
"It's great that this batch normalization layer works for better training convergence, but if you can't apply the model in production, there isn't much of a point in using it.",Motivation,False,174,NONE,False,False,False,0.8823529412,0.1153846154,0.4710920771,0.75,0.3863527786,0.6136472214,0.03294891445,0.0006233545505
"In CODE, we tell the CODE to drop the oov store associated with the CODE object.",Solution Discussion,True,80,MEMBER,False,False,False,0.6153846154,0.2580645161,0.5154185022,0.8235294118,0.2163463856,0.7836536144,0.0001196000951,0.008439281707
"This is because when there's a mismatch between sync and async compilation between jvm instances, the AOT code in the SCC won't be loaded.",Investigation and Exploration,False,138,CONTRIBUTOR,False,False,False,1.0,0.2580645161,0.4,0.3243243243,0.3820724724,0.6179275276,5.6e-05,0.006214516454
I would wild guess that by updating scikit-learn with pip you updated numpy with pip too and you got the numpy wheels which uses Accelerate and has the limitation mentioned above.,Investigation and Exploration,False,179,MEMBER,False,False,False,1.0,0.3298969072,0.4822485207,0.2,0.8484970091,0.1515029909,1.942892084e-05,7.946388893e-07
Is it time to close this?,Action on Issue,False,25,CONTRIBUTOR,False,False,False,0.6,0.09677419355,1.0,0.3122362869,0.2662964452,0.7337035548,0.02927509429,0.1726343793
I feel like the default code for looping over a dataset is a bit ugly with an exception breaking out of a CODE loop:CODE,Usage,True,120,CONTRIBUTOR,False,False,False,1.0,0.3731343284,0.4993065187,0.3333333333,0.4385463379,0.5614536621,0.02256391463,0.02590584966
"There was a related discussion on the naming in that PR, as currently the name says *how* it encodes, not what type of data it gets (in the current design, it accepts already encoded integers, not actual categorical data.",Solution Discussion,False,221,CONTRIBUTOR,True,True,False,0.78,0.609375,0.05147058824,0.5833333333,0.0,1.0,0.0,0.0007774126438
"""Object is not marked"" means this classloader is about to be unloaded:
CODE",Investigation and Exploration,True,76,CONTRIBUTOR,False,False,False,1.0,0.1538461538,1.0,0.05944055944,0.004762332847,0.9952376672,0.005236420778,0.0002611277793
In this case we want to change the number of sub estimators but might want to reuse exactly the same data at each call.,Solution Discussion,False,119,MEMBER,False,False,False,0.5853658537,0.338028169,0.2463768116,0.4285714286,0.0394658335,0.9605341665,1.186142875e-05,6.73785302e-06
The sanitize job reboots Windows.,Investigation and Exploration,False,33,CONTRIBUTOR,False,False,False,1.0,0.07462686567,1.0,0.03468208092,3.89e-06,0.9999961083,4.08e-06,1.6e-05
"My computer installed CUDA 8.0,cudnn 6.0 ,tensorflow 1.4.",Bug Reproduction,False,57,NONE,False,False,False,1.0,0.06299212598,0.1583577713,1.0,0.228642205,0.771357795,0.1507278421,0.1948879119
"As SCREEN_NAME  mentioned, the CODEfeed_dictCODE memcpy (on a single CPU core?) can be a huge performance bottleneck, and I'd like to see this addressed in any refactor of TensorFlow's input handling.",Motivation,True,200,NONE,False,False,False,1.0,0.4925373134,0.3786407767,0.6666666667,0.3166940255,0.6833059745,0.1413171275,0.04972082678
The difficulty of course is that @planetf1 might not have access to the source that's processing the XSLT stylesheet in order to set those attributes on the CODE instance.,Investigation and Exploration,True,171,MEMBER,False,False,False,0.8055555556,0.2180451128,0.7142857143,0.0941475827,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
I don't see any exceptions of type CODE being caught,Investigation and Exploration,True,52,CONTRIBUTOR,False,False,False,1.0,0.125,1.0,0.568627451,0.5914490903,0.4085509097,0.0004306064011,0.0001232375222
https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly_testList_0/120,Testing,False,102,CONTRIBUTOR,True,False,False,1.0,0.01724137931,1.0,0.5871559633,0.8857605091,0.1142394909,0.7024860106,0.02225954837
"If this is true, then since I am using two GPUS, should I do reuse=None in the first GPU and reuse=True in the second?",Usage,False,118,NONE,False,False,False,1.0,0.1,0.2205567452,0.8125,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"Then, CODE is created by (randomly) iterating over each element CODE of CODE, and for each of these elements the function CODE samples a (variable) number of sub-images [and sub-labels] (e.g. 256x256 each) from CODE, taken from various regions of CODE.",Motivation,True,252,CONTRIBUTOR,False,False,False,0.9347826087,0.6417910448,0.6685159501,0.6666666667,0.5116443977,0.4883556023,0.04958391229,0.003143434467
*         [node-lapack] URL ,Solution Discussion,False,28,NONE,False,False,False,0.1333333333,0.05479452055,0.4030172414,0.625,0.4752476502,0.5247523498,0.0635462371,0.3197097642
but I encourage you to add some more detail here if possible.,Contribution and Commitment,False,61,CONTRIBUTOR,True,False,False,0.5,0.1875,0.5,0.04964539007,4.6e-05,0.9999539836,0.0002548603798,0.003714710253
"The custom scorer object was a mistake of me, the problem lies indeed in the multiprocessing on windows.",Investigation and Exploration,False,104,NONE,True,False,False,1.0,0.1855670103,0.1449704142,0.5,0.009500960535,0.9904990395,1.797870487e-05,0.006789037082
We'd like to figure out what sort of work-flows are required.,Potential New Issues and Requests,False,61,MEMBER,False,False,False,0.5416666667,0.3421052632,0.8321167883,1.0,0.004745026783,0.9952549732,0.0004120470569,0.0006334939121
The crash happens here.,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,0.07843137255,0.04395604396,0.1428571429,0.4195804196,0.8054811495,0.1945188505,0.1631008731,0.2634355634
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5043103448,1.0,0.5964853431,0.4035146569,0.01115728041,0.1324784575
"If count=0 makes it fail in exactly the same way as described when the defect was opened, e.g. crash in:

Compiled_method=jdk/internal/foreign/NativeMemorySegmentImpl.makeNativeSegment(JJ)Ljdk/incubator/foreign/MemorySegment;

then I think it would be ok to stick to count=0 and try to debug that.",Investigation and Exploration,False,301,CONTRIBUTOR,False,False,False,1.0,0.9787234043,0.3333333333,0.3538461538,0.3332060485,0.6667939515,0.0003119892607,0.001565670877
I don't know the answer about resolution - that would have no effect on the problem anyway.,Solution Discussion,False,91,CONTRIBUTOR,False,False,False,0.5925925926,0.1739130435,1.0,0.5849056604,0.5070453341,0.4929546659,7.94e-05,0.07106417022
I'm using:CODE,Usage,True,14,NONE,False,False,False,0.1304347826,0.01153846154,0.7751605996,0.75,0.6216425187,0.3783574813,0.0279240315,0.007914289561
I have a similar issue with RandomizedSearchCV; it hangs indefinitely.,Observed Bug Behaviour,False,70,NONE,False,False,False,0.2325581395,0.1030927835,0.4023668639,0.08333333333,0.8484590511,0.1515409489,0.08978722153,2.72561139e-05
[The docs] URL  tell you to install Cuda 8.0 and use CODE.,Solution Discussion,True,58,NONE,False,False,False,0.9285714286,0.1023622047,0.1671554252,0.6,0.244487942,0.755512058,0.1948879119,0.2449173066
Throughput levels are back to normal and I only see this once or twice in the jitlogs.,Solution Discussion,False,86,NONE,True,False,False,0.7083333333,0.2125,0.75,0.362745098,0.2983841117,0.7016158883,0.3746116206,0.0007771213165
So we'll need to perform the limiting again.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.2962962963,0.06015037594,0.75,0.737913486,0.780149551,0.219850449,0.0003413217614,0.02856760951
"-         We want to add an option specific to one of the encodings (eg for 'onehot' encoding to drop the first (redundant) column, or for 'ordinal' encoding base the order of the categories on the frequency, ...).",Motivation,False,214,CONTRIBUTOR,True,True,False,0.72,0.5625,0.03308823529,0.375,0.0,1.0,0.0,0.0007774126438
@JamesKingdon no I hadn't.,Social Conversation,False,26,NONE,True,False,False,1.0,0.05970149254,0.5,0.1899441341,0.002453570813,0.9975464292,0.0001387658288,0.0002146129899
"I don't have that problem with the latest nightly from adoptopenjdk.net:
CODE
And using that as the boot jdk, I was able to produce a local build:
CODE",Investigation and Exploration,True,154,CONTRIBUTOR,False,False,False,1.0,0.6595744681,1.0,0.2692307692,0.1394041083,0.8605958917,0.1326211964,0.006159641184
I'll generate compilation logs with 0.24,Investigation and Exploration,False,40,CONTRIBUTOR,False,False,False,1.0,0.075,1.0,0.4656862745,0.51276429,0.48723571,0.0002740222552,0.488236616
I was under the impression that they might run on their own stack sometimes.,Solution Discussion,False,76,CONTRIBUTOR,False,False,False,0.3043478261,0.1346153846,0.6,0.8674033149,0.3185054309,0.6814945691,0.006311966217,1.18e-05
Although jdk12 has a patch to fix it.,Solution Discussion,False,37,CONTRIBUTOR,False,False,False,0.4705882353,0.04597701149,0.25,0.3051470588,0.7589445999,0.2410554001,4.13e-05,3.37e-05
CODE,Solution Discussion,True,4,MEMBER,False,False,False,0.03703703704,0.01030927835,0.5355029586,0.6,0.8485070338,0.1514929662,1.996530209e-05,7.298758198e-05
Testing of the current content will occur on the weekend (Oct 12).,Task Progress,False,66,CONTRIBUTOR,True,False,False,0.48,0.1791044776,0.6666666667,0.8265895954,0.01914830704,0.980851693,0.001167361543,2.78e-05
"Observed in JDK17 head build at CODE
CODE",Testing,True,42,MEMBER,True,False,False,1.0,0.09782608696,1.0,0.3522012579,0.3701905027,0.6298094973,0.01162451737,0.1016715226
Could you explain this part with a bit more details?,Usage,False,52,NONE,False,False,False,0.3125,0.03846153846,0.3104925054,0.8333333333,0.2659544384,0.7340455616,0.1426765631,0.1141986754
But it still points to a potential flaw in the design of the library.,Investigation and Exploration,False,69,NONE,True,True,False,0.2456140351,0.2258064516,0.04405286344,0.5882352941,0.0,1.0,0.0,0.0008157310994
We have to accept the memory growth.,Solution Discussion,False,36,MEMBER,False,False,False,0.175,0.1129032258,0.3656387665,0.6111111111,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"i did remove the pip numpy install, though, as i didn't intend to have two versions :)",Solution Discussion,False,86,NONE,False,False,False,0.8095238095,0.2394366197,0.9707602339,1.0,0.8460874495,0.1539125505,0.1393667667,0.01200604239
Please update the label and/or status accordingly.,Action on Issue,False,50,MEMBER,False,False,False,0.4375,0.01013024602,0.9801980198,1.0,0.7566878311,0.2433121689,0.1484095414,0.0001320700021
"*Linux64 LE**

CODE

*OR*

CODE

*",Solution Discussion,True,42,CONTRIBUTOR,False,False,False,0.08108108108,0.0703125,0.7692307692,0.7166666667,0.08012656297,0.919873437,0.0570348239,0.002818533349
"A quick glance at the vlog shows many ""compilationIlGenFailure"".",Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.75,0.06569343066,0.5,0.1189591078,0.001150317102,0.9988496829,0.0001051846944,0.0001896637403
"[1] After specified with:
CODE many times, it still ended up with the same ClassFormatError exception intermittently:
CODE
Looking at the java stacktrace in this file:
[system_core_java_stacktrace2.txt] URL 
it seems there was no XLST related method got compiled/optimized in JIT and the optimization on all compiled methods were disabled except the reflection related methods.",Bug Reproduction,True,382,CONTRIBUTOR,False,False,False,1.0,0.4511278195,0.25,0.3969465649,0.4761982657,0.5238017343,0.01656125888,0.01584223495
"This is the stackslots from a recent (ie 10 min ago) run:
CODE

There seems to be some kind of OSR information in the frame of CODE.",Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,0.935483871,0.311827957,0.2,0.4942084942,0.5363077428,0.4636922572,0.003129639439,0.0028647951
"Remembering the previous heap size settings (-Xmn, -Xmo) after startup can provide a significant startup benefit in subsequent runs, and can improve footprint as well.",Motivation,False,167,CONTRIBUTOR,True,True,False,0.6756756757,0.1712328767,0.2857142857,0.01117318436,0.0,1.0,0.0,5.94e-06
"Assume there is a large training data set which is in text format, and we need to convert it into tfrecord format.",Motivation,False,114,CONTRIBUTOR,False,False,False,1.0,0.328358209,0.4785020804,0.2142857143,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"The flight service had the following options:
CODE
Here's the compilation log:",Investigation and Exploration,True,80,CONTRIBUTOR,False,False,False,0.8235294118,0.175,0.4,0.818627451,0.9506093286,0.04939067138,0.0226844032,0.006464895429
I only added the JRE and JDK 11 as extra JREs to the workspace.,Investigation and Exploration,False,63,NONE,True,False,False,0.3181818182,0.1414141414,0.5,0.4736842105,0.1967504071,0.8032495929,0.001033447215,0.001977734278
"This implementation could delegate to CODE, but would also call CODE on the underlying implementation to request that the classes by written out, using some sort of sequence number on the destination directories and/or jar names.",Investigation and Exploration,True,229,MEMBER,False,False,False,1.0,0.2706766917,1.0,0.09923664122,0.0006001436568,0.9993998563,0.0005207711664,0.003847329842
It seems that reinstalling packages with conda may help but I am afraid there doesn't seem to be a very clear picture of the cause of the problem :(.,Investigation and Exploration,False,149,MEMBER,False,False,False,1.0,0.4084507042,0.7543859649,1.0,0.4604019734,0.5395980266,0.007162331701,0.06102214722
Haha that Donald Trump one is quite something.,Social Conversation,False,46,NONE,False,False,False,1.0,0.2105263158,0.503649635,1.0,0.003947982877,0.9960520171,4.041513841e-05,2.75679421e-05
Lowering the priority lets the test pass.,Solution Discussion,False,41,CONTRIBUTOR,False,False,False,0.2413793103,0.1044776119,0.8,0.8843930636,0.01918518568,0.9808148143,1.3e-06,0.0002576922821
"-Xjit:enableOSR,count=1,disableAsyncCompilation,prepareForOSREvenIfThatDoesNothing,verbose{osr*},vlog=osrtransitions

@vijaysun-omr",Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,1.0,0.09677419355,0.2,0.5135135135,0.5369859796,0.4630140204,0.0028647951,0.0003133369641
"Here's the core dump from that run: 
[javacore.20171013.204324.7707.0001.txt] URL ",Testing,False,83,NONE,True,False,False,1.0,0.1492537313,1.0,0.156424581,0.002163483482,0.9978365165,0.0002508127713,0.0001215278376
"Then I run decode part,>> Who is the president of the United States?Qui est le prÃ©sident des Ãtats-Unis ?",Solution Discussion,False,106,NONE,False,False,False,1.0,0.03039073806,0.6798679868,0.6666666667,0.226528822,0.773471178,0.005343317335,0.08527687651
Segfault at checkCast on Java 17 when running multiple CODE threads,Observed Bug Behaviour,False,67,CONTRIBUTOR,True,True,False,0.4583333333,0.1182795699,0.1428571429,0.003861003861,0.0,1.0,0.0,0.03406420424
What did you print out?,Social Conversation,False,23,CONTRIBUTOR,False,False,False,0.5555555556,0.02645502646,0.6666666667,0.52,0.4466728826,0.5533271174,0.001023944321,0.001615795728
How does TKG determine CODE or CODE?,Investigation and Exploration,True,36,CONTRIBUTOR,True,False,False,0.3043478261,0.1206896552,0.8571428571,0.752293578,0.9939440574,0.006055942622,0.006864019174,0.0128898379
If you read 2-3 threads above you'll also see that mentioned again.,Solution Discussion,False,67,NONE,True,False,False,0.9285714286,0.1023622047,0.853372434,1.0,0.8466767537,0.1533232463,0.1779957627,0.09933113212
It is worth noting that any method of the form CODE does **NOT** get AOT compiled.,Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,0.1720430108,0.1720430108,0.3333333333,0.3822393822,0.3937305493,0.6062694507,0.03688423691,0.3568236584
"I would have imagined that if we had a stacking interface, you could specify one estimator as the base estimator and another as the one on top.",Motivation,False,143,MEMBER,False,False,False,1.0,0.3802816901,0.9565217391,1.0,0.07865103886,0.9213489611,1.933623445e-05,8.503030139e-05
"@lesteveI tried the [snippet](https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-243782185) on version 0.18rc2, installed by > pip install --pre scikit-learn -U",Testing,False,179,NONE,False,False,False,1.0,0.2816901408,0.3450292398,0.5,0.3249928395,0.6750071605,0.005396415693,0.005186210661
Thanks.,Social Conversation,False,7,CONTRIBUTOR,False,False,False,0.06666666667,0.005747126437,0.3333333333,0.1838235294,0.7325733414,0.2674266586,7.65e-05,0.004173448668
"I'm basing this on what I see in the compiled code, and the doc here:

https://www.ibm.com/developerworks/library/l-improve-performance-openpower-abi/index.html

I bet this works because of the localentry directive, so those first two instructions are never executed, since this code is statically-linked with every module that uses it.",Investigation and Exploration,False,340,CONTRIBUTOR,False,False,False,1.0,0.3671875,0.6666666667,0.7444444444,0.08206856421,0.9179314358,0.002818533349,0.002348920944
"but I am confused:  previously between multiheap setting and no-setting, for 16-thread tests on small 512 payload, the performance improvement was from a few times to 100s times.",Investigation and Exploration,False,178,CONTRIBUTOR,False,False,False,1.0,0.5,0.3333333333,0.8734177215,0.7442803236,0.2557196764,0.3314129696,0.1778324879
"However, the crash happens in CODE which is interpreted.",Investigation and Exploration,True,56,CONTRIBUTOR,False,False,False,0.2903225806,0.09677419355,0.4,0.4980694981,0.5363077428,0.4636922572,0.003129639439,0.0028647951
I'm not sure this is even a problem if it is the case.,Social Conversation,False,54,CONTRIBUTOR,False,False,False,0.5,0.125,1.0,0.1657458564,0.01598191156,0.9840180884,0.007118677448,0.0002824625523
I remember @mpirvu did some benchmark tests before showing that the timestamp checking has more performance impact on Windows than on Linux.,Investigation and Exploration,False,140,CONTRIBUTOR,False,False,False,1.0,0.1605839416,1.0,0.7546468401,0.04440279118,0.9555972088,1.04e-05,1.41e-05
Any suggestions ?,Solution Discussion,False,17,NONE,False,False,False,0.1111111111,0.02816901408,0.8391812865,0.9333333333,0.6456610805,0.3543389195,1.0,4.677373331e-05
"The conda version I have is 4.2.13, both the env which throws the error and the env with source built sklearn (which does not throw error) are inside conda.",Investigation and Exploration,False,156,NONE,False,False,False,1.0,0.4084507042,0.5789473684,1.0,0.4547028327,0.5452971673,0.0006836161022,0.0003054131048
Will try 3.5,Bug Reproduction,False,12,MEMBER,False,False,False,0.3,0.04225352113,0.05555555556,1.0,0.05288630945,0.9471136905,0.0003346120921,0.004970747043
But without the debugger attached I wasn't able to get any output to stderr with CODE.,Investigation and Exploration,True,86,NONE,True,False,False,1.0,0.1167883212,1.0,0.2304832714,0.002065611332,0.9979343887,6.92e-05,0.0002033294683
I'm trying to test the example in the [doc](https://www.tensorflow.org/versions/r1.3/programmers_guide/datasets#preprocessing_data_with_datasetmap),Usage,False,147,NONE,False,False,False,0.9230769231,0.1791044776,0.9264909847,0.3333333333,0.957051255,0.04294874501,0.06755432044,0.001667404682
IIRC you mentioned there were some issues in specifying options as child JVM processes were created or something.,Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,0.75,0.1353383459,0.6,0.4707379135,0.5408860557,0.4591139443,0.002429720419,0.000914006537
"yea my bad, should have been clearer.",Social Conversation,False,37,NONE,False,False,False,0.5833333333,0.0985915493,0.3216374269,0.2,0.324045968,0.675954032,0.0002259807885,0.0001194252422
Unless you have seen different behavior?,Solution Discussion,False,40,CONTRIBUTOR,True,False,False,1.0,0.04109589041,1.0,0.6592178771,0.2545312644,0.7454687356,0.002648299987,0.0009966013216
"And it looks like mumurhash3 [doesn't actually produce the same results in 64bit and 32bit](https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/utils/src/MurmurHash3.cpp#L5), which would explain why this test fail.",Potential New Issues and Requests,False,227,MEMBER,False,False,False,0.8888888889,0.4705882353,0.2682926829,0.7,0.3543056001,0.6456943999,0.009464004531,0.003096425316
"So you can see from the third line, that it is using MKL.",Investigation and Exploration,False,57,MEMBER,False,False,False,0.325,0.1830985915,0.5497076023,1.0,0.4545783063,0.5454216937,7.597272067e-05,4.179191556e-05
"I haven't benchmarked the tagger in a while, but I think it should be running at over 100k tokens a second per process, and it doesn't use much memory.",Solution Discussion,False,151,MEMBER,False,False,False,1.0,0.1895424837,0.6012861736,0.4,0.1671397646,0.8328602354,3.922323826e-06,4.685962093e-06
@honnibal What you mentioned about some parts of the pipeline multi-threaded made a lot more sense after I managed to use pipe in multi-threaded scenario.,Solution Discussion,False,154,CONTRIBUTOR,False,False,False,1.0,0.1764705882,0.9003215434,0.6363636364,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
I'm just not convinced that holding back is warranted.,Social Conversation,False,54,CONTRIBUTOR,False,False,False,0.1153846154,0.09677419355,1.0,0.6911196911,0.5547508363,0.4452491637,0.002831223282,0.01376817541
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.05172413793,1.0,0.0006425681906,0.9993574318,0.0001418645338,0.0001602338884
"Here is how my cache dir looks like:

CODE",Investigation and Exploration,True,44,NONE,True,False,False,1.0,0.07299270073,1.0,0.1078066914,0.0009907880953,0.9990092119,2.07e-05,0.0001345867153
"Addressing 1 is hard, because we currently intern all the strings, which is a much easier policy to implement than something more subtle.",Solution Discussion,False,137,MEMBER,False,False,False,1.0,0.3709677419,0.1850220264,0.7777777778,0.02336154952,0.9766384505,0.01526654747,0.6482365618
+1 just for the sake of it,Social Conversation,False,26,NONE,False,False,False,1.0,0.09589041096,0.4482758621,1.0,0.5366458145,0.4633541855,0.0186825189,0.01977759802
This freezing problem is specific to Accelerate and Python multiprocessing.,Investigation and Exploration,False,75,MEMBER,False,False,False,0.3703703704,0.1030927835,0.3550295858,0.4,0.8123980581,0.1876019419,2.677933057e-05,1.887267362e-06
@gita-omr FYI in case we need help to take a look.,Contribution and Commitment,False,50,CONTRIBUTOR,True,False,False,0.7058823529,0.1875,0.75,0.3758865248,0.7581593427,0.2418406573,0.0006996638728,0.0002861168415
"https://ci.eclipse.org/openj9/view/Test/job/Grinder/676 - multiheap:16,buckets x 3 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/677 - multiheap:20,buckets x 3 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/678 - multiheap:22,buckets x 3 - passed",Testing,False,277,CONTRIBUTOR,True,False,False,1.0,0.2741935484,1.0,0.1898734177,0.0460890607,0.9539109393,0.001881470289,4.38e-05
The question I'm asking (sorry to have to weave it in with the diagnosis comments) is really whether we think enough people will encounter this problem in the field to warrant blocking the JDK17 release which has already (otherwise) passed a full test cycle (to our satisfaction) and is very very late affecting our perception in the market.,Motivation,False,341,CONTRIBUTOR,False,False,False,0.7435897436,0.623655914,0.5,0.6756756757,0.5547508363,0.4452491637,0.002831223282,0.01376817541
"Instead, it should [download and use] URL  the pre-built, multi-platform python binaries and download any needed source files on the fly.",Solution Discussion,False,137,NONE,False,False,True,24.0,0.3287671233,0.9870689655,7.0,1.0,0.0,0.5674118797,0.0
which I believe that is the behaviour one should expect from the cmdlinetester framework,Expected Behaviour,False,88,CONTRIBUTOR,False,False,False,0.3414634146,0.2413793103,1.0,0.1834862385,0.02083045713,0.9791695429,9.15e-05,6.43e-05
"https://github.com/eclipse/openj9/blob/2a27ccf888c7f58edb5c3bd96bc0f29d0a103b31/runtime/compiler/control/CompilationThread.cpp#L12601-L12603

The failure that we're seeing could occur if the mutex is not being used properly.",Investigation and Exploration,False,226,CONTRIBUTOR,False,False,False,0.7083333333,0.1868131868,0.4,0.6398601399,0.8573774451,0.1426225549,0.001731608401,0.0007841536263
~I'll open a PR to ensure tracing happens in CODE~ Opened https://github.com/eclipse/openj9/pull/12058.,Action on Issue,True,103,CONTRIBUTOR,False,False,False,0.2608695652,0.1935483871,0.75,0.7431693989,0.9240498584,0.07595014165,0.1265062135,0.2372754111
I'll explain how to do that once we have conclusive results.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.55,0.08270676692,1.0,0.5877862595,0.5844415189,0.4155584811,9.4e-05,0.001518166493
"@zl-wang performance updated
[performance.xlsx] URL ",Task Progress,False,53,NONE,False,False,False,1.0,0.1129032258,1.0,0.9029535865,0.9153066441,0.08469335588,1.0,0.01000533813
"that was just ""OneHotEncoder running in legacymode. Set categories='auto' for slightly different behaviour without awarning.""",Solution Discussion,False,125,MEMBER,False,False,False,0.7142857143,0.234375,0.5073529412,1.0,0.07583037256,0.9241696274,0.006398297259,0.0001680122564
"The regression is seen even with -Xnoaot, so it's related to class sharing infra rather than AOT.",Investigation and Exploration,False,97,CONTRIBUTOR,False,False,False,0.9444444444,0.1240875912,1.0,0.7026022305,0.0410907045,0.9589092955,0.007829219811,0.0005884545304
I haven't seen this pop up in the nightly builds at adopt or in grinders so I'll close this as resolved for now.,Action on Issue,False,112,NONE,True,False,False,1.0,0.2527472527,0.5,0.1468531469,0.2814809533,0.7185190467,0.8694307183,0.002857770092
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.05818965517,1.0,0.0008286647552,0.9991713352,0.0001887838491,0.006994519071
"but we would like to get the following out of the way first:
Our current assumption (why the segm fault happens) is that at the time when **Class Loader**  unloading JIT hook is called, J9Method of some class (not necessarily belonging to that Class Loader) was already freed (and possibly corrupted by somebody reusing its memory).",Investigation and Exploration,False,333,CONTRIBUTOR,False,False,False,1.0,0.6373626374,0.4285714286,0.6153846154,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
"As long as the command line remains the same, the gc sizing hints for that command line remain valid.",Solution Discussion,False,101,CONTRIBUTOR,True,False,False,0.7307692308,0.1301369863,0.4545454545,0.217877095,0.01440399469,0.9855960053,0.001770078156,0.04266521959
"The workaround suggested by @babsingh was to *avoid* passing CODE rather than to start passing it:

> Segfault is only seen when CODE is specified.",Workarounds,True,149,CONTRIBUTOR,False,False,False,1.0,0.2688172043,0.5,0.1196911197,0.08104840561,0.9189515944,0.002025499661,0.002003118449
The issues with nestmates should go away once https://github.com/eclipse/openj9/pull/2459 is merged.,Solution Discussion,False,100,CONTRIBUTOR,False,False,False,1.0,0.09322033898,1.0,0.903030303,0.637037211,0.362962789,0.006974193286,0.008000933442
"Changes in OMR build
https://github.com/eclipse/openj9/compare/05e9a0c...5b579fd
https://github.com/eclipse/openj9-omr/compare/8d17d5c...1fb4081

Changes in nightly build
https://github.com/eclipse/openj9/compare/2755f24...0922dee
https://github.com/eclipse/openj9-omr/compare/8a77e0c...8d17d5c",Testing,False,300,CONTRIBUTOR,True,False,False,1.0,0.2931034483,1.0,0.03669724771,0.0009007584818,0.9990992415,5.32e-05,0.05589632154
Then: CODE,Workarounds,True,10,NONE,False,False,False,0.3333333333,0.0157480315,0.2785923754,0.6666666667,0.3379437231,0.6620562769,0.0004436934522,0.05817708545
jextract can't find the libraries unfortunately.,Investigation and Exploration,False,48,CONTRIBUTOR,False,False,False,0.2608695652,0.1276595745,0.5,0.1769230769,0.1072645887,0.8927354113,0.01345561023,0.009663080221
@huxuanlai it works!,Social Conversation,False,20,NONE,False,False,False,0.5,0.004341534009,0.904290429,0.5,0.3618377584,0.6381622416,0.002231306666,0.05363264296
The test code is:CODE,Bug Reproduction,True,21,NONE,False,False,False,0.2380952381,0.07042253521,0.03801169591,0.75,0.005251657845,0.9947483422,0.007997893245,0.2771530517
"-Xgcpolicy:balanced
 -Xms65m -Xmx65m
were needed to reproduce the bug.",Bug Reproduction,False,72,CONTRIBUTOR,False,False,False,1.0,0.07407407407,0.5,0.2057142857,0.3084971878,0.6915028122,0.0005070055754,0.000545910493
I have installed cuda 9.0 with command: sudo apt-get install cuda-libraries-9-0,Solution Discussion,False,79,NONE,False,False,False,1.0,0.1102362205,0.7448680352,0.75,0.5399330381,0.4600669619,0.1028511002,0.2627005402
"Partial fit on the other hand, changes the underlying model.",Solution Discussion,False,60,MEMBER,False,False,False,0.3571428571,0.1408450704,0.3043478261,0.4,0.03951545499,0.960484545,4.948110811e-06,1.193161472e-05
"That being said, this code does need to account for the defining class to not be returned.",Solution Discussion,False,90,CONTRIBUTOR,False,False,False,0.68,0.2741935484,0.625,0.2841530055,0.4942847726,0.5057152274,0.01863655198,0.01288492485
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.2370689655,1.0,0.1397984452,0.8602015548,0.149949263,0.06698506881
"There might be a real problem, but I'm reluctant to add additional logic before observing a problem and proving the logic helps.",Solution Discussion,False,128,CONTRIBUTOR,False,False,False,1.0,0.1506849315,0.6666666667,0.9553072626,0.9684026741,0.03159732594,2.94e-05,0.0001713134092
"This includes explicit throws via the athrow bytecode, and any implicitly-thrown exceptions from NPE traps, resolves, etc.",Solution Discussion,False,122,CONTRIBUTOR,False,False,False,0.75,0.28125,0.75,0.780141844,0.9535181949,0.04648180506,0.0005193381324,0.01198084219
I've moved it to the 0.23 milestone,Action on Issue,False,35,MEMBER,False,False,False,1.0,0.1290322581,1.0,0.1530054645,0.2953448499,0.7046551501,5.14e-05,0.368564445
Still getting it when launching from within Eclipse.,Investigation and Exploration,False,52,NONE,True,False,False,0.5,0.08080808081,1.0,0.7684210526,0.30598732,0.69401268,0.2876671246,0.001414404228
I'll try a smaller value of CODE to see how this helps.,Social Conversation,True,55,CONTRIBUTOR,False,False,False,0.375,0.04615384615,0.6188436831,0.3333333333,0.5082642878,0.4917357122,0.001406808951,0.377195146
"Are there any objections to merging the system test change that limits the test time to 10 minutes, regardless of how many classes get loaded in that time?",Investigation and Exploration,False,155,CONTRIBUTOR,True,False,False,1.0,0.4179104478,1.0,0.9306358382,0.01959881947,0.9804011805,0.0001852779599,6.97e-06
@dmitripivkine Do you have any objections to this theory?,Social Conversation,False,57,CONTRIBUTOR,False,False,False,0.2432432432,0.0989010989,1.0,0.5,0.8536703555,0.1463296445,0.2634355634,0.0006108387286
The hint is always updated.,Solution Discussion,False,27,CONTRIBUTOR,False,False,False,0.2272727273,0.03424657534,0.1666666667,0.843575419,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
""",buckets"" option makes it doubly fragmented with many concurrent malloc/free.",Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.2894736842,0.1774193548,0.75,0.164556962,0.04569091235,0.9543090877,0.01116047337,0.0008605174189
Hmmm.,Social Conversation,False,5,NONE,False,False,False,0.02702702703,0.001447178003,0.2673267327,0.2,0.06816238482,0.9318376152,0.001820264,0.0002230832021
CODE,Solution Discussion,True,4,NONE,False,False,False,0.07142857143,0.007874015748,0.1407624633,0.5,0.2153063504,0.7846936496,0.002231038575,0.01329083736
Bit hard to explain my brainfart...but just meant that your idea made sense :),Social Conversation,False,78,NONE,True,False,False,0.4166666667,0.3947368421,0.5401459854,0.625,0.00396941704,0.996030583,2.75679421e-05,7.249967297e-05
I just did a quick test and what I can tell is that effectively ends up affecting the total heap sizing (pretty much acting as Xmx/Xms commands).,Solution Discussion,False,145,CONTRIBUTOR,False,False,False,0.1917808219,0.1917808219,0.6666666667,0.1005586592,0.009996592204,0.9900034078,0.0002712462313,0.0008466218856
"I did 2 test runs with the exact same code but different CODE settings in the CODE, and my validation/test accuracies seemed more reasonable.",Usage,True,141,CONTRIBUTOR,False,False,False,0.625,0.09615384615,0.4304068522,0.5,0.3796199321,0.6203800679,0.003216099592,0.003984639748
"short of ulimit issue, it is unimaginable that malloc failed for 64bit.",Investigation and Exploration,False,71,CONTRIBUTOR,False,False,False,0.2926829268,0.1935483871,0.8,0.09282700422,0.003956069835,0.9960439302,0.01118964345,0.000481306353
No mystery here.,Social Conversation,False,16,CONTRIBUTOR,False,False,False,0.06666666667,0.0234375,0.2,0.1333333333,0.02828196509,0.9717180349,0.0001303405259,0.0002282569671
"Just want to share an update -- revamped https://github.com/nikhilk/node-tensorflow with plan to have that support using TensorFlow graphs (and later, saved models) for prediction/inference in node.js.",Task Progress,False,201,NONE,False,False,False,1.0,0.3698630137,0.8620689655,0.5,0.8316156465,0.1683843535,0.2335327035,0.08097676277
we are js dev.,Social Conversation,False,14,NONE,False,False,False,0.5714285714,0.05479452055,0.6939655172,1.0,0.705174974,0.294825026,2.810732572e-05,0.0003645099643
"OpenJDK is modifying Windows compilation for Java 11+ to use VS2017 and OpenJ9 should support the same.

https://bugs.openjdk.java.net/browse/JDK-8201267

See also #1684",Motivation,False,173,CONTRIBUTOR,True,True,False,1.0,0.1949152542,1.0,0.01212121212,0.0,1.0,0.0,1.0
Full Stack Trace: CODE,Observed Bug Behaviour,True,22,NONE,True,True,False,0.3076923077,0.05633802817,0.01461988304,1.0,0.0,1.0,0.0,0.0002726161379
"In that case, I think this patch should fix the problem.",Testing,False,56,CONTRIBUTOR,False,False,False,1.0,0.1182795699,0.25,0.7644787645,0.6103874427,0.3896125573,0.001063107557,0.0008616766512
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1551724138,1.0,0.03876492298,0.961235077,0.01060885558,0.06837007389
@DanlanChen That is probably because you also have 9.1 installed.,Solution Discussion,False,65,NONE,False,False,False,0.7692307692,0.07874015748,0.5659824047,0.5,0.4315181319,0.5684818681,0.0008762945681,5.176423609e-05
"This results in an invalid predicted action, leading the parser to return a status code (it can't raise an error, as it's in a CODE function).",Investigation and Exploration,True,142,MEMBER,False,False,False,0.619047619,0.2736842105,0.3578947368,0.7777777778,0.1453780739,0.8546219261,0.07593267665,0.03116866066
"Again, it may have just not been clear to me how to use the queues, but being able to randomly pull a mini-batch from this sample buffer and not remove the samples so a new set of samples can be collected (possibly with prior sampled examples) would be nice.",Expected Behaviour,False,258,CONTRIBUTOR,False,False,False,1.0,0.7462686567,0.2343966713,1.0,0.04933077218,0.9506692278,0.001568663379,0.00540277799
"I have another issue that I still need to create, where we randomly GPF crashes after about a week when allocating memory.",Potential New Issues and Requests,False,122,NONE,True,False,False,1.0,0.2933333333,0.6666666667,0.988700565,0.3776596346,0.6223403654,0.001141107642,1.0
Currently we are accessing the vector space through the https://github.com/3Top/word2vec-api/ project.,Potential New Issues and Requests,False,102,NONE,False,False,False,0.6111111111,0.2894736842,0.8686131387,0.6,0.008264937696,0.9917350623,0.003893704171,0.01990868788
Let's use verbose=100 just to be sure (there are some things reported atverbose=20),Investigation and Exploration,False,83,MEMBER,False,False,False,1.0,0.1911764706,0.6463414634,1.0,0.5798854101,0.4201145899,1.105002901e-05,0.0002506975331
It probably be better if OpenJ9 could avoid the problem somehow by itself.,Solution Discussion,False,74,NONE,True,False,False,0.3095238095,0.1313131313,0.8,0.9228070175,0.9035334291,0.09646657091,0.002703173696,0.005495507544
So I guess I need to report this to the OpenJDK team!,Action on Issue,False,53,NONE,True,False,False,0.4285714286,0.1791044776,1.0,0.5977653631,0.1112819629,0.8887180371,0.2689971282,0.0008696566537
"@yarikoptic, any suggestion of how we can reproduce these test environments?",Bug Reproduction,False,76,MEMBER,False,False,False,1.0,0.1617647059,0.5,1.0,0.5570418067,0.4429581933,0.03044075803,0.01794179397
I referred to call-directly as meaning JIT-ed code seeing it as a target (instead of meaning it through bl).,Social Conversation,False,108,CONTRIBUTOR,False,False,False,0.7,0.1640625,1.0,0.4166666667,0.03713237758,0.9628676224,0.000131199442,0.0001129474738
Thanks,Social Conversation,False,6,CONTRIBUTOR,False,False,False,0.1428571429,0.006535947712,0.9260450161,0.5,0.1992845349,0.8007154651,0.0007126827681,0.00591569739
And it's also bad to have unbounded memory use on the streaming process.,Investigation and Exploration,False,72,MEMBER,False,False,False,0.325,0.2096774194,0.3171806167,0.3055555556,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
"A test failure with UnsatisfiedLinkError is detected during the sanity test as follows:

CODE
Look at the test code:
CODE
Currently I am running tests with .../build/windows-x86_64-normal-server-release/images/jdk/bin

Comparison with the compiled build with openjdk8/open9 shows the j9ben.dll exists in .../build/windows-x86_64-normal-server-release/**jdk/bin/compressedrefs** but missing in openj9-openjdk-jdk11/build/windows-x86_64-normal-server-release/**images/jdk/bin/compressedrefs**
CODE
Looking at the dll files at jdk/bin/compressedrefs  and images/jdk/bin/compressedrefs:
CODE
It seems a lot of test related dll files are missing in images/jdk/bin/compressedrefs except j9ben.dll.",Testing,True,702,CONTRIBUTOR,False,False,False,1.0,0.9745762712,0.3333333333,0.9151515152,0.6453809646,0.3546190354,0.01790509819,0.0003116104286
AIX and BE Linux64 ABI(s):  they did require caller set up r2 before call.,Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.8421052632,0.125,0.1428571429,0.5277777778,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
"Yes, it is a new test (CODE), which is included in https://github.com/eclipse-openj9/openj9/pull/13836.",Social Conversation,True,103,CONTRIBUTOR,False,False,False,0.4,0.1290322581,0.2,0.3011583012,0.3820592256,0.6179407744,0.004767198096,5.6e-05
That fixed it.,Solution Discussion,False,14,NONE,False,False,False,0.1666666667,0.04225352113,0.9473684211,0.5,0.8037871249,0.1962128751,0.001758720049,0.1070466705
Can another person confirm this point?,Social Conversation,False,38,CONTRIBUTOR,False,False,False,0.3529411765,0.06451612903,1.0,0.1583011583,0.08713752309,0.9128624769,0.002189628546,0.0003096067621
"The timeout for this test is set to CODE , so looks like workload of this test needs to be reduced.",Solution Discussion,True,99,CONTRIBUTOR,False,False,False,1.0,0.2985074627,0.5,0.1502890173,0.003377117413,0.9966228826,4.75e-06,0.0007383085446
I'm in the process of trying to reproduce this myself.,Task Progress,False,54,CONTRIBUTOR,False,False,False,0.4347826087,0.1612903226,0.5,0.3989071038,0.6418388943,0.3581611057,0.01517828221,0.09158488929
<=> iCache synchronization issue.,Investigation and Exploration,False,33,CONTRIBUTOR,False,False,False,0.06382978723,0.01724137931,0.2857142857,0.1617647059,0.7325460239,0.2674539761,0.009169774309,7.65e-05
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.07692307692,0.01612903226,1.0,0.8607594937,0.6663614196,0.3336385804,0.02615972953,0.2052027758
Okay!,Social Conversation,False,5,NONE,False,False,False,0.5,0.001447178003,0.8448844884,0.3333333333,0.2925249869,0.7074750131,0.0003439990441,0.0001064391661
"SGDClassifier does CODE epochs of updates, then stops.",Solution Discussion,True,54,MEMBER,False,False,False,0.380952381,0.1126760563,0.5507246377,0.1666666667,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
"Ok, it's one of those days.",Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.2857142857,0.05769230769,0.3333333333,0.3480662983,0.1323326733,0.8676673267,2.2e-05,3.48e-05
Fabio,Social Conversation,False,5,NONE,False,False,False,0.0303030303,0.001447178003,0.7557755776,0.875,0.272648067,0.727351933,0.02402499291,0.006610382458
@andrewcraik @dsouzai Can somebody look at this failure please.,Contribution and Commitment,False,63,CONTRIBUTOR,True,False,False,1.0,0.1551724138,1.0,0.06422018349,0.02057489141,0.9794251086,8.78e-06,5.41e-05
it deserves a redesign.,Motivation,False,23,MEMBER,False,False,False,0.1818181818,0.0625,0.7242647059,0.75,0.1237414412,0.8762585588,0.004649423917,0.002792339292
"Having a bit of experience in spark, using Spacy with spark will always be tricky as the stringstore will evolve differently in all the workers so a string converted to an int will not necessarily be equivalent to the same int on another worker.",Solution Discussion,False,245,NONE,False,False,False,0.7333333333,0.2875816993,0.4340836013,0.25,0.1131980914,0.8868019086,0.0007474630201,1.624466859e-05
"Yep, that fixes it, thanks.",Social Conversation,False,27,CONTRIBUTOR,False,False,False,0.3571428571,0.04807692308,0.5,0.3867403315,0.1324195026,0.8675804974,6.21e-05,0.0001049103339
The work is amortized and is now linear on average.,Task Progress,False,51,CONTRIBUTOR,False,False,False,0.2631578947,0.1098901099,1.0,0.8356643357,0.8672060445,0.1327939555,0.005897328255,0.0001401924951
"Yes, I think it's a good idea.",Social Conversation,False,30,CONTRIBUTOR,False,False,False,0.4375,0.04022988506,0.3333333333,0.2683823529,0.7583585823,0.2416414177,0.0006493475044,0.001068346158
"We use scikit-image CODE objects to apply cropping and resizing operations for this model, because those objects let us easily translate our model output back to the original input coordinate space.",Motivation,True,198,CONTRIBUTOR,False,False,False,0.6808510638,0.4776119403,0.2607489598,0.5,0.05010423233,0.9498957677,0.0003781690105,0.199242644
"It is very likely that this SCREEN_NAME 's problem is due to the well known limitation on Accelerate with multiprocessing, see our [faq](http://scikit-learn.org/stable/faq.html#why-do-i-sometime-get-a-crash-freeze-with-n-jobs-1-under-osx-or-linux).",Investigation and Exploration,False,248,MEMBER,False,False,False,1.0,0.3917525773,0.4437869822,0.3333333333,0.8484749906,0.1515250094,1.519746876e-05,1.184011945e-05
"Okay, so it doesn't actually start fine every single time.",Observed Bug Behaviour,False,58,NONE,True,False,False,0.3225806452,0.101010101,0.09090909091,0.04912280702,0.09912996542,0.9008700346,0.005467138405,0.004133788861
"In any case, I guess we should look into how to exist gracefully (throwing Java exception)  from setNativeOutOfMemoryError when resources are limited.",Investigation and Exploration,False,150,CONTRIBUTOR,False,False,False,1.0,0.4893617021,1.0,0.4192307692,0.3655628752,0.6344371248,0.002719172456,0.01937481932
"I did some tests using the new input pipeline to load an preprocess images, but it seems everything is done sequentially and their is only a negligible performance improvement over using e.g. OpenCV to load and preprocess images.",Solution Discussion,False,229,NONE,False,False,False,0.9047619048,0.5671641791,0.7669902913,0.4,0.5844291371,0.4155708629,0.00636830506,0.1964778875
I had exactly the same problem either with tf.slim batchnorm or with tf.cond and input is_training as a placeholder.,Usage,False,116,NONE,False,False,False,0.6333333333,0.07307692308,0.4175588865,0.25,0.3791120712,0.6208879288,0.03827269103,0.003216099592
"But whether this difference is important in practice, I don't know.",Social Conversation,False,67,CONTRIBUTOR,True,False,False,0.3793103448,0.171875,0.2095588235,0.375,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
Thank you.,Social Conversation,False,10,MEMBER,False,False,False,0.1818181818,0.007692307692,0.9935760171,1.0,0.9977234775,0.002276522477,0.2238197937,0.01441639293
That option is not used to build jdk12.,Investigation and Exploration,False,39,CONTRIBUTOR,False,False,False,0.6153846154,0.04597701149,1.0,0.7794117647,0.7732295867,0.2267704133,4.82e-05,0.0001379730553
Interesting results indeed - of course Windows Server 2012 is not the same than Windows 10 so there is still a difference.,Investigation and Exploration,False,122,NONE,True,False,False,1.0,0.1532846715,0.3333333333,0.4275092937,0.02062277479,0.9793772252,4.56e-06,6.05e-05
"However, that transformation does not happen in AOT, hence the call out.",Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.1290322581,0.1290322581,0.9166666667,0.4092664093,0.3937305493,0.6062694507,0.03688423691,0.3568236584
Thanks for looking into this!,Social Conversation,False,29,NONE,True,False,False,0.5,0.04807692308,1.0,0.2099447514,0.02423213548,0.9757678645,9.99e-05,0.03981237336
@pwagland @ninja-,Social Conversation,False,17,CONTRIBUTOR,False,False,False,0.09523809524,0.02666666667,0.5,0.4858757062,0.03686268144,0.9631373186,0.00168726386,0.001119226384
cc SCREEN_NAME  SCREEN_NAME  SCREEN_NAME  SCREEN_NAME ,Contribution and Commitment,False,54,CONTRIBUTOR,True,True,False,0.16,0.125,0.08823529412,1.0,0.0,1.0,0.0,0.0007774126438
"It's relatively straightforward for us to, in Python, generate a new draw from our original data set for every epoch, but it seems like in the API proposed above, we'd have to figure out how to implement this behavior as an CODE, which seems less straightforward.",Motivation,True,263,CONTRIBUTOR,False,False,False,1.0,0.7014925373,0.2649098474,1.0,0.05010423233,0.9498957677,0.0003781690105,0.199242644
"What did the perf look like for the run that produced vlog2?

CODE
CODE
Looks like the majority of failures were due to AOT relocations when doing CODE.",Investigation and Exploration,True,156,CONTRIBUTOR,False,False,False,1.0,0.2262773723,0.5,0.1895910781,0.001895336849,0.9981046632,1.49e-05,5.26e-05
Thank you so much SCREEN_NAME  !,Social Conversation,False,32,NONE,True,False,False,0.2727272727,0.09677419355,0.8237885463,0.8,0.6128462627,0.3871537373,0.09855593002,0.1714850105
"Are the segfaults running rc021 in
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_1/44
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_ppc64le_linux_Nightly_testList_0/156
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_1/48/
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_0/49/
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_1/49/
this problem or a different problem?

 Dec 7:
https://openj9-jenkins.osuosl.org/job/Test_openjdk8_j9_extended.functional_aarch64_linux_Nightly_testList_1/46
https://openj9-jenkins.osuosl.org/job/Test_openjdk11_j9_extended.functional_aarch64_linux_Nightly_testList_0/50

I think its the same issue, there is a decompile right before the crash.",Testing,False,951,CONTRIBUTOR,False,False,False,1.0,0.4838709677,0.25,0.9420849421,0.9188394381,0.08116056195,0.2809961131,0.003058765602
"I was able to narrow the problem down to this simple test case.
CODE

I'm able to get a core file via GDB, however a normal invocation of this test cases the handler to hang attempting to create the core file.",Investigation and Exploration,True,212,CONTRIBUTOR,False,False,False,1.0,0.914893617,1.0,0.5115384615,0.4563413728,0.5436586272,0.2342152039,0.006494528739
"just to eliminate the possibility, could you try usingreturn_train_score=False?",Investigation and Exploration,False,79,MEMBER,False,False,False,1.0,0.1030927835,0.4408284024,1.0,0.8484692846,0.1515307154,2.72561139e-05,1.519746876e-05
If you're getting a segfault the handiest thing to do would be to break out the pipeline manually.,Potential New Issues and Requests,False,98,MEMBER,False,False,False,1.0,0.1894736842,0.5894736842,0.4,0.1887344648,0.8112655352,8.377216225e-06,7.438390269e-06
The concept is similar to SCREEN_NAME 's suggested approach.,Solution Discussion,False,60,NONE,False,False,True,8.0,0.1095890411,0.9806034483,4.0,1.0,0.0,0.5674118797,0.0
Seems the agent isn't hard linked to librt.,Solution Discussion,False,43,CONTRIBUTOR,False,False,False,0.3333333333,0.07692307692,0.5,0.364640884,0.1323546318,0.8676453682,3.48e-05,4.06e-05
Looking at the most recent backtrace from Alen I see: CODE under the Unsafe API - seems like we are failing to allocate memory?,Investigation and Exploration,True,127,CONTRIBUTOR,False,False,False,1.0,0.4893617021,0.4,0.3730769231,0.3601897468,0.6398102532,0.1462886158,0.02184783511
The growing behaviour can be disabled by setting the intial stack size to the maximum (CODE assuming you're using the default sizes).,Solution Discussion,True,133,CONTRIBUTOR,False,False,False,0.4782608696,0.2115384615,1.0,0.8895027624,0.3185054309,0.6814945691,0.006311966217,1.18e-05
The preferred approach is to complete the release on schedule to pick up the OpenJDK security fixes.,Solution Discussion,False,100,CONTRIBUTOR,True,False,False,0.68,0.2537313433,0.3333333333,0.8150289017,0.01914830704,0.980851693,0.001167361543,2.78e-05
There is something slightly similar in the adaboost pr: #522.,Motivation,False,61,MEMBER,False,False,False,0.5882352941,0.1408450704,0.03623188406,0.3333333333,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
"Both use the JIT metadata to get the locations, but for some reason, the throw version of the code is not getting the correct info - see https://github.com/eclipse/openj9/issues/3373#issuecomment-438381311.",Investigation and Exploration,False,206,CONTRIBUTOR,False,False,False,1.0,0.421875,1.0,0.8510638298,0.9584949154,0.0415050846,0.01558254832,0.006489322312
For the rest I think there are not really  conflicting keywords (they have some others specific to dataframes which we won't add to sklearn at this point).,Solution Discussion,False,155,CONTRIBUTOR,True,False,True,28.0,0.4375,0.9963235294,4.0,1.0,0.0,0.0009246776239,0.0
"When I trained the model longer, validation accuracy becomes prettier, too.",Usage,False,75,CONTRIBUTOR,False,False,False,0.2820512821,0.04230769231,0.591006424,0.4545454545,0.5066230602,0.4933769398,0.0009690200702,0.008986491854
"It might be possible to make it work as I suggested above, but so far I haven't seen a simple install instruction I would like to keep as default for spaCy all users.",Solution Discussion,False,166,CONTRIBUTOR,False,False,False,1.0,0.2156862745,0.9742765273,1.0,0.2018945648,0.7981054352,4.380506786e-05,0.1692698285
I suspect it is related to timestamp checking of the jars.,Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.55,0.0802919708,0.5,0.7360594796,0.04433446097,0.955665539,0.002371624979,9.23e-05
"I'm grateful to SCREEN_NAME  , SCREEN_NAME  and others for their contributions to the discussion here.",Social Conversation,False,102,MEMBER,False,False,False,0.4,0.1045751634,0.7652733119,0.1578947368,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
I can try the performance inside a container later this week and can then provide feedback on that.,Task Progress,False,99,NONE,True,False,False,0.8181818182,0.1313868613,1.0,0.6840148699,0.02636609455,0.9736339055,9.69e-05,0.01430180553
"and I can still reproduce the issue:
CODE
There are 16 Executor Threads and all are burning CPU with the same stack trace:
CODE
I use my entire machine (4 cores/ 8 HW threads) for these experiments and there are no CPU limits set for docker containers.",Investigation and Exploration,True,256,CONTRIBUTOR,False,False,False,1.0,0.6375,0.5,0.9411764706,0.9704325596,0.02956744036,0.02395737432,0.001040994599
Thank you.,Social Conversation,False,10,MEMBER,False,False,False,0.1818181818,0.007692307692,0.9871520343,1.0,0.9623796302,0.03762036985,0.1344801204,0.2238197937
I can do more runs of this test next week.,Task Progress,False,42,CONTRIBUTOR,True,False,False,0.4761904762,0.1612903226,0.75,0.7848101266,0.5598736768,0.4401263232,0.008625593247,0.002832414962
"If every step is exactly the same as described in https://github.com/spring-projects/sts4/issues/138#issuecomment-440088030, then the crash might be triggered by something else.",Investigation and Exploration,False,177,CONTRIBUTOR,False,False,False,0.3225806452,0.202020202,1.0,0.4385964912,0.1951791301,0.8048208699,0.1924076078,0.004535009544
See issue here: http://stackoverflow.com/questions/43708616/tensorflow-inference,Motivation,False,80,NONE,False,False,False,0.1,0.05970149254,0.4105409154,0.8333333333,0.3388855985,0.6611144015,0.008137504899,0.0001124836492
"For questions about Lassy, you can email [Gertjan van Noord](http://www.let.rug.nl/~vannoord/).",Solution Discussion,False,95,NONE,False,False,False,0.7142857143,0.1666666667,0.5172413793,0.5,0.3933440623,0.6066559377,3.129518449e-05,1.869214639e-05
"@zl-wang the other option is to stick with ""multiheap(:32)"" and have the failing system testing re-tuned to run a smaller workload.",Solution Discussion,False,131,CONTRIBUTOR,True,False,False,0.7419354839,0.3709677419,0.1428571429,0.5485232068,0.4797361547,0.5202638453,0.003593754102,0.003640426233
"How frequently do you move from one outer ""data set"" to the next?",Motivation,False,65,CONTRIBUTOR,True,False,False,0.2826086957,0.1940298507,0.06241331484,0.375,0.000283956448,0.9997160436,0.0015177658,0.0008184330671
"Now, this is an integer representation --- so why not just use the hash?",Investigation and Exploration,False,72,MEMBER,False,False,False,0.35,0.2258064516,0.3480176211,0.5,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
Debian test failures (was test_preserve_trustworthiness_approximately fails on 32bit: AssertionError: 0.89166666666666661 not greater than 0.9),Observed Bug Behaviour,False,143,MEMBER,True,True,False,0.6363636364,0.2058823529,0.00406504065,0.25,0.0,1.0,0.0,0.02663056991
"2) Always raise a warning, and indicate in the warning message what to do if you are in such a case (in addition to an explanation what to do if you don't have a consecutive range):",Solution Discussion,False,181,CONTRIBUTOR,True,False,False,0.8181818182,0.5625,0.4338235294,0.4761904762,0.07430334202,0.925696658,0.1302436707,0.0003197521392
"At the moment, ""warm start"" refers to an optimization procedure, which there is none in tree based methods.",Solution Discussion,False,107,MEMBER,False,False,False,0.6923076923,0.2535211268,0.3442028986,0.5555555556,0.03955809392,0.9604419061,3.228554572e-05,5.930714377e-06
Many thanks for his help.,Social Conversation,False,25,CONTRIBUTOR,False,False,False,0.4545454545,0.03759398496,0.6666666667,0.8753180662,0.840649683,0.159350317,0.000959379849,0.00441061294
I'd really appreciate it.,Social Conversation,False,25,NONE,False,False,False,0.2173913043,0.01923076923,0.06852248394,1.0,0.2025148049,0.7974851951,0.1811646483,5.356953168e-05
Likely OJKD MH related?,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,1.0,0.04347826087,1.0,0.03773584906,0.01508760104,0.984912399,0.0412638732,0.0001283837294
We've already merged a fix #14071.,Action on Issue,False,34,CONTRIBUTOR,False,False,False,0.4666666667,0.0752688172,0.6,0.9652509653,0.9195635971,0.08043640294,0.003058765602,0.2682425527
What is the value of exclusiveAccessState?,Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.75,0.08,0.5,0.6497175141,0.08465484106,0.9153451589,2.54e-05,0.0003606031438
Looking forward to it.,Social Conversation,False,22,NONE,False,False,False,1.0,0.05479452055,0.4288793103,0.5,0.5093368755,0.4906631245,0.01110659869,0.063150964
seems to work for everybody now.,Task Progress,False,32,MEMBER,False,False,False,1.0,0.08450704225,0.2368421053,0.5,0.214178324,0.785821676,0.2064171901,0.04731273831
"getJitPCOffsetFromExceptionHandler is no longer called from anywhere in the codebase, and the userData1 value from jitExceptionHandlerSearch is ignored.",Solution Discussion,False,152,CONTRIBUTOR,False,False,False,0.28125,0.28125,0.5454545455,0.1134751773,0.000716727624,0.9992832724,0.003714710253,0.00734286415
"One more questions, does the license associated to those datasets allows to be incorporated into spaCy or use it to process dutch text not within a research context?",Solution Discussion,False,165,NONE,False,False,False,1.0,0.4666666667,0.5689655172,1.0,0.3933478971,0.6066521029,1.869214639e-05,4.262375806e-05
I excluded just CODE,Bug Reproduction,True,20,CONTRIBUTOR,False,False,False,0.07843137255,0.05,0.25,0.9362745098,0.9704325596,0.02956744036,0.02395737432,0.001040994599
"Started 50 JVMs simultaneously, on a machine with 120 threads.",Task Progress,False,62,CONTRIBUTOR,False,False,False,0.1754385965,0.06849315068,0.2222222222,0.8938547486,0.9683547652,0.0316452348,4.2e-05,0.0001153317802
I cannot reproduce the issue as of now.,Bug Reproduction,False,39,CONTRIBUTOR,False,False,False,0.2727272727,0.06766917293,0.1764705882,0.5216284987,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
Can you update this with the outlook?,Solution Discussion,False,37,MEMBER,False,False,False,1.0,0.04794520548,1.0,0.782122905,0.8995961528,0.1004038472,0.7369047902,0.0001470921313
Consider the dataframe CODE which equals: CODE,Expected Behaviour,True,46,NONE,False,False,False,0.25,0.109375,0.7757352941,0.375,0.2567040608,0.7432959392,0.02304981706,0.003308173532
You can check your graphic card with the command :,Solution Discussion,False,50,NONE,False,False,False,0.5,0.07086614173,0.9882697947,0.75,0.9758786978,0.02412130216,0.05092861342,0.2966697109
"1.         CODE,  exponential moving average is actually alpha filter in signal processing, the time to converge is approximately 1/(1-decay) steps of train.",Solution Discussion,True,157,NONE,False,False,False,0.8275862069,0.09230769231,0.9314775161,0.2352941176,0.7995481369,0.2004518631,0.3206669123,0.722664447
All changes should be committed later today.,Task Progress,False,44,CONTRIBUTOR,False,False,False,0.3888888889,0.06730769231,1.0,0.9668508287,0.3305498824,0.6694501176,0.0001858086996,5.71e-05
Detailed information can be found here:  URL ,Solution Discussion,False,45,NONE,False,False,False,0.2666666667,0.06299212598,0.5161290323,1.0,0.4058602603,0.5941397397,0.0003105854165,0.001371752256
"default runs:
7.9s,7.8s,7.9s

shareclasses cold:
14.4s

shareclasses warm:
7.1s,6.9s,7.0s

I would have expected CODE to provide more of a win",Investigation and Exploration,True,151,CONTRIBUTOR,False,False,False,1.0,0.1897810219,0.4,0.6356877323,0.02581807522,0.9741819248,0.0002654464138,9.32e-05
"Well I am not an expert on Executable memory for AIX
There are two scenarios for AIX for EXECUTE:
- for 4k pages use CODE
- for Large Pages (including default 64k)",Investigation and Exploration,True,166,CONTRIBUTOR,False,False,False,1.0,0.1896551724,0.25,0.2389705882,0.7477267944,0.2522732056,0.0003712750967,0.001172416587
then execute the snippet from https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-262800762.,Bug Reproduction,False,110,MEMBER,False,False,False,0.1276595745,0.08450704225,0.769005848,0.4285714286,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
Was there a compilation log (tracefile) to go with the verbose log?,Investigation and Exploration,False,67,CONTRIBUTOR,False,False,False,0.7058823529,0.1791044776,0.6666666667,0.3184357542,0.003702163483,0.9962978365,0.0001999606974,9.22e-05
"-Xnojit makes it run properly, but -Xjit:dontInline on sun.misc.",Solution Discussion,False,64,CONTRIBUTOR,False,False,False,0.2702702703,0.1492537313,0.4,0.8212290503,0.1150439695,0.8849560305,0.0009687751028,0.0002215081863
"The CODE is invoked when compiling an inlined call(TR::call), this is illustrated looking in the prior treetop reference.",Investigation and Exploration,True,121,CONTRIBUTOR,False,False,False,0.5806451613,0.3829787234,0.6296296296,0.7961538462,0.6986733294,0.3013266706,0.2919761514,0.1217072968
A collection of train/valid/test data or simply a collection of data?,Motivation,False,69,NONE,False,False,False,0.4333333333,0.1940298507,0.1511789182,0.4,0.04064994448,0.9593500555,0.2125437083,0.01543061897
Paula: I could not get this snippet to freeze.,Investigation and Exploration,False,46,NONE,False,False,False,0.5294117647,0.09278350515,0.7721893491,0.4285714286,0.8504500024,0.1495499976,4.501629308e-05,0.0001636161473
The following will run your code:CODE,Solution Discussion,True,37,NONE,False,False,False,0.175,0.07216494845,0.8343195266,0.5,0.8589078439,0.1410921561,2.097846668e-05,0.1984119539
If it does then it feels like some sort of file IO or something that is making shared classes slow.,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.8333333333,0.1459854015,0.625,0.531598513,0.02511107793,0.9748889221,0.006018717906,8.32e-05
"In regards to what SCREEN_NAME  said, I think the solution is not to fix the legacy seq2seq code, but to update the tutorial to use the CODE package instead, which is actively maintained.",Solution Discussion,True,187,NONE,False,False,False,1.0,0.0492040521,0.5346534653,0.3333333333,0.1352070615,0.8647929385,0.03407322991,0.00125745356
If you're a SpaCy employee it might technically be commercial use and the terms and conditions from the TST-centrale are different: I just checked and the license for Lassy-klein for commercial use costs 2000 euros.,Solution Discussion,False,215,NONE,False,False,False,1.0,0.6166666667,0.5862068966,0.1666666667,0.3933566415,0.6066433585,4.262375806e-05,1.354708589e-05
@babsingh @fengxue-IS,Contribution and Commitment,False,21,CONTRIBUTOR,False,False,False,1.0,0.03225806452,1.0,0.03474903475,0.008548608732,0.9914513913,0.00204415067,0.000637864534
Also been having this problem.,Bug Reproduction,False,30,NONE,False,False,False,0.3846153846,0.07042253521,0.9005847953,0.3333333333,0.6535614795,0.3464385205,0.0351468626,0.006016236851
fyi @hangshao0,Contribution and Commitment,False,14,MEMBER,False,False,False,1.0,0.01459854015,1.0,0.7063197026,0.0414822256,0.9585177744,0.0005884545304,3.52e-05
JVM sometimes hangs when calling kill -QUIT <javapid>,Observed Bug Behaviour,False,53,NONE,True,True,False,0.2666666667,0.1066666667,0.1,0.005649717514,0.0,1.0,0.0,4.66e-05
Because CODE is a specific strategy that might differ from thestrategy used in CODE.,Solution Discussion,True,84,MEMBER,False,False,False,0.875,0.1971830986,0.4782608696,0.25,0.04250515813,0.9574948419,1.056298833e-05,4.807738873e-06
I modified the Jmeter script to not do the login without a JWT (if the auth service failed).,Solution Discussion,False,92,NONE,True,False,False,0.9473684211,0.225,0.8,0.5931372549,0.6496013347,0.3503986653,0.3672811628,1.0
"I tried creating two models like SCREEN_NAME  said, however, my model where is_training=False just crashes.",Usage,False,107,NONE,False,False,False,0.6296296296,0.06538461538,0.7344753747,0.1666666667,0.6158890256,0.3841109744,0.00136237059,0.002840605583
"I suspect then we need to clean up both tables since the method is tracked both in CODE(CODE), and CODE.",Investigation and Exploration,True,104,CONTRIBUTOR,False,False,False,1.0,0.2197802198,1.0,0.4090909091,0.775645764,0.224354236,0.0009798068887,0.1631008731
"JavaScript operates on every mobile platform, all major desktop Operating systems & in all the browsers so possibilities are endless.",Motivation,False,133,NONE,False,False,False,0.5757575758,0.2602739726,0.7780172414,0.6666666667,0.7544761605,0.2455238395,0.005981548758,0.1170572737
Why do we think it's not?,Investigation and Exploration,False,25,CONTRIBUTOR,False,False,False,0.375,0.06593406593,1.0,0.7727272727,0.8593869021,0.1406130979,0.0008804396806,0.03684751755
"I'll do it tomorrow, once I know the steps to reproduce it.",Potential New Issues and Requests,False,59,CONTRIBUTOR,False,False,False,0.9230769231,0.1263157895,0.7578947368,0.5,0.1888805584,0.8111194416,0.0002408449665,3.85279729e-05
But I have also some questions and suggestions.,Social Conversation,False,47,NONE,False,False,False,0.2,0.1194029851,0.6310679612,0.125,0.5054793089,0.4945206911,0.03050902669,0.04958391229
Sometimes I see CODE frame change into CODE,Investigation and Exploration,True,43,CONTRIBUTOR,False,False,False,0.4210526316,0.1,1.0,0.5637254902,0.5913809345,0.4086190655,0.00531516184,0.0004306064011
"*         [x] CODE: [mips] URL , [powerpc] URL , [hppa] URL , [ppc64] URL , [s390x] URL , [sparc64] URL  fixed in #9710",Potential New Issues and Requests,True,119,MEMBER,False,False,False,1.0,0.2794117647,0.3983739837,0.3333333333,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
The option has been added for 0.15.  Moving to 0.16 to consider enabling by default,Action on Issue,False,83,MEMBER,False,False,False,1.0,0.1095890411,1.0,0.8156424581,0.963934934,0.03606506597,0.1936406153,0.0007577570648
https://research.googleblog.com/2016/11/celebrating-tensorflows-first-year.html,Social Conversation,False,79,NONE,False,False,False,0.09090909091,0.01369863014,0.3448275862,0.4,0.3894640095,0.6105359905,0.1116482733,0.1289154667
I think some thing wrong with this layer.,Solution Discussion,False,41,NONE,False,False,False,0.2857142857,0.03076923077,0.01284796574,0.1666666667,0.1699515439,0.8300484561,0.07587028422,0.02257012206
very need it!,Social Conversation,False,13,NONE,False,False,False,1.0,0.04109589041,0.3922413793,1.0,0.4717160343,0.5282839657,0.02051170825,0.0635462371
:smile:,Social Conversation,False,7,NONE,False,False,False,0.07692307692,0.007874015748,0.5806451613,1.0,0.4315385746,0.5684614254,0.0001996620535,0.2835245529
Wanted to let you know I migrated from queues to Dataset and it's been great.,Social Conversation,False,77,NONE,False,False,False,0.4838709677,0.223880597,0.5700416089,0.1,0.4630003862,0.5369996138,0.01269843694,0.02260310577
CODE,Investigation and Exploration,True,4,NONE,True,False,False,1.0,0.007518796992,1.0,0.1323155216,0.01249779818,0.9875022018,6.54e-06,0.0001921212309
full traceback:CODE,Potential New Issues and Requests,True,19,NONE,False,False,False,0.25,0.004341534009,0.9240924092,1.0,0.3876856611,0.6123143389,0.05261488518,0.05332661552
There is still some Java code involved here.,Investigation and Exploration,False,44,CONTRIBUTOR,True,False,False,0.4444444444,0.1379310345,0.25,0.3119266055,0.02088409074,0.9791159093,0.0001834423374,0.001257628253
"@jsimomaa Just to make sure, is the slowdown induced by CODE seen in the second run, or just in the first?",Investigation and Exploration,True,106,CONTRIBUTOR,False,False,False,1.0,0.1532846715,0.5,0.5539033457,0.02521770612,0.9747822939,5.8e-05,2.73e-05
I was going through the documentation of spacy.,Social Conversation,False,47,NONE,False,False,False,0.5714285714,0.2105263158,0.9635036496,0.4,0.2224968185,0.7775031815,0.2540453279,1.0
What is the option to enable this feature with a v0.12 OpenJ9 build ?,Social Conversation,False,69,CONTRIBUTOR,False,False,False,1.0,0.08904109589,0.5,0.4525139665,0.237977851,0.762022149,0.0004722347161,0.0001666616406
"I'm on El-Capitan, but I'm failing to get a Python 3.5 installation up and running.",Bug Reproduction,False,83,MEMBER,False,False,False,1.0,0.2253521127,0.06140350877,1.0,0.05428073506,0.9457192649,0.003152245181,0.247501826
All the pull requests mention in https://github.com/eclipse/openj9/issues/8842#issuecomment-601313084 are now merged.,Action on Issue,False,117,CONTRIBUTOR,False,False,False,1.0,0.1612903226,0.5,0.3080168776,0.2662964452,0.7337035548,0.02927509429,0.1726343793
The bug I was investigating there was totally different and (probably) unrelated bug.,Investigation and Exploration,False,85,NONE,True,False,False,0.5,0.1313131313,0.2857142857,0.550877193,0.1993600534,0.8006399466,0.003371874835,0.005835937215
I'll open a PR to remove it.,Action on Issue,False,28,CONTRIBUTOR,True,False,False,0.3181818182,0.1206896552,0.8,0.9816513761,0.9996774263,0.000322573672,0.005742138251,0.001861415604
"The existing methods will remain until TF 2.0 (at least), but we are planning to add a new set of methods for loading and manipulating datasets.",Task Progress,False,144,CONTRIBUTOR,True,True,False,0.5531914894,0.3880597015,0.02219140083,0.5333333333,0.0,1.0,0.0,0.000766008561
I am very willing to contribute.,Contribution and Commitment,False,32,NONE,False,False,False,0.2608695652,0.08219178082,0.1918103448,0.3333333333,0.07780844961,0.9221915504,0.1385345903,0.004404440072
"However, I am not sure I agree with the proposed fix.",Social Conversation,False,53,CONTRIBUTOR,False,False,False,0.3928571429,0.2340425532,0.3333333333,0.8423076923,0.7208851506,0.2791148494,0.1217072968,0.03144222045
warm_start is perfectly valid for SGDClassifier (in addition to CODE): right now SGDClassifier does not have convergence check / early stopping.,Solution Discussion,True,144,MEMBER,False,False,False,0.9523809524,0.2816901408,0.5434782609,0.6666666667,0.04262877546,0.9573712245,8.618836988e-05,4.569106579e-05
"The freeze/flush behaviour is off by default, so it shouldn't disrupt anyone.",Workarounds,False,77,MEMBER,False,False,False,0.3939393939,0.2096774194,0.6431718062,0.1875,0.288728579,0.711271421,0.1151253204,0.02221386295
Which means most likely we're experiencing a race condition.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.3913043478,0.0989010989,0.5,0.9090909091,0.8779153049,0.1220846951,0.01532565869,0.003869158807
1.         The CODE,Investigation and Exploration,True,19,MEMBER,False,False,False,0.1739130435,0.06451612903,0.1629955947,0.2222222222,0.02336154952,0.9766384505,0.01526654747,0.6482365618
"Investigating further.
CODE",Investigation and Exploration,True,28,CONTRIBUTOR,False,False,False,0.3636363636,0.08510638298,1.0,0.2884615385,0.144346279,0.855653721,0.02092045419,0.9710937657
https://github.com/eclipse/openj9/pull/7034#issuecomment-542759782,Solution Discussion,False,66,CONTRIBUTOR,False,False,False,0.09090909091,0.005747126437,0.6666666667,0.8897058824,0.7917911829,0.2082088171,9.54e-05,0.006755954606
Yes because the update I have proposed require you to change theembedding_attention_seq2seq Function.,Solution Discussion,False,101,NONE,False,False,False,0.6842105263,0.01881331404,0.801980198,0.5,0.2900126696,0.7099873304,0.0002065892845,4.604057575e-05
I now also use 'is_training' as a constant.,Usage,False,43,NONE,False,False,False,0.3076923077,0.03076923077,0.8479657388,0.4,0.7209968564,0.2790031436,0.007196275213,0.000558929072
Why would anyone need another Javascript library?,Motivation,False,49,NONE,False,False,False,0.7,0.09589041096,0.8125,0.3333333333,0.812005312,0.187994688,0.2701229087,0.0002104729666
The output running CODE on CODE is here (in case MKL version gives you any clue?) CODE,Investigation and Exploration,True,86,NONE,False,False,False,0.53125,0.2394366197,0.6052631579,1.0,0.457092211,0.542907789,0.009630545628,0.001200894845
"[Grinder run 2234] URL  did not specify CODE, and each sequential run was killed after ten minutes, having completed roughly 10% to 15% of the run, so about a six to ten-fold degradation.",Investigation and Exploration,True,187,MEMBER,False,False,False,0.5833333333,0.5223880597,0.9,0.7225433526,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1788793103,1.0,0.06241850972,0.9375814903,0.0133861692,0.02896227532
"test high JVM count simultaneous startup scenario

This is just a matter of starting a number of JVMs at approximately the same time, such as starting up 20 JVMs running the SwingSet demo.",Solution Discussion,False,190,CONTRIBUTOR,True,False,False,1.0,0.2328767123,1.0,0.8100558659,0.899816098,0.100183902,0.0005171483439,0.1936406153
Running with a debug build makes the problem go away.,Solution Discussion,False,53,CONTRIBUTOR,True,False,False,0.9090909091,0.05291005291,0.3333333333,0.05714285714,0.1331240796,0.8668759204,0.002813570532,0.001175011289
"In fact, the copy.deepcopy is there because these are legacy functions andwe don't have the resources to maintain/update them.",Investigation and Exploration,False,126,CONTRIBUTOR,False,False,False,0.5128205128,0.02894356006,0.3069306931,0.3333333333,0.07120685343,0.9287931466,0.01223409639,0.0001133215202
"trying to get this thing running, which results in the same error: https://gist.github.com/danijar/c7ec9a30052127c7a1ad169eeb83f159#file-blog_tensorflow_sequence_classification-py-L38",Bug Reproduction,False,183,NONE,False,False,False,1.0,0.01881331404,0.5082508251,0.3333333333,0.09847950355,0.9015204965,0.03567836101,0.01542216894
"Or, rethinking, did the reboot solve the issue?",Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.2962962963,0.1194029851,0.8333333333,0.1098265896,0.003349898568,0.9966501014,0.001425190268,2.44e-05
"with v flag, there is an explicit RSS field",Investigation and Exploration,False,43,CONTRIBUTOR,False,False,False,1.0,0.1451612903,1.0,0.7721518987,0.5586212038,0.4413787962,0.0009509446731,0.008625593247
*         https://github.com/PAIR-code/deeplearnjs/issues/238,Potential New Issues and Requests,False,61,NONE,False,False,False,0.3333333333,0.02739726027,0.8426724138,0.6666666667,0.81202295,0.18797705,0.0001068963647,0.0006469111266
"The default policy is ""select""  (request SED for specific programs).",Solution Discussion,False,68,CONTRIBUTOR,False,False,False,0.4782608696,0.0632183908,0.8888888889,0.6691176471,0.7729088178,0.2270911822,0.0002421616125,7.44e-06
JavaScript APIs for TensorFlow were [announced] URL  earlier this month.,Potential New Issues and Requests,False,72,MEMBER,False,False,False,1.0,0.1506849315,0.6357758621,0.25,0.6919655619,0.3080344381,0.02124426926,0.001738227844
Even with this test it has not appeared with default JIT options.,Investigation and Exploration,False,65,CONTRIBUTOR,False,False,False,0.4615384615,0.1290322581,0.6666666667,0.8687258687,0.8399273015,0.1600726985,0.8852104953,0.004353145679
@M-Davies do we have any corefiles to debug as yet?,Investigation and Exploration,False,51,CONTRIBUTOR,False,False,False,0.3333333333,0.1774193548,0.5,0.174863388,0.3837398331,0.6162601669,0.09512000124,0.01216692501
"-bash-5.0$ oslevel -s
7100-04-01-1543",Investigation and Exploration,False,38,CONTRIBUTOR,False,False,False,0.3636363636,0.04597701149,1.0,0.7610294118,0.7732083398,0.2267916602,2.23e-05,6.97e-06
Disclaimer: This example might be pedantic because the differences in termsof the learned weights is minimal - but conceptually they are IMHO totallydifferent things...,Social Conversation,False,168,MEMBER,False,False,False,0.8214285714,0.323943662,0.3152173913,1.0,0.03951545499,0.960484545,4.948110811e-06,1.193161472e-05
"I expect it's invalid to access the variable outside of holding the mutex, as the value can be modified by other threads.",Expected Behaviour,False,121,CONTRIBUTOR,True,False,False,1.0,0.3793103448,0.4,0.9633027523,0.9996774263,0.000322573672,0.005742138251,0.001861415604
DictVectorizer gives exactly what I need in this case.,Expected Behaviour,False,54,NONE,False,False,False,0.3214285714,0.140625,0.7794117647,0.5,0.2567040608,0.7432959392,0.02304981706,0.003308173532
"not sure if this is really the reason, but I think CODE may be an issue; since the error doesn't seem to occur via CODE",Investigation and Exploration,True,119,CONTRIBUTOR,False,False,False,0.625,0.3521126761,0.8918128655,1.0,0.6460796767,0.3539203233,0.0001352009984,0.00843712351
We find that turning the verifier off can lead to strange behaviour for a variety of reasons.,Investigation and Exploration,False,93,MEMBER,False,False,False,0.85,0.1717171717,1.0,0.6280701754,0.2077710739,0.7922289261,0.002877441266,0.004409374785
Notice multiheap:24 (and above) didn't work for this test case beyond java8.,Testing,False,76,CONTRIBUTOR,False,False,False,0.48,0.1935483871,0.8571428571,0.5021097046,0.4402101884,0.5597898116,0.00359667111,0.001910640371
Let's do this.,Social Conversation,False,14,NONE,False,False,False,1.0,0.04109589041,0.1142241379,1.0,0.02315770643,0.9768422936,0.05306596701,0.0276474279
"Hi guys,",Social Conversation,False,8,CONTRIBUTOR,False,False,False,0.07692307692,0.01307189542,0.5273311897,0.1111111111,0.1671292372,0.8328707628,0.06319984844,2.596370108e-05
"Obviously, there's still a lot to do to support more languages.",Task Progress,False,63,MEMBER,False,False,False,0.4782608696,0.1833333333,0.4482758621,0.75,0.3864300618,0.6135699382,0.4682936827,0.03367017273
Just do it (if you downloaded cuda 9.1 before that you can execute following command in your terminal): CODE and remove cuda 9.1 by rm -rf.,Solution Discussion,True,139,NONE,False,False,False,1.0,0.2047244094,0.6011730205,0.8333333333,0.4583755089,0.5416244911,0.04654492211,0.008440528439
"@vonclites That's for interacting with Pandas DataFrame/Series, not the new Dataset construct.",Solution Discussion,False,94,CONTRIBUTOR,False,False,False,1.0,0.1940298507,0.4590846047,1.0,0.4032741628,0.5967258372,0.008699923145,0.0004494256208
Does PySpark not work this way?,Solution Discussion,False,31,MEMBER,False,False,False,0.1935483871,0.03921568627,0.06430868167,1.0,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
Thanks a lot,Social Conversation,False,12,NONE,False,False,False,0.1666666667,0.04225352113,0.8421052632,1.0,0.6456610805,0.3543389195,1.0,4.677373331e-05
Here is the code I used:CODE,Observed Bug Behaviour,True,28,NONE,False,False,False,0.1666666667,0.07216494845,0.9319526627,0.4285714286,0.99947853,0.0005214699921,0.007211566446,0.0002286970723
"In future more of the pipeline will be multi-threaded, so I'd recommend using this construction even if you're just using the tokenizer and tagger, which are currently single-threaded (they're very fast though --- and load much quicker.)",Solution Discussion,False,237,MEMBER,False,False,False,1.0,0.2614379085,0.7749196141,0.3157894737,0.1969054225,0.8030945775,0.000157934278,0.0005700212555
"Traceback (most recent call last):File ""utils.py"", line 15, in <module>import tensorflow as tfFile ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/__init__.py"", line 24, in <module>from tensorflow.python import *File ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/python/__init__.py"", line 49, in <module>from tensorflow.python import pywrap_tensorflowFile ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py"", line 74, in <module>raise ImportError(msg)ImportError: Traceback (most recent call last):File ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py"", line 58, in <module>from tensorflow.python.pywrap_tensorflow_internal import *File ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow_internal.py"", line 28, in <module>_pywrap_tensorflow_internal = swig_import_helper()File ""/home/sagar/miniconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow_internal.py"", line 24, in swig_import_helper_mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory  Failed to load the native TensorFlow runtime.",Bug Reproduction,False,1275,NONE,False,False,False,1.0,1.0,0.6480938416,0.3333333333,0.5053260144,0.4946739856,0.4007313547,0.01499535971
"I also made sure that https://github.com/eclipse/omr/pull/6255 is applied to the build.

CODE

> If that still fails, can you add the following to the above -Xjit option set: prepareForOSREvenIfThatDoesNothing,verbose={osr*},vlog=osrtransitions and re-run?",Investigation and Exploration,True,260,CONTRIBUTOR,False,False,False,1.0,0.376344086,0.6,0.4671814672,0.5337820175,0.4662179825,0.002331376221,0.004039808715
"@amicic 
https://www.ibm.com/support/knowledgecenter/SSYKE2_8.0.0/openj9/xmn/index.html
https://www.ibm.com/support/knowledgecenter/SSYKE2_8.0.0/openj9/xmo/index.html",Social Conversation,False,168,CONTRIBUTOR,False,False,False,0.625,0.03424657534,1.0,0.07262569832,0.009791359579,0.9902086404,0.00113422951,0.0003485618336
"PluginGenerator.generateXML(PluginGenerator.java:801)
	at com.ibm.ws.webcontainer.osgi.mbeans.",Bug Reproduction,False,95,NONE,False,False,False,0.09090909091,0.03007518797,0.6,0.7659033079,0.796966708,0.203033292,0.02606390197,0.0009716429063
"However, when I replace CODE by CODE it seems to be fine.",Investigation and Exploration,True,57,CONTRIBUTOR,False,False,False,0.6,0.1690140845,0.3976608187,0.4444444444,0.4150006976,0.5849993024,0.0002007949321,0.0001917999833
"Given that the exposed packages exist in java.base,  I need to figure out whether 
**attribute_name**  in ModuleInfo.doRead()  is set to  MODULE_PACKAGES  or there is any issue with constant pool or something else.",Investigation and Exploration,False,215,CONTRIBUTOR,False,False,False,0.8837209302,0.3220338983,1.0,0.8121212121,0.5961088928,0.4038911072,0.02070056321,0.01958885944
"But for now if you are not updating the jar file, you can use CODE @jsimomaa",Solution Discussion,True,76,CONTRIBUTOR,False,False,False,0.4324324324,0.1167883212,1.0,0.8141263941,0.04520980406,0.9547901959,0.0006439456684,0.01947449064
"From my case, which is running the [ptb tutorial] URL , the solution is just to add a parameter named with CODE like this at line 112: def lstm_cell():return tf.contrib.rnn.BasicLSTMCell(size, forget_bias=0.0, state_is_tuple=True, reuse=tf.get_variable_scope().reuse) Then it works.",Solution Discussion,True,282,NONE,False,False,False,1.0,0.05354558611,0.06600660066,0.8888888889,0.0006738638626,0.9993261361,0.002242104842,0.0004410639692
Could you add CODE to your OpenJ9 command line when you are starting the spring application and provide that javacore.*.txt file?,Investigation and Exploration,True,129,CONTRIBUTOR,False,False,False,1.0,0.1532846715,0.6666666667,0.4795539033,0.02090298377,0.9790970162,0.0001142951797,1.41e-05
"@prashantserai Don't exactly know, but what you met seems to be another issue.",Potential New Issues and Requests,False,78,NONE,False,False,False,1.0,0.01881331404,0.396039604,1.0,0.08212571125,0.9178742888,0.01808552132,0.0002840750988
@bowu - did you have any luck with this?,Task Progress,False,40,NONE,False,False,False,0.5714285714,0.01157742402,0.1947194719,0.25,0.05313233101,0.946867669,0.03037586316,0.004152670075
Sounds worth a try!,Solution Discussion,False,19,MEMBER,False,False,False,1.0,0.0412371134,0.5710059172,1.0,0.8487471637,0.1512528363,0.0003438203814,0.0002798718168
"If n_values is set explicitly, do we publishcategories_?",Solution Discussion,False,56,MEMBER,False,False,False,0.380952381,0.125,0.3970588235,1.0,0.04469860843,0.9553013916,0.0007334772354,0.1302436707
Thanks SCREEN_NAME 2002 for your PR!,Action on Issue,False,36,CONTRIBUTOR,False,False,False,0.8571428571,0.03921568627,0.9292604502,0.75,0.1992845349,0.8007154651,0.0007126827681,0.00591569739
"However, when I passed a placeholder for is_training it said CODEtf.TensorCODEboolCODEif t is not None:CODEif t:CODE and pointed to batch_norm code.",Usage,True,148,NONE,False,False,False,0.8,0.09230769231,0.2633832976,0.7272727273,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
I think we need some new tests as well.,Solution Discussion,False,39,CONTRIBUTOR,False,False,False,1.0,0.06164383562,1.0,0.4245810056,0.1063500695,0.8936499305,7.84e-05,0.08347165661
"j9object_t)+4>        addi    r2,r2,-19940 

JIT definitely does not set R12 to be the entry point.",Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,0.5,0.1328125,0.6666666667,0.1166666667,0.02817987909,0.9718201209,0.001090608783,1.78e-05
"https://ci.eclipse.org/openj9/view/Test/job/Grinder/671 - multiheap:32 - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/672 - multiheap:32,buckets - failed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/673 - multiheap:28,buckets - passed
https://ci.eclipse.org/openj9/view/Test/job/Grinder/674 - multiheap:24,buckets - failed

I'm only running one iteration of each test.",Testing,False,394,CONTRIBUTOR,True,False,False,1.0,0.3870967742,0.5,0.135021097,0.04407036383,0.9559296362,0.04168404717,0.01116047337
Does this link allow you to upload files?,Social Conversation,False,41,CONTRIBUTOR,False,False,False,0.4705882353,0.1066666667,0.8,0.2146892655,0.002600687443,0.9973993126,0.0006595011379,0.00112141451
"Sorry, I should've been more clear, I meant collecting the vlog for both invocations of your benchmark :).",Social Conversation,False,106,CONTRIBUTOR,False,False,False,0.6785714286,0.1386861314,0.5,0.08550185874,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
Great!,Social Conversation,False,6,CONTRIBUTOR,False,False,False,0.07142857143,0.01075268817,0.5,0.7413127413,0.6082511737,0.3917488263,0.1957833797,0.007960250968
"Agreed, it would be very nice to have that capability, but I don't think that's in place, is it?",Social Conversation,False,96,CONTRIBUTOR,False,False,False,1.0,0.1301369863,1.0,0.6480446927,0.2536543517,0.7463456483,0.0003822470545,0.002648299987
Is this in place yet?,Task Progress,False,21,NONE,True,True,False,0.1428571429,0.1315789474,0.02189781022,0.6,0.0,1.0,0.0,0.003237761122
"But, I am now planning to look at this again.",Contribution and Commitment,False,45,CONTRIBUTOR,True,False,False,0.1923076923,0.15625,0.9485294118,0.2857142857,0.8867760579,0.1132239421,0.6154659147,0.1194514257
Logically at least.,Social Conversation,False,19,CONTRIBUTOR,False,False,False,0.2,0.04838709677,0.6666666667,0.1983122363,0.04609541414,0.9539045859,4.38e-05,0.002409448773
The agent as built requires a glibc version higher than I have in my docker image (I have glibc 2.12).,Solution Discussion,False,102,CONTRIBUTOR,False,False,False,1.0,0.1923076923,0.5,0.320441989,0.1320606558,0.8679393442,0.0007086181756,9.57e-05
We may need to hack a VM that dumps the classfile on a verifyerror/classformaterror....,Investigation and Exploration,False,87,MEMBER,False,False,False,1.0,0.1203007519,1.0,0.1679389313,0.01361800008,0.9863819999,0.0002252314856,0.002938228528
So if you could give this a look that would be welcome.,Contribution and Commitment,False,55,CONTRIBUTOR,True,False,False,0.2307692308,0.1875,0.9522058824,0.4285714286,0.8867760579,0.1132239421,0.6154659147,0.1194514257
"@gacholio, right.",Social Conversation,False,17,NONE,True,False,False,0.05555555556,0.02666666667,0.2,0.813559322,0.08547570942,0.9145242906,3.24e-05,0.0002356611565
Thanks for the info SCREEN_NAME  (and for the features SCREEN_NAME  ).,Social Conversation,False,70,NONE,False,False,False,0.75,0.1791044776,0.3897364771,0.3333333333,0.3274164665,0.6725835335,0.02224733169,0.03860581352
"That's the only way to learn by interacting with external world (training robot arms, Atari games, [Universe] URL  ).",Motivation,False,117,CONTRIBUTOR,False,False,False,1.0,0.2835820896,0.1830790569,0.5,0.04256853321,0.9574314668,0.01543061897,0.001149776305
Many thanks.,Social Conversation,False,12,CONTRIBUTOR,False,False,False,0.6666666667,0.02985074627,1.0,0.7541899441,0.1144140946,0.8855859054,0.0009299896227,0.0003094219412
"Looking at reasons of why a method could trigger a recompilation from itself I see a few possibilities
1. Guarded counting recompilation.",Investigation and Exploration,False,138,CONTRIBUTOR,False,False,False,0.7666666667,0.2875,0.25,0.3284313725,0.2368541409,0.7631458591,0.02640472652,0.01413316902
"I have the issue on a dataset of mine, on Anaconda, Py 3.5, sklearn 0.17.1, OSX El Capitan.",Bug Reproduction,False,91,NONE,False,False,False,1.0,0.2535211268,0.06725146199,0.6666666667,0.0967678968,0.9032321032,0.247501826,0.008713891162
In OpenJDK jdk branch (jdk13) and hence the jdk13 extensions repository there have been changes to use xlclang/xlclang++ if available on AIX systems.,Investigation and Exploration,False,149,CONTRIBUTOR,True,True,False,0.8888888889,0.1379310345,0.4,0.007352941176,0.0,1.0,0.0,0.2685593546
"1. Destroyed SCC
2. Ran CODE
3. Ran CODE

Here are the files:
[vlog1.20190529.001023.4224.txt] URL ",Investigation and Exploration,True,104,NONE,True,False,False,0.8636363636,0.1386861314,0.6666666667,0.2602230483,0.002299532103,0.9977004679,0.0001263044559,0.000373115786
"We're seeing a similar issue with what looks to be async profiler, so I'm wondering if the fix made it into the main repo.",Solution Discussion,False,122,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.9889502762,0.9997507065,0.0002492935368,1.0,0.0003947203969
We had hoped to release by end oflast month but are getting delayed.,Task Progress,False,68,CONTRIBUTOR,False,False,False,1.0,0.01881331404,0.5478547855,0.6666666667,0.1355129749,0.8644870251,0.00125745356,0.03511934773
(irregardless of whether detecting the consecutive categories case or not).,Solution Discussion,False,75,CONTRIBUTOR,True,False,False,0.2222222222,0.15625,0.5183823529,0.75,0.07586856219,0.9241314378,0.0001680122564,0.000726968286
BTW : I think we need to remove the Intel  label and assume that this issue  will only take care of the Power failure.,Action on Issue,False,118,CONTRIBUTOR,False,False,False,1.0,0.5319148936,1.0,0.8615384615,0.7266234177,0.2733765823,0.03144222045,0.002441530636
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.5797413793,1.0,0.6499061024,0.3500938976,0.01776869884,0.01305197974
@jnothman any ideas about the CODEtest_pairwise_parallelCODE failure?,Potential New Issues and Requests,True,69,MEMBER,False,False,False,1.0,0.1029411765,0.5040650407,1.0,0.5631090057,0.4368909943,0.01794179397,0.009345907346
"All was fine, until I added some matcher rules and an on_match callback: CODEwhere unit is 'BOPD', for example.",Potential New Issues and Requests,True,111,NONE,False,False,False,1.0,0.2,0.9157894737,0.6666666667,0.3302372055,0.6697627945,0.03932243631,0.2723202982
So any shuffling of Spacy data across nodes will result in strange things.,Solution Discussion,False,74,NONE,False,False,False,0.2166666667,0.08496732026,0.4372990354,0.5,0.1131980914,0.8868019086,0.0007474630201,1.624466859e-05
"@jnothman  To be a little clearer,  I don't know that 22 is significant.",Potential New Issues and Requests,False,72,NONE,False,False,False,0.7142857143,0.234375,0.8933823529,0.3333333333,0.2639047948,0.7360952052,0.0004458630338,0.03415611878
it is likely RSS being exceeded momentarily.,Investigation and Exploration,False,44,CONTRIBUTOR,False,False,False,0.875,0.1129032258,0.5,0.2109704641,0.04666171664,0.9533382834,0.00149059119,0.001123048157
I have not done anything to test if there is a problem with excessive updates.,Task Progress,False,78,CONTRIBUTOR,False,False,False,0.6818181818,0.102739726,0.5,0.8547486034,0.9643341922,0.03566580778,0.0001268809988,0.01210021257
"so we don't need to reverse the list in the end
Step 1. walk(A, 1)
Step 2. vector.push_back(A.offset)",Solution Discussion,False,103,CONTRIBUTOR,False,False,False,0.2739726027,0.1058201058,0.7,0.9771428571,0.5018185814,0.4981814186,0.001953523523,1.0
"This could either just be timing related, or a missing relocation.",Investigation and Exploration,False,66,CONTRIBUTOR,False,False,False,0.4583333333,0.1182795699,0.8,0.332046332,0.3820724724,0.6179275276,5.6e-05,0.006214516454
We think it's important to support Spark as best we can.,Solution Discussion,False,56,MEMBER,False,False,False,0.3142857143,0.07189542484,0.459807074,0.8333333333,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
I'd like to see an example of it in use.,Usage,False,40,NONE,False,False,False,0.3666666667,0.1641791045,0.4493758669,0.3333333333,0.402192445,0.597807555,0.001827732055,0.008699923145
Typically these modifications are not part of the forward model for a good reason: these operations do not require any backpropagation.,Solution Discussion,False,135,NONE,False,False,False,0.6774193548,0.3134328358,0.3564493759,0.2727272727,0.2978770854,0.7021229146,0.001143668596,0.01002173327
@mpirvu - Do you see errors (NPEs) coming from the auth service?,Investigation and Exploration,False,64,NONE,True,False,False,0.5789473684,0.1375,0.2,0.5784313725,0.6496013347,0.3503986653,0.3672811628,1.0
"The reason the C calls from the helper wrappers work without loading r12 today is that the linker is assuming that r2 is already loaded for calls within the same shared library (note the +8 which the linker added below, skipping the r2 load from r12):

CODE

In pure C code, the compiler also seems to be assuming that any calls using CODE (i.e. within the same shared library) will return with r2 pointing to the TOC (it does not save/restore r2 across the call, and generates code assuming r2 is still the caller TOC, which is necessarily the same for all functions in the shared library).",Solution Discussion,True,595,CONTRIBUTOR,False,False,False,1.0,0.8671875,0.07692307692,0.6666666667,0.08012656297,0.919873437,0.0570348239,0.002818533349
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3017241379,1.0,0.3280334106,0.6719665894,0.1377274453,0.2645419447
"I guess using tf.cond is wrong, otherwise would did the function came with a boolean parameters.",Usage,False,96,NONE,False,False,False,0.8,0.06153846154,0.9100642398,0.4,0.7489109604,0.2510890396,0.04599776246,0.3206669123
After that everything went back to normal and I started the 4-th JMeter batch.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.5555555556,0.1875,0.5,0.7156862745,0.8886091519,0.1113908481,0.05954547102,0.2271166044
I hope to see something like this in a future TF.,Social Conversation,False,49,NONE,False,False,False,0.6111111111,0.1641791045,0.8321775312,1.0,0.7179125891,0.2820874109,0.01649590529,0.01478320176
A fix in CUDA 9.1.121 is expected in late February 2018.,Motivation,False,56,NONE,False,False,False,0.2682926829,0.08661417323,0.4457478006,0.6666666667,0.380459606,0.619540394,0.0006322631694,0.001605430808
"I tested Peter's driver with jitt & vich on different options (count=0, hot, etc).",Testing,False,82,CONTRIBUTOR,False,False,False,0.3823529412,0.07471264368,0.1111111111,0.5661764706,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
"Ah, seems this is unnecessary as the jitTOC is already propagated into a slot in the J9VMThread which is also a single instruction fetch.",Solution Discussion,False,137,CONTRIBUTOR,False,False,False,1.0,0.1875,1.0,0.7611111111,0.08377132913,0.9162286709,0.0001223955515,0.005260431966
CODE,Solution Discussion,True,4,CONTRIBUTOR,False,False,False,0.04347826087,0.01408450704,0.8713450292,1.0,0.6457035792,0.3542964208,0.0001660605916,0.002055691741
I seem to remember seeing multiple active JIT compilation threads in the logs.,Social Conversation,False,78,CONTRIBUTOR,False,False,False,1.0,0.09489051095,1.0,0.4423791822,0.02066300145,0.9793369986,6.05e-05,6e-05
We can add a version of CODE that gives us the result of CODE during its execution.,Solution Discussion,True,83,CONTRIBUTOR,False,False,False,0.4857142857,0.2741935484,0.3333333333,0.5081967213,0.6631878845,0.3368121155,0.0184875191,0.1091893746
The running (of xlclang++ build) depends on the availability of libc++.so (LLVM version of std c++ lib).,Solution Discussion,False,104,CONTRIBUTOR,False,False,False,0.5,0.09770114943,0.3333333333,0.5735294118,0.7688364567,0.2311635433,0.0002354283384,0.0003819065821
"Should be working in master, though, and seeing as the solution was simplyto lower the threshold to 0.85, I don't think we're going to make anotherbug-fix release.",Task Progress,False,163,MEMBER,False,False,False,1.0,0.4117647059,0.987804878,0.75,0.9921128047,0.007887195265,0.0008629382027,1.795629714e-05
"Given the above comment regarding the **seq2seq tutorial**, I suspect we are all in the same boat?",Social Conversation,False,98,NONE,False,False,False,1.0,0.02460202605,0.1287128713,1.0,0.01809836732,0.9819016327,0.0007664331927,0.005198313254
"Looking at the core files shared by @fengxue-IS , here is the list of inlined calls in CODE
CODE

With CODE, the failure no longer occurs in over 100 iterations.",Investigation and Exploration,True,164,MEMBER,False,False,False,1.0,0.347826087,0.8333333333,0.748427673,0.5963082563,0.4036917437,0.01338731827,0.03227550175
The windbg results java.dll from Java 8 didn't get loaded even though Java 8 bin was added to the path.,Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,0.7407407407,0.202020202,0.5,0.9719298246,0.9103914698,0.08960853018,0.006460058278,0.07945790628
@mpirvu what do you think?,Social Conversation,False,26,CONTRIBUTOR,False,False,False,0.1515151515,0.03649635036,1.0,0.2750929368,0.002547780177,0.9974522198,0.000373115786,0.006822511181
I was handling with this issue as well.,Bug Reproduction,False,39,NONE,False,False,False,0.347826087,0.06299212598,0.495601173,0.1666666667,0.4058350076,0.5941649924,0.01097919447,0.0003105854165
"However, I was able to determine a possible culprit:
in 0.26.0 vlogs for Booking and for Customer I see many failures like this:
CODE
The JIT compiles CODE at warm and then at hot (I cannot tell why based on the provided information).",Investigation and Exploration,True,237,CONTRIBUTOR,False,False,False,1.0,0.5875,0.25,0.1862745098,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
Is it possible to address a single column in the dataset so that it is treated different from the other column?,Usage,False,111,NONE,False,False,False,0.875,0.3134328358,0.9625520111,0.6,0.9970343733,0.002965626714,0.02821456383,0.02385162338
"So if CODE is a CODE or a CODE, it means it can change, so the graph to compute the moments is needed, so the layer builds it.",Solution Discussion,True,126,MEMBER,False,False,False,1.0,0.1076923077,0.7237687366,0.3333333333,0.6151432795,0.3848567205,0.01395060179,0.003360169166
- The test passes.,Testing,False,18,CONTRIBUTOR,False,False,False,0.08108108108,0.06382978723,0.6,0.4538461538,0.3704340031,0.6295659969,0.007316005049,0.001912007579
****Please read through the posts carefully! The answer is posted.****,Social Conversation,False,70,NONE,False,False,False,0.5555555556,0.07874015748,0.5454545455,0.6666666667,0.4119591591,0.5880408409,0.002720580351,0.001728185996
@gacholio,Contribution and Commitment,False,9,CONTRIBUTOR,False,False,False,0.06666666667,0.005747126437,1.0,0.2132352941,0.7471930509,0.2528069491,0.0001206082958,0.0004931827962
"This will affect performance.
CODE",Solution Discussion,True,35,NONE,True,False,False,0.25,0.075,1.0,0.6666666667,0.8720495954,0.1279504046,0.001670230889,0.034636993
-         data generation can be done in any programming language (without custom ops),Solution Discussion,False,86,NONE,False,False,False,0.4193548387,0.1940298507,0.3661581137,0.9090909091,0.2978770854,0.7021229146,0.001143668596,0.01002173327
It's included in C API so it won't be too hard to port it to other languages.,Solution Discussion,False,77,CONTRIBUTOR,False,False,False,0.6071428571,0.2537313433,0.7323162275,0.3333333333,0.5769315984,0.4230684016,0.0003822408168,0.03325240618
Uri,Social Conversation,False,3,NONE,True,False,False,0.04166666667,0.009615384615,1.0,0.9337016575,0.3217031432,0.6782968568,0.005051300017,0.0136228909
Why this exactly happens I don't know ...,Social Conversation,False,41,MEMBER,False,False,False,0.1489361702,0.0985915493,0.7777777778,0.8571428571,0.4710186742,0.5289813258,0.0008236605345,0.003313600722
I tested that adopt HS driver ... same core dump.,Testing,False,49,CONTRIBUTOR,False,False,False,0.75,0.05172413793,0.3333333333,0.8014705882,0.7733277692,0.2266722308,6.85e-06,3.15e-05
We need to pass 32 bit to 32 bit cython code without upcasting (which also wastes memory for nothing).,Solution Discussion,False,102,MEMBER,False,False,False,0.59375,0.2794117647,0.8983739837,1.0,0.6428866359,0.3571133641,0.02946766485,0.0004678996657
Here is an updated snippet: CODE,Bug Reproduction,True,32,MEMBER,False,False,False,0.3333333333,0.0618556701,0.3816568047,0.4,0.8130688094,0.1869311906,2.145525001e-05,0.001310816446
"Sorry, missed it - pip.",Investigation and Exploration,False,23,NONE,False,False,False,1.0,0.0412371134,0.3431952663,1.0,0.8123780834,0.1876219166,2.165390973e-06,2.642174307e-05
For anyone that might stumble on this I have released a community wheel of latest tensorflow 1.8.0-rc1 built with cuda 9.1.,Solution Discussion,False,123,NONE,True,False,False,1.0,0.1653543307,0.8035190616,0.5,0.7016515596,0.2983484404,0.02172323142,0.4152157275
@mrry This is great work and definitely very useful for creating nice learning APIs on top of TensorFlow.,Social Conversation,False,105,CONTRIBUTOR,False,False,False,0.3673469388,0.2686567164,0.8585298197,0.06666666667,0.8949843368,0.1050156632,0.1191105139,0.0385452454
"One problem with the second approach (and one of the reasons we went with CODE in the first place, even before we added the multiple encoding options), is that there is already a CODE, which has a different API than the CODE.",Solution Discussion,True,225,CONTRIBUTOR,True,True,False,0.84,0.65625,0.07352941176,0.8333333333,0.0,1.0,0.0,0.0007774126438
I wonder if we hit a timing hole (or bad assumption) related to handoff.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.1866666667,1.0,0.6440677966,0.08463904466,0.9153609553,3e-05,2.54e-05
"Similarly when I launch STS (which is really just an Eclipse install with some stuff added on), then, since Eclipse is implemented in Java, the eclipse process will want to find a JVM to execute on.",Investigation and Exploration,False,198,NONE,True,False,False,1.0,0.3636363636,0.625,0.4561403509,0.1964587946,0.8035412054,0.004535009544,0.001033447215
"I thought it should work, but after some experiments, I can't make it work as expected.",Usage,False,87,NONE,False,False,False,0.262295082,0.2388059701,0.7406380028,0.25,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"Thus, in the potentially merged OneHotEncoder, do we keep the ability to do both, or do we fully deprecate and then remove the ability to process ordinal input?",Solution Discussion,False,160,CONTRIBUTOR,True,False,False,0.8484848485,0.4375,0.1580882353,0.4444444444,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"Looks like the batch dimension is ""?"" (None?), so the predicate always fails...",Usage,False,79,NONE,False,False,False,0.1967213115,0.1791044776,0.7475728155,0.875,0.5810660853,0.4189339147,0.03325240618,0.00639731668
"I don't know why the test was timing out, but I think it always runs slow even when it doesn't timeout.",Investigation and Exploration,False,103,CONTRIBUTOR,True,False,False,1.0,0.3134328358,0.5,0.1271676301,0.003372681321,0.9966273187,2.44e-05,4.75e-06
"We therefore store the string, causing the memory growth.",Investigation and Exploration,False,57,MEMBER,False,False,False,0.225,0.1451612903,0.3568281938,0.5555555556,0.2128297101,0.7871702899,0.0002910756073,0.01198979712
hm ok maybe this is not so important right now.,Social Conversation,False,47,MEMBER,False,False,False,0.3333333333,0.1408450704,0.5217391304,0.25,0.04254757077,0.9574524292,3.382963704e-05,1.965207131e-06
"A good way to attract contributors to your project would be by sharing a design doc with the [TensorFlow mailing list](https://groups.google.com/a/tensorflow.org/forum/#!forum/discuss), as Vincent [recommended](https://github.com/tensorflow/tensorflow/issues/37#issuecomment-155605035) a few years back.",Contribution and Commitment,False,303,MEMBER,False,False,False,1.0,0.4794520548,0.5926724138,0.6666666667,0.6506314731,0.3493685269,0.01305197974,0.05278600034
"Applying the patch:
CODE",Testing,True,25,CONTRIBUTOR,False,False,False,0.4545454545,0.05376344086,1.0,0.7760617761,0.6103874427,0.3896125573,0.001063107557,0.0008616766512
"I am on the move rightnow, and I cannot boot up a Windows VM to do that.",Contribution and Commitment,False,72,MEMBER,False,False,False,1.0,0.1855670103,0.124260355,1.0,0.009489555966,0.990510444,2.066061112e-06,7.410007642e-06
For example I ran now and it got 50% further.,Bug Reproduction,False,45,NONE,True,False,False,0.4761904762,0.07518796992,0.6666666667,0.07124681934,0.0004735547369,0.9995264453,0.0007002205715,0.0002080632054
We have been just lucky so far switching to call the C target(s) directly (instead of the helper wrapper target(s)).,Investigation and Exploration,False,116,CONTRIBUTOR,False,False,False,1.0,0.15625,0.6666666667,0.4833333333,0.03780096692,0.9621990331,2.53e-05,3.78e-05
Do the [High Performance Benchmarks example] URL  recommendations still apply now that the new [Dataset API] URL  exists?,Solution Discussion,False,121,NONE,False,False,False,0.5555555556,0.2985074627,0.5131761442,0.25,0.4587375589,0.5412624411,0.1250288844,0.003916059713
@nmhkahn SCREEN_NAME  thanks for your comments.,Social Conversation,False,47,NONE,False,False,False,0.2,0.02692307692,0.1263383298,0.4782608696,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"It would be, in general, complicated to try to interpret -Xm?",Solution Discussion,False,61,CONTRIBUTOR,False,False,False,0.2444444444,0.07534246575,0.375,0.3240223464,0.03208549702,0.967914503,0.0001774088301,4.2e-05
"@glouppe You're right, I forgot I had written this for any ensemble.",Social Conversation,False,68,CONTRIBUTOR,True,False,True,12.0,0.1690140845,0.9891304348,1.0,1.0,0.0,2.449490317e-05,0.0
Currently the VM Helper is expecting the JIT to pass the target's address in r12(PPCLEx64) or r2(AIX32/64 PPCBE).,Expected Behaviour,False,113,CONTRIBUTOR,True,False,False,0.140625,0.140625,0.2631578947,0.9,0.3076445993,0.6923554007,0.1283873506,1.0
"Possibly this issue was already fixed by #3650, in which case it should not occur with a nightly build from Adopt.",Solution Discussion,False,114,CONTRIBUTOR,False,False,False,1.0,0.2121212121,1.0,0.9614035088,0.9085377289,0.09146227106,0.002277636608,0.0001094238228
"@KaisJM by the way, this page is out-of-date, since nowadays wheels are available on Linux and contain their own OpenBLAS.",Investigation and Exploration,False,122,MEMBER,False,False,False,1.0,0.2268041237,0.7130177515,0.5,0.8504146176,0.1495853824,1.730326181e-05,2.268694029e-05
"It is slightly messy to implement, but I could do it, which is saying something :-P",Social Conversation,False,83,NONE,False,False,False,0.3720930233,0.02315484805,0.4587458746,0.7,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
on Windows 10 to see whether mingw-w64 compile our code with UCRT.,Solution Discussion,False,66,CONTRIBUTOR,False,False,False,0.1203703704,0.1101694915,1.0,0.2060606061,0.3956745592,0.6043254408,0.007845128228,0.003533051078
"I would greatly appreciate it if there's an official and complete (which means training, validating, testing are all included) batch normalization example.",Usage,False,155,CONTRIBUTOR,False,False,False,0.7096774194,0.08461538462,0.5760171306,0.875,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
Reopening for visibility of the documentation issues.,Action on Issue,False,53,MEMBER,False,False,False,1.0,0.02692307692,0.704496788,1.0,0.5746992419,0.4253007581,0.01005818686,1.998711693e-05
"The symptom seems the same - in the failing tests, every throw in the test gets the correct method, but 0 for the bytecode index for the catcher.",Investigation and Exploration,False,145,CONTRIBUTOR,False,False,False,0.6585365854,0.421875,0.4,0.7375886525,0.9534244256,0.04657557439,0.02679880937,0.0005193381324
I thought the argument was about semantics.,Solution Discussion,False,43,MEMBER,False,False,False,0.28,0.0985915493,0.3913043478,0.2,0.03970291757,0.9602970824,8.078405027e-05,0.0001056298833
On a high compute node you should be done in a couple of hours.,Solution Discussion,False,63,MEMBER,False,False,False,0.4827586207,0.09150326797,0.6045016077,0.6,0.1671397646,0.8328602354,3.922323826e-06,4.685962093e-06
"So, is this issue due to:  in non-debug build,  JIT-ed code calls the wrapper containing the load;  in debug build, JIT-ed code calls the C routine directly?",Investigation and Exploration,False,157,CONTRIBUTOR,False,False,False,1.0,0.2578125,0.3333333333,0.1611111111,0.02843923671,0.9715607633,0.0002282569671,0.0003038415884
"sorry for the spamming, but what is wrong with just using something like this: CODE",Usage,True,83,NONE,False,False,False,0.5172413793,0.05769230769,0.07922912206,0.3333333333,0.202765491,0.797234509,0.001533935132,0.0002544552755
"I tried changing the n_jobs parameter to 1, -1, but neither of these worked.",Solution Discussion,False,76,NONE,False,False,False,0.6086956522,0.1443298969,0.8934911243,0.8,0.9768282061,0.02317179392,0.0165742005,0.01231978335
"not sure if that's the same issue, but when I get OutOfMemory error and openj9 starts preparing the dumps of everything, very often it hangs forever.",Potential New Issues and Requests,False,149,NONE,False,False,False,1.0,0.3466666667,0.3333333333,0.3333333333,0.02149972431,0.9785002757,0.01017150312,9.93e-05
The IncompatibleClassChangeError should be resolved by https://github.com/ibmruntimes/openj9-openjdk-jdk11/pull/3 and https://github.com/eclipse/openj9/pull/2374.,Solution Discussion,False,162,CONTRIBUTOR,False,False,False,1.0,0.07627118644,1.0,0.7878787879,0.5857340238,0.4142659762,0.07175559371,0.01151175971
- No additional core files produced.,Investigation and Exploration,False,36,CONTRIBUTOR,False,False,False,0.1351351351,0.1063829787,0.9,0.4653846154,0.3704340031,0.6295659969,0.007316005049,0.001912007579
I have not yet reproduced the crash you spotted after installing all required softwares/artifacts on Win 10.,Bug Reproduction,False,108,CONTRIBUTOR,False,False,False,0.1935483871,0.1818181818,0.3333333333,0.1157894737,0.112164474,0.887835526,0.006411425468,0.002601855342
"**Running the test with CODE on a system with ample resources**
- A segmentation fault in the same compiled method occurs.",Testing,True,123,CONTRIBUTOR,False,False,False,0.5675675676,0.4468085106,0.8,0.4615384615,0.3704340031,0.6295659969,0.007316005049,0.001912007579
"K -q64** -L/home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base -o /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java_objs/java /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/main.o -ljli_static > >(/opt/freeware/bin/tee -a /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/BUILD_LAUNCHER_java_link.log)) 2> >(/opt/freeware/bin/tee -a /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/BUILD_LAUNCHER_java_link.log >&2) || ( exitcode=$? && /opt/freeware/bin/cp /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/BUILD_LAUNCHER_java_link.log /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/make-support/failure-logs/support_native_java.base_java_BUILD_LAUNCHER_java_link.log && /opt/freeware/bin/cp /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/support/native/java.base/java/BUILD_LAUNCHER_java_link.cmdline /home/koblents/openj9-openjdk-jdk13/build/aix-ppc64-server-release/make-support/failure-logs/support_native_java.base_java_BUILD_LAUNCHER_java_link.cmdline && exit $exitcode ) ) ; 


Note the bunch of extra options and one of them: **-bnorwexec**",Investigation and Exploration,False,1370,CONTRIBUTOR,False,False,False,1.0,1.0,1.0,0.5441176471,0.766404827,0.233595173,1.59e-05,0.0001754195096
@zhongyuk glad you got it fixed !,Social Conversation,False,33,MEMBER,False,False,False,0.2068965517,0.08450704225,0.7514619883,0.5,0.4604019734,0.5395980266,0.007162331701,0.06102214722
"There seems to be an element of mystery here.

edit 2, delta is still reproducible, a solid 30% from disabling timestamp checks.",Social Conversation,False,130,CONTRIBUTOR,False,False,False,0.3965517241,0.1678832117,0.6666666667,0.8513011152,0.06523661816,0.9347633818,0.001221633262,0.003514162664
"Checked the range in CODE (only 4 methods) as follows:
CODE
So the problematic method compiled by JIT is 
CODE as follows:
CODE

To confirm the method is the only one in the vlog file to trigger the exception, I moved the method to the bottom of the vlog file.",Investigation and Exploration,True,266,CONTRIBUTOR,False,False,False,1.0,0.4135338346,0.25,0.4503816794,0.5404334453,0.4595665547,0.06758416136,0.0001761792565
"The only feature we would loose is the distinction between unknown categories that are within the range(0, max) (by the current OneHotEncoder not regarded as 'unknown') and those that are bigger than that (> max, those are currently already regarded as unknown by the OneHotEncoder).",Solution Discussion,False,283,CONTRIBUTOR,True,False,False,1.0,0.6875,0.2867647059,1.0,0.00843621032,0.9915637897,0.0005898735392,0.001164695133
"But, I agree that it should be tested on all platforms.",Social Conversation,False,55,CONTRIBUTOR,False,False,False,0.2894736842,0.07189542484,0.961414791,0.6666666667,0.2018791345,0.7981208655,6.508280685e-05,4.380506786e-05
@rogertrullo Generally I setup TensorBoard to track moving mean and variance.,Usage,False,77,CONTRIBUTOR,False,False,False,0.55,0.04230769231,0.5203426124,0.5,0.399208074,0.600791926,0.001260202941,0.5564473214
This would be the expected behavior for such an app.,Expected Behaviour,False,52,NONE,True,False,False,0.5555555556,0.101010101,0.625,0.2035087719,0.1140182149,0.8859817851,0.003967626759,0.002853124861
@thread :,Social Conversation,False,9,NONE,False,False,False,0.05555555556,0.007874015748,0.5425219941,0.3333333333,0.4119591591,0.5880408409,0.002720580351,0.001728185996
The workflow that's a little bit tricky to support is something like this:,Solution Discussion,False,74,MEMBER,False,False,False,0.4193548387,0.08496732026,0.03215434084,0.1666666667,0.00192271851,0.9980772815,0.0054583822,0.0004639102472
"Finally, in the testing phase, should I have is_training=False and reuse=True?",Usage,False,78,NONE,False,False,False,0.5,0.05,0.2248394004,0.9375,0.2234305404,0.7765694596,0.0068527403,0.007193130032
"From the logs I captured I think that the recompilation warm-->hot is triggered by the EDO (exception directed optimizations): the JIT profiles the execution to determine whether exceptions are frequently thrown, and if they do, it recompiles the body attempting to transform the throw-catch into a goto.",Investigation and Exploration,False,304,CONTRIBUTOR,False,False,False,1.0,0.6125,0.6666666667,0.4068627451,0.4050676222,0.5949323778,0.667871978,0.07448040886
"-         New CODE method on CODE, indicating that the current batch of OOV strings should be flushed away, and the memory freed.",Workarounds,True,129,MEMBER,False,False,False,0.6666666667,0.3548387097,0.6607929515,0.4375,0.288728579,0.711271421,0.1151253204,0.02221386295
The install page for Ubuntu should be updated:,Solution Discussion,False,46,NONE,False,False,False,0.5714285714,0.06299212598,0.1436950147,0.6666666667,0.2153063504,0.7846936496,0.002231038575,0.01329083736
"Right before the segfault, the output was:
CODE
I didn't see a message for the copy of the object CODE.",Investigation and Exploration,True,105,CONTRIBUTOR,False,False,False,0.7096774194,0.2365591398,1.0,0.5096525097,0.5363077428,0.4636922572,0.003129639439,0.0028647951
"3.         If the message protocol supports pub/sub, then (1) multiple training sessions can subcribe and reuse the same input data, which is very useful when trying new models.",Motivation,False,177,CONTRIBUTOR,False,False,False,1.0,0.447761194,0.1137309293,0.6923076923,0.008365735399,0.9916342646,0.03692313957,0.0188753671
"did you try when Hotspot is on the path?

@pshipton ,  already tried on both Oracle JDK8 and JDK11 but it ended up the same results as our builds.
![image] URL 

![image] URL ",Investigation and Exploration,False,180,CONTRIBUTOR,False,False,False,1.0,0.3636363636,1.0,0.6140350877,0.2069591331,0.7930408669,0.003392138506,0.002877441266
We're coming up on the v0.21.0 code split on June 7,Social Conversation,False,51,MEMBER,False,False,False,1.0,0.1774193548,1.0,0.06557377049,0.1023743982,0.8976256018,0.4214515802,0.0006590192892
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1831896552,1.0,0.06481004122,0.9351899588,0.01406981904,0.02963463796
Install whatever other version you want they'll get installed at CODE,Solution Discussion,True,69,NONE,True,False,False,1.0,0.08661417323,0.917888563,1.0,0.9259629187,0.07403708125,0.001998099513,0.02806508983
"The stack trace that you showed also does not seem exceptional in any way, so I am wondering why this code path consumes so much CPU after N minutes whereas that was not the case previously.",Contribution and Commitment,False,190,CONTRIBUTOR,False,False,False,1.0,0.45,0.75,0.9656862745,0.9705973268,0.02940267322,0.001040994599,0.001009097829
your multicell looks wrong...,Solution Discussion,False,29,CONTRIBUTOR,False,False,False,0.5714285714,0.005788712012,0.1551155116,0.5,0.02196678411,0.9780332159,0.0008504453773,0.0977297843
"I tried creating a core CODE from an Adopt jdk14 build, it's 3GB+, and the context is found running xlinux jdmpview.",Investigation and Exploration,True,116,CONTRIBUTOR,False,False,False,1.0,0.2307692308,0.5,0.1048951049,0.1031456929,0.8968543071,0.01551514965,0.04744206468
"Another point to consider: Most of the information stored in SCC is read only, one notable exception being the JIT hints.",Solution Discussion,False,121,CONTRIBUTOR,False,False,False,1.0,0.1438356164,0.5,0.156424581,0.01352495743,0.9864750426,0.006230161811,0.0005232437649
"Which suggests that it's highly likely to be related to GC.
CODE",Investigation and Exploration,True,65,CONTRIBUTOR,False,False,False,0.9285714286,0.06878306878,0.75,0.2114285714,0.3084971878,0.6915028122,0.0005070055754,0.000545910493
"I think that makes the advice against CODE a bit overblown, though â really the issue seems more like inefficient data feeding that starves the GPUs, rather than the use of CODE itself.",Solution Discussion,True,185,CONTRIBUTOR,False,False,False,1.0,0.4925373134,0.3079056865,1.0,0.2778207232,0.7221792768,0.0007705893431,0.03560947306
"@yorkie It looks interesting, I will try it out!",Social Conversation,False,48,CONTRIBUTOR,False,False,False,1.0,0.1232876712,0.6120689655,0.5,0.6566394894,0.3433605106,0.0005984425886,0.0005714418505
It still fails after removing just the CODE from the option list.,Investigation and Exploration,True,65,CONTRIBUTOR,False,False,False,0.3428571429,0.1290322581,0.4,0.4633204633,0.5337820175,0.4662179825,0.002331376221,0.004039808715
I am now able to reliably reproduce the crash in under 20 minutes.,Bug Reproduction,False,66,MEMBER,False,False,False,0.40625,0.1413043478,0.6666666667,0.7421383648,0.5963082563,0.4036917437,0.01338731827,0.03227550175
OpenJ9 startup performance on a Spring Boot application,Motivation,False,55,NONE,True,True,False,0.2162162162,0.05839416058,0.1,0.003717472119,0.0,1.0,0.0,5.34e-05
Is there anything that we can do to help diagnose what is going wrong?,Contribution and Commitment,False,70,NONE,True,False,False,1.0,0.1866666667,1.0,0.8870056497,0.3322249522,0.6677750478,0.3961122692,0.0006376198792
The training would be what's mentioned in the docs above.,Solution Discussion,False,57,NONE,False,False,False,1.0,0.1666666667,0.9396551724,0.3333333333,0.8009401878,0.1990598122,0.0006670641737,0.002222477325
"This works in FSD, but not in normal mode.",Investigation and Exploration,False,42,CONTRIBUTOR,False,False,False,0.140625,0.140625,0.3636363636,0.09929078014,0.000716727624,0.9992832724,0.003714710253,0.00734286415
I have not yet run my tests (they do take a while) with the 0.18.0 release.,Task Progress,False,75,NONE,False,False,False,0.8,0.1203007519,1.0,0.6870229008,0.6953049426,0.3046950574,0.004019012644,0.2346732222
also a guarantee of the form âresults will be the same if the other settings are appropriately tunedâ doesn't really sound like a guarantee.,Solution Discussion,False,140,MEMBER,False,False,False,1.0,0.338028169,0.597826087,1.0,0.04339026336,0.9566097366,0.0001494961139,0.002306767149
"One question occurs - the way @0dvictor detects the unmergeable maps - is it possible that the stack map might migrate during optimizations, and would not be detected in the unmergeable map test?",Solution Discussion,False,195,CONTRIBUTOR,False,False,False,1.0,0.484375,1.0,0.5886524823,0.8477633193,0.1522366807,0.0001851344268,0.1571286372
I believe the history behind that mutex is that the JIT used to acquire VMAccess for the entirety of the compilation.,Investigation and Exploration,False,117,CONTRIBUTOR,False,False,False,0.4038461538,0.2307692308,0.3846153846,0.7902097902,0.86612727,0.13387273,0.03684751755,0.005897328255
We've noticed that one of the biggest challenges in getting started with TensorFlow is how to load your own data into your programs.,Motivation,False,132,CONTRIBUTOR,True,True,False,0.5106382979,0.3582089552,0.004160887656,0.1,0.0,1.0,0.0,0.000766008561
-         Less memory used on driver,Solution Discussion,False,36,NONE,False,False,False,0.2142857143,0.03921568627,0.1382636656,0.6,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
"Even if you do ""early stopping"", this would be early stopping on the validation set, not early stopping of the optimization.",Solution Discussion,False,124,MEMBER,False,False,False,1.0,0.2957746479,0.5579710145,0.5,0.04267086483,0.9573291352,4.569106579e-05,8.738153135e-06
"I have not been able to reproduce this upon restarting and dropping these caches, as well as on any larger systems.",Bug Reproduction,False,115,CONTRIBUTOR,False,False,False,0.875,0.4468085106,0.5714285714,0.4,0.3641770197,0.6358229803,0.02184783511,0.004874474413
"its class is unloaded ?
2) Is the following true: class can be unloaded without its **Class Loader** being unloaded or, more precisely, before Class Loader unloading JIT hook is called for its class loader?",Investigation and Exploration,False,207,CONTRIBUTOR,False,False,False,0.6034482759,0.3846153846,0.7142857143,0.6223776224,0.8570312397,0.1429687603,0.003785967656,0.0001609902828
"Because we're passing in the same romClass, the CODE that gets generated will be the same.",Solution Discussion,True,90,CONTRIBUTOR,False,False,False,0.5333333333,0.2580645161,0.6666666667,0.8087431694,0.9693025774,0.03069742256,0.0002193629989,0.0009261993286
"I stored results locally, so if somebody needs core files for previous or this one ask me

please note that system core from second failure can not be opened in CODE (CODE) @pshipton have tested ability of CODE to open file for core generated on AIX in Java 14 and seems it is not broken.",Investigation and Exploration,True,290,CONTRIBUTOR,False,False,False,1.0,0.6153846154,0.5,0.1153846154,0.1118240786,0.8881759214,0.04744206468,0.0005430533463
"@vijaysun-omr see #4168 for details
CODE
CODE
You also need to enable shared classes, either normally or via CODE",Solution Discussion,True,116,CONTRIBUTOR,True,False,False,1.0,0.1575342466,1.0,0.4636871508,0.2380330365,0.7619669635,0.0001666616406,0.0005830751334
"Any update on this?

Still writing the code.",Task Progress,False,46,CONTRIBUTOR,False,False,False,0.5,0.06164383562,0.25,0.4022346369,0.1063240967,0.8936759033,0.0001989032092,7.84e-05
In most use cases I imagine these being restored the same time model parameters are restored.,Expected Behaviour,False,93,NONE,False,False,False,0.262295082,0.2388059701,0.08876560333,1.0,0.0003857175286,0.9996142825,0.0008184330671,0.02236439613
"To be clear, it would not be a revert, it would be a refactor / rename that keeps all functionality!",Solution Discussion,False,100,CONTRIBUTOR,True,False,False,0.8260869565,0.296875,0.1213235294,0.3333333333,0.001108978882,0.9988910211,0.001496651552,0.0039907996
Sorry this has taken a while.,Social Conversation,False,29,NONE,True,False,False,0.6,0.09677419355,0.1057268722,0.5,0.01414601723,0.9858539828,0.02955774717,0.02003548886
"This snippet crashes because of scoring=metrics.make_scorer(metrics.scorer.f1_score, average=""macro"") where metrics refers to sklearn.metrics module.",Investigation and Exploration,False,149,NONE,True,True,False,0.6086956522,0.1443298969,0.008875739645,0.4285714286,0.0,1.0,0.0,5.796890697e-05
"Ah, nm, I missed a change, this is caused by https://github.com/ibmruntimes/openj9-openjdk-jdk11/pull/272
@zl-wang @shanchao95 
Zulian, this seems problematic.",Investigation and Exploration,False,161,CONTRIBUTOR,True,False,False,1.0,0.3225806452,0.5,0.02953586498,0.0007971438362,0.9992028562,0.002461954921,0.004372595291
Just run these lines in a python shell CODE,Bug Reproduction,True,43,NONE,False,False,False,0.4090909091,0.09278350515,0.2928994083,0.3333333333,0.8122508057,0.1877491943,0.003762853532,0.0002075199459
"i was proposing multiheap,considersize as the fix.",Solution Discussion,False,50,CONTRIBUTOR,False,False,False,0.5714285714,0.1290322581,0.8,0.9662447257,0.9212826815,0.07871731848,0.003961297135,0.01459087501
"BashStreams
CODE",Testing,True,17,CONTRIBUTOR,False,False,False,0.2727272727,0.03296703297,1.0,0.2272727273,0.3809495695,0.6190504305,0.1429285596,0.02657957272
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4267241379,1.0,0.5087196203,0.4912803797,0.004802368983,0.01110659869
Looks really helpful.,Social Conversation,False,21,NONE,False,False,False,0.1764705882,0.004341534009,0.7656765677,0.25,0.2742562411,0.7257437589,0.006610382458,0.005351860947
Seems to me that Parallel is doing the pickle thing mentioned in this thread.,Solution Discussion,False,77,NONE,False,False,False,0.6363636364,0.09150326797,0.6559485531,0.08333333333,0.1673183142,0.8326816858,6.254891624e-05,0.003166981448
I would prefer to close https://github.com/eclipse/openj9/issues/8619 instead,Action on Issue,False,77,CONTRIBUTOR,False,False,False,0.4666666667,0.07692307692,1.0,0.1643356643,0.2820037137,0.7179962863,0.002857770092,0.01329594867
Please open a new issue for related bugs.,Action on Issue,False,41,NONE,False,False,True,8.0,0.0522875817,1.0,2.0,1.0,0.0,0.5123188737,0.0
The test is failing where the importances in a model are being asserted identical to the importance in a similar model trained with sample_weight=3*orig_weights.,Potential New Issues and Requests,False,161,MEMBER,False,False,False,1.0,0.3529411765,0.2357723577,0.6666666667,0.3511052513,0.6488947487,7.769551645e-05,0.009464004531
(@piskvorky): CODE,Solution Discussion,True,18,MEMBER,False,False,False,0.06666666667,0.05263157895,0.2846715328,1.0,0.003856276396,0.9961437236,7.224875116e-05,1.244572143e-05
"Inside your flatmap function, create a new Dataset object with one or multiple examples for every input example.",Usage,False,112,NONE,False,False,False,1.0,0.2686567164,0.6754507628,1.0,0.5120352412,0.4879647588,0.003143434467,0.0002672122887
Are there any concerns about calling CODE before CODE?,Usage,True,54,NONE,False,False,False,0.6,0.1343283582,0.8196948682,1.0,0.6302370014,0.3697629986,0.123123279,0.6886518758
👎,Social Conversation,False,1,NONE,True,False,False,0.07142857143,0.01492537313,1.0,0.8491620112,0.1151308605,0.8848691395,0.0002215081863,0.06580775503
The problem arises very likely in some cython code in sklearn/manifold/_barnes_hut_tsne.pyx.,Investigation and Exploration,False,92,MEMBER,False,False,False,0.6,0.1690140845,0.4941520468,1.0,0.4162752766,0.5837247234,0.0005175555106,0.2109192312
"The next release islikely to include a fixed-width discretizer, but following on from a logtransform or a quantile transform it should act quite similar to what youwant...",Potential New Issues and Requests,False,171,MEMBER,False,False,False,1.0,0.4375,0.8639705882,0.6666666667,0.2637609133,0.7362390867,0.003516053103,7.119163405e-05
CODE specifically may not be essential.,Solution Discussion,True,39,CONTRIBUTOR,False,False,False,0.1395348837,0.08955223881,0.2163661581,0.3333333333,0.04902295757,0.9509770424,0.001787522968,0.0009069948543
But maybe someone more familiar with OSR can confirm.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.1730769231,0.09677419355,1.0,0.6061776062,0.5522533709,0.4477466291,0.005248394148,0.002801381667
I am looking forward to see a official Node.js API.,Social Conversation,False,51,NONE,False,False,False,0.4761904762,0.1369863014,0.3728448276,0.1666666667,0.4349495154,0.5650504846,0.003115708122,0.2584362368
additional bucket option only had marginal performance advantage.,Solution Discussion,False,65,CONTRIBUTOR,False,False,False,0.5714285714,0.1290322581,0.4,0.9578059072,0.9212826815,0.07871731848,0.003961297135,0.01459087501
Obtaining a core file has been quite difficult.,Investigation and Exploration,False,47,CONTRIBUTOR,False,False,False,0.2666666667,0.170212766,0.5555555556,0.3076923077,0.3215728023,0.6784271977,0.9710937657,0.01822418003
@piyush286 (he helps monitor OpenJ9 performance at IBM) have you seen anything on any of your monitoring that might be showing JSR292 inlining being a problem?,Investigation and Exploration,False,159,CONTRIBUTOR,False,False,False,0.5909090909,0.3880597015,0.5,0.5664739884,0.01124208961,0.9887579104,5.92e-05,5.28e-05
Could you please check it out and re-run the same code?,Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.375,0.1764705882,0.7926829268,0.6666666667,0.6038167374,0.3961832626,0.002100196138,0.008826555982
"I had previously only seen this failure with a nightly build

Diagnostic files
----------------

Full log from the exceptions is posted to https://gist.github.com/f640872cc6608793e8988f54c68363d7",Investigation and Exploration,False,200,NONE,True,True,False,0.2736842105,0.1954887218,1.0,0.0203562341,0.0,1.0,0.0,0.0001794494051
Will need to find a VM image instead...,Potential New Issues and Requests,False,39,MEMBER,False,False,False,0.4210526316,0.1176470588,0.4674796748,0.8571428571,0.5420075121,0.4579924879,0.02112247576,0.002129547778
linker command is of course the problem ...  different options are used.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.06896551724,1.0,0.5330882353,0.7663991358,0.2336008642,1.89e-05,1.59e-05
"The build you're using is from a week ago, I think you need to explicitly specify the link to the nightly.",Social Conversation,False,106,CONTRIBUTOR,False,False,False,1.0,0.2307692308,1.0,0.9895104895,0.9678651735,0.03213482652,0.04251684043,0.02407305416
That mixed failing/killing reasons sounded to me that system is running out of paging space that kernel is selectively killing the processes (usually the one first consuming a lot of paging space).,Investigation and Exploration,False,197,CONTRIBUTOR,False,False,False,1.0,0.5322580645,0.3333333333,0.6371308017,0.4818277043,0.5181722957,0.005901107588,0.002228594265
"Not sure why the failures don't occur with CODE, but it's probably a timing thing.",Investigation and Exploration,True,82,CONTRIBUTOR,True,False,False,0.7142857143,0.2586206897,0.4,0.9174311927,0.9986823435,0.001317656456,0.002428514487,0.005742138251
I that due to a name mismatch. CODE?,Investigation and Exploration,True,36,NONE,True,True,False,0.5333333333,0.06299212598,0.0146627566,0.8333333333,0.0,1.0,0.0,0.001987007177
I often try to use TensorFlow on very large inputs (potentially >1GB minibatch) with relatively light computation on each minibatch.,Motivation,False,132,NONE,False,False,False,0.6363636364,0.3134328358,0.374479889,0.1666666667,0.3166940255,0.6833059745,0.1413171275,0.04972082678
The error in my last two comments before this was due to my mistake.,Social Conversation,False,68,NONE,False,False,False,0.3255813953,0.02026049204,0.4620462046,0.8,0.08417570887,0.9158242911,0.0004839006905,0.006280741429
The above works.,Workarounds,False,16,NONE,True,True,False,0.08333333333,0.01960784314,0.0192926045,0.75,0.0,1.0,0.0,0.0054583822
"For the deprecation period, we have to support both anyway, and also have to introduce a keyword to choose the behaviour (to be able to silence the warning and choose the new behaviour).",Solution Discussion,False,186,CONTRIBUTOR,True,False,False,1.0,0.515625,0.1654411765,0.5555555556,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"Assuming there is a miscompilation, I don't know of a way of narrowing it down other than limiting to an optimization as the CODE occurs after the method execution, so we don't really know what to look for.",Investigation and Exploration,True,206,CONTRIBUTOR,False,False,False,0.95,0.2857142857,0.6923076923,0.6666666667,0.6946068931,0.3053931069,9.44e-05,0.004019012644
"Or resuming training from the checkpoint (i.e., trained when decay=0.999) is also ok?",Usage,False,85,NONE,False,False,False,0.3513513514,0.05,0.8886509636,0.8333333333,0.7404633962,0.2595366038,0.09747656054,0.006199252888
"The suggestion above works to bypass the undefined type PSLIST_HEADER and the compilation stops at creating verify.dll:
CODE

Looking at how verify.dll is created at make/lib/CoreLibraries.gmk:
CODE

Given that jvm.lib was already created atCODE,
It is likely that the compilation fails to locate the path to CODE.",Solution Discussion,True,321,CONTRIBUTOR,False,False,False,1.0,0.4576271186,0.5,0.6606060606,0.5234752654,0.4765247346,0.003822899709,0.07975398056
"actually, you would want to change that, right?",Solution Discussion,False,47,MEMBER,False,False,False,0.6666666667,0.1126760563,0.1847826087,0.75,0.03926780009,0.9607321999,0.000142372238,0.0001259136283
"Running without specifying CODE just makes all compilations asynchronous, which is the default

Separately, I wonder whether this is related to #13162",Solution Discussion,True,152,CONTRIBUTOR,False,False,False,0.92,0.247311828,1.0,0.1235521236,0.08104840561,0.9189515944,0.002025499661,0.002003118449
@andrewcraik it's not clear to me if this should be a blocker for the 0.17 release or not.,Social Conversation,False,90,CONTRIBUTOR,True,False,False,0.75,0.2686567164,0.3333333333,0.5375722543,0.0111863431,0.9888136569,0.001720565783,5.33e-07
"Seems jdk14 no longer supports compilation with xlc 13
CODE",Solution Discussion,True,60,CONTRIBUTOR,False,False,False,1.0,0.0632183908,1.0,0.9963235294,0.8073849608,0.1926150392,0.0242227764,0.5397305107
Maybe we should check for executable/shared-lib header flags (there is a deprecated F_NOEXEC flag).,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.3333333333,0.09195402299,0.7,0.5110294118,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
A bit of a shame.,Social Conversation,False,17,MEMBER,False,False,False,0.09433962264,0.0390625,0.75,0.6166666667,0.04021507893,0.9597849211,0.0001975507147,0.0003594564091
"JITServer has this logic on the client to detect when GC happens, maybe there's something wrong here:
CODE",Investigation and Exploration,True,107,CONTRIBUTOR,False,False,False,1.0,0.1005291005,1.0,0.7142857143,0.4487011576,0.5512988424,0.0002582624319,4.84e-05
"@shanchao95 could you run a performance comparison between ""multiheap""  and ""multiheap,considersize"" settings?",Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,1.0,0.2258064516,1.0,0.7932489451,0.5602849556,0.4397150444,0.002832414962,0.00178229201
"Eaxmple:
CODE
CODE",Investigation and Exploration,True,20,CONTRIBUTOR,False,False,False,0.3125,0.07462686567,1.0,0.3757225434,0.005172043892,0.9948279561,1.17e-05,6.8e-06
i assumed errno==4 being returned upon pthread_create call?,Social Conversation,False,59,CONTRIBUTOR,False,False,False,1.0,0.1290322581,0.5,0.05063291139,0.001912806357,0.9980871936,0.003310804307,0.0009071895501
"Here's one of the jit logs + trace files...

[DisableUnsafeFastPath.zip] URL ",Social Conversation,False,79,NONE,True,False,False,1.0,0.1641791045,1.0,0.5754189944,0.005762527344,0.9942374727,0.0006886577466,0.2689971282
"I think I've tracked it to runExitStages() as called from protectedDestroyJavaVM(), exiting with 255 or -1.",Investigation and Exploration,False,107,CONTRIBUTOR,True,False,False,0.7727272727,0.2931034483,0.5,0.8899082569,0.9982614946,0.001738505423,0.003302748254,0.002428514487
"[2] The core dump collected previously shows a few RAT specific methods were still compiled/optimized without specifying the JIT option (like -Xjit:exclude...,,dontInline=) above.",Bug Reproduction,False,179,CONTRIBUTOR,False,False,False,0.4333333333,0.1954887218,0.5,0.3994910941,0.4761982657,0.5238017343,0.01656125888,0.01584223495
There should not be any logical difference which hook handler serves this.,Solution Discussion,False,74,CONTRIBUTOR,False,False,False,0.3243243243,0.1318681319,0.4,0.5804195804,0.854897081,0.145102919,0.001362640241,0.002579695967
"Looking at the code, we retry a re-compilation that failed if the method body used pre-existence.",Solution Discussion,False,97,CONTRIBUTOR,False,False,False,0.3829787234,0.225,0.625,0.2009803922,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
"Hi SCREEN_NAME ,I followed your advice, now my code is:CODE",Usage,True,59,NONE,False,False,False,0.6875,0.04230769231,0.6509635974,0.5,0.5704865867,0.4295134133,0.007710664466,0.0001103857016
"Added the obtaining and releaseing that mutex before and after classloading to see if that makes a difference. 

CODE
CODE
CODE",Investigation and Exploration,True,131,CONTRIBUTOR,False,False,False,1.0,0.2637362637,1.0,0.3321678322,0.6163591305,0.3836408695,0.03226044993,0.02856229515
"Stack of the crashing thread:
CODE

The bytecodes of CODE are:
CODE

The crash happens at CODE.",Observed Bug Behaviour,True,101,CONTRIBUTOR,False,False,False,0.2258064516,0.2258064516,0.08333333333,0.3706563707,0.3937305493,0.6062694507,0.03688423691,0.3568236584
"Basically, I made AGCT do nothing but return a negative value.",Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3666666667,0.1057692308,0.5,0.6961325967,0.2972782131,0.7027217869,0.01291495446,0.0003838884996
The reason is because the JIT can hold on to various J9Class & J9Method pointers in various structures.,Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,0.3269230769,0.1868131868,0.7692307692,0.8076923077,0.86612727,0.13387273,0.03684751755,0.005897328255
"So, the problem is that the failure is happening _during_ the build, which makes reproducing the issue and extracting useful information very time-consuming.",Investigation and Exploration,False,157,CONTRIBUTOR,False,False,False,1.0,0.3870967742,0.3333333333,0.1147540984,0.1047688942,0.8952311058,0.0001562891595,1.0
"Having fixed that issue, openjdk 9 is working as expected, while OpenJ9 still hangs on the first bench.",Observed Bug Behaviour,False,103,NONE,True,False,False,0.375,0.2686567164,0.6,0.6815642458,0.1129717723,0.8870282277,0.002111653916,4.74e-05
I don't understand your argument.,Social Conversation,False,33,MEMBER,False,False,False,0.5555555556,0.07042253521,0.4927536232,0.5,0.04250958689,0.9574904131,4.807738873e-06,3.754949339e-06
And there are many environments where the opposite is true from that comment.,Solution Discussion,False,77,MEMBER,False,False,False,0.9285714286,0.1340206186,0.6449704142,1.0,0.8491787771,0.1508212229,0.000108726466,0.001720552123
"We've been seeing that all along, which is why the core files never end up being saved to disk.",Investigation and Exploration,False,95,CONTRIBUTOR,False,False,False,1.0,0.4255319149,1.0,0.5,0.4133072425,0.5866927575,0.01939485533,0.001585706885
So the problem should have nothing to do with VS2017.,Solution Discussion,False,53,CONTRIBUTOR,False,False,False,0.2631578947,0.08474576271,1.0,0.7818181818,0.5626231513,0.4373768487,0.0002067370823,0.07175559371
"Probably worth turning on CODE sub-option CODE, and the trace points in CODE.",Solution Discussion,True,77,CONTRIBUTOR,False,False,False,0.5833333333,0.2258064516,1.0,0.6666666667,0.8313133932,0.1686866068,0.001165656648,0.06807620883
For example: I'm storing path to images and labels in a text file.,Solution Discussion,False,66,NONE,False,False,False,0.325,0.1940298507,0.640776699,0.4166666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
(the output you get depending on the data you have),Motivation,False,51,CONTRIBUTOR,True,False,False,0.3448275862,0.15625,0.2058823529,0.25,0.00813466941,0.9918653306,0.01132191067,0.0007367317101
"Just noting that the issue does reproduce with last night's nightly build:

Console:

CODE

Version:

CODE",Bug Reproduction,True,114,CONTRIBUTOR,False,False,False,1.0,0.1503759398,1.0,0.8905852417,0.8598647167,0.1401352833,0.07341320126,0.0001189516558
"If it is decided to use bctrl for the call, then it will not go through trampoline anymore.",Solution Discussion,False,91,CONTRIBUTOR,False,False,False,1.0,0.140625,1.0,0.65,0.04071707575,0.9592829243,0.0001090823512,0.0001623351525
"However, the peak performance is much higher than the throughput of actually using the data to train a model like Inception or ResNet, so you might not notice the difference in regular use.",Solution Discussion,False,189,CONTRIBUTOR,True,False,False,0.7021276596,0.4925373134,0.5506241331,0.8571428571,0.4592244679,0.5407755321,0.003916059713,0.008479027653
Is the devp sklearn built from source code using OpenBLAS instead of MKL?,Investigation and Exploration,False,73,NONE,False,False,False,0.4482758621,0.1830985915,0.5263157895,1.0,0.4541420598,0.5458579402,9.742221376e-05,0.002465307867
The same trick cannot be used with Gradient Boosting.,Workarounds,False,53,MEMBER,False,False,False,1.0,0.1408450704,0.115942029,1.0,0.02519381881,0.9748061812,2.526694882e-06,0.004244671937
"It does not satisfy CODE (which only skips potential OSR point helper calls and some other nodes in post-execution OSR, which is all for voluntary OSR).",Solution Discussion,True,152,CONTRIBUTOR,False,False,False,0.3176470588,0.2903225806,0.6666666667,0.8262548263,0.6236466175,0.3763533825,0.04747801046,0.02028856842
"We were looking at making shared classes on by default, so we'd definitely want to know if there's a gotcha lurking on some platforms.",Investigation and Exploration,False,134,CONTRIBUTOR,False,False,False,1.0,0.1824817518,0.75,0.624535316,0.02564146366,0.9743585363,0.0002157528574,0.0002654464138
Thatâs a shame.,Social Conversation,False,15,NONE,False,False,False,0.15,0.046875,0.8014705882,0.1666666667,0.2596531697,0.7403468303,0.009666196666,0.01199680736
i.e. what are the contents of the SCC and/or get a -Xjit:verbose log to see how many compilations (JIT or AOT) we get with either build to see if the difference in that regard is an unexpected one.,Investigation and Exploration,False,197,CONTRIBUTOR,False,False,False,1.0,0.4875,0.6666666667,0.1666666667,0.1162948506,0.8837051494,0.001196128892,0.02677733879
"edit 3: -verbose indicates we load 9072 classes during startup for this app, I can't imagine that's a lot more than a typical liberty test case, but it would be interesting to know what that number is.",Bug Reproduction,False,201,CONTRIBUTOR,False,False,False,0.6379310345,0.2700729927,1.0,0.8550185874,0.06523661816,0.9347633818,0.001221633262,0.003514162664
A few bonus queries on the chunked model. 1)         The vector space seems like it'll give a good way to show compositionality:,Potential New Issues and Requests,False,128,MEMBER,False,False,False,1.0,0.6052631579,0.401459854,0.07142857143,0.003916559978,0.99608344,6.042197018e-05,4.041513841e-05
"I have a custom build based on recent head, if you want to give it a try: 
https://ibm.box.com/s/jilhvm2laj5fmw5h6kqv7sooknktkfso",Social Conversation,False,130,CONTRIBUTOR,False,False,False,0.5428571429,0.2533333333,1.0,0.9209039548,0.365168355,0.634831645,0.05174676994,0.005131592796
"Yeah, it does suggest the receiver was CODE.",Investigation and Exploration,True,44,MEMBER,True,False,False,0.3636363636,0.08695652174,0.9,0.1949685535,0.3431647145,0.6568352855,0.001046537172,0.001139510487
Will do binary searching in the vlog file containing CODE to see how it goes in this case (there was only one vlog file containing CODE when the ClassFormatError exception occurred ),Investigation and Exploration,True,182,CONTRIBUTOR,False,False,False,1.0,0.2330827068,1.0,0.4402035623,0.4823215343,0.5176784657,0.000823259913,0.05500471719
it should be one of the following:,Solution Discussion,False,34,CONTRIBUTOR,False,False,False,0.3181818182,0.1044776119,0.4895977809,0.7857142857,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
Example run: CODE,Bug Reproduction,True,17,NONE,False,False,False,0.3,0.04225352113,0.04970760234,1.0,0.05282886859,0.9471711314,0.2771530517,0.0003346120921
"Got one on zlinux https://ci.eclipse.org/openj9/job/Grinder/719
 java/nio/charset/coders/BashStreams.java.",Bug Reproduction,False,107,CONTRIBUTOR,False,False,False,1.0,0.1208791209,0.5,0.2237762238,0.3809495695,0.6190504305,0.1429285596,0.02657957272
I was able to reproduce this locally on one of our internal farm machines.,Bug Reproduction,False,74,CONTRIBUTOR,False,False,False,0.6086956522,0.2978723404,0.1666666667,0.1692307692,0.1072645887,0.8927354113,0.01345561023,0.009663080221
We will try to take a look next week.,Task Progress,False,37,CONTRIBUTOR,False,False,False,0.8181818182,0.0989010989,1.0,0.08391608392,0.006083887962,0.993916112,0.001958073201,0.4507797245
"The catch is, I couldn't find a way to iterate over the data more than once (which luckily enough is not my use-case), because the only iterator that won't raise an error when the CODEs spawn the threads is the CODE.",Usage,True,216,NONE,False,False,False,0.8235294118,0.6268656716,0.9583911234,1.0,0.9935262739,0.006473726055,0.0468741252,0.02821456383
The following should work: CODE,Usage,True,31,MEMBER,False,False,False,0.2380952381,0.01923076923,0.7516059957,1.0,0.6163375915,0.3836624085,0.002840605583,6.767211672e-05
"options to validate that they effectively mean the same initial/total heap sizing, even though the option themselves are different.",Solution Discussion,False,131,CONTRIBUTOR,False,False,False,0.4444444444,0.1369863014,0.5,0.3296089385,0.03208549702,0.967914503,0.0001774088301,4.2e-05
Looking at the trace logs of these two runs it appears that the inlining table of running with CODE is about half the size of the inlining table with the other option.,Investigation and Exploration,True,167,CONTRIBUTOR,False,False,False,1.0,0.2406015038,0.2857142857,0.8956743003,0.859885377,0.140114623,0.0001189516558,0.06424166071
"On x86 platforms, when running JIT compiled code, the CODE register points into the java stack rather than the native stack.",Solution Discussion,True,124,CONTRIBUTOR,False,False,False,0.4565217391,0.2019230769,0.7,0.8729281768,0.3185054309,0.6814945691,0.006311966217,1.18e-05
From the hotspot code (see my previous link) it appears that hotspot too requires that the JNIEnv is that of the interrupted thread.,Solution Discussion,False,132,NONE,True,False,False,1.0,0.2211538462,1.0,0.955801105,0.3304325312,0.6695674688,0.0001988372754,0.0001858086996
You can also use OpenBLAS using conda-forge.,Workarounds,False,44,MEMBER,False,False,False,0.2857142857,0.0824742268,0.6272189349,0.8333333333,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
"10K doesn't sound like very much, but your investigation would suggest it's the issue (even though calling ASGCT will use a bunch of stack as well).",Investigation and Exploration,False,148,CONTRIBUTOR,False,False,False,0.5869565217,0.2596153846,0.1,0.8397790055,0.3185054309,0.6814945691,0.006311966217,1.18e-05
"If so,   I am wondering whether the new type name needs to be added in a certain config/setting file in ddrgen/pdbscanner or the existing code in setMemberOffset() should address the case.",Solution Discussion,False,188,CONTRIBUTOR,False,False,False,0.7906976744,0.2881355932,1.0,0.3878787879,0.4163107368,0.5836892632,0.001350389027,0.006630634685
The following iterators would be great:,Expected Behaviour,False,39,CONTRIBUTOR,False,False,False,1.0,0.08955223881,0.4715672677,0.5,0.4356293768,0.5643706232,0.01344561339,0.0007517572389
"I don't know if I'm right here, but I have a question about the dataset API.",Social Conversation,False,76,NONE,False,False,False,0.6666666667,0.2388059701,0.959778086,0.2,0.9970343733,0.002965626714,0.02821456383,0.02385162338
"The method attempts to create, and allocate a new memory segment that is an allocated block from off-heap memory.",Investigation and Exploration,False,113,CONTRIBUTOR,False,False,False,0.6451612903,0.4255319149,0.1481481481,0.7461538462,0.6986733294,0.3013266706,0.2919761514,0.1217072968
@ebrevdo Could you please take a look at this?,Contribution and Commitment,False,46,MEMBER,False,False,False,1.0,0.01302460203,0.07260726073,1.0,0.0007811659222,0.9992188341,0.0004410639692,0.002700374697
"Methods compiled around the time the CPU jumps to 800%:
CODE
I am going to exclude all TreeNode methods next",Investigation and Exploration,True,110,CONTRIBUTOR,False,False,False,1.0,0.275,1.0,0.862745098,0.9556836058,0.04431639422,0.01437384465,0.001152633296
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.3534482759,1.0,0.3966285551,0.6033714449,0.1289154667,0.123263681
@AlenBadel is actively working on it.,Task Progress,False,37,CONTRIBUTOR,False,False,False,0.6,0.046875,0.3333333333,0.7888888889,0.1929866325,0.8070133675,0.000130769984,0.005357918949
Is there another way of getting this i386 build for debian?,Bug Reproduction,False,59,MEMBER,False,False,False,0.6111111111,0.1617647059,0.1504065041,0.5,0.2782444475,0.7217555525,0.01003549822,0.0003149258267
"I mean, this ""bug"" is kind of hideous and it may be a bit tricky for folks to figure out that it's due to CODE.",Solution Discussion,True,111,CONTRIBUTOR,False,False,False,0.9259259259,0.3521126761,0.716374269,0.75,0.459007429,0.540992571,0.001079117078,0.0009613524417
"It has yet to pass nightly regression testing, which may take a couple of days.",Social Conversation,False,79,CONTRIBUTOR,False,False,False,0.46875,0.2,0.6666666667,0.9717514124,0.3769494772,0.6230505228,0.0001899293257,0.001141107642
:+1:,Social Conversation,False,4,NONE,False,False,False,1.0,0.01369863014,0.01077586207,1.0,0.0001347447366,0.9998652553,0.00104373345,0.001373053927
I wonder if that's what's resulting in @charliegracie's results showing better perf.,Solution Discussion,False,84,CONTRIBUTOR,False,False,False,0.5,0.08759124088,0.75,0.3420074349,0.02006648971,0.9799335103,0.0002232068908,8.9e-05
"To clarify a little bit, the current release version has three known places that could be growing in memory use.",Investigation and Exploration,False,112,MEMBER,False,False,False,0.8695652174,0.3225806452,0.1585903084,0.1111111111,0.02336154952,0.9766384505,0.01526654747,0.6482365618
Then VM can start storing the GC hints and enable this feature.,Solution Discussion,False,63,CONTRIBUTOR,False,False,False,0.6666666667,0.08219178082,1.0,0.4189944134,0.1063240967,0.8936759033,0.0001989032092,7.84e-05
BTW: To repeatedly start it,Social Conversation,False,27,NONE,True,False,False,0.15625,0.05050505051,0.7777777778,0.7368421053,0.2160643057,0.7839356943,0.001276611266,0.001471142506
"OK, the only jit compiled method from sun/misc in your original verbose log is
CODE, so if excluding sun/misc/* works reliably, we might assume that excluding and not inlining getObjectVolatile should also work:
(this will probably need quotes depending on how you launch the JVM)
CODE
If the program works with that, the next step is to get a compilation log.",Solution Discussion,True,364,CONTRIBUTOR,False,False,False,1.0,1.0,0.5,0.2011173184,0.002537756996,0.997462243,0.0002146129899,0.0006464246683
No core files produced.,Investigation and Exploration,False,23,CONTRIBUTOR,False,False,False,0.1081081081,0.08510638298,0.7,0.4576923077,0.3704340031,0.6295659969,0.007316005049,0.001912007579
And the inference time will be longer for it will calculate the mean and variance of the inputs and update the moving mean and moving variance.,Solution Discussion,False,143,NONE,False,False,False,1.0,0.1,0.852248394,0.8,0.7209968564,0.2790031436,0.007196275213,0.000558929072
I think @JamesKingdon was thinking of just writing some small sample code and doing an inspection of the generated code for anything obvious and then trying some kind of small microbenchmark/test to see if we could provoke the problem.,Investigation and Exploration,False,235,CONTRIBUTOR,False,False,False,1.0,0.5970149254,0.5,0.7206703911,0.1131600924,0.8868399076,0.0001456610252,0.002266795837
"@somombo yes, it looks really interesting.",Social Conversation,False,42,NONE,False,False,False,1.0,0.08219178082,0.8362068966,0.1666666667,0.81202295,0.18797705,0.0001068963647,0.0006469111266
I'm also interested in nodejs tensorflow API   to be able to use it in a node-red flows that would chain tensorflows graphs and may be other kinds of data analysis nodes.,Motivation,False,170,NONE,False,False,False,1.0,0.4520547945,0.7672413793,0.25,0.7541437327,0.2458562673,0.8203682945,0.005981548758
"My summary for the data:
1) for small payload, the setting can have a significant performance impact.",Task Progress,False,102,CONTRIBUTOR,False,False,False,0.6428571429,0.2903225806,0.3333333333,0.5274261603,0.4792143262,0.5207856738,0.01177304509,0.003593754102
A simple solution is to convert the NaNs into empty strings and then use DictVectorizer as in my example above.,Expected Behaviour,False,111,NONE,False,False,False,1.0,0.3125,0.8088235294,0.5,0.2596531697,0.7403468303,0.009666196666,0.01199680736
At this point PoS would be enough for me.,Solution Discussion,False,41,NONE,False,False,False,0.9,0.15,0.9482758621,0.6666666667,0.8009401878,0.1990598122,0.0006670641737,0.002222477325
"So, to me, it seems pretty reasonable to assume that once something is resolved it stays resolved (ignoring the HCR issue for a minute).",Solution Discussion,False,136,CONTRIBUTOR,False,False,False,0.5454545455,0.3870967742,0.6,0.9234972678,0.9845135933,0.01548640667,0.001320457339,0.001947660621
"But AIX default SED mode is ""select""  ((i.e.  SED is applied to selected programs).",Investigation and Exploration,False,83,CONTRIBUTOR,False,False,False,0.3333333333,0.09195402299,0.4,0.5,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
"...

Sorry for misconception (this has nothing to do with hotspot jdk8 and openj9 jdk11)",Social Conversation,False,90,CONTRIBUTOR,False,False,False,0.3191489362,0.1515151515,0.5,0.3859649123,0.1199922694,0.8800077306,0.001815624911,0.003294872886
We do have two such paths that unload classes without removing any owned methods from the MethodHT(CODE & CODE).,Solution Discussion,True,112,CONTRIBUTOR,False,False,False,0.72,0.1978021978,0.4444444444,0.3846153846,0.7754665319,0.2245334681,0.03674198804,0.0009798068887
"My tf version's filter is broken, but if yours works could you try this instead? CODE",Usage,True,85,NONE,False,False,False,0.4571428571,0.2388059701,0.7558945908,1.0,0.5818615051,0.4181384949,0.00639731668,0.009301532526
"When the CODE was thrown there was no JIT trace log generated, meaning the presumably problematic method which we limited down was never compiled.",Observed Bug Behaviour,True,146,CONTRIBUTOR,False,False,False,0.6,0.1804511278,0.5384615385,0.6615776081,0.6946068931,0.3053931069,9.44e-05,0.004019012644
This would be interesting for pure front-end graph exportation for direct usage on web clients.,Motivation,False,95,NONE,False,False,False,0.7619047619,0.2191780822,0.2887931034,0.5,0.2879663406,0.7120336594,0.1434033545,0.06129056889
"If so, the issue can be considered fixed, IMHO.",Action on Issue,False,47,MEMBER,False,False,False,1.0,0.09278350515,0.1153846154,1.0,0.009488780246,0.9905112198,4.648637502e-06,2.066061112e-06
"Would be great if someone else could try the ""fix.""",Contribution and Commitment,False,51,CONTRIBUTOR,False,False,False,0.3703703704,0.1408450704,0.7105263158,0.5,0.459007429,0.540992571,0.001079117078,0.0009613524417
"I picked 3 at random and they look very similar:
CODE",Investigation and Exploration,True,54,CONTRIBUTOR,False,False,False,0.6315789474,0.15,0.75,0.5588235294,0.5913809345,0.4086190655,0.00531516184,0.0004306064011
Is there really no other solution that people have found?,Solution Discussion,False,57,NONE,False,False,False,0.7692307692,0.1408450704,0.9064327485,1.0,0.6535614795,0.3464385205,0.0351468626,0.006016236851
The trace log is not complete.,Investigation and Exploration,False,30,CONTRIBUTOR,False,False,False,0.3333333333,0.08955223881,0.3333333333,0.2737430168,0.003350542477,0.9966494575,0.0004628400625,0.0001068755452
Please update the label and/or status accordingly.,Action on Issue,False,50,MEMBER,False,False,False,0.5,0.01013024602,0.9735973597,1.0,0.7205827521,0.2794172479,0.2555781183,0.1484095414
Fix it right away after remove the duplicated version of numpy.,Solution Discussion,False,63,NONE,False,False,False,0.9166666667,0.1549295775,0.9795321637,1.0,0.8481484551,0.1518515449,0.01200604239,0.8838761808
"------------------
We use a proprietary native agent which takes stack samples using AsyncGetCallTrace() API, from the context of a signal handler.",Investigation and Exploration,False,148,NONE,True,True,False,0.431372549,0.2115384615,0.3333333333,0.02209944751,0.0,1.0,0.0,0.01118041169
Do you have some form of basic class design for it yet which I should stick to or shall I just come up with something?,Solution Discussion,False,118,NONE,True,False,False,0.6578947368,0.6578947368,0.1532846715,1.0,0.003800102762,0.9961998972,0.0004625994361,7.224875116e-05
"But the tokenizer is over 100x faster than the rest of the library, so you can simply tokenize all the text in a single process, to initialize the CODE before you send out the batches.",Solution Discussion,True,184,MEMBER,False,False,False,1.0,0.2287581699,0.4501607717,0.3333333333,0.1132038136,0.8867961864,1.624466859e-05,2.221493141e-05
This results in the bad O-slot value: CODE.,Investigation and Exploration,True,43,CONTRIBUTOR,False,False,False,0.4736842105,0.09677419355,0.6666666667,0.583011583,0.55101082,0.44898918,0.003338530748,0.005248394148
Thanks for the documentation on adding languages!,Social Conversation,False,49,NONE,False,False,False,0.5384615385,0.1166666667,0.3620689655,1.0,0.195977051,0.804022949,0.005299459514,0.05049791913
It seems like you want the shadow variable values to be restored...,Solution Discussion,False,67,NONE,False,False,False,0.2926829268,0.04615384615,0.7944325482,1.0,0.6230213646,0.3769786354,0.0008174426453,0.007173142915
"To reproduce,

I checked out the OpenJDK 11 with OpenJ9 project per
https://www.eclipse.org/openj9/oj9_build.html

Enabled debugging per https://blog.openj9.org/2018/06/05/debugging-openj9-in-docker-with-gdb/

CODE

To build:

CODE

We get the following error

CODE",Bug Reproduction,True,280,CONTRIBUTOR,True,True,False,1.0,0.2734375,1.0,0.03333333333,0.0,1.0,0.0,0.009802165843
"1. No SCC

CODE

2. cold SCC

CODE

3. warm SCC

CODE

4. warm SCC with CODE

CODE",Investigation and Exploration,True,96,NONE,True,False,False,1.0,0.1824817518,0.6666666667,0.8215613383,0.05816692079,0.9418330792,0.01947449064,0.007031224118
Also I now realized that I read the whole discussion too quickly and that the bug only happens with python 2.7.,Bug Reproduction,False,111,MEMBER,False,False,False,1.0,0.2957746479,0.1783625731,0.5,0.1683523944,0.8316476056,8.164645755e-06,9.769898141e-05
What other suggestions do you have?,Motivation,False,35,CONTRIBUTOR,True,True,False,0.1276595745,0.08955223881,0.04022191401,0.9666666667,0.0,1.0,0.0,0.000766008561
"See https://github.com/eclipse/openj9/issues/11313
CODE
https://ci.adoptopenjdk.net/view/Failing%20Builds/job/build-scripts/job/jobs/job/jdk11u/job/jdk11u-mac-x64-openj9/831/console",Testing,True,183,CONTRIBUTOR,False,False,False,1.0,0.09677419355,1.0,0.4098360656,0.6592896584,0.3407103416,0.09158488929,0.001387996583
@magick93 and all that turn up here!,Social Conversation,False,36,NONE,False,False,False,0.2692307692,0.05511811024,0.5894428152,0.1666666667,0.4583755089,0.5416244911,0.04654492211,0.008440528439
The proposal is released here with current progress.,Task Progress,False,52,NONE,False,False,False,1.0,0.1095890411,0.1465517241,0.25,0.0381753302,0.9618246698,0.006959329585,0.01060885558
Hope this helps you to debug further!,Social Conversation,False,37,NONE,True,False,False,0.1206896552,0.05109489051,1.0,0.3085501859,0.01108575056,0.9889142494,0.006010021534,0.009079840981
That way we can build consensus around your vision and help it be the best vision possible.,Social Conversation,False,91,MEMBER,False,False,False,0.4857142857,0.2328767123,0.5948275862,0.7777777778,0.6506314731,0.3493685269,0.01305197974,0.05278600034
"And it indicated that there was a bad reference encountered in CODE:
CODE
On the other hand, in this more recent failed test, CODE ran to completion, and the crash occurred during CODE, in libjclse29.so, and without any output complaining of a bad reference or mentioning a CODE method
CODE
With these differences and the fact that the more recent failure happened despite #14071, I'm pretty sure it's a distinct bug",Investigation and Exploration,True,420,CONTRIBUTOR,False,False,False,1.0,0.8064516129,1.0,0.9922779923,0.9938790902,0.006120909826,0.03826814184,0.02585402974
But their objects are big and not serializable.,Motivation,False,47,CONTRIBUTOR,False,False,False,0.4444444444,0.0522875817,0.8263665595,0.375,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
"I thought the answer was ""no"", but then I started writing out some ""suggestions"", and I guess I have a clearer idea than I thought :).",Social Conversation,False,134,MEMBER,False,False,False,0.7878787879,0.6842105263,0.3065693431,0.07692307692,0.003869581704,0.9961304183,4.667145537e-06,6.042197018e-05
"The difference is that in SGD, if you manually iterate over batches, you get the original algorithm out.",Solution Discussion,False,104,MEMBER,False,False,False,0.9473684211,0.2535211268,0.1485507246,0.6,0.03661251674,0.9633874833,0.0001586202898,0.0007677994074
If you're using a MonitoredSession and its variants you should still be able to do this: CODE,Usage,True,93,CONTRIBUTOR,False,False,False,1.0,0.2537313433,0.5034674064,1.0,0.4417673799,0.5582326201,0.02590584966,0.01145704499
And I think the reason it does that is because CODE needs to be done on JITServer.,Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,0.2741935484,0.08994708995,0.75,0.6914285714,0.4485135262,0.5514864738,0.0006369645556,0.0001183702813
"@gacholio it's pretty clear from the HotSpot sources (https://github.com/openjdk/jdk/blob/master/src/hotspot/share/prims/forte.cpp#L564) that this is an input parameter, at least for HotSpot.",Solution Discussion,False,191,NONE,True,False,False,0.7916666667,0.1826923077,0.1666666667,0.9060773481,0.3217031432,0.6782968568,0.005051300017,0.0136228909
"Ahh ok, that at least explains why there was no AOT before.",Investigation and Exploration,False,59,CONTRIBUTOR,False,False,False,0.48,0.08759124088,0.3333333333,0.2342007435,0.002200894134,0.9977991059,0.0002033294683,1.24e-06
"In SGD, CODE is an CODE parameter according to the docs.",Solution Discussion,True,56,MEMBER,False,False,False,1.0,0.1549295775,0.6123188406,1.0,0.0455187507,0.9544812493,3.860228292e-06,0.02110253454
The regression could be related to the portable AOT feature.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.3571428571,0.125,0.2,0.0931372549,0.09390786121,0.9060921388,0.3318641488,0.01961071442
This thread has drastically diverged from its original issue.,Action on Issue,False,61,CONTRIBUTOR,False,False,False,0.8181818182,0.01302460203,0.9867986799,0.6666666667,0.7567199611,0.2432800389,0.0001320700021,1.0
Basically memory grows at a logarithmic-ish pace.,Observed Bug Behaviour,False,49,NONE,False,False,False,0.32,0.1290322581,0.2246696035,0.2222222222,0.2016154368,0.7983845632,0.03459730626,0.03432994834
Somehow we take less memory for the hot compilation which now succeeds.,Solution Discussion,False,71,CONTRIBUTOR,False,False,False,0.5,0.15,0.4,0.3774509804,0.2985071133,0.7014928867,0.0007771213165,0.005374605821
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1875,1.0,0.06970794783,0.9302920522,0.05849599249,0.007222033488
I am very interested in seeing how my Windows machine runs once I get all of the pre-reqs installed.,Investigation and Exploration,False,100,CONTRIBUTOR,False,False,False,1.0,0.1459854015,1.0,0.5910780669,0.02543123804,0.974568762,1.78e-05,5.09e-05
"The point I was making was that, since the caller of the CODE object has the full input text string anyways, it shouldn't be a big problem to deal with the slight inconvenience of having to look up the original substring of OOV tokens.",Solution Discussion,True,235,CONTRIBUTOR,False,False,False,1.0,0.7096774194,0.4537444934,1.0,0.2163151642,0.7836848358,2.040170794e-05,0.0001196000951
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.4353448276,1.0,0.51301882,0.48698118,0.003100215895,0.0001876772615
I don't see the livelock problem anymore with the new CODE provided by @jdmcclur,Solution Discussion,True,80,CONTRIBUTOR,False,False,True,1.0,0.175,1.0,1.0,1.0,0.0,0.1760484251,0.0
"My bad, I just went through the change process to the relevant code again (from scratch) and re-ran it as proposed.",Solution Discussion,False,115,NONE,False,False,False,1.0,0.03183791606,0.1386138614,0.3333333333,0.02030719624,0.9796928038,0.00388105441,0.005971272817
is not working.,Solution Discussion,False,15,NONE,False,False,False,0.375,0.05,0.8362068966,0.6666666667,0.5277436984,0.4722563016,0.1838195117,0.03798484879
Well it is not my call obviously,Social Conversation,False,32,CONTRIBUTOR,False,False,False,0.07692307692,0.07692307692,1.0,0.7552447552,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
AIX OOMs in extended.system SharedClasses MultiThread testing,Testing,False,61,CONTRIBUTOR,True,True,False,0.1320754717,0.1129032258,0.2,0.004219409283,0.0,1.0,0.0,0.003027854511
"You all are aware that ""+1"" just makes this topic unreadable?",Social Conversation,False,61,NONE,False,False,False,0.2972972973,0.1506849315,0.7025862069,0.5,0.7052056006,0.2947943994,0.0001865706739,0.002671966484
One thing that stands out to me is in the referenced legacy seq2seq file: CODE,Investigation and Exploration,True,78,NONE,False,False,False,0.4054054054,0.02170767004,0.2706270627,0.4,0.06816238482,0.9318376152,0.001820264,0.0002230832021
"CODE

I'm not sure why the C compiler isn't doing the +8 trick with the above call (**update:*",Solution Discussion,True,96,CONTRIBUTOR,False,False,False,0.1801801802,0.15625,0.1538461538,0.6722222222,0.08012656297,0.919873437,0.0570348239,0.002818533349
Do you have one for 3.5 as well?,Solution Discussion,False,32,NONE,False,False,False,0.6153846154,0.06299212598,0.9296187683,1.0,0.9282448049,0.07175519508,0.02806508983,0.00732168145
I'm assuming you mean the class unload mutex right?,Social Conversation,False,51,CONTRIBUTOR,False,False,False,0.1730769231,0.0989010989,0.3076923077,0.7867132867,0.86612727,0.13387273,0.03684751755,0.005897328255
"It does not help *as such*, but it makes it less complex to have specific options specifically tailored to the different encoding types.",Motivation,False,136,CONTRIBUTOR,True,False,False,0.9583333333,0.359375,0.6213235294,0.125,0.1225709705,0.8774290295,0.0001733007777,7.770058345e-05
so the trees do look correct so the issue would just be incorrect widths in the codegen - thanks for the great analysis @AlenBadel,Social Conversation,False,130,CONTRIBUTOR,False,False,False,1.0,0.4893617021,1.0,0.6923076923,0.6430907555,0.3569092445,0.00304547315,0.0002776418192
"*         There is a clearer distinction between input shapes, for training you usually want batches, but for prediction you often care only about single examples",Motivation,False,162,NONE,False,False,False,0.5681818182,0.3731343284,0.4202496533,0.6666666667,0.3861707704,0.6138292296,0.3801876085,0.001120764685
@harryyu1994 You may want to rebase just in case the fix from #8186 fixed it,Solution Discussion,False,76,CONTRIBUTOR,True,False,False,1.0,0.07936507937,1.0,0.1428571429,0.3016620432,0.6983379568,0.05526071054,0.0004358178538
"If it turns out to be the opposite, GetEnv would need to be modified to be async safe.",Solution Discussion,False,86,CONTRIBUTOR,False,False,False,0.4864864865,0.1730769231,1.0,0.7790055249,0.3138477417,0.6861522583,0.01340473801,0.0004107031265
How strange.,Social Conversation,False,12,CONTRIBUTOR,False,False,False,0.1818181818,0.01459854015,1.0,0.5836431227,0.02541939046,0.9745806095,8.2e-05,1.78e-05
"It's at this point that the JIT releases the class unload mutex; if class unloading then happens, it will abort the current compilation.",Investigation and Exploration,False,136,CONTRIBUTOR,False,False,False,0.4423076923,0.2527472527,0.1538461538,0.7797202797,0.86612727,0.13387273,0.03684751755,0.005897328255
"I am also running with the option CODE, which will force calling the runtime helper even at points where it could be bypassed through writing  directly to the OSR buffer, ensuring that every OSR attempt is logged at runtime.",Investigation and Exploration,True,224,MEMBER,False,False,False,1.0,0.4347826087,1.0,0.8238993711,0.6067408459,0.3932591541,0.03227550175,0.06952239071
I'll get in touch with @ChengJin01 to get his setup with the 3/6 reproduction and see where we can get.,Investigation and Exploration,False,103,CONTRIBUTOR,False,False,False,0.7407407407,0.1503759398,1.0,0.7404580153,0.780149551,0.219850449,0.0003413217614,0.02856760951
So in principle we could just keep the keyword afterwards.,Solution Discussion,False,58,CONTRIBUTOR,True,False,False,0.303030303,0.15625,0.1691176471,0.6111111111,0.002016098271,0.9979839017,0.0039907996,0.01559625638
Typically I cannot get a failure this morning.,Bug Reproduction,False,46,NONE,True,False,False,0.3103448276,0.06766917293,0.5,0.1094147583,0.004578145442,0.9954218546,0.01873100248,0.002785757849
No worries.,Social Conversation,False,11,MEMBER,False,False,False,0.1111111111,0.02105263158,0.5789473684,0.2,0.1887344648,0.8112655352,8.377216225e-06,7.438390269e-06
And how to fix it?,Solution Discussion,False,18,NONE,False,False,False,0.3333333333,0.03759398496,1.0,0.7989821883,0.8159884149,0.1840115851,0.000908283777,6.58e-05
"It seems the JVM is exiting in a different way, I'll have to figure out what other exit paths are possible.",Investigation and Exploration,False,107,CONTRIBUTOR,True,False,False,1.0,0.3620689655,1.0,0.880733945,0.9976891454,0.00231085457,0.0006064079553,0.003302748254
I would focus my attention to that commit in particular.,Task Progress,False,56,CONTRIBUTOR,False,False,False,0.2325581395,0.1492537313,0.4,0.4277456647,0.00530660923,0.9946933908,5.04e-06,3.62e-05
-         It's much better to do heavy work on workers than on the driver.,Solution Discussion,False,74,NONE,False,False,False,0.5,0.09150326797,0.1414790997,0.6666666667,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
"@tommoral, if we continue to not be able to reproduce this bug, what kind of debugging output do you think would help us understand what's going wrong?",Investigation and Exploration,False,151,MEMBER,False,False,False,1.0,0.3970588235,0.593495935,0.8,0.5763800548,0.4236199452,0.006827881986,0.01015048758
It may also divide it into mini batches of a user-selectable size.,Solution Discussion,False,66,MEMBER,False,False,False,1.0,0.1830985915,0.5108695652,1.0,0.04251459753,0.9574854025,1.684463255e-06,1.965207131e-06
"Depending on how many methods, logging everything could generate quite a lot of data.",Investigation and Exploration,False,85,CONTRIBUTOR,False,False,False,1.0,0.2089552239,1.0,0.3966480447,0.00429112867,0.9957088713,0.0001206659381,0.0003930261983
"When i did not use custom cost function, i did not face these freezes in parallel processing",Observed Bug Behaviour,False,92,NONE,False,False,False,0.8947368421,0.175257732,0.2692307692,1.0,0.6343054009,0.3656945991,1.0,0.005493875023
The wrapper helpers handle this.,Solution Discussion,False,32,CONTRIBUTOR,False,False,False,0.25,0.0390625,0.6666666667,0.09444444444,0.02652741742,0.9734725826,0.0003156516855,0.00130769984
"Building from scratch will work w/ either, but the nightly binaries use 9.0.",Solution Discussion,False,76,NONE,False,False,False,1.0,0.1023622047,0.09384164223,1.0,0.1361317784,0.8638682216,0.001267484295,0.0003224172419
I reproduced the same issue even with 0.24 (though for some reason it happens much more infrequently).,Bug Reproduction,False,102,CONTRIBUTOR,False,False,False,0.425,0.2125,0.2,0.4705882353,0.5900416852,0.4099583148,0.488236616,0.0006727318859
This is remotely possible though ((i.e. I wouldn't bet on this).,Investigation and Exploration,False,64,CONTRIBUTOR,False,False,False,0.2291666667,0.0632183908,0.8,0.5147058824,0.7663432784,0.2336567216,6.23e-05,0.0001376186725
Found this while looking into wether or not bindings existed already.,Social Conversation,False,69,NONE,False,False,False,0.3055555556,0.1506849315,0.3081896552,0.1666666667,0.3441984002,0.6558015998,0.02043978005,0.1292799766
"BTW, I've been thinking there ought to be a way to restructure the build flow involving constant discovery that doesn't involve modifying the source header files, but one of the challenges is to work out an include path that works for producing CODE files in the presence of CODE directives using CODE instead of CODE.",Solution Discussion,True,318,CONTRIBUTOR,False,False,False,1.0,0.4745762712,0.75,0.5878787879,0.4307180112,0.5692819888,0.006132428413,0.004460705601
Updated script and data file attached.,Solution Discussion,False,38,CONTRIBUTOR,False,False,False,0.3157894737,0.03921568627,0.6463022508,0.7142857143,0.1672962813,0.8327037187,0.0004388490277,6.254891624e-05
"@AlenBadel any news, we need to close off the release.",Task Progress,False,54,NONE,False,False,False,1.0,0.078125,1.0,0.8055555556,0.196678299,0.803321701,0.005357918949,0.009658941575
Other useful [source] URL .,Solution Discussion,False,27,NONE,False,False,False,0.09090909091,0.05479452055,0.5625,0.4,0.6335331717,0.3664668283,0.0006531080173,0.08742750468
I would note CODE is a bit of a weird stress mode because nothing will be resolved at compile-time.,Investigation and Exploration,True,99,CONTRIBUTOR,False,False,False,0.8,0.4255319149,0.3333333333,0.3269230769,0.3248987511,0.6751012489,0.01822418003,0.04520695765
"And here are the files:
[gc.log] URL 
[javacore.20190529.184509.18644.0001.txt] URL ",Investigation and Exploration,False,86,NONE,True,False,False,1.0,0.0802919708,1.0,0.4498141264,0.02070295258,0.9792970474,6e-05,2.11e-05
"Am assuming that despite the success and failure conditions being met, the test is marked as Failed because of the Errors:
14:40:31   [ERR] MessageDigest load - Native crypto library disabled.
14:40:31   [ERR] CipherCore Load - using native crypto library.",Investigation and Exploration,False,258,CONTRIBUTOR,False,False,False,1.0,0.7068965517,0.5,0.1743119266,0.02083045713,0.9791695429,9.15e-05,6.43e-05
"As I said in my original post, I think that this is just part of how spacy works.",Investigation and Exploration,False,81,NONE,True,False,False,0.4390243902,0.2903225806,0.127753304,0.4,0.01937624511,0.9806237549,0.02003548886,0.01526654747
@urisimchoni Can you provide something I can run to reproduce the problem?,Bug Reproduction,False,74,CONTRIBUTOR,False,False,False,0.6666666667,0.1153846154,0.75,0.1933701657,0.0241690347,0.9758309653,0.01268066734,9.99e-05
"If a class failed to be remembered, it's because its J9ROMClass doesn't exist in the SCC, or the SCC is full.",Solution Discussion,False,109,CONTRIBUTOR,False,False,False,0.3387096774,0.3387096774,0.9166666667,0.4918032787,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
"The other way around, GAC.",Workarounds,False,26,CONTRIBUTOR,False,False,False,0.1851851852,0.0390625,0.3333333333,0.3444444444,0.03695143384,0.9630485662,7.09e-06,1.33e-05
"Here is a JDK13 AIX Hotspot build at Adopt, which was able to run -verison
https://ci.adoptopenjdk.net/job/build-scripts/job/jobs/job/jdk13u/job/jdk13u-aix-ppc64-hotspot/79/ but not sure what is different to allow this.
CODE",Investigation and Exploration,True,226,CONTRIBUTOR,False,False,False,1.0,0.1609195402,1.0,0.7904411765,0.7732944234,0.2267055766,2.22e-05,2.35e-05
"Okay, this is good to know.",Social Conversation,False,27,NONE,True,False,False,0.2727272727,0.04379562044,0.25,0.6728624535,0.02636609455,0.9736339055,9.69e-05,0.01430180553
OpenMP support is by default disabled for MSVC.,Solution Discussion,False,47,CONTRIBUTOR,False,False,False,0.2962962963,0.0522875817,0.8874598071,0.2727272727,0.1989797058,0.8010202942,0.002396331593,0.0001526929426
Thought I made myself clearer.,Social Conversation,False,30,NONE,False,False,False,0.1351351351,0.07462686567,0.3314840499,0.2222222222,0.2826906364,0.7173093636,0.0003837677442,0.1209962692
Thanks for your reply!,Social Conversation,False,22,NONE,False,False,False,0.1428571429,0.06666666667,0.5603448276,0.5,0.3933478971,0.6066521029,1.869214639e-05,4.262375806e-05
I need to do that to debug more efficiently.,Social Conversation,False,44,NONE,False,False,False,0.5294117647,0.09278350515,0.5976331361,0.2857142857,0.8491104093,0.1508895907,0.0001106335994,3.828172849e-05
"However, given CODE is supposed to be a workaround when the without peeking doesn't work we should still fix it.",Workarounds,True,112,CONTRIBUTOR,False,False,False,0.8695652174,0.1503759398,0.8,0.9770992366,0.950729363,0.04927063696,0.001789180059,0.03518393768
"It is assumed you set up r2 in helper with loading from jitTOC as well, if TOC is needed.",Solution Discussion,False,89,CONTRIBUTOR,False,False,False,1.0,0.1484375,1.0,0.5611111111,0.03909302062,0.9609069794,0.0005651668273,0.001397241848
The jvmtiHook.c and jswalk.c implementations look identical to me.,Solution Discussion,False,66,CONTRIBUTOR,True,False,False,1.0,0.140625,1.0,0.8723404255,0.9805897483,0.01941025168,0.1158821295,0.01226695903
I suspect the failure mode changed when the opt index was reduced and so we have a spurious problem here (unless the helper was not removed before codegen in the full run).,Investigation and Exploration,False,172,CONTRIBUTOR,False,False,False,1.0,0.2406015038,1.0,0.6361323155,0.6092728265,0.3907271735,2.37e-05,0.4902296135
"Could you setup more runs using the following starting command:
CODE

Note that here we are applying the CODE option to the method you found was the cause of the problem.",Investigation and Exploration,True,173,CONTRIBUTOR,False,False,False,1.0,0.2481203008,0.7647058824,0.5470737913,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
I don't have a reliable AcmeAir MS installation around.,Social Conversation,False,55,CONTRIBUTOR,False,False,False,0.3214285714,0.1125,0.8,0.1078431373,0.09390786121,0.9060921388,0.3318641488,0.01961071442
"The CODE parameter tells you what you're generating code for (one of CODE, CODE, CODE) so you can check for CODE.",Solution Discussion,True,113,MEMBER,False,False,False,0.488372093,0.1640625,0.4,0.5722222222,0.040055736,0.959944264,0.001397241848,3.37e-05
@jsimomaa would it be possible to share your jar file just to make sure that my setup is as close as possible?,Investigation and Exploration,False,110,CONTRIBUTOR,False,False,False,0.8461538462,0.1605839416,1.0,0.6468401487,0.02581807522,0.9741819248,0.0002654464138,9.32e-05
"So, when we call CODE:
CODE
CODE should've returned a non-NULL class, because it succeeded earlier, and CODE should've returned CODE, because we would've literally done the same call before.",Solution Discussion,True,192,CONTRIBUTOR,False,False,False,0.5806451613,0.5806451613,0.5833333333,0.4699453552,0.6596652364,0.3403347636,0.0005831074118,0.0184875191
That recompilation at warm succeeds.,Solution Discussion,False,36,CONTRIBUTOR,False,False,False,0.1063829787,0.0625,0.75,0.2058823529,0.1241687922,0.8758312078,0.02297002429,0.0007858204357
"So some concept of ""sample age"" would be nice.",Expected Behaviour,False,46,CONTRIBUTOR,False,False,False,0.18,0.1343283582,0.2316227462,0.7142857143,0.04933077218,0.9506692278,0.001568663379,0.00540277799
In the last couple of days I was playing around quite a bit with the new Input API and I think the CODE and CODE classes improve highly the clearness and readability of code (compared to the old input queues).,Usage,True,209,NONE,False,False,False,1.0,0.5970149254,0.6282940361,0.04166666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
I am not sure if I am the first who met the following error:,Observed Bug Behaviour,False,60,NONE,True,True,False,0.1772151899,0.02026049204,0.006600660066,0.1818181818,0.0,1.0,0.0,0.0005278053632
I cannot tell about this CODE test.,Investigation and Exploration,True,35,CONTRIBUTOR,False,False,False,0.2,0.1,1.0,0.4901960784,0.5900416852,0.4099583148,0.488236616,0.0006727318859
"re using the strange option about HotSpot OpenJDK ... here is a trial for the latest java13 from Adopt:


-bash-5.0$ bin/java -version
/#
/#",Solution Discussion,False,145,CONTRIBUTOR,False,False,False,0.6756756757,0.1436781609,0.1666666667,0.7132352941,0.7731777342,0.2268222658,0.0001229708481,2.33e-05
Do you mind explaining me why that gave such a big accuracy difference?,Usage,False,71,NONE,False,False,False,0.4333333333,0.05,0.2526766595,0.2727272727,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
"i assumed we don't need to go through another round of performance test, since the heap number is definitely more than 16 (which is the max thread number of existing test cases).",Testing,False,178,CONTRIBUTOR,False,False,False,1.0,0.5161290323,0.75,0.3417721519,0.2935763846,0.7064236154,0.01326071928,0.005090179308
Fix was delivered in #8293,Action on Issue,False,26,CONTRIBUTOR,True,False,True,1.0,0.02645502646,1.0,1.0,1.0,0.0,1.0,0.0
Does anyone know if there has been any healthy discussion regarding tensorflow and node anywhere else as these +1's don't seem to be doing much :(,Social Conversation,False,146,NONE,False,False,False,1.0,0.3561643836,0.525862069,1.0,0.6112664041,0.3887335959,0.000183250911,0.003347427571
This is quite easy with the new API but it seems there is no real performance boost.,Solution Discussion,False,84,NONE,False,False,False,0.4047619048,0.2537313433,0.7697642164,0.8,0.5844291371,0.4155708629,0.00636830506,0.1964778875
"To be honest, I am not sure where we go from this.",Social Conversation,False,50,MEMBER,False,False,False,0.2926829268,0.1690140845,0.4298245614,0.8,0.4154346398,0.5845653602,0.001838152366,0.0002081292748
"The following grinder is to reproduce the timeout, and it hasn't finished yet.",Bug Reproduction,False,78,CONTRIBUTOR,False,False,False,0.8666666667,0.2765957447,0.75,0.1615384615,0.1048089134,0.8951910866,0.05832768032,0.01345561023
I can easily make the matches list a numpy array if necessary.,Potential New Issues and Requests,False,62,MEMBER,False,False,False,0.75,0.1263157895,0.7263157895,0.3333333333,0.1887683728,0.8112316272,1.863208436e-05,0.0002408449665
when I was trying to reuse.,Usage,False,27,NONE,False,False,False,0.1714285714,0.02307692308,0.1177730193,0.3043478261,0.2164964176,0.7835035824,0.06906725807,0.007698692487
"once removed, everything works like a charm:tensorflow 1.7 or 1.8-nightly, cuda-9.1, cudnn-7.1.2 on ubuntu 16.04",Solution Discussion,False,112,NONE,False,False,False,0.4444444444,0.125984252,0.7741935484,1.0,0.5795291024,0.4204708976,0.1256221876,1.0
"GregorSamsa

Does Hotspot generate a similar error message for this class?",Investigation and Exploration,False,76,MEMBER,False,False,False,0.75,0.09022556391,0.6666666667,0.3740458015,0.4721931427,0.5278068573,0.08907149035,0.005002918608
Problem happens even with openliberty-daily which I assume contains the fix for https://github.com/OpenLiberty/open-liberty/pull/18465 which was merged on Sep 08.,Investigation and Exploration,False,162,CONTRIBUTOR,False,False,False,1.0,0.25,0.5,0.5294117647,0.590537134,0.409462866,8.99e-05,1.59e-05
This should be resolved now by #6174,Solution Discussion,False,36,CONTRIBUTOR,False,False,False,1.0,0.05109489051,1.0,0.9962825279,0.9773118894,0.0226881106,0.1860133344,0.03410013252
Even tf-nightly-gpu is not looking for cuda 9.1.,Solution Discussion,False,48,NONE,False,False,False,1.0,0.07874015748,0.2551319648,0.5,0.3378165574,0.6621834426,0.0002203677479,0.001120325967
Sure - here's the full code - http://pastebin.com/yUE26SNs,Observed Bug Behaviour,False,58,NONE,False,False,False,0.25,0.0618556701,0.1923076923,0.2,0.2578934907,0.7421065093,0.000173866989,0.0009051930247
"I've double and triple checked and there are no such logs

As I said, the jit log for compareAndSwapObject is not particularly helpful.",Investigation and Exploration,False,137,NONE,True,False,False,1.0,0.3731343284,1.0,0.2960893855,0.00339246652,0.9966075335,0.0001068755452,0.0002499508717
"@pwagland you just need to run jextract on any core file you already have, and it will zip up the system libraries and the jvm libraries, and the core.",Social Conversation,False,151,CONTRIBUTOR,False,False,False,1.0,0.3866666667,0.3333333333,0.3050847458,0.01077178648,0.9892282135,0.009446358204,0.007066552505
The question is: **do we find both cases worth supporting?**,Solution Discussion,False,60,CONTRIBUTOR,True,False,False,0.303030303,0.15625,0.1544117647,0.3888888889,0.002016098271,0.9979839017,0.0039907996,0.01559625638
"The other hand, we also could put an implementation of a RPC server for TensorFlow Python APIs with introspection feature, so that JavaScript and other language clients could access the real-time Python.",Solution Discussion,False,203,CONTRIBUTOR,False,False,False,0.6346153846,0.4520547945,0.7586206897,0.5,0.7054919778,0.2945080222,0.0002671302531,0.0550485294
"I wouldn't mind calling it CODE, but in the sense of CODE not in the sense of CODE.",Solution Discussion,True,83,MEMBER,False,False,False,0.72,0.2535211268,0.7427536232,0.6666666667,0.07424730092,0.9257526991,0.00947335116,1.193161472e-05
I will feed Spark with processed data for the rest of the work.,Social Conversation,False,63,CONTRIBUTOR,False,False,False,0.7222222222,0.08496732026,0.8424437299,1.0,0.1971062128,0.8028937872,0.0005700212555,0.00195977348
I will go more into depth by providing a generic example of the problem.,Social Conversation,False,72,NONE,True,False,False,0.3888888889,0.1443298969,0.06804733728,0.6363636364,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
So the ideal input pipeline (everything without backprop) should be quite simple and slim: It should consist of a queue operation which receives data (list of tensors) from **some** source (sockets).,Solution Discussion,False,199,NONE,False,False,False,1.0,0.4626865672,0.359223301,0.4545454545,0.2978770854,0.7021229146,0.001143668596,0.01002173327
"It is probably most useful in an interactive setting, righ?",Motivation,False,59,MEMBER,False,False,False,0.5882352941,0.1408450704,0.04710144928,0.6666666667,0.02140516112,0.9785948389,0.02323685476,2.210858022e-06
Maybe this a pretty basic question but could you tell what argument to be passed as the decoder cell in this code?,Solution Discussion,False,114,NONE,False,False,False,1.0,0.03183791606,0.8316831683,0.5,0.2924079275,0.7075920725,0.008897341264,0.000137172437
It is an ugly warning though.,Social Conversation,False,29,NONE,True,False,False,0.25,0.075,0.7142857143,0.6568627451,0.8720495954,0.1279504046,0.001670230889,0.034636993
"My intent is to avoid this problem until 11.0.6 is released (skip rat), then I will retest and report back - since we don't seem to have been able to capture further debugging info.",Investigation and Exploration,False,181,NONE,True,False,False,1.0,0.2481203008,1.0,0.2213740458,0.08472866911,0.9152713309,0.2798752602,0.04671162031
+1,Social Conversation,False,2,NONE,False,False,False,1.0,0.01369863014,0.1724137931,1.0,0.06150586167,0.9384941383,0.002434714096,0.003035591178
The Dynamic Loop Transformation attempts to identify a selection of methods to be optimized.,Investigation and Exploration,False,92,CONTRIBUTOR,False,False,False,0.2745098039,0.1538461538,0.2857142857,0.4300699301,0.8054811495,0.1945188505,0.1631008731,0.2634355634
I recommend the fix (#14071) be merged into master and then subsequently merged into 0.30 when it is ready.,Action on Issue,False,107,CONTRIBUTOR,False,False,False,0.7307692308,0.2043010753,0.2222222222,0.8532818533,0.8399273015,0.1600726985,0.8852104953,0.004353145679
I can only  see setReportByteCodeInfoAtCatchBlock under FSD.,Investigation and Exploration,False,60,CONTRIBUTOR,False,False,False,0.7272727273,0.125,0.25,0.5106382979,0.7949455725,0.2050544275,0.01235591973,0.01296902725
You can also check the com.ibm.oti.vm.bootstrap.library.path system property when the failure occurs.,Investigation and Exploration,False,101,CONTRIBUTOR,False,False,False,0.48,0.1212121212,0.8,0.9543859649,0.9078950378,0.09210496222,0.001248242127,0.002277636608
@andrewcraik  We were talking yesterday about a possible solution to this problem.,Solution Discussion,False,82,CONTRIBUTOR,False,False,False,1.0,0.1940298507,0.5,0.8554913295,0.01918396952,0.9808160305,1.04e-05,1.3e-06
"Even in the method that is called inside getInstanceOf, VMInlineCast assumes the data while there's no trace of such instructions on production. 
CODE",Investigation and Exploration,True,151,CONTRIBUTOR,True,False,False,0.3037974684,0.1875,1.0,0.2722222222,0.03198961031,0.9680103897,0.001540680846,0.006548591463
ok great thanks - just confirming there wasn't a trees/common issue - looks to be codegen - thanks!,Social Conversation,False,99,CONTRIBUTOR,False,False,False,1.0,0.3404255319,1.0,0.6807692308,0.6415983359,0.3584016641,0.002100918508,0.005132080224
We used the 0.18.1 release build.,Task Progress,False,33,CONTRIBUTOR,True,False,False,0.2142857143,0.09677419355,0.2,0.7257383966,0.5560450992,0.4439549008,0.2648672615,0.0167902992
Any advice?,Bug Reproduction,False,11,NONE,False,False,False,0.05263157895,0.0206185567,0.9852071006,1.0,0.9999975983,2.401746992e-06,4.823458058e-05,1.350886112e-06
"I used to comment out the code of JVM_BeforeHalt in Shutdown.c on an older version of openj9-openjdk-jdk (jdk11 without any code of NestMates) and It passed in compilation and works in running java -version
CODE",Solution Discussion,True,212,CONTRIBUTOR,False,False,False,1.0,0.3220338983,0.5,0.7757575758,0.5626231513,0.4373768487,0.0002067370823,0.07175559371
"Do you know where compilation threads reserves it?

https://github.com/eclipse/openj9/blob/2293207e22e09b24f1d385c5bc7f9f5a479211a1/runtime/compiler/control/CompilationThread.cpp#L8904-L8925

It is not unexpected that at a STW phase, the comp thread might not be the owner of the classunload mutext.",Solution Discussion,False,303,CONTRIBUTOR,False,False,False,1.0,0.3516483516,0.5,0.951048951,0.8793047766,0.1206952234,5.93e-05,0.2377056189
I believe the test is running 5 JVMs concurrently.,Testing,False,50,CONTRIBUTOR,True,False,False,0.2903225806,0.1451612903,0.4285714286,0.5569620253,0.4797361547,0.5202638453,0.003593754102,0.003640426233
I understand that Compilation threads are still running while VM Exclusive Access is taken by GC as well as I would not pretend I understand how JIT maintain tables but your explanation does not convince me.,Investigation and Exploration,False,207,CONTRIBUTOR,False,False,False,0.5625,0.3956043956,1.0,0.541958042,0.8542739958,0.1457260042,0.001618376001,0.002043575217
"compareAndSwapObject never generates trace data, but it is **always** compiled by the JITC for my program under these settings.",Investigation and Exploration,False,127,NONE,True,False,False,0.4222222222,0.2835820896,0.8333333333,0.4636871508,0.004839522201,0.9951604778,0.0003766501067,0.0006257390789
It's a bit tricky to get RSS from a running process at a consistent time.,Investigation and Exploration,False,73,CONTRIBUTOR,True,False,False,0.8823529412,0.2419354839,0.6666666667,0.7046413502,0.5169439657,0.4830560343,0.04003593754,0.004416350414
"We've been at this for so long that I no longer have a good sense of what's obvious or not, and would welcome clarifying documentation for someone with a fresh perspective on the topic.",Social Conversation,False,185,MEMBER,False,False,False,1.0,0.1346153846,0.9785867238,1.0,0.9193137457,0.08068625426,0.01105297712,0.1382405392
"One super simple way to do the serialization would be to dump to a directory, tar it, send the bits, untar, load.",Solution Discussion,False,113,MEMBER,False,False,False,0.1437908497,0.1437908497,0.1028938907,0.7142857143,0.003570184789,0.9964298152,5.522493104e-05,0.005931074288
This could be one of the issues.,Investigation and Exploration,False,32,CONTRIBUTOR,False,False,False,0.1590909091,0.03703703704,0.6666666667,0.7828571429,0.4490401313,0.5509598687,0.0003004784063,0.0005637074234
"However, our case is very high-load system with streaming data (hundreds of thousands emails per day).",Motivation,False,102,NONE,False,False,False,0.4594594595,0.2741935484,0.8370044053,0.2222222222,0.6576121123,0.3423878877,0.1714850105,0.0002468438052
CODE,Observed Bug Behaviour,True,4,NONE,False,False,False,0.06666666667,0.01030927835,0.5857988166,1.0,0.8488522439,0.1511477561,0.0002798718168,0.0005769674315
"I think that means that CODE was used to acquire it (seems metronome only), the GC is internally manipulating the field or someone is releasing exclusive (the count is decremented before the release takes place).",Investigation and Exploration,True,212,CONTRIBUTOR,False,False,False,1.0,0.4666666667,1.0,0.7175141243,0.08520676201,0.914793238,0.0001794263215,2.91e-05
Thanks!,Social Conversation,False,7,NONE,False,False,False,0.02702702703,0.003846153846,0.8907922912,1.0,0.7404633962,0.2595366038,0.09747656054,0.006199252888
One quick way you could do this in Bazel is by defining a macro in CODE: CODE,Solution Discussion,True,77,MEMBER,False,False,False,0.5151515152,0.2328767123,0.911637931,0.3333333333,0.9204563137,0.0795436863,0.01198832771,0.1095689952
I've not used it but its GPU enabled and runs in both the browser and on node,Workarounds,False,77,NONE,False,False,False,1.0,0.2465753425,0.8900862069,1.0,0.8958462054,0.1041537946,0.07162521205,0.0976605631
"For this specific case, we could store a subset of the command line when -Xshareclasses:restrictClassPaths is specified, and ignore the -cp option.",Solution Discussion,False,147,CONTRIBUTOR,True,False,False,1.0,0.1575342466,1.0,0.7541899441,0.2665870877,0.7334129123,0.00238876338,0.1747996692
is it just me or does adding this BN layer noticeably slows down training of a single epoch?,Solution Discussion,False,92,NONE,False,False,False,1.0,0.06923076923,0.1777301927,1.0,0.2178188844,0.7821811156,0.0003125903922,3.5002819e-05
Test code: CODE,Investigation and Exploration,True,15,NONE,False,False,False,1.0,0.04411764706,0.8048780488,0.5,0.6068015265,0.3931984735,0.008826555982,0.05176800464
If you delete your share classes cache and then run with CODE and CODE what is the time for your first and second run?,Investigation and Exploration,True,118,CONTRIBUTOR,False,False,False,1.0,0.1751824818,0.5,0.5687732342,0.02527198456,0.9747280154,5.42e-05,0.0001395560709
"When it's hung, use CODE to generate the core file.",Investigation and Exploration,True,51,CONTRIBUTOR,False,False,False,0.303030303,0.1333333333,0.6666666667,0.4576271186,0.03477619422,0.9652238058,0.001877193186,1.99e-05
Let's revive the discussion.,Social Conversation,False,28,MEMBER,False,False,False,0.2222222222,0.05633802817,0.615942029,0.2,0.06495783385,0.9350421661,0.02110253454,0.000167358443
"CopyMemory, or Unsafe.",Solution Discussion,False,22,CONTRIBUTOR,False,False,False,0.07894736842,0.06382978723,0.7222222222,0.9153846154,0.7299060094,0.2700939906,0.01554507959,0.00748487997
"I confirmed that disabling inlining of compareAndSwapObject makes the test pass for me, as does disabling inlining on the Unsafe class, which must include the compareAndSwapObject method.",Solution Discussion,False,187,CONTRIBUTOR,False,False,False,0.7297297297,0.4029850746,0.8,0.8324022346,0.1150439695,0.8849560305,0.0009687751028,0.0002215081863
So the problem has nothing to with the version of STS4.,Investigation and Exploration,False,55,CONTRIBUTOR,False,False,False,0.1428571429,0.1111111111,0.625,0.8736842105,0.9005578376,0.09944216237,0.1143762639,0.00534555638
I guess there is a trade-off between generality and explicitness.,Solution Discussion,False,65,MEMBER,False,False,False,0.4782608696,0.1549295775,0.7246376812,1.0,0.06551459672,0.9344854033,5.393791714e-05,6.632574066e-06
[ERROR],Task Progress,False,7,NONE,True,True,False,0.01052631579,0.007518796992,0.625,0.01272264631,0.0,1.0,0.0,0.0001794494051
"I notice TensorFlow is now accessible from Go, Rust and Haskell.",Motivation,False,64,NONE,False,False,False,1.0,0.1506849315,0.3469827586,0.6,0.3894640095,0.6105359905,0.1116482733,0.1289154667
Sorry for being absent.,Social Conversation,False,23,MEMBER,False,False,False,0.2666666667,0.0625,0.9338235294,0.3333333333,0.7468790146,0.2531209854,1.0,0.6154659147
"However, the while application runs good with Hotspot, which means there is no bad class bytes generated by XLST on Hostpot.",Investigation and Exploration,False,124,CONTRIBUTOR,False,False,False,0.6774193548,0.1578947368,0.8,0.3867684478,0.4730620837,0.5269379163,0.005002918608,4.74e-05
"CODE makes it run properly, but CODE on CODE doesn't solve the issue anymore.",Solution Discussion,True,77,NONE,True,False,False,0.3888888889,0.2089552239,0.5714285714,0.7877094972,0.1146108671,0.8853891329,0.0001922036014,0.0001353182306
"VMs being used are the latest JDK8 LTS builds from AdoptOpenJDK:
OpenJ9
CODE

HotSpot
CODE

Results from the run:
OpenJ9:
CODE

OpenJ9 cold run with CODE:
CODE

OpenJ9 warm run with CODE:
CODE

HotSpot:
CODE",Investigation and Exploration,True,225,CONTRIBUTOR,False,False,False,1.0,0.3503649635,0.6666666667,0.3197026022,0.01977002475,0.9802299753,0.003972585721,0.0002223786649
I just press CTRL-C which stops the process.,Investigation and Exploration,False,44,NONE,True,False,False,0.28125,0.09090909091,0.8888888889,0.7403508772,0.2160643057,0.7839356943,0.001276611266,0.001471142506
Just merged it.,Action on Issue,False,15,CONTRIBUTOR,False,False,False,0.4285714286,0.01960784314,0.9324758842,1.0,0.1992845349,0.8007154651,0.0007126827681,0.00591569739
"In May 2017, we will start transitioning this cell's behavior to use existing stored weights, if any, when it is called with scope=None (which can lead to silent model degradation, so this error will remain until then.)",Bug Reproduction,False,219,NONE,False,False,False,1.0,0.05499276411,0.1914191419,1.0,0.04574248984,0.9542575102,0.0977297843,0.03037586316
"I've tried running these tests explicitly, without any luck reproducing the failure in the individual tests.",Testing,False,108,CONTRIBUTOR,False,False,False,0.2023809524,0.1868131868,0.3333333333,0.2412587413,0.5985521651,0.4014478349,1.0,0.01222678832
"I believe using of this list is more effective then iterate **all** classes in the system and look for ""unloaded"" flag.
- There is known performance issue related with handling of class unloading related hooks in JIT (particular that one walks tables for each element and create N**2 behaviour).",Investigation and Exploration,False,296,CONTRIBUTOR,False,False,False,0.5384615385,0.5384615385,0.8571428571,0.7412587413,0.8592258469,0.1407741531,0.009320490058,0.0008804396806
"JVMVRFY038 invokespecial on invalid target; class=die/verwandlung/GregorSamsa, ",Observed Bug Behaviour,False,79,NONE,True,True,False,0.09473684211,0.06766917293,0.125,0.002544529262,0.0,1.0,0.0,0.0001794494051
"First, we need to pass an offset and length together with the filename into Dataset 's constructor.",Solution Discussion,False,99,CONTRIBUTOR,False,False,False,0.7272727273,0.2388059701,0.4854368932,0.5714285714,0.4357228476,0.5642771524,0.0007517572389,0.0001445491238
"At least one of the machines had 4 cores and so it is possible the machine is overcommitted and thrashing with the increased compilation load, but we have yet to prove this.",Investigation and Exploration,False,173,CONTRIBUTOR,False,False,False,0.6666666667,0.4776119403,0.7777777778,0.6589595376,0.01710808665,0.9828919134,9.59e-06,0.0001153940457
"Hi guys, would appreciate your input on issue https://github.com/piskvorky/gensim/issues/527.",Potential New Issues and Requests,False,93,CONTRIBUTOR,False,False,False,0.3214285714,0.2368421053,0.7080291971,0.1666666667,0.004196179556,0.9958038204,0.0001509211005,0.0002779711734
It doesn't continue anymore and there is also no more activity to be monitored in the python process of task manager of windows.,Observed Bug Behaviour,False,128,NONE,True,False,False,0.6388888889,0.2371134021,0.05621301775,0.2727272727,0.0002898878784,0.9997101121,0.0007141221038,8.580113407e-05
If shuffling is not done already in the text file you can often have thousands of lines after each other of the same class.,Solution Discussion,False,123,NONE,False,False,False,0.6,0.3582089552,0.6421636616,0.4583333333,0.5054793089,0.4945206911,0.03050902669,0.04958391229
"Sorry, my internet isn't good for video chatting, but I'm happy to text.",Social Conversation,False,72,CONTRIBUTOR,False,False,False,1.0,0.1368421053,0.5684210526,1.0,0.1887305627,0.8112694373,4.730238472e-06,8.377216225e-06
The different 'legacy' cases:,Solution Discussion,False,29,CONTRIBUTOR,True,False,False,0.09302325581,0.0625,0.3382352941,0.1666666667,0.0445318871,0.9554681129,0.1378318852,0.0007334772354
https://github.com/natb1/spaCy/blob/memory-benchmark/spacy/tests/benchmark/test_memory.py,Investigation and Exploration,False,89,NONE,False,False,False,0.04,0.01612903226,0.2511013216,0.8888888889,0.2016154368,0.7983845632,0.03459730626,0.03432994834
"So I made some changes as follows:
CODE
The compilation ended up with the same result as copying/renaming j9vm_jdk11/jdk11_jvm.lib & .exp",Investigation and Exploration,True,139,CONTRIBUTOR,False,False,False,0.8888888889,0.2033898305,0.4,0.8484848485,0.6154962774,0.3845037226,0.01905847349,0.0312575819
Maybe first a question: Is the CODE class implemented based on queues?,Solution Discussion,True,70,NONE,False,False,False,0.3,0.1791044776,0.6324549237,0.1666666667,0.5054793089,0.4945206911,0.03050902669,0.04958391229
*         [batch_iter] URL ,Expected Behaviour,False,27,NONE,False,False,False,0.1,0.0447761194,0.173370319,0.8571428571,0.04064994448,0.9593500555,0.2125437083,0.01543061897
"If this fails, the CODE file produced might contain useful information.",Solution Discussion,True,71,CONTRIBUTOR,False,False,False,0.34375,0.1182795699,1.0,0.444015444,0.4846584266,0.5153415734,0.02724539507,0.2051611074
I'd like:,Expected Behaviour,False,9,NONE,False,False,False,0.1,0.0447761194,0.1359223301,0.08571428571,0.04064994448,0.9593500555,0.2125437083,0.01543061897
It is only exposed when building with debug mode using the precise instructions above.,Investigation and Exploration,False,86,CONTRIBUTOR,True,False,False,0.875,0.109375,1.0,0.8444444444,0.2165690907,0.7834309093,0.01920965971,0.0002757120844
DisableUnsafe made the bench run perfectly fine.,Investigation and Exploration,False,48,NONE,True,False,False,0.2916666667,0.1044776119,0.5,0.3575418994,0.004030117692,0.9959698823,0.0004662876607,0.0005447205204
"Sure, the machine that causes this problem: CODE (tested it in a fresh conda environment)",Investigation and Exploration,True,89,CONTRIBUTOR,False,False,False,0.223880597,0.2112676056,0.4356725146,0.1428571429,0.4154703681,0.5845296319,0.0002081292748,0.0005572716688
"How about this one:

CODE
produces a crash (when JITServer is enabled)",Bug Reproduction,True,73,CONTRIBUTOR,True,False,False,0.9333333333,0.07407407407,0.5,0.04,0.130882812,0.869117188,0.2625556309,0.001685327921
"Hi, I am new to spacy and NLP and ML.",Social Conversation,False,37,NONE,False,False,False,0.7142857143,0.2631578947,0.9562043796,0.2,0.2224968185,0.7775031815,0.2540453279,1.0
"I still wonder why the compilation threads can starve the process to that extent - @mpirvu?

@hzongaro Why was 2234 kill after 10 mins when 2226 was allowed to run ""just over 10 minutes""?",Investigation and Exploration,False,189,CONTRIBUTOR,False,False,False,1.0,0.5074626866,1.0,0.7398843931,0.01722613536,0.9827738646,1.1e-05,1.59e-05
it might be specific to this test case allocating so many threads.,Testing,False,66,CONTRIBUTOR,False,False,False,0.75,0.1935483871,0.3333333333,0.7510548523,0.5584831225,0.4415168775,0.0167902992,0.0009509446731
Seems there's something different between the TFon pypi and at that tag?,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,1.0,0.01736613603,0.4752475248,0.6666666667,0.08570368789,0.9142963121,0.006280741429,0.01683649271
"- CODE can not happen at the same time as CODE, since CODE occurs ONLY during STW.",Investigation and Exploration,True,82,CONTRIBUTOR,False,False,False,0.9411764706,0.1758241758,0.5,0.3181818182,0.6104578564,0.3895421436,0.001708499748,0.03226044993
Versions: Ubuntu 17.10cuda 9.2cudnn 7.1.4tensorflow-gpu 1.8.0,Solution Discussion,False,61,NONE,False,False,False,0.5384615385,0.05511811024,0.9794721408,1.0,0.9717378488,0.02826215116,0.5218093819,0.05092861342
Closing this and making #1045 the master issue.,Action on Issue,False,47,MEMBER,False,False,False,1.0,0.0522875817,0.9807073955,0.5,0.6137705859,0.3862294141,1.0,0.5841431139
"There are a couple potential reasons to be investigated next:
1) there is memory barrier between codegen output and writing j9method->extra, but it could implicitly depend on ppcCodeSync() having that barrier.",Investigation and Exploration,False,210,CONTRIBUTOR,False,False,False,0.6808510638,0.183908046,0.7142857143,0.1727941176,0.7325460239,0.2674539761,0.009169774309,7.65e-05
it isn't practical at all.,Solution Discussion,False,26,CONTRIBUTOR,False,False,False,0.3846153846,0.02873563218,0.5,0.6911764706,0.7729417421,0.2270582579,7.3e-05,1.44e-05
"@keithc-ca

Thanks.",Investigation and Exploration,False,21,CONTRIBUTOR,False,False,False,0.1052631579,0.08510638298,0.25,0.2076923077,0.1107806812,0.8892193188,0.009602972199,0.01857337902
So there's a fair gap between the user perceived problem and the nitty gritty in the jvm.,Investigation and Exploration,False,89,NONE,True,False,False,0.5483870968,0.1278195489,0.5714285714,0.1882951654,0.01429808716,0.9857019128,0.0009773656664,0.000475806623
"jdk 11 CODE
CODE",Investigation and Exploration,True,17,CONTRIBUTOR,True,False,False,1.0,0.08064516129,1.0,0.8396624473,0.6625629149,0.3374370851,0.004063392422,0.02615972953
"I would be very interested in spaCy support for German, especially official support.",Expected Behaviour,False,84,NONE,False,False,False,1.0,0.2166666667,0.3534482759,0.5,0.195977051,0.804022949,0.005299459514,0.05049791913
"If you implement the stacked lstm/gru yourself, you don't get this error, and you can implement the same functionality (actually more, because you're free to do whatever you want with bidirectional architectures, weird residual and skip connections, etc.)",Solution Discussion,False,255,NONE,False,False,False,1.0,0.05643994211,0.2541254125,1.0,0.06622159454,0.9337784055,0.0006557222206,0.0061573337
"I have created a program following the CIFAR example, where my code is structured as in CIFAR:-         Inference-         Loss-         Train",Usage,False,142,NONE,False,False,False,0.8846153846,0.08846153846,0.1970021413,0.125,0.2234305404,0.7765694596,0.0068527403,0.007193130032
It probably doesn't matter and likely its something about my VirtualBoxed windows setup that is different between you and me.,Investigation and Exploration,False,125,NONE,True,False,False,0.4444444444,0.202020202,0.7142857143,0.4105263158,0.1209219988,0.8790780012,0.003294872886,0.07075263326
"Currently it is certainly still OK, there are not too many incompatible options (but also partly because I moved CODE into the CODE option).",Motivation,True,140,CONTRIBUTOR,True,False,False,1.0,0.375,0.625,0.25,0.1225709705,0.8774290295,0.0001733007777,7.770058345e-05
"I will update GetEnv to avoid using tracepoints, which should make it async-safe for fetching the JNIEnv.",Solution Discussion,False,105,CONTRIBUTOR,False,False,False,0.4864864865,0.1730769231,0.3333333333,0.9392265193,0.3303069516,0.6696930484,0.0136228909,0.0001988372754
"The situation is quite similar to compiling code with an earlier version of VS (VS2010) and linking them via VS2015/2017, which most users encountered in their projects as discussed on websites.",Solution Discussion,False,194,CONTRIBUTOR,False,False,False,0.7045454545,0.2627118644,0.5,0.1818181818,0.3931478188,0.6068521812,0.00221507324,0.007845128228
"After taking a look I've found that we perform a decompilation right before the crash on checkcast

CODE

At this point the stack looks like:

CODE

Note that the bytecode index is 1 and there are no pending pushes.",Investigation and Exploration,True,223,CONTRIBUTOR,False,False,False,0.8461538462,0.4731182796,0.25,0.5945945946,0.5522533709,0.4477466291,0.005248394148,0.002801381667
We're seeing this mainly on systems that are resource starved.,Investigation and Exploration,False,62,CONTRIBUTOR,False,False,False,0.3333333333,0.2127659574,0.2222222222,0.2961538462,0.3215728023,0.6784271977,0.9710937657,0.01822418003
Unfortunately I cannot tell anything from these two logs.,Investigation and Exploration,False,57,CONTRIBUTOR,False,False,False,0.5555555556,0.1492537313,0.6,0.3798882682,0.004243795073,0.9957562049,0.0005447205204,0.0001206659381
I don't see any method involving compareAndSwapObject from the full trace log.,Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,1.0,0.1791044776,1.0,0.5418994413,0.005282091334,0.9947179087,1.47e-05,0.0003370027271
"I tried again on a real mac running OSX El Capitan 10.11.3 (with anaconda's latest numpy scipy and scikit-learn, same setting as reported by SCREEN_NAME  in https://github.com/scikit-learn/scikit-learn/issues/6665#issuecomment-229703129) but could not reproduce the problem either (tried running the snippet several times).",Bug Reproduction,False,323,MEMBER,False,False,False,1.0,0.5915492958,0.1637426901,0.3333333333,0.1679332519,0.8320667481,0.008272861908,0.002433479587
Which thread would you expect to be working in this app?,Expected Behaviour,False,56,CONTRIBUTOR,False,False,False,1.0,0.1641791045,1.0,0.1284916201,0.001761147907,0.9982388521,0.0001611752173,0.0002284033828
Grinder test results with only eclipse/omr#6255: 200/200 iterations of CODE passed.,Testing,True,83,MEMBER,False,False,False,0.3157894737,0.1304347826,0.75,0.9056603774,0.6349174086,0.3650825914,0.01709802761,0.01374259717
If that memory CANNOT be deallocated before the code runs to unload the unloader then quite how the j9method went stale is a mystery.,Investigation and Exploration,False,133,CONTRIBUTOR,False,False,False,0.4210526316,0.2637362637,0.7142857143,0.8531468531,0.8672316894,0.1327683106,0.0001401924951,0.007180628786
This seems to match what other have reported when they say it was fixed in master.,Social Conversation,False,82,MEMBER,False,False,False,0.5161290323,0.2253521127,0.3391812865,0.6666666667,0.324066469,0.675933531,0.0001194252422,0.005396415693
"Now 24,buckets has failed, but 28,buckets passed.",Testing,False,49,CONTRIBUTOR,True,False,False,0.2916666667,0.1129032258,1.0,0.1392405063,0.04407036383,0.9559296362,0.04168404717,0.01116047337
The TLS solution sounds safe regardless of which VM you're targetting.,Solution Discussion,False,70,CONTRIBUTOR,False,False,False,0.2391304348,0.1057692308,0.2,0.8453038674,0.3185054309,0.6814945691,0.006311966217,1.18e-05
"This is something the core TensorFlow team is unlikely to tackle in the near future, so if you want to contribute it, please go ahead!",Contribution and Commitment,False,134,MEMBER,False,False,False,0.6756756757,0.3424657534,0.06034482759,0.5,0.001217388868,0.9987826111,0.006994519071,0.004261247633
Incidentally I have regrets about the serialiser.,Solution Discussion,False,49,MEMBER,False,False,False,0.5833333333,0.1129032258,0.7444933921,0.25,0.2945721721,0.7054278279,1.641129124e-05,0.1206599722
I think this has to move to the backlog until the adopt issue is fixed,Action on Issue,False,70,CONTRIBUTOR,False,False,False,1.0,0.2419354839,1.0,0.1693989071,0.3656154819,0.6343845181,0.0002290380421,0.09512000124
"I'm pleased to say that there's now excellent support for German, thanks to the great work from our first NLP employee Wolfgang Seeker.",Task Progress,False,135,MEMBER,False,False,False,1.0,0.3833333333,0.4051724138,0.125,0.3864300618,0.6135699382,0.4682936827,0.03367017273
let me post a question to AIX folks.,Social Conversation,False,36,CONTRIBUTOR,False,False,False,1.0,0.1290322581,1.0,0.04641350211,0.001432063395,0.9985679366,0.004372595291,0.003310804307
the stacktrace suggests that the NPE exception comes from internal handler of CODE so I don't think CODE apply?,Investigation and Exploration,True,111,CONTRIBUTOR,False,False,False,0.95,0.2065217391,0.3333333333,0.2893081761,0.3660520758,0.6339479242,4.77e-05,0.0001236847171
"The only point where CODE is called, is when compiling CODE[6].",Investigation and Exploration,True,63,CONTRIBUTOR,False,False,False,0.3548387097,0.2340425532,0.7037037037,0.8038461538,0.6986733294,0.3013266706,0.2919761514,0.1217072968
"Will the new programming model also feature an API to, say, implement what the SwitchableDataSet offers and beyond from more generic, lower-level primitives?",Solution Discussion,False,157,CONTRIBUTOR,False,False,False,0.9230769231,0.3582089552,0.4438280166,0.8,0.4019651913,0.5980348087,0.005091284808,0.001827732055
"It seems to be telling us the core may not be called core.20191106.* since it couldn't be renamed, but might be core.*",Investigation and Exploration,False,118,CONTRIBUTOR,False,False,False,1.0,0.1654135338,1.0,0.213740458,0.02648115249,0.9735188475,0.03206912113,0.05548420273
"Instead if the task is per text, we should let Spark map over the texts, and it's our/user's job to make that work.",Solution Discussion,False,115,MEMBER,False,False,False,0.5853658537,0.1568627451,0.1704180064,0.2857142857,0.005668237209,0.9943317628,2.506121949e-05,0.002335900037
"@mpirvu - it looks like the problem does go away with 
CODE",Solution Discussion,True,60,NONE,True,False,False,1.0,0.15,1.0,0.4166666667,0.4168562751,0.5831437249,0.07448040886,0.0004668527312
"That said, the infra uses the CH Table; this is because we already have a whole bunch of code that ensures that the CH Table maintains coherence through all of the runtime events (such as class loading/unloading, redefinition, etc.). Therefore, if we were to piggy back off the aforementioned infra, we would depend on the existence of the CHTable.",Solution Discussion,False,348,CONTRIBUTOR,False,False,False,1.0,0.9677419355,0.5555555556,0.9726775956,0.9848847044,0.01511529561,0.001947660621,0.07932791196
@pprett I think there should be an easy way to do easy things.,Motivation,False,62,MEMBER,False,False,False,0.619047619,0.1830985915,0.2246376812,0.25,0.03945490707,0.9605450929,1.565147108e-05,1.186142875e-05
"At the catch point, the index is correct, so this may be down to how the code I use to find the catcher in the throw event differs from the stack walker (which is where the catch event retrieves its data).",Investigation and Exploration,False,205,CONTRIBUTOR,False,False,False,1.0,0.640625,1.0,0.7588652482,0.9534244256,0.04657557439,0.02679880937,0.0005193381324
"@nuchi, so did you compile the necessary TensorFlow code from the C API to WebAssembly?",Potential New Issues and Requests,False,87,NONE,False,False,False,1.0,0.2054794521,0.9590517241,0.5,0.9680225341,0.03197746591,0.0002863848778,0.000479816395
Instead of CODE use CODE.,Investigation and Exploration,True,25,CONTRIBUTOR,False,False,False,0.4166666667,0.05434782609,0.3333333333,0.2704402516,0.36603667,0.63396333,0.0001080772833,4.77e-05
This allows binary searching to find a smaller set of methods related to the problem.,Investigation and Exploration,False,85,MEMBER,False,False,False,0.25,0.1127819549,0.5,0.4325699746,0.4821785449,0.5178214551,0.009122488321,0.000823259913
Passes with -Xint.,Solution Discussion,False,18,CONTRIBUTOR,True,True,False,0.08571428571,0.0234375,0.8333333333,0.02777777778,0.0,1.0,0.0,0.009802165843
Update - I found that I quoted exactly your code and you do use UPDATE_OPS.,Social Conversation,False,75,CONTRIBUTOR,False,False,False,0.3111111111,0.05384615385,0.6124197002,0.8,0.5080421357,0.4919578643,0.008986491854,0.001406808951
Its seems like a non-trivial change (should it None be its default value then if it matters so much?).,Usage,False,102,NONE,False,False,False,0.6666666667,0.07692307692,0.2548179872,0.3636363636,0.2258478105,0.7741521895,0.0006169627313,0.0001639552333
Also I believe https://github.com/eclipse/openj9/issues/8619 might be a different issue (user raised - but we don't know).,Potential New Issues and Requests,False,122,CONTRIBUTOR,False,False,False,1.0,0.1648351648,0.75,0.1608391608,0.2820037137,0.7179962863,0.002857770092,0.01329594867
"In another run, where both the flight service and the booking service were using only cold compilations, the flight service was again ""hung"" consuming 800% of CPU.",Investigation and Exploration,False,163,CONTRIBUTOR,False,False,False,1.0,0.3375,0.875,0.7303921569,0.8886091519,0.1113908481,0.05954547102,0.2271166044
Looking forward to it.,Social Conversation,False,22,NONE,False,False,False,1.0,0.05479452055,0.4224137931,0.5,0.5084527261,0.4915472739,0.1156266772,0.004802368983
Try this snippet (taken from https://github.com/numpy/numpy/issues/4776):CODE,Investigation and Exploration,True,77,MEMBER,False,False,False,0.2142857143,0.0618556701,0.6153846154,0.1666666667,0.8491247825,0.1508752175,3.828172849e-05,3.508330696e-05
"Please keep an eye out for other issues, and report them :)",Social Conversation,False,59,MEMBER,False,False,False,0.6,0.07843137255,0.3183279743,1.0,0.01445541281,0.9855445872,0.01796302825,0.01064935216
"Then if CODE, we'll then train that many more estimators.",Solution Discussion,True,57,CONTRIBUTOR,True,False,False,0.3125,0.1408450704,0.09782608696,0.8181818182,0.02500781094,0.9749921891,0.003908726797,0.0001993983378
Opened eclipse-openj9/openj9-omr#130,Action on Issue,False,36,MEMBER,False,False,False,1.0,0.05434782609,1.0,0.9622641509,0.657417128,0.342582872,9.99e-05,0.05983688721
I don't think it's due to floating point error.,Potential New Issues and Requests,False,47,MEMBER,False,False,False,0.25,0.1323529412,0.256097561,0.4,0.3543056001,0.6456943999,0.009464004531,0.003096425316
This NPE appeared once out of 35 CODE runs at [#13370 (comment)](https://github.com/eclipse-openj9/openj9/issues/13370#issuecomment-925742840),Investigation and Exploration,True,142,CONTRIBUTOR,False,False,False,0.8421052632,0.1739130435,0.6666666667,0.2452830189,0.3436212488,0.6563787512,1.59e-05,0.05801551647
I'm facing this error:CODE,Potential New Issues and Requests,True,26,NONE,False,False,False,0.2631578947,0.007235890014,0.9405940594,0.3333333333,0.4075141407,0.5924858593,0.001838775159,0.06521718752
"As SCREEN_NAME  suggested, importing the custom scorer instead of defining it in the notebook works.",Solution Discussion,False,100,NONE,False,False,False,0.6153846154,0.1649484536,0.2810650888,1.0,0.663808267,0.336191733,0.07308442859,0.3850825819
j9vm.test.arraylets.,Testing,False,20,CONTRIBUTOR,False,False,False,0.3333333333,0.005291005291,0.5,0.1542857143,0.3019410161,0.6980589839,0.0001241646307,0.01265320363
"Now let's say you want you have a Node program, e.g. [tsc.js](https://github.com/tensorflow/tensorboard/blob/99a7437/third_party/js.bzl#L73), which you want to turn into something you can CODE.",Solution Discussion,True,193,MEMBER,False,False,False,0.6666666667,0.301369863,0.9094827586,0.2777777778,0.9204563137,0.0795436863,0.01198832771,0.1095689952
"I thought the guarantee of CODE was ""warm_start doesn't change the result"", while the guarantee of CODE was ""iterating over batches doesn't change the result"".",Solution Discussion,True,159,MEMBER,False,False,False,1.0,0.3521126761,0.402173913,0.8,0.03970291757,0.9602970824,8.078405027e-05,0.0001056298833
Thanks everyone.,Social Conversation,False,16,MEMBER,False,False,False,0.03333333333,0.03333333333,0.06034482759,0.04,0.0135709163,0.9864290837,6.476167891e-05,0.3353511726
This concept is inspired by [dask distributed] URL  and other executor frameworks -- I think the flexibility offered by this abstraction is great!,Motivation,False,146,CONTRIBUTOR,False,False,False,0.9230769231,0.3582089552,0.3980582524,1.0,0.3322165772,0.6677834228,0.03860581352,0.04548767515
"Disable with -Xjit:disableRecompDueToInlinedMethodRedefinition
3. JProfiling.",Investigation and Exploration,False,78,CONTRIBUTOR,False,False,False,0.2333333333,0.0875,0.75,0.3382352941,0.2368541409,0.7631458591,0.02640472652,0.01413316902
I checked a recent numpy wheel and it contains OpenBLAS 0.2.8.18.,Investigation and Exploration,False,65,MEMBER,False,False,False,0.3142857143,0.1134020619,0.7426035503,0.3,0.8504331006,0.1495668994,1.849522015e-05,4.501629308e-05
"FWIW, I have no problem running that snippet with: >>> import platform; print(platform.platform())Darwin-16.7.0-x86_64-i386-64bit>>> import sys; print(""Python"", sys.version)Python 2.7.12 |Continuum Analytics, Inc.| (default, Jul  2 2016, 17:43:17)[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)]>>> import numpy; print(""NumPy"", numpy.__version__)NumPy 1.13.1>>> import scipy; print(""SciPy"", scipy.__version__)SciPy 0.19.1>>> import sklearn; print(""Scikit-Learn"", sklearn.__version__)Scikit-Learn 0.18.2",Bug Reproduction,False,522,MEMBER,False,False,False,1.0,0.5567010309,0.3461538462,0.5,0.8123880036,0.1876119964,2.642174307e-05,2.677933057e-05
"You're right, i forgot to use CODE for the package names instead of CODE",Social Conversation,True,72,NONE,True,False,False,1.0,0.2089552239,0.5,0.843575419,0.1151308605,0.8848691395,0.0002215081863,0.06580775503
Tracing the interpreter version of CODE to see if it returns an invalid value.,Investigation and Exploration,True,78,CONTRIBUTOR,False,False,False,0.8235294118,0.1505376344,1.0,0.4555984556,0.5332300671,0.4667699329,0.2051611074,0.002331376221
"Marius @mpirvu provided me with the CODE option, and recommended setting a priority of 2.  I was able to produce numbers on Windows with and without that option, and this time saw a dramatic difference:

[Grinder run 2226] URL  used CODE, required just over 10 minutes for one run, just over 20 minutes for two sequential runs.",Solution Discussion,True,329,MEMBER,False,False,False,1.0,0.8955223881,0.8,0.7167630058,0.01721583853,0.9827841615,0.0001153940457,1.1e-05
"NoClassDefFoundError: ()V
	at java.base/java.lang.J9VMInternals.prepareClassImpl(Native Method)
	at java.base/java.lang.J9VMInternals.prepare(J9VMInternals.java:349)
	at java.base/java.lang.Class.getConstructor(Class.java:668)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.getTransletInstance(TemplatesImpl.java:556)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.newTransformer(TemplatesImpl.java:584)
	at java.xml/com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:818)
	at com.ibm.ws.webcontainer.osgi.mbeans.",Bug Reproduction,False,630,NONE,False,False,False,0.5454545455,0.1804511278,0.4,0.7633587786,0.796966708,0.203033292,0.02606390197,0.0009716429063
"*         SCREEN_NAME  ([link](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-308789560)) If you want to batch sequences with different lengths, you can use the CODE transformation.",Usage,True,200,CONTRIBUTOR,True,False,True,22.0,0.328358209,0.9972260749,23.0,1.0,0.0,0.02385162338,0.0
"After trying with CODE  for many times (the exception often disappears due to the timing issue in JIT), I managed to reproduce the CODE exception with the jit vlog file recorded:
CODE
It seems there was at least 1 VM running for each job (totally 5 jobs was running in building the project).",Bug Reproduction,True,293,CONTRIBUTOR,False,False,False,0.8235294118,0.4210526316,0.1666666667,0.4147582697,0.480594089,0.519405911,0.009466671463,0.009122488321
"When you push your preliminary sense2vec setup I can have a look and how I would change it to acc my use case, so we have something more concrete to design around.",Task Progress,False,163,NONE,True,False,False,0.9411764706,0.8421052632,0.6277372263,0.8,0.004047128885,0.9959528711,2.745084526e-05,4.078315706e-05
Thank you in advance!,Social Conversation,False,21,CONTRIBUTOR,False,False,False,0.1290322581,0.01538461538,0.5781584582,1.0,0.5064520482,0.4935479518,0.08224171039,0.0001139367123
1.         Efficient random sampling:,Expected Behaviour,False,37,NONE,False,False,False,0.3333333333,0.07462686567,0.8418862691,0.2857142857,0.7617931948,0.2382068052,0.1736946043,0.06663052939
@babsingh easiest repro I think is to use +ExitOnOutOfMemoryError and make code that would trigger out of memory more than one time,Bug Reproduction,False,131,NONE,False,False,False,1.0,0.2933333333,1.0,0.406779661,0.03340626461,0.9665937354,2.23e-05,0.0003240614417
"I destroyed the cache and invoked

CODE

The only difference seems to be that I'm on Windows 10 host

Here is the vlog of that:
[vlog.20190528.224833.7220.txt] URL ",Investigation and Exploration,True,171,NONE,True,False,False,1.0,0.2262773723,1.0,0.1003717472,0.0009268662827,0.9990731337,0.0001412125228,7.54e-05
I've reached out to the optimizer team for further help.,Contribution and Commitment,False,56,CONTRIBUTOR,False,False,False,0.34375,0.08270676692,0.8571428571,0.9058524173,0.859885377,0.140114623,0.0001189516558,0.06424166071
The n_jobs=1 issue has been fixed.,Potential New Issues and Requests,False,34,MEMBER,False,False,False,0.3157894737,0.08823529412,0.3902439024,0.1111111111,0.5172340308,0.4827659692,0.01113877455,3.625790768e-05
Thanks SCREEN_NAME  !,Social Conversation,False,21,NONE,False,False,False,0.1428571429,0.04109589041,0.09482758621,1.0,0.001618769515,0.9983812305,0.0006821006132,7.325610089e-05
"With basic tests, out of two string based tests, testFilterReturnI2String and testFilterReturnString2I
testFilterReturnString2I - didn't show any difference in scores at all.",Investigation and Exploration,False,175,NONE,False,False,False,0.9166666667,0.328358209,0.6666666667,0.5953757225,0.01191281987,0.9880871801,0.0006655096996,0.0002903767183
"-Xjit:enableOSR,enableOSROnGuardFailure,count=1,disableAsyncCompilation,disableEscapeAnalysis

@0xdaryl",Investigation and Exploration,False,105,CONTRIBUTOR,False,False,False,0.7777777778,0.0752688172,0.8,0.5250965251,0.5369859796,0.4630140204,0.0028647951,0.0003133369641
Never the less we can still continue the search using the reproduction environment @ChengJin01 has.,Investigation and Exploration,False,99,CONTRIBUTOR,False,False,False,0.4545454545,0.1127819549,0.2352941176,0.524173028,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
The fix is to work through the various places that deal with the Unsafe methods and add a test to differentiate between the implementation classes (the JNI methods) and the wrappers.,Solution Discussion,False,182,CONTRIBUTOR,False,False,False,0.96875,0.4626865672,0.9166666667,0.9329608939,0.3165978639,0.6834021361,0.4477852629,0.1312948834
The slim batch_norm wrapper normalizes over the last dimension of your input tensor.,Solution Discussion,False,84,MEMBER,False,False,False,0.5,0.05,0.3576017131,0.25,0.2990721664,0.7009278336,0.004008482248,0.3882282375
Is there any way to see if it JITted any methods?,Investigation and Exploration,False,49,CONTRIBUTOR,False,False,False,1.0,0.0632183908,1.0,0.7941176471,0.7733028126,0.2266971874,2.35e-05,6.31e-05
We looked at the perf results from TrafficLights and neither JSR292 specific benchmarks nor Daytrader3 on Java11 see any negative side effects.,Investigation and Exploration,False,143,CONTRIBUTOR,False,False,False,0.5,0.328358209,1.0,0.9248554913,0.01942581186,0.9805741881,0.0002576922821,0.0001852779599
Will need to investigate further.,Social Conversation,False,33,MEMBER,False,False,False,0.5555555556,0.07352941176,0.9146341463,1.0,0.6431157411,0.3568842589,0.0002096052377,0.002426517307
"Do you know if there's any issue or work being done on removing the copy (at least in some cases, like row-major Numpy arrays with nice strides)?",Potential New Issues and Requests,False,145,NONE,False,False,False,0.8484848485,0.4179104478,0.3814147018,1.0,0.3166940255,0.6833059745,0.1413171275,0.04972082678
But it appeared as if I was doing something wrong during my initial tests.,Usage,False,74,NONE,False,False,False,0.4,0.05384615385,0.1498929336,0.9565217391,0.2164964176,0.7835035824,0.06906725807,0.007698692487
[javacore.20210316.184837.7.0247.txt.gz] URL,Investigation and Exploration,False,45,NONE,True,False,False,0.0350877193,0.02666666667,0.7142857143,0.1807909605,0.002190253264,0.9978097467,0.000160608439,0.0006595011379
It's hard to follow the investigation (and chime in with help!) without more detail here.,Social Conversation,False,89,MEMBER,False,False,False,1.0,0.1630434783,1.0,0.6100628931,0.5582425947,0.4417574053,0.00069427907,0.0001275446201
"So if it's a 2D input tensor coming from a fully connected layer, it normalizes over batch, and thus performs per-activation normalization.",Solution Discussion,False,139,MEMBER,False,False,False,0.8846153846,0.08846153846,0.3597430407,0.5,0.2990721664,0.7009278336,0.004008482248,0.3882282375
"In May 2017, we will start transitioning this cell's behavior to use existing stored weights, if any, when it is called with scope=None (which can lead to silent model degradation, so this error will remain until then.)",Observed Bug Behaviour,False,219,NONE,True,True,False,0.4810126582,0.05499276411,0.0297029703,0.8181818182,0.0,1.0,0.0,0.0005278053632
"From the symptom description (IFU -- Instruction Fetch Unit -- saw invalid instruction from code cache, while debugger saw valid instruction),  the most likely crashing reason is still dCache",Investigation and Exploration,False,191,CONTRIBUTOR,False,False,False,0.6382978723,0.1724137931,0.1428571429,0.1580882353,0.7325460239,0.2674539761,0.009169774309,7.65e-05
"On the original machine, the exact method + PCA init was triggering the instability according to: https://github.com/scikit-learn/scikit-learn/issues/9393#issuecomment-322214890",Investigation and Exploration,False,177,MEMBER,False,False,False,0.4848484848,0.2352941176,0.9268292683,0.4,0.6518867777,0.3481132223,0.02351100859,0.005246346584
It's extremely helpful to have someone reporting the issue who isalso capable and willing to debug it.,Social Conversation,False,102,MEMBER,False,False,False,1.0,0.25,0.6138211382,0.2222222222,0.5798816734,0.4201183266,0.0002044255366,1.105002901e-05
Maybe rather than starting from scratch we may consider porting that to Node.js instead,Solution Discussion,False,87,NONE,False,False,False,0.9333333333,0.1917808219,0.8340517241,1.0,0.8120170092,0.1879829908,0.0002104729666,0.0001068963647
"With my changes on the latest openj9-openjdk-jdk11,  it also shows the same issue with JVM_AreNestMates:
CODE",Bug Reproduction,True,110,CONTRIBUTOR,False,False,False,1.0,0.1694915254,1.0,0.6787878788,0.5511429498,0.4488570502,0.00614979155,0.0005236722062
"Oh I missed that, sorry",Social Conversation,False,23,CONTRIBUTOR,False,False,False,1.0,0.05376344086,1.0,0.1621621622,0.08721082211,0.9127891779,0.0003096067621,1.0
Is there a reason this test needs to use randn?,Investigation and Exploration,False,47,MEMBER,False,False,False,0.2777777778,0.1470588235,0.8536585366,0.8461538462,0.6243074007,0.3756925993,0.05176800464,0.02547446062
SetMemory compared to arrays themselves.,Solution Discussion,False,40,CONTRIBUTOR,False,False,False,0.1315789474,0.1063829787,0.7777777778,0.9192307692,0.7299060094,0.2700939906,0.01554507959,0.00748487997
Pros,Solution Discussion,False,4,NONE,False,False,False,0.03571428571,0.006535947712,0.1189710611,0.2,0.005659409379,0.9943405906,0.005931074288,2.506121949e-05
"@bwesen yes,you were right .",Social Conversation,False,28,NONE,False,False,False,0.625,0.03937007874,0.1554252199,0.5,0.228642205,0.771357795,0.1507278421,0.1948879119
"However, what I **did** find was that, obviously, we should use Tensorflow ops instead of standard comparisons since the result of CODE is a tensor and not a normal array.",Usage,True,171,NONE,False,False,False,0.8571428571,0.447761194,0.7545076283,0.8,0.5818615051,0.4181384949,0.00639731668,0.009301532526
Please copy and paste it here.,Solution Discussion,False,30,CONTRIBUTOR,False,False,False,0.75,0.008683068017,0.1353135314,1.0,0.01936301317,0.9806369868,0.005198313254,0.00388105441
https://github.com/node-tensorflow/node-tensorflow/tree/1.0.0,Task Progress,False,61,NONE,False,False,False,0.125,0.01369863014,0.1487068966,0.5,0.0381753302,0.9618246698,0.006959329585,0.01060885558
I'll explain how to do that once we've found the problematic optimization.,Investigation and Exploration,False,74,CONTRIBUTOR,False,False,False,0.3939393939,0.0977443609,1.0,0.5572519084,0.5664264175,0.4335735825,0.03847288965,0.0005240413151
@jsimomaa while I spin up a Windows 10 image could you do one more test.,Investigation and Exploration,False,72,CONTRIBUTOR,False,False,False,0.7142857143,0.1094890511,0.3333333333,0.4758364312,0.02090298377,0.9790970162,0.0001142951797,1.41e-05
"I destroyed the cache by invoking:

java -Xshareclasses:",Investigation and Exploration,False,58,CONTRIBUTOR,False,False,False,0.3214285714,0.06569343066,0.1666666667,0.0780669145,0.0008329122392,0.9991670878,0.0003971343382,0.0001412125228
I found strange behaviour using the CODE method (only verified on german variant):,Observed Bug Behaviour,True,82,NONE,True,True,False,0.65,0.1368421053,0.02105263158,0.2,0.0,1.0,0.0,0.008598273629
"After the data is stored in the SCC, it either gets corrupted or is not read correctly from the SCC which leads to segfaults in the subsequent runs.",Investigation and Exploration,False,148,CONTRIBUTOR,False,False,False,0.6511627907,0.3010752688,0.3846153846,0.2046332046,0.3402178482,0.6597821518,0.06293969756,0.0116494207
See Issue #124,Potential New Issues and Requests,False,14,MEMBER,False,False,False,1.0,0.05,0.3706896552,1.0,0.2063369155,0.7936630845,0.05049791913,0.409548798
"We could do this implicitly with copy-on-write semantics, but I don't think it's great to invoke some method where it may or may not write out 1gb of data to disk, depending on the entire execution history of the program.",Solution Discussion,False,221,MEMBER,False,False,False,0.9347826087,0.2810457516,0.4051446945,0.5789473684,0.1129347971,0.8870652029,0.2564813798,0.0007474630201
@priidukull Thanks for the log.,Social Conversation,False,31,CONTRIBUTOR,False,False,False,0.15625,0.07352941176,0.7804878049,0.1666666667,0.6038167374,0.3961832626,0.002100196138,0.008826555982
"However, they didn't do that as they didn't expect we to compile the code in this way.",Usage,False,86,CONTRIBUTOR,False,False,False,0.85,0.1440677966,1.0,0.1696969697,0.3897732145,0.6102267855,0.0009771973397,0.008262538037
"https://ci.eclipse.org/openj9/job/Test_openjdk8_j9_sanity.functional_x86-64_mac_Nightly/241
cmdLineTester_CryptoTest_0",Testing,False,119,CONTRIBUTOR,True,False,False,1.0,0.05172413793,1.0,0.4678899083,0.3592638272,0.6407361728,0.2951562313,0.6523644538
"Next Steps:

It looks like something deleted the j9method that we're trying to reference before it was removed from the HT.",Investigation and Exploration,False,125,CONTRIBUTOR,False,False,False,0.511627907,0.2417582418,0.8,0.2832167832,0.6007887623,0.3992112377,0.01222678832,0.05114946292
@amueller Don't read all of the above!,Social Conversation,False,38,CONTRIBUTOR,True,False,False,0.3333333333,0.109375,0.5404411765,0.3333333333,0.122433192,0.877566808,7.729377411e-06,3.70196497e-05
Also please see my comment from 26 Aug where I explain why deeplearnjs is irrelevant to this debate.,Social Conversation,False,100,NONE,False,False,False,0.7826086957,0.2465753425,0.8793103448,0.6,0.836290065,0.163709935,0.003132528254,1.0
"However, I could not find the output from that in any of the test output files.",Investigation and Exploration,False,79,MEMBER,False,False,False,0.4,0.1739130435,0.7272727273,0.8050314465,0.6067408459,0.3932591541,0.03227550175,0.06952239071
"If we aren't already, we can set a -Xmx for each process to reduce the memory usage (such as -Xmx512m).",Solution Discussion,False,103,CONTRIBUTOR,True,False,False,1.0,0.3387096774,0.8,0.6286919831,0.4809708382,0.5190291618,0.001055956968,0.005901107588
I've been speaking with @cathyzhyi offline about this.,Contribution and Commitment,False,54,CONTRIBUTOR,False,False,False,0.5,0.06766917293,0.25,0.9109414758,0.8710433064,0.1289566936,0.06424166071,0.006658022574
Currently the build is compiled on Windows 7 in which mingw still sticks with an older version of CRT.,Observed Bug Behaviour,False,102,CONTRIBUTOR,False,False,False,0.1759259259,0.1610169492,0.3333333333,0.1939393939,0.3956745592,0.6043254408,0.007845128228,0.003533051078
"It should show where the files were written
CODE

I also noticed CODE on the commandline.",Investigation and Exploration,True,92,MEMBER,False,False,False,0.9,0.1818181818,0.5,0.6210526316,0.2077710739,0.7922289261,0.002877441266,0.004409374785
"So, developers allow us to change these boolean variables in order to change the behavior of the function.",Usage,False,106,NONE,False,False,False,0.9,0.06923076923,0.9143468951,0.6,0.7489109604,0.2510890396,0.04599776246,0.3206669123
"And for your second use case, I still think that bundling the Spacy data and classes then lazy loading them would be easier than adding serialization to all your classes.",Solution Discussion,False,170,NONE,False,False,False,0.5263157895,0.1960784314,0.4694533762,0.2857142857,0.1132116388,0.8867883612,2.221493141e-05,2.363807545e-05
Maybe CODE will make it more reproducible...,Bug Reproduction,True,44,MEMBER,False,False,False,0.4666666667,0.05263157895,1.0,0.7226463104,0.7787428733,0.2212571267,0.0001541057533,0.007400755077
For now workaround with reloading / collecting nlp object works quite ok in production.,Workarounds,False,87,NONE,False,False,False,1.0,0.2096774194,0.9383259912,1.0,0.6578574086,0.3421425914,0.0002159883295,0.09426527661
"Searching the log files shows only one XLST specific method was found in the corresponding java stacktrace
CODE
against the same method (already finished compilation by JIT) when the the project is built successfully
CODE
Note: CODE means this method was still in compilation by JIT when the VM was shutting down, in which case the compilation on this method was cancelled by JIT.",Bug Reproduction,True,384,CONTRIBUTOR,False,False,False,1.0,0.5112781955,0.3333333333,0.417302799,0.480594089,0.519405911,0.009466671463,0.009122488321
"When I run ldconfig -v I get some 9.0 libs, but do not see libcublas.so.9.0CODE",Solution Discussion,True,79,NONE,False,False,False,0.7142857143,0.1181102362,0.3313782991,0.6363636364,0.3566928644,0.6433071356,0.1351135301,0.002261357628
The improvements will not be reverted as they are providing orders of magnitude performance improvement in general and it is the strategic direction for the optimizer.,Solution Discussion,False,167,CONTRIBUTOR,False,False,False,1.0,0.3880597015,0.3333333333,0.2774566474,0.005049779156,0.9949502208,1.72e-05,1.44e-05
This conversation is about distributing spacy over multiple machines.,Solution Discussion,False,69,NONE,False,False,False,0.2368421053,0.05882352941,0.575562701,0.5384615385,0.1671383829,0.8328616171,2.596370108e-05,3.922323826e-06
I no longer see those exceptions with the new JMeter.,Investigation and Exploration,False,53,CONTRIBUTOR,False,False,False,0.2941176471,0.125,0.3333333333,0.6715686275,0.8775318892,0.1224681108,0.034636993,0.003956649389
I will prepare all changes I made in compilation for review before addressing the test failure in another issue.,Task Progress,False,112,CONTRIBUTOR,False,False,False,1.0,0.1610169492,1.0,0.9575757576,0.6456701973,0.3543298027,0.0001289502294,0.001672417338
"Requesting two core files each for the CODE and CODE hangs using **CODE** (https://github.com/eclipse/openj9/issues/12224#issuecomment-802832341, https://github.com/eclipse/openj9/issues/12224#issuecomment-802833337) and processed with **CODE** (https://github.com/eclipse/openj9/issues/12224#issuecomment-800639061, https://github.com/eclipse/openj9/issues/12224#issuecomment-801043170).",Social Conversation,True,388,CONTRIBUTOR,False,False,False,1.0,0.28,1.0,0.4915254237,0.03686268144,0.9631373186,0.00168726386,0.001119226384
"However, I believe there's a deeper issue as well.

> 1. In AOT it's possible to get different values based on the semantics of the CODE API.",Social Conversation,True,143,CONTRIBUTOR,False,False,False,0.6136363636,0.435483871,0.5,0.9180327869,0.9845135933,0.01548640667,0.001320457339,0.001947660621
"Hi Mark, just to update the status - I'm waiting on the two PRs to work their way through the build/test hierarchy and finally appear on adoptopenjdk.net. Once there is a build available I'll download, test it and update this issue again.",Task Progress,False,238,CONTRIBUTOR,False,False,False,1.0,0.6268656716,1.0,0.9553072626,0.7603706221,0.2396293779,1.0,0.07147905412
I compile a debug build with a piece of code everywhere before the CODE exception occurs to trigger a crash but it doesn't work so far.,Investigation and Exploration,True,135,CONTRIBUTOR,False,False,False,1.0,0.1954887218,0.5,0.3435114504,0.4498932585,0.5501067415,0.03715256715,0.03394128121
The sym  linking didn't work from the 9.1 libs.,Solution Discussion,False,47,NONE,False,False,False,0.1818181818,0.07874015748,0.07038123167,0.4,0.1316640267,0.8683359733,0.562496811,0.05368173129
For some reason bazel always exits with an error. If you try to build with cuda-9.0/cuda-9.1 and cudnn7 it complains about gcc7.,Solution Discussion,False,128,NONE,True,False,False,0.5945945946,0.1732283465,0.7096774194,0.8,0.5094864043,0.4905135957,0.02165076149,0.03664686068
